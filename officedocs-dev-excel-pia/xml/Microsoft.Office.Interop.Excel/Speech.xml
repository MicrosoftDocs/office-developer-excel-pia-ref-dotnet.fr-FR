<Type Name="Speech" FullName="Microsoft.Office.Interop.Excel.Speech">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22837717535384f6c1e41513e3e32b7efde41769" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20576222" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Speech" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Speech" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Speech" />
  <TypeSignature Language="VB.NET" Value="Public Interface Speech" />
  <TypeSignature Language="C++ CLI" Value="public interface class Speech" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024466-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1ad60-101">Cet objet contient des méthodes et des propriétés qui se rapportent aux fonctions vocales.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ad60-101">Contains methods and properties that pertain to speech.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="1ad60-102">
        <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.Speech" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objet pour renvoyer un objet <b>Speech</b> .</para>
        <para>Une fois qu’un objet <b>Speech</b> est renvoyé, vous pouvez utiliser la <see cref="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" /> méthode de l’objet <b>Speech</b> pour lire le contenu d’une chaîne.</para>
        <para>
          <b>Remarque</b>: il existe une fonctionnalité de reconnaissance vocale dans l’arborescence d’installation qui se rapporte à Dictation et Command &amp; contrôle qui ne doit pas être installé.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="1ad60-102">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Speech" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object to return a <b>Speech</b> object.</para>
          <para>Once a <b>Speech</b> object is returned, you can use the <see cref="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" /> method of the <b>Speech</b> object to play back the contents of a string.</para>
          <para>
            <b>Note</b>: There is a speech feature in the setup tree that pertains to Dictation and Command &amp; Control that does not have to be installed.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSpeakDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSpeakDirection Direction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As XlSpeakDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSpeakDirection Direction { Microsoft::Office::Interop::Excel::XlSpeakDirection get(); void set(Microsoft::Office::Interop::Excel::XlSpeakDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSpeakDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ad60-103">Cette propriété renvoie ou définit l’ordre dans lequel les cellules vont être présentées oralement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-103">Returns or sets the order in which the cells will be spoken.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="1ad60-104">
            <para>La valeur de la propriété <b>Direction</b> est un <see cref="T:Microsoft.Office.Interop.Excel.XlSpeakDirection" /> constante.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-104">
              <para>The value of the <b>Direction</b> property is an <see cref="T:Microsoft.Office.Interop.Excel.XlSpeakDirection" /> constant.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string Text, object SpeakAsync, object SpeakXML, object Purge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]string Text, [in]object SpeakAsync, [in]object SpeakXML, [in]object Purge) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Text As String, Optional SpeakAsync As Object, Optional SpeakXML As Object, Optional Purge As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="SpeakAsync" Type="System.Object" />
        <Parameter Name="SpeakXML" Type="System.Object" />
        <Parameter Name="Purge" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="1ad60-105">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-105">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="1ad60-106">Texte à présenter oralement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-106">The text to be spoken.</span>
          </span>
        </param>
        <param name="SpeakAsync">
          <span data-ttu-id="1ad60-107">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-107">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1ad60-108">
            <b>La valeur True</b> provoque le <paramref name="Text" /> à présenter oralement de manière asynchrone (la méthode n’attend pas pour le <paramref name="Text" /> à présenter oralement).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-108">
              <b>True</b> will cause the <paramref name="Text" /> to be spoken asynchronously (the method will not wait for the <paramref name="Text" /> to be spoken).</span>
          </span>
          <span data-ttu-id="1ad60-109">
            <b>False</b> entraîne la <paramref name="Text" /> à présenter oralement de façon synchrone (la méthode attend la <paramref name="Text" /> à présenter oralement avant de poursuivre).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-109">
              <b>False</b> will cause the <paramref name="Text" /> to be spoken synchronously (the method waits for the <paramref name="Text" /> to be spoken before continuing).</span>
          </span>
          <span data-ttu-id="1ad60-110">La valeur par défaut est <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-110">The default is <b>False</b>.</span>
          </span>
        </param>
        <param name="SpeakXML">
          <span data-ttu-id="1ad60-111">
            <b>Boolean</b> facultatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-111">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="1ad60-112">
            <b>La valeur True</b> provoque le <paramref name="Text" /> pour être interprété comme XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-112">
              <b>True</b> will cause the <paramref name="Text" /> to be interpreted as XML.</span>
          </span>
          <span data-ttu-id="1ad60-113">
            <b>False</b> entraîne la <paramref name="Text" /> ne pas à être interprété comme XML, afin que toutes les balises XML sont lues mais pas interprétées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-113">
              <b>False</b> will cause the <paramref name="Text" /> not to be interpreted as XML, so any XML tags will be read and not interpreted.</span>
          </span>
          <span data-ttu-id="1ad60-114">La valeur par défaut est <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-114">The default is <b>False</b>.</span>
          </span>
        </param>
        <param name="Purge">
          <span data-ttu-id="1ad60-115">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-115">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1ad60-116">
            <b>La valeur True</b> provoque vocale en cours d’être terminées et les mises en mémoire tampon de texte à purger avant <paramref name="Text" /> est lu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-116">
              <b>True</b> will cause current speech to be terminated and any buffered text to be purged before <paramref name="Text" /> is spoken.</span>
          </span>
          <span data-ttu-id="1ad60-117">
            <b>False</b> ne provoque pas l’actuel d’être terminées et ne purge pas le texte dans la mémoire tampon avant <paramref name="Text" /> est lu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-117">
              <b>False</b> will not cause the current speech to be terminated and will not purge the buffered text before <paramref name="Text" /> is spoken.</span>
          </span>
          <span data-ttu-id="1ad60-118">La valeur par défaut est <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-118">The default is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ad60-119">Microsoft Excel présente oralement la chaîne de texte spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-119">Microsoft Excel plays back the specified text string.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakCellOnEnter">
      <MemberSignature Language="C#" Value="public bool SpeakCellOnEnter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpeakCellOnEnter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.SpeakCellOnEnter" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeakCellOnEnter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SpeakCellOnEnter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ad60-120">Microsoft Excel prend en charge un mode où la cellule active sera oralement lorsque la touche entrée est enfoncée ou lorsque vous avez terminée de la cellule active est en cours de modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-120">Microsoft Excel supports a mode where the active cell will be spoken when the ENTER key is pressed or when the active cell is finished being edited.</span>
          </span>
          <span data-ttu-id="1ad60-121">Définition de la propriété <b>SpeakCellOnEnter</b> sur <b>True</b> active ce mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-121">Setting the <b>SpeakCellOnEnter</b> property to <b>True</b> will turn this mode on.</span>
          </span>
          <span data-ttu-id="1ad60-122">
            <b>False</b> le désactive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad60-122">
              <b>False</b> turns this mode off.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>