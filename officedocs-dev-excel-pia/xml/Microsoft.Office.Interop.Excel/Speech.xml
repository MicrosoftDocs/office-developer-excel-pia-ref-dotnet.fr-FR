<Type Name="Speech" FullName="Microsoft.Office.Interop.Excel.Speech">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22837717535384f6c1e41513e3e32b7efde41769" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20576222" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Speech" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Speech" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Speech" />
  <TypeSignature Language="VB.NET" Value="Public Interface Speech" />
  <TypeSignature Language="C++ CLI" Value="public interface class Speech" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024466-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Cet objet contient des méthodes et des propriétés qui se rapportent aux fonctions vocales.</summary>
    <remarks>
      <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.Speech" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objet pour renvoyer un objet <b>Speech</b> .</para>
      <para>Une fois qu’un objet <b>Speech</b> est renvoyé, vous pouvez utiliser la <see cref="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" /> méthode de l’objet <b>Speech</b> pour lire le contenu d’une chaîne.</para>
      <para>
        <b>Remarque</b>: il existe une fonctionnalité de reconnaissance vocale dans l’arborescence d’installation qui se rapporte à Dictation et Command &amp; contrôle qui ne doit pas être installé.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSpeakDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSpeakDirection Direction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As XlSpeakDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSpeakDirection Direction { Microsoft::Office::Interop::Excel::XlSpeakDirection get(); void set(Microsoft::Office::Interop::Excel::XlSpeakDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSpeakDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit l’ordre dans lequel les cellules vont être présentées oralement.</summary>
        <value>To be added.</value>
        <remarks>
          <para>La valeur de la propriété <b>Direction</b> est un <see cref="T:Microsoft.Office.Interop.Excel.XlSpeakDirection" /> constante.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string Text, object SpeakAsync, object SpeakXML, object Purge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]string Text, [in]object SpeakAsync, [in]object SpeakXML, [in]object Purge) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Text As String, Optional SpeakAsync As Object, Optional SpeakXML As Object, Optional Purge As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="SpeakAsync" Type="System.Object" />
        <Parameter Name="SpeakXML" Type="System.Object" />
        <Parameter Name="Purge" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <b>String</b>obligatoire. Texte à présenter oralement.</param>
        <param name="SpeakAsync">Facultatif <b>Object</b>. <b>La valeur True</b> provoque le <paramref name="Text" /> à présenter oralement de manière asynchrone (la méthode n’attend pas pour le <paramref name="Text" /> à présenter oralement). <b>False</b> entraîne la <paramref name="Text" /> à présenter oralement de façon synchrone (la méthode attend la <paramref name="Text" /> à présenter oralement avant de poursuivre). La valeur par défaut est <b>False</b>.</param>
        <param name="SpeakXML">
          <b>Boolean</b> facultatif. <b>La valeur True</b> provoque le <paramref name="Text" /> pour être interprété comme XML. <b>False</b> entraîne la <paramref name="Text" /> ne pas à être interprété comme XML, afin que toutes les balises XML sont lues mais pas interprétées. La valeur par défaut est <b>False</b>.</param>
        <param name="Purge">Facultatif <b>Object</b>. <b>La valeur True</b> provoque vocale en cours d’être terminées et les mises en mémoire tampon de texte à purger avant <paramref name="Text" /> est lu. <b>False</b> ne provoque pas l’actuel d’être terminées et ne purge pas le texte dans la mémoire tampon avant <paramref name="Text" /> est lu. La valeur par défaut est <b>False</b>.</param>
        <summary>Microsoft Excel présente oralement la chaîne de texte spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakCellOnEnter">
      <MemberSignature Language="C#" Value="public bool SpeakCellOnEnter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpeakCellOnEnter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.SpeakCellOnEnter" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeakCellOnEnter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SpeakCellOnEnter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Microsoft Excel prend en charge un mode où la cellule active sera oralement lorsque la touche entrée est enfoncée ou lorsque vous avez terminée de la cellule active est en cours de modification. Définition de la propriété <b>SpeakCellOnEnter</b> sur <b>True</b> active ce mode. <b>False</b> le désactive.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>