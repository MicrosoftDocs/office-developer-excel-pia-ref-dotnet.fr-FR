<Type Name="XmlMap" FullName="Microsoft.Office.Interop.Excel.XmlMap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="90e19f9871537de3824defd244b85c6255bb7e45" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20583607" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface XmlMap" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract XmlMap" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.XmlMap" />
  <TypeSignature Language="VB.NET" Value="Public Interface XmlMap" />
  <TypeSignature Language="C++ CLI" Value="public interface class XmlMap" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002447B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bf9fa-101">Cet objet représente un mappage XML ajouté à un classeur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf9fa-101">Represents an XML map that has been added to a workbook.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="bf9fa-102">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
        <span class="sxs-lookup">
          <span data-stu-id="bf9fa-102">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="bf9fa-103">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> méthode de la <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection pour ajouter un mappage XML à un classeur.</span>
        <span class="sxs-lookup">
          <span data-stu-id="bf9fa-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection to add an XML map to a workbook.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="bf9fa-104">Importation et exportation de données XML</span>
        <span class="sxs-lookup">
          <span data-stu-id="bf9fa-104">Importing and exporting XML data</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="bf9fa-105">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> méthode pour importer des données XML à partir d’un fichier de données XML dans des cellules mappées à l' spécifié <b>XmlMap</b>.</span>
        <span class="sxs-lookup">
          <span data-stu-id="bf9fa-105">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method to import XML data from an XML data file into cells mapped to the specified <b>XmlMap</b>.</span>
        </span>
        <span data-ttu-id="bf9fa-106">Le <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> méthode importe les données XML pour une variable de <b>chaîne</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="bf9fa-106">The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> method imports XML data for a <b>String</b> variable.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="bf9fa-107">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> méthode pour exporter des données dans des cellules mappées à l' spécifié <b>XmlMap</b>.</span>
        <span class="sxs-lookup">
          <span data-stu-id="bf9fa-107">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method to export data from cells mapped to the specified <b>XmlMap</b>.</span>
        </span>
        <span data-ttu-id="bf9fa-108">Le <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> méthode exporte les données XML dans une variable <b>String</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="bf9fa-108">The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method exports XML data to a <b>String</b> variable.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustColumnWidth">
      <MemberSignature Language="C#" Value="public bool AdjustColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AdjustColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustColumnWidth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustColumnWidth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-109">
            <b>La valeur true</b> si les largeurs de colonne sont automatiquement ajustées pour les meilleurs ajuste chaque fois que vous actualisez la table de requête spécifiée ou le mappage XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-109">
              <b>True</b> if the column widths are automatically adjusted for the best fit each time you refresh the specified query table or XML map.</span>
          </span>
          <span data-ttu-id="bf9fa-110">
            <b>False</b> si les largeurs de colonne ne sont pas automatiquement ajustées à chaque actualisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-110">
              <b>False</b> if the column widths aren’t automatically adjusted with each refresh.</span>
          </span>
          <span data-ttu-id="bf9fa-111">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-111">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="bf9fa-112">En lecture/écriture <b>booléen</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-112">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-113">La largeur maximale de colonne correspond aux deux tiers de la largeur de l'écran.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-113">The maximum column width is two-thirds the width of the screen.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendOnImport">
      <MemberSignature Language="C#" Value="public bool AppendOnImport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendOnImport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendOnImport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendOnImport { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-114">
            <b>True</b> si vous souhaitez ajouter de nouvelles lignes à des listes XML liées au mappage de schéma spécifié lors de l’importation de nouvelles données ou de l’actualisation d’une connexion existante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-114">
              <b>True</b> if you want to append new rows to XML lists that are bound to the specified schema map when you are importing new data or refreshing an existing connection.</span>
          </span>
          <span data-ttu-id="bf9fa-115">
            <b>False</b> si vous souhaitez remplacer le contenu des cellules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-115">
              <b>False</b> if you want to overwrite the contents of cells.</span>
          </span>
          <span data-ttu-id="bf9fa-116">La valeur par défaut est <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-116">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="bf9fa-117">En lecture/écriture <b>booléen</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-117">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-118">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-118">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-119">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="bf9fa-120">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-120">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-121">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-121">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="bf9fa-122">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-122">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="bf9fa-123">En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-123">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-124">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-124">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="bf9fa-125">Par exemple, Microsoft Excel possède le code créateur XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-125">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBinding">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.DataBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBinding As XmlDataBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlDataBinding ^ DataBinding { Microsoft::Office::Interop::Excel::XmlDataBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlDataBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-126">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> object qui représente la liaison associée au mappage de schéma spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-126">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> object that represents the binding associated with the specified schema map.</span>
          </span>
          <span data-ttu-id="bf9fa-127">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-127">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-128">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-128">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-129">Supprime le mappage XML spécifié du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-129">Removes the specified XML map from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult Export (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult Export([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (Url As String, Optional Overwrite As Object) As XlXmlExportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">
          <span data-ttu-id="bf9fa-130">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-130">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bf9fa-131">Le chemin d’accès et le nom du fichier de données XML à exporter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-131">The path and filename of the XML data file to export to.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="bf9fa-132">
            <b>Boolean</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-132">Required <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="bf9fa-133">Valeur <b>True</b> pour remplacer le fichier spécifié dans le <paramref name="URL" /> paramètre si le fichier existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-133">Set to <b>True</b> to overwrite the file specified in the <paramref name="URL" /> parameter if the file exists.</span>
          </span>
          <span data-ttu-id="bf9fa-134">La valeur par défaut si la valeur <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-134">The default value if <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf9fa-135">Exporte le contenu des cellules mappées à l’objet <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objet dans un fichier de données XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-135">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to an XML data file.</span>
          </span>
          <span data-ttu-id="bf9fa-136">Cette propriété renvoie <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-136">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-137">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> méthode pour exporter le contenu des cellules mappées vers une variable de <b>chaîne</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-137">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method to export the contents of the mapped cells to a <b>String</b> variable.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml (out string Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml([out] string&amp; Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportXml (ByRef Data As String) As XlXmlExportResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::XlXmlExportResult ExportXml([Runtime::InteropServices::Out] System::String ^ % Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Data">
          <span data-ttu-id="bf9fa-138">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-138">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bf9fa-139">Pour exporter les données à la variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-139">The variable to export the data to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf9fa-140">Exporte le contenu des cellules mappées à l’objet <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objet à une variable de <b>chaîne</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-140">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to a <b>String</b> variable.</span>
          </span>
          <span data-ttu-id="bf9fa-141">Cette propriété renvoie <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-141">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-142">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-142">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="bf9fa-143">Pour exporter le contenu des cellules mappées à un fichier de données XML, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-143">To export the contents of the mapped cells to an XML data file, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult Import (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult Import([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Import (Url As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">
          <span data-ttu-id="bf9fa-144">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-144">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bf9fa-145">Le chemin d’accès aux données XML à importer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-145">The path to the XML data to import.</span>
          </span>
          <span data-ttu-id="bf9fa-146">Le chemin d’accès peut être spécifié dans la convention de dénomination universelle (UNC) ou format Uniform Resource Locator (URL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-146">The path can be specified in Universal Naming convention (UNC) or Uniform Resource Locator (URL) format.</span>
          </span>
          <span data-ttu-id="bf9fa-147">Le fichier peut être un fichier de données XML ou un fichier de connexion (.uxdc) à la Source de données XML Office valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-147">The file can be an XML data file or a valid Office XML data Source Connection (.uxdc) file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="bf9fa-148">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-148">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bf9fa-149">Valeur <b>True</b> pour remplacer les données existantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-149">Set to <b>True</b> to overwrite existing data.</span>
          </span>
          <span data-ttu-id="bf9fa-150">Affectez la <b>valeur False</b> à ajouter aux données existantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-150">Set to <b>False</b> to append to existing data.</span>
          </span>
          <span data-ttu-id="bf9fa-151">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-151">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf9fa-152">Importe les données à partir du fichier de données XML spécifié dans les cellules qui ont été mappées à l’objet <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-152">Imports data from the specified XML data file into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="bf9fa-153">Cette propriété renvoie <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-153">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml (string XmlData, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml([in]string XmlData, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportXml (XmlData As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlData" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlData">
          <span data-ttu-id="bf9fa-154">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-154">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bf9fa-155">Chaîne contenant les données XML à importer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-155">The string that contains the XML data to import.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="bf9fa-156">Facultatif <b>de type Boolean</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-156">Optional <b>Boolean</b> value.</span>
          </span>
          <span data-ttu-id="bf9fa-157">Spécifie s’il faut remplacer le contenu des cellules actuellement mappées sur le mappage XML spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-157">Specifies whether to overwrite the contents of cells that are currently mapped to the specified XML map.</span>
          </span>
          <span data-ttu-id="bf9fa-158">Valeur <b>True</b> pour remplacer les cellules ; a la valeur <b>False</b> pour ajouter les données à la plage existante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-158">Set to <b>True</b> to overwrite the cells; set to <b>False</b> to append the data to the existing range.</span>
          </span>
          <span data-ttu-id="bf9fa-159">Si ce paramètre n’est pas spécifié, la valeur actuelle de la <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> propriété du mappage XML détermine si le contenu des cellules est remplacé ou non.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-159">If this parameter is not specified, the current value of the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> property of the XML map determines whether the contents of cells are overwritten or not.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf9fa-160">Importe les données XML à partir d’une variable de <b>type String</b> dans les cellules qui ont été mappées à l’objet <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-160">Imports XML data from a <b>String</b> variable into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="bf9fa-161">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> constante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-161">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> constant.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-162">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-162">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="bf9fa-163">Pour importer le contenu d’un fichier de données XML dans des cellules mappées au mappage de schéma spécifique, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> méthode de l’objet <b>XmlMap</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-163">To import the contents of an XML data file into cells mapped to a specific schema map, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method of the <b>XmlMap</b> object.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExportable">
      <MemberSignature Language="C#" Value="public bool IsExportable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExportable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExportable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExportable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-164">Renvoie <b>la valeur True</b> si Microsoft Excel peut utiliser le <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> objets de mappage de schéma spécifié pour exporter des données XML et si toutes les listes XML mappées au mappage de schéma spécifié sont exportables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-164">Returns <b>True</b> if Microsoft Excel can use the <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> objects in the specified schema map to export XML data and if all XML lists mapped to the specified schema map can be exported.</span>
          </span>
          <span data-ttu-id="bf9fa-165">Type <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-165">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-166">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-166">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-167">Cette propriété renvoie ou définit le nom convivial utilisé pour identifier de manière unique un mappage dans le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-167">Returns or sets the friendly name used to uniquely identify a mapping in the workbook.</span>
          </span>
          <span data-ttu-id="bf9fa-168">Valeur <b>String</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-168">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-p122">Renvoie l'objet parent de l'objet spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-p122">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveColumnFilter">
      <MemberSignature Language="C#" Value="public bool PreserveColumnFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveColumnFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveColumnFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveColumnFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveColumnFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-171">Cette propriété renvoie ou définit si le filtrage est conservé lors du mappage XML spécifié est actualisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-171">Returns or sets whether filtering is preserved when the specified XML map is refreshed.</span>
          </span>
          <span data-ttu-id="bf9fa-172">Type de données <b>Boolean</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-172">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-173">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-173">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveNumberFormatting">
      <MemberSignature Language="C#" Value="public bool PreserveNumberFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNumberFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveNumberFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNumberFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNumberFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-174">
            <b>La valeur true</b> si le nombre de mise en forme des cellules mappées au mappage de schéma XML spécifié sera conservé lors de l’actualisation du mappage de schéma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-174">
              <b>True</b> if number formatting on cells mapped to the specified XML schema map will be preserved when the schema map is refreshed.</span>
          </span>
          <span data-ttu-id="bf9fa-175">La valeur par défaut est <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-175">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="bf9fa-176">En lecture/écriture <b>booléen</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-176">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-177">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-177">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementName">
      <MemberSignature Language="C#" Value="public string RootElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootElementName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootElementName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-p125">Renvoie une chaîne (type de donnée <b>String</b>) qui représente le nom de l’élément racine du mappage de schéma XML spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-p125">Returns a <b>String</b> that represents the name of the root element for the specified XML schema map. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-180">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-180">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementNamespace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementNamespace As XmlNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespace ^ RootElementNamespace { Microsoft::Office::Interop::Excel::XmlNamespace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-181">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> object qui représente l’élément racine du mappage de schéma XML spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-181">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> object that represents the root element for the specified XML schema map.</span>
          </span>
          <span data-ttu-id="bf9fa-182">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-182">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-183">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-183">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDataSourceDefinition">
      <MemberSignature Language="C#" Value="public bool SaveDataSourceDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveDataSourceDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.SaveDataSourceDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveDataSourceDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveDataSourceDefinition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-184">
            <b>True</b> si les données source de la définition du mappage de schéma XML spécifié est enregistrée avec le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-184">
              <b>True</b> if the data source definition of the specified XML schema map is saved with the workbook.</span>
          </span>
          <span data-ttu-id="bf9fa-185">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-185">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="bf9fa-186">En lecture/écriture <b>booléen</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-186">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-187">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-187">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlSchemas Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlSchemas Schemas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlSchemas ^ Schemas { Microsoft::Office::Interop::Excel::XmlSchemas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlSchemas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-188">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> collection qui représente les schémas qui spécifié <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objet contient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-188">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> collection that represents the schemas that the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object contains.</span>
          </span>
          <span data-ttu-id="bf9fa-189">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-189">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-190">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-190">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="bf9fa-191">Le premier élément dans la collection <b>XmlSchemas</b> renvoyée est le schéma utilisé comme l'élément racine du mappage de schéma XML spécifié.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-191">The first item in the returned <b>XmlSchemas</b> collection is the schema that is used as the root element of the specified XML schema map.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowImportExportValidationErrors">
      <MemberSignature Language="C#" Value="public bool ShowImportExportValidationErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowImportExportValidationErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.ShowImportExportValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowImportExportValidationErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowImportExportValidationErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-p129">Renvoie ou définit si une boîte de dialogue qui détaille les erreurs de validation du schéma lorsque des données sont importées ou exportées par l’intermédiaire du mappage de schéma XML spécifié est affichée. La valeur par défaut est <b>False</b>. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-p129">Returns or sets whether to display a dialog box that details schema-validation errors when data is imported or exported through the specified XML schema map. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="bf9fa-195">Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bf9fa-195">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkbookConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.WorkbookConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkbookConnection As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorkbookConnection ^ WorkbookConnection { Microsoft::Office::Interop::Excel::WorkbookConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf9fa-196">Renvoie une nouvelle connexion spécifié <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-196">Retuns a new connection for the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="bf9fa-197">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf9fa-197">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>