<Type Name="Workbook" FullName="Microsoft.Office.Interop.Excel.Workbook">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92ffce8b5e62ce88e392a62537bf1cc2d3a58d10" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20587352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Workbook : Microsoft.Office.Interop.Excel._Workbook, Microsoft.Office.Interop.Excel.WorkbookEvents_Event" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbook implements class Microsoft.Office.Interop.Excel._Workbook, class Microsoft.Office.Interop.Excel.WorkbookEvents_Event" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbook&#xA;Implements _Workbook, WorkbookEvents_Event" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbook : Microsoft::Office::Interop::Excel::_Workbook, Microsoft::Office::Interop::Excel::WorkbookEvents_Event" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Excel._Workbook</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Excel.WorkbookEvents_Event</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Excel.WorkbookClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="08d17-101">Cet objet représente un classeur Microsoft Excel.</span>
      <span class="sxs-lookup">
        <span data-stu-id="08d17-101">Represents a Microsoft Excel workbook.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="08d17-102">
        <para>Il s’agit d’une interface .NET dérivée une coclasse COM qui est requis par le code managé pour l’interopérabilité avec l’objet COM correspondant. Utilisez cette interface dérivée pour accéder à tous les membres de méthode, propriétés et événements de l’objet COM. Toutefois, si une méthode ou l’événement que vous souhaitez utiliser partage le même nom sous le même objet COM, effectuer un cast à l’interface principale correspondant pour appeler la méthode et dans l’interface d’événements le plus récent pour se connecter à l’événement. Reportez-vous à cette rubrique pour plus d’informations sur l’objet COM. Pour plus d’informations sur les membres des méthodes et des propriétés de l’objet COM, voir <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />.</para>
        <para>La <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objet est un membre de la <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection. La collection <b>Workbooks</b> contient tous les objets <b>Workbook</b> actuellement ouverts dans Microsoft Excel.</para>
        <para>Les propriétés suivantes pour renvoyer un objet <b>Workbook</b> qui sont décrites dans cette section :</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> propriété</description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> propriété</description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" /> propriété</description>
          </item>
        </list>
        <para>Workbooks, propriété</para>
        <para>Utiliser <b>classeurs</b>(<paramref name="index" />), où <paramref name="index" /> est le nom du classeur ou un numéro d’index, pour renvoyer un objet <b>Workbook</b> .</para>
        <para>Le numéro d’index indique l’ordre dans lequel les classeurs ont été ouverts ou créés. Workbooks (1) est le premier classeur créé et Workbooks (Workbooks.Count) la dernière. Activation d’un classeur ne change pas son numéro d’index. Tous les classeurs sont inclus dans le comptage d’index, même si elles sont masquées.</para>
        <para>La <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> propriété retourne le nom du classeur. Vous ne pouvez pas définir le nom à l’aide de cette propriété ; Si vous devez modifier le nom, utilisez la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode pour enregistrer le classeur sous un nom différent.</para>
        <para>ActiveWorkbook, propriété</para>
        <para>La propriété <b>ActiveWorkbook</b> renvoie le classeur actif.</para>
        <para>ThisWorkbook, propriété</para> Propriété 
      <para>le <b>ThisWorkbook</b> renvoie le classeur dans lequel s’exécute le code Visual Basic. Dans la plupart des cas, il est le même que le classeur actif. Toutefois, si le code Visual Basic fait partie d’une macro complémentaire, la propriété <b>ThisWorkbook</b> ne renverra pas le classeur actif. Dans ce cas, le classeur actif est celui appelant le complément, afin que la propriété <b>ThisWorkbook</b> renvoie le classeur de macro complémentaire. </para><para>Si vous créez un complément à partir du code Visual Basic, vous devez utiliser la propriété <b>ThisWorkbook</b> pour qualifier toute instruction qui doit être exécutée sur le classeur compilé dans le complément.</para><para></para></span>
      <span class="sxs-lookup">
        <span data-stu-id="08d17-102">
          <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />.</para>
          <para>The <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection. The <b>Workbooks</b> collection contains all the <b>Workbook</b> objects currently open in Microsoft Excel.</para>
          <para>The following properties for returning a <b>Workbook</b> object are described in this section:</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> property</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" /> property</description>
            </item>
          </list>
          <para>Workbooks Property</para>
          <para>Use <b>Workbooks</b>(<paramref name="index" />), where <paramref name="index" /> is the workbook name or index number, to return a single <b>Workbook</b> object.</para>
          <para>The index number denotes the order in which the workbooks were opened or created. Workbooks(1) is the first workbook created, and Workbooks(Workbooks.Count) is the last one created. Activating a workbook doesn’t change its index number. All workbooks are included in the index count, even if they’re hidden.</para>
          <para>The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> property returns the workbook name. You cannot set the name by using this property; if you need to change the name, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to save the workbook under a different name.</para>
          <para>ActiveWorkbook Property</para>
          <para>The <b>ActiveWorkbook</b> property returns the workbook that’s currently active.</para>
          <para>ThisWorkbook Property</para>
          <para>The <b>ThisWorkbook</b> property returns the workbook where the Visual Basic code is running. In most cases, this is the same as the active workbook. However, if the Visual Basic code is part of an add-in, the <b>ThisWorkbook</b> property won’t return the active workbook. In this case, the active workbook is the workbook calling the add-in, so the <b>ThisWorkbook</b> property returns the add-in workbook. </para>
          <para>If you’ll be creating an add-in from your Visual Basic code, you should use the <b>ThisWorkbook</b> property to qualify any statement that must be run on the workbook you compile into the add-in.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members />
</Type>