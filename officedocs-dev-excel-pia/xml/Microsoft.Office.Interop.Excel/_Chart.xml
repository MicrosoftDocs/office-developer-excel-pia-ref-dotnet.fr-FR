<Type Name="_Chart" FullName="Microsoft.Office.Interop.Excel._Chart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57339bb20d25fcbe71c1c566971bde680079bc66" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50012711" /></Metadata><TypeSignature Language="C#" Value="public interface _Chart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Chart" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Chart" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Chart" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Chart" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D6-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8a309-101">Il s'agit d'une interface principale dans une coclasse COM qui est requise par du code managé en vue de son interopérabilité avec l'objet COM correspondant.</span><span class="sxs-lookup"><span data-stu-id="8a309-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="8a309-102">Utilisez cette interface principale uniquement lorsque la méthode que vous voulez utiliser partage le même nom qu'un événement de l'objet COM ; en l'occurrence, effectuez un transtypage vers cette interface pour appeler la méthode et effectuez un transtypage vers la dernière interface d'événements pour vous connecter à l'événement.</span><span class="sxs-lookup"><span data-stu-id="8a309-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="8a309-103">Sinon, utilisez l'interface .NET qui est dérivée de la coclasse COM pour accéder aux méthodes, propriétés et événements de l'objet COM.</span><span class="sxs-lookup"><span data-stu-id="8a309-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="8a309-104">Pour plus d’informations sur l’objet COM, voir <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Chart" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary><span data-ttu-id="8a309-105">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="8a309-105">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-106">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-106">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy23">
      <MemberSignature Language="C#" Value="public void _Dummy23 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy23() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy23 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy23();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65559)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a309-107">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-107">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary><span data-ttu-id="8a309-108">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-108">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="8a309-109">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-109">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary><span data-ttu-id="8a309-110">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-110">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary><span data-ttu-id="8a309-111">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-111">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a309-112">Active le graphique actuel.</span><span class="sxs-lookup"><span data-stu-id="8a309-112">Makes the current chart the active chart.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-113">Utilisée sans qualificateur d’objet, cette propriété renvoie un objet qui <see cref="T:Microsoft.Office.Interop.Excel.Application" /> représente l’application Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="8a309-113">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="8a309-114">Utilisée avec un identificateur d’objet, cette propriété renvoie un objet<b>Application</b> qui représente le créateur de l’objet spécifié (vous pouvez utiliser cette propriété avec un objet OLE Automation pour renvoyer l’application de cet objet).</span><span class="sxs-lookup"><span data-stu-id="8a309-114">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChartTemplate">
      <MemberSignature Language="C#" Value="public void ApplyChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyChartTemplate([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyChartTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyChartTemplate (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyChartTemplate(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2507)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="8a309-115">Nom de fichier d'un modèle de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-115">The file name for a chart template.</span></span></param>
        <summary><span data-ttu-id="8a309-116">Applique un type de graphique standard ou personnalisé à un graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-116">Applies a standard or custom chart type to a chart.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-117">Cette méthode ne permet pas d'accepter des constantes pour des graphiques natifs ou combinés.</span><span class="sxs-lookup"><span data-stu-id="8a309-117">This method  does not support taking constants for native or combination charts.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType ChartType, object TypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCustomType([in]valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType, [in]object TypeName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyCustomType (ChartType As XlChartType, Optional TypeName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ChartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
        <Parameter Name="TypeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ChartType"><span data-ttu-id="8a309-118">Obligatoire <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-118">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span></span> <span data-ttu-id="8a309-119">Type de graphique standard.</span><span class="sxs-lookup"><span data-stu-id="8a309-119">A standard chart type.</span></span></param>
        <param name="TypeName"><span data-ttu-id="8a309-120">Objet <b>facultatif</b> (utilisé uniquement avec un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objet).</span><span class="sxs-lookup"><span data-stu-id="8a309-120">Optional <b>object</b> (used only with a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object).</span></span> <span data-ttu-id="8a309-121">Nom du type de graphique personnalisé si une galerie de graphiques personnalisée <paramref name="ChartType" /> est spécifiée.</span><span class="sxs-lookup"><span data-stu-id="8a309-121">The name of the custom chart type if <paramref name="ChartType" /> specifies a custom chart gallery.</span></span></param>
        <summary><span data-ttu-id="8a309-122">Applique un type de graphique standard ou personnalisé à un graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-122">Applies a standard or custom chart type to a chart.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines, [in]object ShowSeriesName, [in]object ShowCategoryName, [in]object ShowValue, [in]object ShowPercentage, [in]object ShowBubbleSize, [in]object Separator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object, Optional ShowSeriesName As Object, Optional ShowCategoryName As Object, Optional ShowValue As Object, Optional ShowPercentage As Object, Optional ShowBubbleSize As Object, Optional Separator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="8a309-123">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-123">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span></span> <span data-ttu-id="8a309-124">Type d'étiquette de données à appliquer.</span><span class="sxs-lookup"><span data-stu-id="8a309-124">The type of data label to apply.</span></span></param>
        <param name="LegendKey"><span data-ttu-id="8a309-125">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-125">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-126"><b>True</b> pour afficher le symbole de légende à côté du point.</span><span class="sxs-lookup"><span data-stu-id="8a309-126"><b>True</b> to show the legend key next to the point.</span></span> <span data-ttu-id="8a309-127">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-127">The default value is <b>False</b>.</span></span></param>
        <param name="AutoText"><span data-ttu-id="8a309-128">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-128">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-129"><b>True</b> si l'objet génère automatiquement un texte approprié d'après le contenu.</span><span class="sxs-lookup"><span data-stu-id="8a309-129"><b>True</b> if the object automatically generates appropriate text based on content.</span></span></param>
        <param name="HasLeaderLines"><span data-ttu-id="8a309-130">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-130">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-131">Pour les objets et les objets, true si <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> la série possède des lignes <see cref="T:Microsoft.Office.Interop.Excel.Series" /> d’en-tête. <b></b></span><span class="sxs-lookup"><span data-stu-id="8a309-131">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <b>True</b> if the series has leader lines.</span></span></param>
        <param name="ShowSeriesName"><span data-ttu-id="8a309-132">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-132">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-133">Nom de la série pour l’étiquette de données.</span><span class="sxs-lookup"><span data-stu-id="8a309-133">The series name for the data label.</span></span></param>
        <param name="ShowCategoryName"><span data-ttu-id="8a309-134">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-134">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-135">Nom de l’abscisse pour l’étiquette de données.</span><span class="sxs-lookup"><span data-stu-id="8a309-135">The category name for the data label.</span></span></param>
        <param name="ShowValue"><span data-ttu-id="8a309-136">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-136">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-137">Ordonnée pour l’étiquette de données.</span><span class="sxs-lookup"><span data-stu-id="8a309-137">The value for the data label.</span></span></param>
        <param name="ShowPercentage"><span data-ttu-id="8a309-138">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-138">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-139">Pourcentage pour l’étiquette de données.</span><span class="sxs-lookup"><span data-stu-id="8a309-139">The percentage for the data label.</span></span></param>
        <param name="ShowBubbleSize"><span data-ttu-id="8a309-140">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-140">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-141">Taille de la bulle pour l'étiquette de données.</span><span class="sxs-lookup"><span data-stu-id="8a309-141">The bubble size for the data label.</span></span></param>
        <param name="Separator"><span data-ttu-id="8a309-142">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-142">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-143">Séparateur pour l'étiquette de données.</span><span class="sxs-lookup"><span data-stu-id="8a309-143">The separator for the data label.</span></span></param>
        <summary><span data-ttu-id="8a309-144">Cette méthode applique des étiquettes de données à un point, à une série ou à toutes les séries d’un graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-144">Applies data labels to a point, a series, or all the series in a chart.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyLayout">
      <MemberSignature Language="C#" Value="public void ApplyLayout (int Layout, object ChartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyLayout([in]int32 Layout, [in]object ChartType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyLayout(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyLayout (Layout As Integer, Optional ChartType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Layout" Type="System.Int32" />
        <Parameter Name="ChartType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Layout"><span data-ttu-id="8a309-145">Spécifie le type de mise en page.</span><span class="sxs-lookup"><span data-stu-id="8a309-145">Specifies the type of layout.</span></span>  <span data-ttu-id="8a309-146">Le type de mise en page est indiqué par un nombre entre 1 entre 10.</span><span class="sxs-lookup"><span data-stu-id="8a309-146">The type of layout is denoted by a number from 1 to 10.</span></span></param>
        <param name="ChartType"><span data-ttu-id="8a309-147">Type du graphique</span><span class="sxs-lookup"><span data-stu-id="8a309-147">The type of chart.</span></span></param>
        <summary><span data-ttu-id="8a309-148">Cette méthode applique les mises en page proposées dans le Ruban.</span><span class="sxs-lookup"><span data-stu-id="8a309-148">Applies the layouts shown in the ribbon.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-p116">Lorsque vous utilisez une mise en page sur le type de graphique actuel, un nombre compris entre 1 et 10 lui est appliqué. Vous pouvez également appliquer la mise en forme d'un type de graphique à un autre type de graphique. Par exemple, vous pouvez appliquer les mises en page disponibles dans un graphique en courbes à un histogramme. La mise en forme n'ajoute que les éléments de graphique qui sont disponibles pour ce type de graphique particulier.</span><span class="sxs-lookup"><span data-stu-id="8a309-p116">When you use a layout on the current chart type, a number from 1 to 10 is applied to the chart type.  You can also apply the layout of one chart type on another chart type.  For example, you can  apply the layouts that are available from a line chart to a column chart.  The layout only adds chart elements that are available for that particular chart type.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-153">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-153">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Area3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Area3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Area3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Area3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-154">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objet qui représente le groupe de graphiques en zone sur un graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-154">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the area chart group on a 3-D chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreaGroups">
      <MemberSignature Language="C#" Value="public object AreaGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AreaGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.AreaGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AreaGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-155">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-155">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-156">Le numéro de groupe de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-156">The chart group number.</span></span></param>
        <summary><span data-ttu-id="8a309-157">Sur un graphique 2D, renvoie un objet qui représente soit un seul groupe de graphiques en zone (un objet), soit une collection de groupes de graphiques en zone <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> (une collection).</span><span class="sxs-lookup"><span data-stu-id="8a309-157">On a 2-D chart, returns an object that represents either a single area chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the area chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat (int Gallery, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AutoFormat([in]int32 Gallery, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.AutoFormat(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoFormat (Gallery As Integer, Optional Format As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Gallery" Type="System.Int32" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Gallery">To be added.</param>
        <param name="Format">To be added.</param>
        <summary><span data-ttu-id="8a309-158">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-158">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaling">
      <MemberSignature Language="C#" Value="public bool AutoScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScaling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.AutoScaling" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScaling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScaling { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-159">Cette propriété a la valeur <b>True</b> si Microsoft Excel met à l'échelle un graphique 3D de telle sorte que sa taille soit plus proche de celle du graphique 2D équivalent.</span><span class="sxs-lookup"><span data-stu-id="8a309-159"><b>True</b> if Microsoft Excel scales a 3-D chart so that it's closer in size to the equivalent 2-D chart.</span></span> <span data-ttu-id="8a309-160">La <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> propriété doit avoir la valeur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-160">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> property must be <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Axes">
      <MemberSignature Language="C#" Value="public object Axes (object Type, Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup = Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Axes([in]object Type, [in]valuetype Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Axes (Optional Type As Object, Optional AxisGroup As XlAxisGroup = Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="AxisGroup" Type="Microsoft.Office.Interop.Excel.XlAxisGroup" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="8a309-161">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-161">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-162">Spécifie l’axe à renvoyer.</span><span class="sxs-lookup"><span data-stu-id="8a309-162">Specifies the axis to return.</span></span> <span data-ttu-id="8a309-163">Il peut s’agit de l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constantes suivantes : <b>xlValue,</b> <b>xlCategory</b>ou <b>xlSeriesAxis</b> (<b>xlSeriesAxis</b> n’est valide que pour les graphiques 3D).</span><span class="sxs-lookup"><span data-stu-id="8a309-163">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <b>xlValue</b>, <b>xlCategory</b>, or <b>xlSeriesAxis</b> (<b>xlSeriesAxis</b> is valid only for 3-D charts).</span></span></param>
        <param name="AxisGroup"><span data-ttu-id="8a309-164">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-164">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span></span> <span data-ttu-id="8a309-165">Spécifie le groupe d'axes.</span><span class="sxs-lookup"><span data-stu-id="8a309-165">Specifies the axis group.</span></span> <span data-ttu-id="8a309-166">Si cet argument n'est pas défini, le groupe principal est utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-166">If this argument is omitted, the primary group is used.</span></span> <span data-ttu-id="8a309-167">Les graphiques 3D ont un seul groupe d'axes.</span><span class="sxs-lookup"><span data-stu-id="8a309-167">3-D charts have only one axis group.</span></span></param>
        <summary><span data-ttu-id="8a309-168">Renvoie un objet qui représente soit un axe unique, soit un ensemble d’axes du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-168">Returns an object that represents either a single axis or a collection of the axes on the chart.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls BackWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls BackWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.BackWall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackWall As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ BackWall { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2506)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2506)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-169">Renvoie un objet qui permet à l’utilisateur de mettre en forme individuellement le mur arrière d’un <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-169">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that allows the user to individually format the back wall of a 3-D chart.</span></span> <span data-ttu-id="8a309-170">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="8a309-170">Read-only.</span></span></summary>
        <value><span data-ttu-id="8a309-171"><b>Walls</b></span><span class="sxs-lookup"><span data-stu-id="8a309-171"><b>Walls</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bar3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Bar3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bar3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Bar3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-172">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objet qui représente le groupe de graphiques en barres sur un graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-172">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the bar chart group on a 3-D chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarGroups">
      <MemberSignature Language="C#" Value="public object BarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BarGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.BarGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BarGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-173">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-173">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-174">Spécifie le groupe de graphiques.</span><span class="sxs-lookup"><span data-stu-id="8a309-174">Specifies the chart group.</span></span></param>
        <summary><span data-ttu-id="8a309-175">Sur un graphique 2D, renvoie un objet qui représente soit un seul groupe de graphiques à barres (un objet), soit une collection de groupes de graphiques en barres <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> (une collection).</span><span class="sxs-lookup"><span data-stu-id="8a309-175">On a 2-D chart, returns an object that represents either a single bar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the bar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.BarShape" />
      <MemberSignature Language="VB.NET" Value="Public Property BarShape As XlBarShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlBarShape BarShape { Microsoft::Office::Interop::Excel::XlBarShape get(); void set(Microsoft::Office::Interop::Excel::XlBarShape value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-176">Cette propriété renvoie ou définit la forme utilisée avec un graphique en histogrammes ou en barres 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-176">Returns or sets the shape used with the 3-D bar or column chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-177">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-177">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryLabelLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCategoryLabelLevel CategoryLabelLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCategoryLabelLevel CategoryLabelLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.CategoryLabelLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryLabelLevel As XlCategoryLabelLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCategoryLabelLevel CategoryLabelLevel { Microsoft::Office::Interop::Excel::XlCategoryLabelLevel get(); void set(Microsoft::Office::Interop::Excel::XlCategoryLabelLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCategoryLabelLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-178">Renvoie une constante faisant référence au niveau d’origine des étiquettes <see cref="T:Microsoft.Office.Interop.Excel.XlCategoryLabelLevel" /> de catégorie.</span><span class="sxs-lookup"><span data-stu-id="8a309-178">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCategoryLabelLevel" /> constant referring to the level of where the category labels are being sourced from.</span></span> <span data-ttu-id="8a309-179"><b>Integer</b> <b>(int</b> en C#) En lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="8a309-179"><b>Integer</b> (<b>int</b> in C#) Read/Write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8a309-180">S’il existe une hiérarchie, 0 fait référence au niveau parent le plus élevé, 1 fait référence à ses enfants, etc.</span><span class="sxs-lookup"><span data-stu-id="8a309-180">If there is a hierarchy, 0 refers to the most parent level, 1 refers to its children, and so on.</span></span> <span data-ttu-id="8a309-181">Ainsi, 0 est égal au premier niveau, 1 au deuxième niveau, 2 au troisième niveau, etc.</span><span class="sxs-lookup"><span data-stu-id="8a309-181">So, 0 equals the first level, 1 equals the second level, 2 equals the third level, and so on.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartArea ChartArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartArea ChartArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartArea As ChartArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartArea ^ ChartArea { Microsoft::Office::Interop::Excel::ChartArea ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-182">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> objet qui représente la zone de graphique complète du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-182">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> object that represents the complete chart area for the chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartColor">
      <MemberSignature Language="C#" Value="public object ChartColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartColor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChartColor { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-183">Renvoie ou définit une <b>propriété Integer</b> <b>(int</b> en C#) qui représente le modèle de couleurs du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-183">Returns or sets an <b>Integer</b> (<b>int</b> in C#) that represents the color scheme for the chart.</span></span> <span data-ttu-id="8a309-184">En lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="8a309-184">Read-write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartGroups">
      <MemberSignature Language="C#" Value="public object ChartGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-185">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-185">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-186">Le numéro de groupe de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-186">The chart group number.</span></span></param>
        <summary><span data-ttu-id="8a309-187">Renvoie un objet qui représente soit un seul groupe de graphiques (un objet), soit une collection de tous les groupes de graphiques du graphique <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> objet).</span><span class="sxs-lookup"><span data-stu-id="8a309-187">Returns an object that represents either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object).</span></span> <span data-ttu-id="8a309-188">La collection renvoyée inclut chaque type de groupe.</span><span class="sxs-lookup"><span data-stu-id="8a309-188">The returned collection includes every type of group.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-189">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-189">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-190">Nom ou numéro du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-190">The name or number of the chart.</span></span> <span data-ttu-id="8a309-191">Cet argument peut être un tableau pour spécifier plusieurs graphiques.</span><span class="sxs-lookup"><span data-stu-id="8a309-191">This argument can be an array to specify more than one chart.</span></span></param>
        <summary><span data-ttu-id="8a309-192">Renvoie un objet qui représente soit un seul graphique incorporé (un objet) soit une collection de tous les graphiques incorporés <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> (un <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> objet) sur la feuille.</span><span class="sxs-lookup"><span data-stu-id="8a309-192">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="8a309-193">Cette méthode n’est pas équivalente à la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Charts" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="8a309-193">This method isn't equivalent to the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Charts" /> property.</span></span> <span data-ttu-id="8a309-194">Elle renvoie des graphiques incorporé ; la propriété <b>Charts</b> renvoie des feuilles de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-194">This method returns embedded charts; the <b>Charts</b> property returns chart sheets.</span></span> <span data-ttu-id="8a309-195">Utilisez la <see cref="P:Microsoft.Office.Interop.Excel.ChartObject.Chart" /> propriété pour renvoyer <b>l’objet Chart</b> d’un graphique incorporé.</span><span class="sxs-lookup"><span data-stu-id="8a309-195">Use the <see cref="P:Microsoft.Office.Interop.Excel.ChartObject.Chart" /> property to return the <b>Chart</b> object for an embedded chart.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartStyle">
      <MemberSignature Language="C#" Value="public object ChartStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChartStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-196">Cette propriété renvoie ou définit le style de graphique pour le graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-196">Returns or sets the chart style for the chart.</span></span> <span data-ttu-id="8a309-197">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="8a309-197">Read/write.</span></span></summary>
        <value><span data-ttu-id="8a309-198"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="8a309-198"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="8a309-199">Vous pouvez utiliser un numéro entre 1 et 48 pour définir le style du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-199">You can use a number from 1 to 48 to set the chart style.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTitle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartTitle ChartTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartTitle ChartTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartTitle As ChartTitle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartTitle ^ ChartTitle { Microsoft::Office::Interop::Excel::ChartTitle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(81)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(81)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartTitle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-200">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> objet qui représente le titre du graphique spécifié.</span><span class="sxs-lookup"><span data-stu-id="8a309-200">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object that represents the title of the specified chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As XlChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartType ChartType { Microsoft::Office::Interop::Excel::XlChartType get(); void set(Microsoft::Office::Interop::Excel::XlChartType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-201">Renvoie ou définit le type de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-201">Returns or sets the chart type.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8a309-202">Certains types de graphique ne sont pas disponibles pour les rapports de graphique croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="8a309-202">Some chart types aren’t available for PivotChart reports.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartWizard">
      <MemberSignature Language="C#" Value="public void ChartWizard (object Source, object Gallery, object Format, object PlotBy, object CategoryLabels, object SeriesLabels, object HasLegend, object Title, object CategoryTitle, object ValueTitle, object ExtraTitle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChartWizard([in]object Source, [in]object Gallery, [in]object Format, [in]object PlotBy, [in]object CategoryLabels, [in]object SeriesLabels, [in]object HasLegend, [in]object Title, [in]object CategoryTitle, [in]object ValueTitle, [in]object ExtraTitle) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChartWizard (Optional Source As Object, Optional Gallery As Object, Optional Format As Object, Optional PlotBy As Object, Optional CategoryLabels As Object, Optional SeriesLabels As Object, Optional HasLegend As Object, Optional Title As Object, Optional CategoryTitle As Object, Optional ValueTitle As Object, Optional ExtraTitle As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="PlotBy" Type="System.Object" />
        <Parameter Name="CategoryLabels" Type="System.Object" />
        <Parameter Name="SeriesLabels" Type="System.Object" />
        <Parameter Name="HasLegend" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="CategoryTitle" Type="System.Object" />
        <Parameter Name="ValueTitle" Type="System.Object" />
        <Parameter Name="ExtraTitle" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="8a309-203">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-203">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-204">Plage qui contient les données source pour le nouveau graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-204">The range that contains the source data for the new chart.</span></span> <span data-ttu-id="8a309-205">Si cet argument est omis, Microsoft Excel modifie la feuille du graphique actif ou le graphique sélectionné sur la feuille de calcul active.</span><span class="sxs-lookup"><span data-stu-id="8a309-205">If this argument is omitted, Microsoft Excel edits the active chart sheet or the selected chart on the active worksheet.</span></span></param>
        <param name="Gallery"><span data-ttu-id="8a309-206">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-206">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span></span> <span data-ttu-id="8a309-207">Type de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-207">The chart type.</span></span></param>
        <param name="Format"><span data-ttu-id="8a309-208">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-208">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-209">Numéro d'option des formats automatiques intégrés.</span><span class="sxs-lookup"><span data-stu-id="8a309-209">The option number for the built-in autoformats.</span></span> <span data-ttu-id="8a309-210">Il peut s'agir d'un nombre compris entre 1 et 10, selon le type de galerie.</span><span class="sxs-lookup"><span data-stu-id="8a309-210">Can be a number from 1 through 10, depending on the gallery type.</span></span> <span data-ttu-id="8a309-211">Si cet argument est omis, Microsoft Excel choisit une valeur par défaut d'après le type de galerie et la source de données.</span><span class="sxs-lookup"><span data-stu-id="8a309-211">If this argument is omitted, Microsoft Excel chooses a default value based on the gallery type and data source.</span></span></param>
        <param name="PlotBy"><span data-ttu-id="8a309-212">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-212">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-213">Spécifie si les données de chaque série sont en lignes ou en colonnes.</span><span class="sxs-lookup"><span data-stu-id="8a309-213">Specifies whether the data for each series is in rows or columns.</span></span> <span data-ttu-id="8a309-214">Peut être l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constantes suivantes : <b>xlRows</b> ou <b>xlColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-214">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlRows</b> or <b>xlColumns</b>.</span></span></param>
        <param name="CategoryLabels"><span data-ttu-id="8a309-215">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-215">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-216">Nombre entier spécifiant le nombre de lignes ou de colonnes dans la plage source qui contient les étiquettes des abscisses.</span><span class="sxs-lookup"><span data-stu-id="8a309-216">An integer specifying the number of rows or columns within the source range that contain category labels.</span></span> <span data-ttu-id="8a309-217">Les valeurs autorisées sont comprises entre 0 (zéro) et le nombre maximal d'abscisses ou de séries correspondantes moins un.</span><span class="sxs-lookup"><span data-stu-id="8a309-217">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span></span></param>
        <param name="SeriesLabels"><span data-ttu-id="8a309-218">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-218">Optional <b>object</b>.</span></span> <span data-ttu-id="8a309-219">Nombre entier spécifiant le nombre de lignes ou de colonnes dans la plage source qui contient les étiquettes des séries.</span><span class="sxs-lookup"><span data-stu-id="8a309-219">An integer specifying the number of rows or columns within the source range that contain series labels.</span></span> <span data-ttu-id="8a309-220">Les valeurs autorisées sont comprises entre 0 (zéro) et le nombre maximal d'abscisses ou de séries correspondantes moins un.</span><span class="sxs-lookup"><span data-stu-id="8a309-220">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span></span></param>
        <param name="HasLegend"><span data-ttu-id="8a309-221">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-221">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-222"><b>True</b> pour inclure une légende.</span><span class="sxs-lookup"><span data-stu-id="8a309-222"><b>True</b> to include a legend.</span></span></param>
        <param name="Title"><span data-ttu-id="8a309-223">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-223">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-224">Texte du titre du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-224">The chart title text.</span></span></param>
        <param name="CategoryTitle"><span data-ttu-id="8a309-225">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-225">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-226">Texte du titre de l'axe des abscisses.</span><span class="sxs-lookup"><span data-stu-id="8a309-226">The category axis title text.</span></span></param>
        <param name="ValueTitle"><span data-ttu-id="8a309-227">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-227">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-228">Texte du titre de l'axe des ordonnées.</span><span class="sxs-lookup"><span data-stu-id="8a309-228">The value axis title text.</span></span></param>
        <param name="ExtraTitle"><span data-ttu-id="8a309-229">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-229">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-230">Titre de l'axe des séries pour des graphiques 3D ou titre du deuxième axe des ordonnées pour les graphiques 2D.</span><span class="sxs-lookup"><span data-stu-id="8a309-230">The series axis title for 3-D charts or the second value axis title for 2-D charts.</span></span></param>
        <summary><span data-ttu-id="8a309-231">Cette méthode modifie les propriétés d'un graphique déterminé.</span><span class="sxs-lookup"><span data-stu-id="8a309-231">Modifies the properties of the given chart.</span></span> <span data-ttu-id="8a309-232">Vous pouvez utiliser cette méthode pour mettre rapidement en forme un graphique sans définir individuellement toutes ses propriétés.</span><span class="sxs-lookup"><span data-stu-id="8a309-232">You can use this method to quickly format a chart without setting all the individual properties.</span></span> <span data-ttu-id="8a309-233">Cette méthode n’est pas interactive et ne modifie que les propriétés spécifiées.</span><span class="sxs-lookup"><span data-stu-id="8a309-233">This method is non-interactive, and it changes only the specified properties.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-234">Si elle est omise et que la sélection n’est pas un graphique incorporé dans la feuille de calcul active ou si la feuille active n’est pas un graphique existant, cette méthode échoue et une erreur se <paramref name="Source" /> produit.</span><span class="sxs-lookup"><span data-stu-id="8a309-234">If <paramref name="Source" /> is omitted and either the selection isn't an embedded chart on the active worksheet or the active sheet isn't an existing chart, this method fails and an error occurs.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-235">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-235">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary"><span data-ttu-id="8a309-236">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-236">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-237">Chaîne qui indique le nom de fichier du dictionnaire personnel à examiner si le mot est introuvable dans le dictionnaire principal.</span><span class="sxs-lookup"><span data-stu-id="8a309-237">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span></span> <span data-ttu-id="8a309-238">Si vous ne spécifiez pas cet argument, c'est le dictionnaire actuellement spécifié qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-238">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="IgnoreUppercase"><span data-ttu-id="8a309-239">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-239">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-240"><b>True</b> pour que Microsoft Excel ignore les mots en majuscules.</span><span class="sxs-lookup"><span data-stu-id="8a309-240"><b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span></span> <span data-ttu-id="8a309-241"><b>False</b> pour que Microsoft Excel vérifie l'orthographe des mots en majuscules.</span><span class="sxs-lookup"><span data-stu-id="8a309-241"><b>False</b> to have Microsoft Excel check words that are all uppercase.</span></span> <span data-ttu-id="8a309-242">Si cet argument est omis, ce sont les paramètres en vigueur qui sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="8a309-242">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="AlwaysSuggest"><span data-ttu-id="8a309-243">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-243">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-244"><b>True</b> pour que Microsoft Excel affiche une liste de suggestions lorsqu'un mot mal orthographié est détecté.</span><span class="sxs-lookup"><span data-stu-id="8a309-244"><b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span></span> <span data-ttu-id="8a309-245"><b>False</b> pour que Microsoft Excel attende que vous tapiez le mot correctement orthographié.</span><span class="sxs-lookup"><span data-stu-id="8a309-245"><b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span></span> <span data-ttu-id="8a309-246">Si cet argument est omis, ce sont les paramètres en vigueur qui sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="8a309-246">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="SpellLang"><span data-ttu-id="8a309-247">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-247">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-248">Langue du dictionnaire utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-248">The language of the dictionary being used.</span></span> <span data-ttu-id="8a309-249">Peut être l’une des <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> valeurs utilisées par la <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="8a309-249">Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span></span></param>
        <summary><span data-ttu-id="8a309-250">Vérifie l’orthographe d’un objet et affiche la boîte de dialogue Orthographe</span><span class="sxs-lookup"><span data-stu-id="8a309-250">Checks the spelling of an object and displays the Spelling dialog box</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchColorStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchColorStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearToMatchColorStyle() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ClearToMatchColorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearToMatchColorStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearToMatchColorStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3053)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a309-251">Cette fonction permet d’effacer toutes les couleurs du graphique spécifié qui ne suivent pas le style de couleur appliqué au graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-251">Clears all colors on the specified chart that do not follow the color style applied to the chart.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-252">Utilisez cette méthode pour réinitialiser la mise en forme des couleurs du graphique sur le style de couleur appliqué au graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-252">Use this method to reset all the chart color formatting to the color style applied to the chart.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearToMatchStyle() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ClearToMatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearToMatchStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearToMatchStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a309-253">Cette méthode redéfinit la mise en forme automatique des éléments de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-253">Clears the chart elements formatting to automatic.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-254">Utilisez cette méthode pour rétablir la mise en forme automatique des éléments de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-254">Use this method to reset the chart elements formatting to automatic.</span></span>    <span data-ttu-id="8a309-255">Si vous utilisez cette méthode sur un graphique, toute la mise en forme (y compris les ajouts) sera rétablie.</span><span class="sxs-lookup"><span data-stu-id="8a309-255">If you use this method on a chart, all formatting (including overrides) will be reset.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-256">Cette propriété renvoie le nom de code de l'objet.</span><span class="sxs-lookup"><span data-stu-id="8a309-256">Returns the code name for the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8a309-257">La valeur que vous voyez dans la cellule à droite de (Nom) dans la fenêtre Propriétés est le nom de code de l’objet sélectionné.</span><span class="sxs-lookup"><span data-stu-id="8a309-257">The value that you see in the cell to the right of (Name) in the Properties window is the code name of the selected object.</span></span> <span data-ttu-id="8a309-258">Au moment de la création, vous pouvez changer le nom de code d'un objet en modifiant cette valeur.</span><span class="sxs-lookup"><span data-stu-id="8a309-258">At design time, you can change the code name of an object by changing this value.</span></span> <span data-ttu-id="8a309-259">Il est toutefois impossible de modifier cette propriété par programmation au moment de l'exécution.</span><span class="sxs-lookup"><span data-stu-id="8a309-259">You cannot programmatically change this property at run time.</span></span></para>
          <para><span data-ttu-id="8a309-260">Le nom de code d'un objet peut être utilisé à la place d'une expression qui renvoie l'objet.</span><span class="sxs-lookup"><span data-stu-id="8a309-260">The code name for an object can be used in place of an expression that returns the object.</span></span> <span data-ttu-id="8a309-261">Une feuille peut avoir un nom différent du nom de code.</span><span class="sxs-lookup"><span data-stu-id="8a309-261">It’s possible for the sheet name to be different from the code name.</span></span> <span data-ttu-id="8a309-262">Lorsque vous créez une feuille, le nom de feuille et le nom de code sont identiques, mais la modification du nom de la feuille ne modifie pas le nom de code et la modification du nom de code ne modifie pas le nom de la feuille.</span><span class="sxs-lookup"><span data-stu-id="8a309-262">When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name doesn’t change the sheet name.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Column3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Column3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Column3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-263">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objet qui représente le groupe de graphiques en colonnes sur un graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-263">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the column chart group on a 3-D chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGroups">
      <MemberSignature Language="C#" Value="public object ColumnGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ColumnGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ColumnGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ColumnGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-264">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-264">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-265">Spécifie le groupe de graphiques.</span><span class="sxs-lookup"><span data-stu-id="8a309-265">Specifies the chart group.</span></span></param>
        <summary><span data-ttu-id="8a309-266">Sur un graphique 2D, renvoie un objet qui représente soit un seul groupe de graphiques en colonnes (un objet), soit une collection de groupes de graphiques en <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> colonnes <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> (une collection).</span><span class="sxs-lookup"><span data-stu-id="8a309-266">On a 2-D chart, returns an object that represents either a single column chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the column chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="8a309-267">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-267">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-268">Feuille avant laquelle la feuille copiée sera placée.</span><span class="sxs-lookup"><span data-stu-id="8a309-268">The sheet before which the copied sheet will be placed.</span></span> <span data-ttu-id="8a309-269">Vous ne pouvez pas <paramref name="Before" /> spécifier si vous spécifiez <paramref name="After" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-269">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="8a309-270">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-270">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-271">Feuille après laquelle la feuille copiée sera placée.</span><span class="sxs-lookup"><span data-stu-id="8a309-271">The sheet after which the copied sheet will be placed.</span></span> <span data-ttu-id="8a309-272">Vous ne pouvez pas <paramref name="After" /> spécifier si vous spécifiez <paramref name="Before" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-272">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="8a309-273">Copie la feuille à un autre emplacement dans le classeur.</span><span class="sxs-lookup"><span data-stu-id="8a309-273">Copies the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-274">Si vous ne spécifiez pas l’une ou l’autre des deux, Microsoft Excel crée un nouveau workbook qui <paramref name="Before" /> contient la feuille <paramref name="After" /> copiée.</span><span class="sxs-lookup"><span data-stu-id="8a309-274">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyChartBuild">
      <MemberSignature Language="C#" Value="public void CopyChartBuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyChartBuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CopyChartBuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyChartBuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyChartBuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a309-275">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-275">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public void CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture, Optional Size As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
      </Parameters>
      <Docs>
        <param name="Appearance"><span data-ttu-id="8a309-276">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-276">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span></span> <span data-ttu-id="8a309-277">Spécifie la manière dont l’image doit être copiée.</span><span class="sxs-lookup"><span data-stu-id="8a309-277">Specifies how the picture should be copied.</span></span></param>
        <param name="Format"><span data-ttu-id="8a309-278">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-278">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span></span> <span data-ttu-id="8a309-279">Format de l’image.</span><span class="sxs-lookup"><span data-stu-id="8a309-279">The format of the picture.</span></span></param>
        <param name="Size"><span data-ttu-id="8a309-280">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-280">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span></span> <span data-ttu-id="8a309-281">Taille de l'image copiée lorsque l'objet est un graphique sur une feuille de graphique (pas incorporée dans une feuille de calcul).</span><span class="sxs-lookup"><span data-stu-id="8a309-281">The size of the copied picture when the object is a chart on a chart sheet (not embedded on a worksheet).</span></span></param>
        <summary><span data-ttu-id="8a309-282">Copie l'objet sélectionné dans le Presse-papiers, sous forme d'image.</span><span class="sxs-lookup"><span data-stu-id="8a309-282">Copies the selected object to the Clipboard as a picture.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Corners">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Corners Corners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Corners Corners" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Corners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Corners As Corners" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Corners ^ Corners { Microsoft::Office::Interop::Excel::Corners ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(79)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(79)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Corners</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-283">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> objet qui représente les coins d’un graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-283">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> object that represents the corners of a 3-D chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreatePublisher([in]object Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size, [in]object ContainsPICT, [in]object ContainsBIFF, [in]object ContainsRTF, [in]object ContainsVALU) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreatePublisher (Optional Edition As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Size As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ContainsPICT As Object, Optional ContainsBIFF As Object, Optional ContainsRTF As Object, Optional ContainsVALU As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(458)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition"><span data-ttu-id="8a309-284">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-284">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Appearance"><span data-ttu-id="8a309-285">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-285">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Size"><span data-ttu-id="8a309-286">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-286">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsPICT"><span data-ttu-id="8a309-287">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-287">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsBIFF"><span data-ttu-id="8a309-288">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-288">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsRTF"><span data-ttu-id="8a309-289">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-289">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsVALU"><span data-ttu-id="8a309-290">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-290">This parameter is for Macintosh only and should not be used.</span></span></param>
        <summary><span data-ttu-id="8a309-291">Réservé à un usage interne. Ce membre est uniquement pour Macintosh et ne doit pas être utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-291">Reserved for internal use.This member is for Macintosh only and should not be used.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-292">Renvoie une constante dans <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> l’éumération qui indique l’application dans laquelle cet objet a été créé.</span><span class="sxs-lookup"><span data-stu-id="8a309-292">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span></span> <span data-ttu-id="8a309-293">Si l'objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, qui équivaut au nombre hexadécimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="8a309-293">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="8a309-294">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, dans lequel chaque application possède un code de créateur à quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="8a309-294">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="8a309-295">Par exemple, Microsoft Excel possède le code de créateur XCEL.</span><span class="sxs-lookup"><span data-stu-id="8a309-295">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataTable DataTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataTable DataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DataTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTable As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DataTable ^ DataTable { Microsoft::Office::Interop::Excel::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-296">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> objet qui représente la table de données du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-296">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object that represents the chart data table.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a309-297">Supprime l'objet.</span><span class="sxs-lookup"><span data-stu-id="8a309-297">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteHiddenContent">
      <MemberSignature Language="C#" Value="public void DeleteHiddenContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteHiddenContent() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DeleteHiddenContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteHiddenContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteHiddenContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3051)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthPercent">
      <MemberSignature Language="C#" Value="public int DepthPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DepthPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DepthPercent" />
      <MemberSignature Language="VB.NET" Value="Public Property DepthPercent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DepthPercent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-298">Renvoie ou définit la profondeur d’un graphique 3D sous forme d’un pourcentage de la largeur du graphique (compris entre 20 et 2000 %).</span><span class="sxs-lookup"><span data-stu-id="8a309-298">Returns or sets the depth of a 3-D chart as a percentage of the chart width (between 20 and 2000 percent).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deselect">
      <MemberSignature Language="C#" Value="public void Deselect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deselect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Deselect" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deselect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deselect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1120)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a309-299">Cette méthode annule la sélection du graphique spécifié.</span><span class="sxs-lookup"><span data-stu-id="8a309-299">Cancels the selection for the specified chart.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayBlanksAs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DisplayBlanksAs" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayBlanksAs As XlDisplayBlanksAs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDisplayBlanksAs DisplayBlanksAs { Microsoft::Office::Interop::Excel::XlDisplayBlanksAs get(); void set(Microsoft::Office::Interop::Excel::XlDisplayBlanksAs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayBlanksAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-300">Renvoie ou définit la façon dont les cellules vides sont tracées sur un graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-300">Returns or sets the way that blank cells are plotted on a chart.</span></span> <span data-ttu-id="8a309-301">Il peut s’agit de l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> constantes suivantes : <b>xlNotPlotted,</b> <b>xlInterpolated</b>ou <b>xlZero</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-301">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> constants: <b>xlNotPlotted</b>, <b>xlInterpolated</b>, or <b>xlZero</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoughnutGroups">
      <MemberSignature Language="C#" Value="public object DoughnutGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DoughnutGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DoughnutGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoughnutGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-302">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-302">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-303">Spécifie le groupe de graphiques.</span><span class="sxs-lookup"><span data-stu-id="8a309-303">Specifies the chart group.</span></span></param>
        <summary><span data-ttu-id="8a309-304">Sur un graphique 2D, renvoie un objet qui représente soit un seul groupe de graphiques en doughnuts (un objet), soit une collection de groupes de graphiques en <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> doughnuts <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> (une collection).</span><span class="sxs-lookup"><span data-stu-id="8a309-304">On a 2-D chart, returns an object that represents either a single doughnut chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the doughnut chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-305">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="8a309-305">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-306">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-306">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-307">Cette propriété renvoie la distance verticale (en points) du bord du texte de délimitation de zone vers l’emplacement vers lequel la ligne de légende rejoint la zone de texte pour une légende avec une valeur de déroulement défini explicitement.</span><span class="sxs-lookup"><span data-stu-id="8a309-307">For callouts with an explicitly set drop value, this property returns the vertical distance (in points) from the edge of the text bounding box to the place where the callout line attaches to the text box.</span></span> <span data-ttu-id="8a309-308">En lecture seule <b>unique</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-308">Read-only <b>Single</b>.</span></span></summary>
        <returns><span data-ttu-id="8a309-309">Renvoie <see cref="T:System.Object" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-309">Returns <see cref="T:System.Object" />.</span></span></returns>
        <remarks><para><span data-ttu-id="8a309-310">Cette distance se mesure à partir de la partie supérieure de la zone de texte, à moins que la propriété <b>AutoAttach</b> n'ait la valeur <b>True</b> et que la zone de texte soit à gauche de l'origine de la ligne de légende (position que désigne la légende). Dans ce dernier cas, la distance de jonction se mesure à partir de la partie inférieure de la zone de texte.</span><span class="sxs-lookup"><span data-stu-id="8a309-310">This distance is measured from the top of the text box unless the <b>AutoAttach</b> property is set to <b>True</b> and the text box is to the left of the origin of the callout line (the place that the callout points to), in which case the drop distance is measured from the bottom of the text box.</span></span> </para>
          <para><span data-ttu-id="8a309-311">Utilisez la <see cref="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomDrop(System.Single)" /> méthode pour définir la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8a309-311">Use the <see cref="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomDrop(System.Single)" /> method to set the value of this property.</span></span></para>
          <para> </para>
          <para><span data-ttu-id="8a309-312">La valeur de cette propriété reflète précisément la position de la ligne de texte uniquement si la ligne de la ligne de texte a une valeur de déplacement explicitement définie, c’est-à-dire, si la valeur de la propriété est <see cref="P:Microsoft.Office.Interop.Excel.CalloutFormat.DropType" /> <b>msoCalloutDropCustom</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-312">The value of this property accurately reflects the position of the callout line attachment to the text box only if the callout has an explicitly set drop value — that is, if the value of the <see cref="P:Microsoft.Office.Interop.Excel.CalloutFormat.DropType" /> property is <b>msoCalloutDropCustom</b>.</span></span></para>
          <para> </para></remarks>
        <example><para><span data-ttu-id="8a309-313">Cet exemple montre comment remplacer le déroulement personnalisé pour la forme 1 de myDocument par l’un des deux déroulements prédéfinis, selon que la valeur du déroulement personnalisé est supérieure ou inférieure à la moitié de la hauteur de la zone de texte de la légende.</span><span class="sxs-lookup"><span data-stu-id="8a309-313">This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box.</span></span> <span data-ttu-id="8a309-314">Pour que cet exemple fonctionne, Shape1 doit être une légende.</span><span class="sxs-lookup"><span data-stu-id="8a309-314">For the example to work, shape one must be a callout.</span></span></para>
          <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="8a309-315">Cet exemple montre comment remplacer le déroulement personnalisé pour la forme 1 de myDocument par l’un des deux déroulements prédéfinis, selon que la valeur du déroulement personnalisé est supérieure ou inférieure à la moitié de la hauteur de la zone de texte de la légende.</span><span class="sxs-lookup"><span data-stu-id="8a309-315">This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box.</span></span> <span data-ttu-id="8a309-316">Pour que cet exemple fonctionne, Shape1 doit être une légende.</span><span class="sxs-lookup"><span data-stu-id="8a309-316">For the example to work, shape one must be a callout.</span></span></para>
          <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="8a309-317">Cet exemple montre comment remplacer le déroulement personnalisé pour la forme 1 de myDocument par l’un des deux déroulements prédéfinis, selon que la valeur du déroulement personnalisé est supérieure ou inférieure à la moitié de la hauteur de la zone de texte de la légende.</span><span class="sxs-lookup"><span data-stu-id="8a309-317">This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box.</span></span> <span data-ttu-id="8a309-318">Pour que cet exemple fonctionne, Shape1 doit être une légende.</span><span class="sxs-lookup"><span data-stu-id="8a309-318">For the example to work, shape one must be a callout.</span></span></para>
          <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="Dummy24">
      <MemberSignature Language="C#" Value="public bool Dummy24 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy24" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Dummy24" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy24 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy24 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy25">
      <MemberSignature Language="C#" Value="public bool Dummy25 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy25" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Dummy25" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy25 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy25 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public int Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Elevation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Elevation" />
      <MemberSignature Language="VB.NET" Value="Public Property Elevation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Elevation { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-319">Renvoie ou définit l’élévation de l’affichage graphique 3D en degrés.</span><span class="sxs-lookup"><span data-stu-id="8a309-319">Returns or sets the elevation of the 3-D chart view in degrees.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8a309-320">L’élévation du graphique est la hauteur à laquelle vous affichez le graphique en degrés.</span><span class="sxs-lookup"><span data-stu-id="8a309-320">The chart elevation is the height at which you view the chart in degrees.</span></span> <span data-ttu-id="8a309-321">Pour la plupart des types de graphiques, la valeur par défaut est 15 degrés.</span><span class="sxs-lookup"><span data-stu-id="8a309-321">The default is 15 for most chart types.</span></span> <span data-ttu-id="8a309-322">La valeur de cette propriété doit être comprise entre -90 et 90 degrés, sauf pour les graphiques à barres où elle doit être comprise entre 0 et 44 degrés.</span><span class="sxs-lookup"><span data-stu-id="8a309-322">The value of this property must be between -90 and 90, except for 3-D bar charts, where it must be between 0 and 44.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="8a309-323">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-323">Required <b>Object</b>.</span></span> <span data-ttu-id="8a309-324">Nom de l'objet, selon les conventions de dénomination de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="8a309-324">The name of the object, using the naming convention of Microsoft Excel.</span></span></param>
        <summary><span data-ttu-id="8a309-325">Cette méthode convertit un nom Microsoft Excel en un objet ou une valeur.</span><span class="sxs-lookup"><span data-stu-id="8a309-325">Converts a Microsoft Excel name to an object or a value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public bool Export (string Filename, object FilterName, object Interactive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Export([in]string Filename, [in]object FilterName, [in]object Interactive) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Export(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (Filename As String, Optional FilterName As Object, Optional Interactive As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FilterName" Type="System.Object" />
        <Parameter Name="Interactive" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="8a309-326">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="8a309-326">Required <b>String</b>.</span></span> <span data-ttu-id="8a309-327">Nom du fichier exporté.</span><span class="sxs-lookup"><span data-stu-id="8a309-327">The name of the exported file.</span></span></param>
        <param name="FilterName"><span data-ttu-id="8a309-328">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-328">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-329">Nom du filtre graphique, indépendamment de la langue, tel qu'il apparaît dans le Registre.</span><span class="sxs-lookup"><span data-stu-id="8a309-329">The language-independent name of the graphic filter as it appears in the registry.</span></span></param>
        <param name="Interactive"><span data-ttu-id="8a309-330">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-330">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-331"><b>True</b> pour afficher la boîte de dialogue qui contient les options spécifiques au filtre.</span><span class="sxs-lookup"><span data-stu-id="8a309-331"><b>True</b> to display the dialog box that contains the filter-specific options.</span></span> <span data-ttu-id="8a309-332">Si cet argument est <b>False</b>, Microsoft Excel utilise les valeurs par défaut pour le filtre.</span><span class="sxs-lookup"><span data-stu-id="8a309-332">If this argument is <b>False</b>, Microsoft Excel uses the default values for the filter.</span></span> <span data-ttu-id="8a309-333">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-333">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="8a309-334">Exporte le graphique dans un format graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-334">Exports the chart in a graphic format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="8a309-335">Type de format de fichier vers lequel exporter.</span><span class="sxs-lookup"><span data-stu-id="8a309-335">The type of file format to export to.</span></span></param>
        <param name="Filename"><span data-ttu-id="8a309-336">Nom du fichier à enregistrer.</span><span class="sxs-lookup"><span data-stu-id="8a309-336">The file name of the file to be saved.</span></span> <span data-ttu-id="8a309-337">Vous pouvez inclure un chemin d’accès complet ou short_Excel2007 enregistrer le fichier dans le dossier actuel.</span><span class="sxs-lookup"><span data-stu-id="8a309-337">You can include a full path, or short_Excel2007 saves the file in the current folder.</span></span></param>
        <param name="Quality"><span data-ttu-id="8a309-338">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-338">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span></span> <span data-ttu-id="8a309-339">Spécifie la qualité du fichier publié.</span><span class="sxs-lookup"><span data-stu-id="8a309-339">Specifies the quality of the published file.</span></span></param>
        <param name="IncludeDocProperties"><span data-ttu-id="8a309-340"><b>True</b> pour inclure les propriétés du document ; sinon <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-340"><b>True</b> to include the document properties; otherwise <b>False</b>.</span></span></param>
        <param name="IgnorePrintAreas"><span data-ttu-id="8a309-341"><b>True</b> pour ignorer les zones d’impression définies lors de la publication ; sinon <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-341"><b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span></span></param>
        <param name="From"><span data-ttu-id="8a309-342">Numéro de la page à partir de laquelle commence la publication.</span><span class="sxs-lookup"><span data-stu-id="8a309-342">The number of the page at which to start publishing.</span></span> <span data-ttu-id="8a309-343">Si cet argument est omis, la publication commence à la première page.</span><span class="sxs-lookup"><span data-stu-id="8a309-343">If this argument is omitted, publishing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="8a309-344">Numéro de la dernière page à publier.</span><span class="sxs-lookup"><span data-stu-id="8a309-344">The number of the last page to publish.</span></span> <span data-ttu-id="8a309-345">Si cet argument est omis, la publication se termine à la dernière page.</span><span class="sxs-lookup"><span data-stu-id="8a309-345">If this argument is omitted, publishing ends with the last page.</span></span></param>
        <param name="OpenAfterPublish"><span data-ttu-id="8a309-346"><b>True</b> pour afficher le fichier dans la visionneuse après sa publication ; sinon, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-346"><b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span></span></param>
        <param name="FixedFormatExtClassPtr"><span data-ttu-id="8a309-347">Pointeur vers la classe FixedFormatExt.</span><span class="sxs-lookup"><span data-stu-id="8a309-347">Pointer to the FixedFormatExt class.</span></span></param>
        <summary><span data-ttu-id="8a309-348">Cette méthode réalise une exportation dans un fichier avec le format spécifié.</span><span class="sxs-lookup"><span data-stu-id="8a309-348">Exports to a file of the specified format.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-p174">Cette méthode prend également en charge l’initialisation d’une macro complémentaire pour exporter un fichier dans un fichier au format fixé. Par exemple, Excel effectue la conversion de format s’il existe des convertisseurs. La conversion est généralement décidée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="8a309-p174">This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Floor Floor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Floor Floor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Floor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Floor As Floor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Floor ^ Floor { Microsoft::Office::Interop::Excel::Floor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(83)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(83)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Floor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-352">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> objet qui représente le plancher du graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-352">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullSeriesCollection">
      <MemberSignature Language="C#" Value="public object FullSeriesCollection (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FullSeriesCollection([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.FullSeriesCollection(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FullSeriesCollection (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3047)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-353">Numéro indexé de l’objet <b>Series</b> filtré.</span><span class="sxs-lookup"><span data-stu-id="8a309-353">The indexed number of the filtered out <b>Series</b> object.</span></span></param>
        <summary><span data-ttu-id="8a309-354">Permet de récupérer la série filtrée spécifiée par l’argument Index.</span><span class="sxs-lookup"><span data-stu-id="8a309-354">Enables retrieving the filtered out series specified by the Index argument.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="8a309-355">
            <b>Les</b> objets series dans les lignes ou colonnes masquées n’apparaissent pas dans la collection de séries active, sauf si l’utilisateur a activé l’option Afficher les données dans les lignes et <b>colonnes</b> masquées dans la boîte de dialogue Sélectionner des données.</span><span class="sxs-lookup"><span data-stu-id="8a309-355">
            <b>Series</b> objects in hidden rows or columns do not appear in the current series collection unless the user has enabled the <b>Show data in hidden rows and columns</b> option in the Select Data dialog.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GapDepth">
      <MemberSignature Language="C#" Value="public int GapDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GapDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.GapDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property GapDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GapDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-356">Renvoie ou définit la distance entre les séries de données dans un graphique 3D sous la mesure d’un pourcentage de la largeur de la marque.</span><span class="sxs-lookup"><span data-stu-id="8a309-356">Returns or sets the distance between the data series in a 3-D chart as a percentage of the marker width.</span></span> <span data-ttu-id="8a309-357">La valeur de cette propriété doit être comprise entre 0 et 500 %.</span><span class="sxs-lookup"><span data-stu-id="8a309-357">The value of this property must be between 0 and 500.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElement">
      <MemberSignature Language="C#" Value="public void GetChartElement (int x, int y, ref int ElementID, ref int Arg1, ref int Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetChartElement([in]int32 x, [in]int32 y, [in]int32&amp; ElementID, [in]int32&amp; Arg1, [in]int32&amp; Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetChartElement (x As Integer, y As Integer, ByRef ElementID As Integer, ByRef Arg1 As Integer, ByRef Arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetChartElement(int x, int y, int % ElementID, int % Arg1, int % Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1409)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ElementID" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg1" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg2" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="8a309-358">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="8a309-358">Required <b>Integer</b>.</span></span> <span data-ttu-id="8a309-359">Coordonnée X de l'élément graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-359">The X coordinate of the chart element.</span></span></param>
        <param name="y"><span data-ttu-id="8a309-360">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="8a309-360">Required <b>Integer</b>.</span></span> <span data-ttu-id="8a309-361">Coordonnée Y de l'élément graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-361">The Y coordinate of the chart element.</span></span></param>
        <param name="ElementID"><span data-ttu-id="8a309-362">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="8a309-362">Required <b>Integer</b>.</span></span> <span data-ttu-id="8a309-363">Lorsque la méthode renvoie, cet argument contient la valeur de l’élément <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> de graphique aux coordonnées spécifiées.</span><span class="sxs-lookup"><span data-stu-id="8a309-363">When the method returns, this argument contains the <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> value of the chart element at the specified coordinates.</span></span> <span data-ttu-id="8a309-364">Pour plus d'informations, voir la section Notes.</span><span class="sxs-lookup"><span data-stu-id="8a309-364">For more information, see the Remarks section.</span></span></param>
        <param name="Arg1"><span data-ttu-id="8a309-365">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="8a309-365">Required <b>Integer</b>.</span></span> <span data-ttu-id="8a309-366">Lors du renvoi des résultats de la méthode, cet argument contient les informations concernant l’élément graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-366">When the method returns, this argument contains information related to the chart element.</span></span> <span data-ttu-id="8a309-367">Pour plus d’informations, voir la section « Remarques».</span><span class="sxs-lookup"><span data-stu-id="8a309-367">For more information, see the Remarks section.</span></span></param>
        <param name="Arg2"><span data-ttu-id="8a309-368">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="8a309-368">Required <b>Integer</b>.</span></span> <span data-ttu-id="8a309-369">Lors du renvoi des résultats de la méthode, cet argument contient les informations concernant l’élément graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-369">When the method returns, this argument contains information related to the chart element.</span></span> <span data-ttu-id="8a309-370">Pour plus d’informations, voir la section « Remarques».</span><span class="sxs-lookup"><span data-stu-id="8a309-370">For more information, see the Remarks section.</span></span></param>
        <summary><span data-ttu-id="8a309-p181">Cette méthode renvoie les informations concernant l'élément graphique situé aux coordonnées X et Y spécifiées. Cette méthode est particulière en ce sens que vous ne spécifiez que les valeurs des deux premiers arguments. Microsoft Excel complète les autres arguments et c'est votre code qui examine ces valeurs lorsque la méthode renvoie son résultat.</span><span class="sxs-lookup"><span data-stu-id="8a309-p181">Returns information about the chart element at specified X and Y coordinates. This method is unusual in that you specify values for only the first two arguments. Microsoft Excel fills in the other arguments, and your code should examine those values when the method returns.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-374">La valeur de l’après-retour de la méthode détermine si et contient des informations, comme <paramref name="ElementID" /> indiqué dans le tableau <paramref name="Arg1" /> <paramref name="Arg2" /> suivant.</span><span class="sxs-lookup"><span data-stu-id="8a309-374">The value of <paramref name="ElementID" /> after the method returns determines whether <paramref name="Arg1" /> and <paramref name="Arg2" /> contain any information, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="8a309-375">
                <b>xlAxis</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-375">
                <b>xlAxis</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-376">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-376">AxisIndex</span></span></description>
              <description><span data-ttu-id="8a309-377">AxisType</span><span class="sxs-lookup"><span data-stu-id="8a309-377">AxisType</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-378">
                <b>xlAxisTitle</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-378">
                <b>xlAxisTitle</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-379">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-379">AxisIndex</span></span></description>
              <description><span data-ttu-id="8a309-380">AxisType</span><span class="sxs-lookup"><span data-stu-id="8a309-380">AxisType</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-381">
                <b>xlDisplayUnitLabel</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-381">
                <b>xlDisplayUnitLabel</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-382">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-382">AxisIndex</span></span></description>
              <description><span data-ttu-id="8a309-383">AxisType</span><span class="sxs-lookup"><span data-stu-id="8a309-383">AxisType</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-384">
                <b>xlMajorGridlines</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-384">
                <b>xlMajorGridlines</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-385">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-385">AxisIndex</span></span></description>
              <description><span data-ttu-id="8a309-386">AxisType</span><span class="sxs-lookup"><span data-stu-id="8a309-386">AxisType</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-387">
                <b>xlMinorGridlines</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-387">
                <b>xlMinorGridlines</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-388">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-388">AxisIndex</span></span></description>
              <description><span data-ttu-id="8a309-389">AxisType</span><span class="sxs-lookup"><span data-stu-id="8a309-389">AxisType</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-390">
                <b>xlPivotChartDropZone</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-390">
                <b>xlPivotChartDropZone</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-391">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="8a309-391">DropZoneType</span></span></description>
              <description><span data-ttu-id="8a309-392">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-392">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-393">
                <b>xlPivotChartFieldButton</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-393">
                <b>xlPivotChartFieldButton</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-394">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="8a309-394">DropZoneType</span></span></description>
              <description><span data-ttu-id="8a309-395">PivotFieldIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-395">PivotFieldIndex</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-396">
                <b>xlDownBars</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-396">
                <b>xlDownBars</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-397">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-397">GroupIndex</span></span></description>
              <description><span data-ttu-id="8a309-398">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-398">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-399">
                <b>xlDropLines</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-399">
                <b>xlDropLines</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-400">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-400">GroupIndex</span></span></description>
              <description><span data-ttu-id="8a309-401">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-401">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-402">
                <b>xlHiLoLines</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-402">
                <b>xlHiLoLines</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-403">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-403">GroupIndex</span></span></description>
              <description><span data-ttu-id="8a309-404">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-404">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-405">
                <b>xlRadarAxisLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-405">
                <b>xlRadarAxisLabels</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-406">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-406">GroupIndex</span></span></description>
              <description><span data-ttu-id="8a309-407">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-407">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-408">
                <b>xlSeriesLines</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-408">
                <b>xlSeriesLines</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-409">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-409">GroupIndex</span></span></description>
              <description><span data-ttu-id="8a309-410">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-410">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-411">
                <b>xlUpBars</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-411">
                <b>xlUpBars</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-412">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-412">GroupIndex</span></span></description>
              <description><span data-ttu-id="8a309-413">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-413">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-414">
                <b>xlChartArea</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-414">
                <b>xlChartArea</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-415">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-415">None</span></span></description>
              <description><span data-ttu-id="8a309-416">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-416">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-417">
                <b>xlChartTitle</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-417">
                <b>xlChartTitle</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-418">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-418">None</span></span></description>
              <description><span data-ttu-id="8a309-419">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-419">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-420">
                <b>xlCorners</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-420">
                <b>xlCorners</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-421">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-421">None</span></span></description>
              <description><span data-ttu-id="8a309-422">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-422">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-423">
                <b>xlDataTable</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-423">
                <b>xlDataTable</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-424">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-424">None</span></span></description>
              <description><span data-ttu-id="8a309-425">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-425">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-426">
                <b>xlFloor</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-426">
                <b>xlFloor</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-427">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-427">None</span></span></description>
              <description><span data-ttu-id="8a309-428">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-428">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-429">
                <b>xlLegend</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-429">
                <b>xlLegend</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-430">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-430">None</span></span></description>
              <description><span data-ttu-id="8a309-431">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-431">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-432">
                <b>xlNothing</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-432">
                <b>xlNothing</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-433">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-433">None</span></span></description>
              <description><span data-ttu-id="8a309-434">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-434">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-435">
                <b>xlPlotArea</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-435">
                <b>xlPlotArea</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-436">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-436">None</span></span></description>
              <description><span data-ttu-id="8a309-437">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-437">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-438">
                <b>xlWalls</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-438">
                <b>xlWalls</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-439">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-439">None</span></span></description>
              <description><span data-ttu-id="8a309-440">Aucun</span><span class="sxs-lookup"><span data-stu-id="8a309-440">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-441">
                <b>xlDataLabel</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-441">
                <b>xlDataLabel</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-442">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-442">SeriesIndex</span></span></description>
              <description><span data-ttu-id="8a309-443">PointIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-443">PointIndex</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-444">
                <b>xlErrorBars</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-444">
                <b>xlErrorBars</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-445">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-445">SeriesIndex</span></span></description>
              <description><span data-ttu-id="8a309-446">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-446">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-447">
                <b>xlLegendEntry</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-447">
                <b>xlLegendEntry</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-448">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-448">SeriesIndex</span></span></description>
              <description><span data-ttu-id="8a309-449">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-449">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-450">
                <b>xlLegendKey</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-450">
                <b>xlLegendKey</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-451">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-451">SeriesIndex</span></span></description>
              <description><span data-ttu-id="8a309-452">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-452">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-453">
                <b>xlSeries</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-453">
                <b>xlSeries</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-454">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-454">SeriesIndex</span></span></description>
              <description><span data-ttu-id="8a309-455">PointIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-455">PointIndex</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-456">
                <b>xlShape</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-456">
                <b>xlShape</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-457">ShapeIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-457">ShapeIndex</span></span></description>
              <description><span data-ttu-id="8a309-458">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-458">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-459">
                <b>xlTrendline</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-459">
                <b>xlTrendline</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-460">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-460">SeriesIndex</span></span></description>
              <description><span data-ttu-id="8a309-461">TrendLineIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-461">TrendLineIndex</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-462">
                <b>xlXErrorBars</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-462">
                <b>xlXErrorBars</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-463">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-463">SeriesIndex</span></span></description>
              <description><span data-ttu-id="8a309-464">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-464">None</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-465">
                <b>xlYErrorBars</b>
              </span><span class="sxs-lookup"><span data-stu-id="8a309-465">
                <b>xlYErrorBars</b>
              </span></span></term>
              <description><span data-ttu-id="8a309-466">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-466">SeriesIndex</span></span></description>
              <description><span data-ttu-id="8a309-467">Aucune</span><span class="sxs-lookup"><span data-stu-id="8a309-467">None</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="8a309-468">Le tableau suivant décrit la signification du retour <paramref name="Arg1" /> <paramref name="Arg2" /> de la méthode.</span><span class="sxs-lookup"><span data-stu-id="8a309-468">The following table describes the meaning of <paramref name="Arg1" /> and <paramref name="Arg2" /> after the method returns.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="8a309-469">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-469">AxisIndex</span></span></term>
              <description><span data-ttu-id="8a309-470">Spécifie s’il s’agit d’un axe principal ou secondaire.</span><span class="sxs-lookup"><span data-stu-id="8a309-470">Specifies whether the axis is primary or secondary.</span></span> <span data-ttu-id="8a309-471">Il peut s’agisse de l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constantes suivantes : <b>xlPrimary</b> ou <b>xlSecondary</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-471">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constants: <b>xlPrimary</b> or <b>xlSecondary</b>.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-472">AxisType</span><span class="sxs-lookup"><span data-stu-id="8a309-472">AxisType</span></span></term>
              <description><span data-ttu-id="8a309-473">Spécifie le type d’axe.</span><span class="sxs-lookup"><span data-stu-id="8a309-473">Specifies the axis type.</span></span> <span data-ttu-id="8a309-474">Peut être l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constantes suivantes : <b>xlCategory,</b> <b>xlSeriesAxis</b>ou <b>xlValue</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-474">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <b>xlCategory</b>, <b>xlSeriesAxis</b>, or <b>xlValue</b>.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-475">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="8a309-475">DropZoneType</span></span></term>
              <description><span data-ttu-id="8a309-476">Spécifie le type de zone de projection : champ de colonne, de données, de page ou de ligne.</span><span class="sxs-lookup"><span data-stu-id="8a309-476">Specifies the drop zone type: column, data, page, or row field.</span></span> <span data-ttu-id="8a309-477">Peut être l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation" /> constantes suivantes : <b>xlColumnField</b>, <b>xlDataField</b>, <b>xlPageField</b>ou <b>xlRowField</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-477">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation" /> constants: <b>xlColumnField</b>, <b>xlDataField</b>, <b>xlPageField</b>, or <b>xlRowField</b>.</span></span> <span data-ttu-id="8a309-478">Les constantes de champ de colonne et de ligne spécifient respectivement les champs de série et de catégorie.</span><span class="sxs-lookup"><span data-stu-id="8a309-478">The column and row field constants specify the series and category fields respectively.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-479">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-479">GroupIndex</span></span></term>
              <description><span data-ttu-id="8a309-480">Spécifie le décalage dans la <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection pour un groupe de graphiques spécifique.</span><span class="sxs-lookup"><span data-stu-id="8a309-480">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection for a specific chart group.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-481">PivotFieldIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-481">PivotFieldIndex</span></span></term>
              <description><span data-ttu-id="8a309-482">Spécifie le décalage dans la collection pour un champ de colonne <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> (série), de données, de page ou de ligne (catégorie) spécifique.</span><span class="sxs-lookup"><span data-stu-id="8a309-482">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> collection for a specific column (series), data, page, or row (category) field.</span></span> <span data-ttu-id="8a309-483">-1 si le type de zone de projection est <b>xlDataField</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-483">-1 if the drop zone type is <b>xlDataField</b>.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-484">PointIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-484">PointIndex</span></span></term>
              <description><span data-ttu-id="8a309-485">Spécifie le décalage dans la <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection pour un point spécifique d’une série.</span><span class="sxs-lookup"><span data-stu-id="8a309-485">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection for a specific point within a series.</span></span> <span data-ttu-id="8a309-486">La valeur –1 indique que tous les points de données sont sélectionnés.</span><span class="sxs-lookup"><span data-stu-id="8a309-486">A value of –1 indicates that all data points are selected.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-487">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-487">SeriesIndex</span></span></term>
              <description><span data-ttu-id="8a309-488">Spécifie le décalage dans la <see cref="T:Microsoft.Office.Interop.Excel.Series" /> collection pour une série spécifique.</span><span class="sxs-lookup"><span data-stu-id="8a309-488">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> collection for a specific series.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-489">ShapeIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-489">ShapeIndex</span></span></term>
              <description><span data-ttu-id="8a309-490">Spécifie le décalage dans la <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection pour une forme spécifique.</span><span class="sxs-lookup"><span data-stu-id="8a309-490">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection for a specific shape.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8a309-491">TrendlineIndex</span><span class="sxs-lookup"><span data-stu-id="8a309-491">TrendlineIndex</span></span></term>
              <description><span data-ttu-id="8a309-492">Spécifie le décalage dans la <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> collection pour une courbe de tendance spécifique dans une série.</span><span class="sxs-lookup"><span data-stu-id="8a309-492">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> collection for a specific trendline within a series.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-493">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="8a309-493">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-494">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-494">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAxis">
      <MemberSignature Language="C#" Value="public object HasAxis[object Index1, object Index2] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasAxis(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasAxis(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property HasAxis(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasAxis[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); void set(System::Object ^ Index1, System::Object ^ Index2, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1"><span data-ttu-id="8a309-495">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-495">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-496">Le type d'axe.</span><span class="sxs-lookup"><span data-stu-id="8a309-496">The axis type.</span></span> <span data-ttu-id="8a309-497">Les axes de séries s'appliquent uniquement aux graphiques 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-497">Series axes apply only to 3-D charts.</span></span> <span data-ttu-id="8a309-498">Il peut s’y trouver dans <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> l’une des constantes.</span><span class="sxs-lookup"><span data-stu-id="8a309-498">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants.</span></span></param>
        <param name="Index2"><span data-ttu-id="8a309-499">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-499">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-500">Le groupe d'axes.</span><span class="sxs-lookup"><span data-stu-id="8a309-500">The axis group.</span></span> <span data-ttu-id="8a309-501">Les graphiques 3D possèdent un seul ensemble d'axes.</span><span class="sxs-lookup"><span data-stu-id="8a309-501">3-D charts have only one set of axes.</span></span> <span data-ttu-id="8a309-502">Il peut s’y trouver <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> l’une des constantes.</span><span class="sxs-lookup"><span data-stu-id="8a309-502">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constants.</span></span></param>
        <summary><span data-ttu-id="8a309-503">Cette propriété renvoie ou définit quels sont les axes existants du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-503">Returns or sets which axes exist on the chart.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8a309-504">Microsoft Excel peut créer ou supprimer des axes si vous modifiez le type de graphique ou la <see cref="P:Microsoft.Office.Interop.Excel.Axis.AxisGroup" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="8a309-504">Microsoft Excel may create or delete axes if you change the chart type or the <see cref="P:Microsoft.Office.Interop.Excel.Axis.AxisGroup" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataTable">
      <MemberSignature Language="C#" Value="public bool HasDataTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasDataTable" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDataTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDataTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-505">Cette propriété a la valeur <b>True</b> si le graphique possède une table de données.</span><span class="sxs-lookup"><span data-stu-id="8a309-505"><b>True</b> if the chart has a data table.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasHiddenContent">
      <MemberSignature Language="C#" Value="public bool HasHiddenContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasHiddenContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasHiddenContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasHiddenContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasHiddenContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLegend">
      <MemberSignature Language="C#" Value="public bool HasLegend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLegend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasLegend" />
      <MemberSignature Language="VB.NET" Value="Public Property HasLegend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLegend { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-506">Cette propriété a la valeur <b>True</b> si le graphique possède une légende.</span><span class="sxs-lookup"><span data-stu-id="8a309-506"><b>True</b> if the chart has a legend.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPivotFields">
      <MemberSignature Language="C#" Value="public bool HasPivotFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPivotFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasPivotFields" />
      <MemberSignature Language="VB.NET" Value="Public Property HasPivotFields As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPivotFields { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-507"><b>True</b> si les contrôles de tableau croisé dynamique sont affichés dans le rapport de tableau croisé dynamique spécifié.</span><span class="sxs-lookup"><span data-stu-id="8a309-507"><b>True</b> if the PivotChart controls are displayed on the specified PivotChart report.</span></span> <span data-ttu-id="8a309-508">La valeur par défaut est <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-508">The default value is <b>True</b>.</span></span> <span data-ttu-id="8a309-509">Pour un graphique normal, cette propriété renvoie toujours <b>la valeur False</b> et ne peut pas être définie.</span><span class="sxs-lookup"><span data-stu-id="8a309-509">For a regular chart, this property always returns <b>False</b> and cannot be set.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTitle">
      <MemberSignature Language="C#" Value="public bool HasTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property HasTitle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasTitle { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-510">Cette propriété a la valeur <b>True</b> si l'axe ou le graphique possède un titre visible.</span><span class="sxs-lookup"><span data-stu-id="8a309-510"><b>True</b> if the axis or chart has a visible title.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8a309-511">Un titre d’axe est représenté par un <see cref="T:Microsoft.Office.Interop.Excel.AxisTitle" /> objet.</span><span class="sxs-lookup"><span data-stu-id="8a309-511">An axis title is represented by an <see cref="T:Microsoft.Office.Interop.Excel.AxisTitle" /> object.</span></span></para>
          <para><span data-ttu-id="8a309-512">Un titre de graphique est représenté par un <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> objet.</span><span class="sxs-lookup"><span data-stu-id="8a309-512">A chart title is represented by a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightPercent">
      <MemberSignature Language="C#" Value="public int HeightPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HeightPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HeightPercent" />
      <MemberSignature Language="VB.NET" Value="Public Property HeightPercent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HeightPercent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-513">Cette propriété renvoie ou définit la hauteur d'un graphique 3D sous la forme d'un pourcentage de la largeur du graphique (entre 5 et 500 %).</span><span class="sxs-lookup"><span data-stu-id="8a309-513">Returns or sets the height of a 3-D chart as a percentage of the chart width (between 5 and 500 percent).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-514">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection qui représente les liens hypertexte de la plage ou de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="8a309-514">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-515">Cette propriété renvoie le numéro d'index de l'objet dans la collection des objets similaires.</span><span class="sxs-lookup"><span data-stu-id="8a309-515">Returns the index number of the object within the collection of similar objects.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-516">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-516">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Legend Legend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Legend Legend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Legend" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Legend As Legend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Legend ^ Legend { Microsoft::Office::Interop::Excel::Legend ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(84)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(84)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Legend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-517">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> objet qui représente la légende du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-517">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> object that represents the legend for the chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Line3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Line3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-518">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objet qui représente le groupe de graphiques en lignes sur un graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-518">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the line chart group on a 3-D chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineGroups">
      <MemberSignature Language="C#" Value="public object LineGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LineGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.LineGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-519">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-519">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-520">Spécifie le groupe de graphiques.</span><span class="sxs-lookup"><span data-stu-id="8a309-520">Specifies the chart group.</span></span></param>
        <summary><span data-ttu-id="8a309-521">Sur un graphique 2D, renvoie un objet qui représente soit un seul groupe de graphiques en lignes (un objet), soit une collection de groupes de graphiques en lignes <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> (une collection).</span><span class="sxs-lookup"><span data-stu-id="8a309-521">On a 2-D chart, returns an object that represents either a single line chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the line chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-522">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-522">Reserved for internal use.</span></span> <span data-ttu-id="8a309-523">f</span><span class="sxs-lookup"><span data-stu-id="8a309-523">f</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-p192">Numéro d'index d'un élément de texte à définir ou renvoyer. Si vous ne spécifiez pas cet argument, la liste entière est renvoyée ou définie sous forme d'un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="8a309-p192">The index number of a single text entry to be set or returned. If this argument is omitted, the entire list is returned or set as an array of strings.</span></span></param>
        <summary><span data-ttu-id="8a309-p193">Cette méthode renvoie ou définit les entrées de texte dans la zone de liste ou la zone de liste modifiable spécifiées sous forme d'un tableau de chaînes ou bien renvoie ou définit un seul élément de texte. L'absence d'entrée dans la liste génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="8a309-p193">Returns or sets the text entries in the specified list box or a combo box, as an array of strings, or returns or sets a single text entry. An error occurs if there are no entries in the list.</span></span></summary>
        <returns><span data-ttu-id="8a309-528">Variant</span><span class="sxs-lookup"><span data-stu-id="8a309-528">Variant</span></span></returns>
        <remarks><para><span data-ttu-id="8a309-529">La définition de cette propriété permet d’effacer toute plage spécifiée par <see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" /> la propriété.</span><span class="sxs-lookup"><span data-stu-id="8a309-529">Setting this property clears any range specified by the <see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" /> property.</span></span></para>
          <para> </para></remarks>
        <example><para><span data-ttu-id="8a309-530">Cet exemple montre comment définir les entrées dans une zone de liste de la feuille de calcul Worksheet 1.</span><span class="sxs-lookup"><span data-stu-id="8a309-530">This example sets the entries in a list box on worksheet one.</span></span> <span data-ttu-id="8a309-531">Si Shapes(2) ne représente pas une zone de liste, cet exemple échoue.</span><span class="sxs-lookup"><span data-stu-id="8a309-531">If Shapes(2) doesn’t represent a list box, this example fails.</span></span></para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
          <para><span data-ttu-id="8a309-532">Cet exemple montre comment définir l'entrée 4 dans une zone de liste de la feuille de calcul Worksheet 1.</span><span class="sxs-lookup"><span data-stu-id="8a309-532">This example sets entry four in a list box on worksheet one.</span></span> <span data-ttu-id="8a309-533">Si Shapes(2) ne représente pas une zone de liste, cet exemple échoue.</span><span class="sxs-lookup"><span data-stu-id="8a309-533">If Shapes(2) doesn’t represent a list box, this example fails.</span></span></para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="8a309-534">Cet exemple montre comment définir les entrées dans une zone de liste de la feuille de calcul Worksheet 1.</span><span class="sxs-lookup"><span data-stu-id="8a309-534">This example sets the entries in a list box on worksheet one.</span></span> <span data-ttu-id="8a309-535">Si Shapes(2) ne représente pas une zone de liste, cet exemple échoue.</span><span class="sxs-lookup"><span data-stu-id="8a309-535">If Shapes(2) doesn’t represent a list box, this example fails.</span></span></para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
          <para><span data-ttu-id="8a309-536">Cet exemple montre comment définir l'entrée 4 dans une zone de liste de la feuille de calcul Worksheet 1.</span><span class="sxs-lookup"><span data-stu-id="8a309-536">This example sets entry four in a list box on worksheet one.</span></span> <span data-ttu-id="8a309-537">Si Shapes(2) ne représente pas une zone de liste, cet exemple échoue.</span><span class="sxs-lookup"><span data-stu-id="8a309-537">If Shapes(2) doesn’t represent a list box, this example fails.</span></span></para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="8a309-538">Cet exemple montre comment définir les entrées dans une zone de liste de la feuille de calcul Worksheet 1.</span><span class="sxs-lookup"><span data-stu-id="8a309-538">This example sets the entries in a list box on worksheet one.</span></span> <span data-ttu-id="8a309-539">Si Shapes(2) ne représente pas une zone de liste, cet exemple échoue.</span><span class="sxs-lookup"><span data-stu-id="8a309-539">If Shapes(2) doesn’t represent a list box, this example fails.</span></span></para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
          <para><span data-ttu-id="8a309-540">Cet exemple montre comment définir l'entrée 4 dans une zone de liste de la feuille de calcul Worksheet 1.</span><span class="sxs-lookup"><span data-stu-id="8a309-540">This example sets entry four in a list box on worksheet one.</span></span> <span data-ttu-id="8a309-541">Si Shapes(2) ne représente pas une zone de liste, cet exemple échoue.</span><span class="sxs-lookup"><span data-stu-id="8a309-541">If Shapes(2) doesn’t represent a list box, this example fails.</span></span></para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Location (Microsoft.Office.Interop.Excel.XlChartLocation Where, object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Chart Location([in]valuetype Microsoft.Office.Interop.Excel.XlChartLocation Where, [in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Location (Where As XlChartLocation, Optional Name As Object) As Chart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Where" Type="Microsoft.Office.Interop.Excel.XlChartLocation" />
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Where"><span data-ttu-id="8a309-542">Obligatoire <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-542">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" />.</span></span> <span data-ttu-id="8a309-543">Emplacement où déplacer le graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-543">Where to move the chart.</span></span></param>
        <param name="Name"><span data-ttu-id="8a309-544">Optional, <b>objet</b>; requis si <paramref name="Where" /> <b>est xlLocationAsObject</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-544">Optional <b>Object</b>; required if <paramref name="Where" /> is <b>xlLocationAsObject</b>.</span></span> <span data-ttu-id="8a309-545">Nom de la feuille dans laquelle le graphique sera incorporé s’il s’agit de <paramref name="Where" /> <b>xlLocationAsObject</b> ou du nom de la nouvelle feuille s’il s’agit de <paramref name="Where" /> <b>xlLocationAsNewSheet</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-545">The name of the sheet where the chart will be embedded if <paramref name="Where" /> is <b>xlLocationAsObject</b> or the name of the new sheet if <paramref name="Where" /> is <b>xlLocationAsNewSheet</b>.</span></span></param>
        <summary><span data-ttu-id="8a309-546">Cette méthode déplace le graphique vers un nouvel emplacement.</span><span class="sxs-lookup"><span data-stu-id="8a309-546">Moves the chart to a new location.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-547">Représente un en-tête de message électronique pour un document.</span><span class="sxs-lookup"><span data-stu-id="8a309-547">Represents an e-mail header for a document.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="8a309-548">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-548">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-549">Feuille avant laquelle la feuille déplacée s'insérera.</span><span class="sxs-lookup"><span data-stu-id="8a309-549">The sheet before which the moved sheet will be placed.</span></span> <span data-ttu-id="8a309-550">Vous ne pouvez pas <paramref name="Before" /> spécifier si vous spécifiez <paramref name="After" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-550">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="8a309-551">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-551">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-552">Feuille après laquelle la feuille déplacée s'insérera.</span><span class="sxs-lookup"><span data-stu-id="8a309-552">The sheet after which the moved sheet will be placed.</span></span> <span data-ttu-id="8a309-553">Vous ne pouvez pas <paramref name="After" /> spécifier si vous spécifiez <paramref name="Before" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-553">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="8a309-554">Cette méthode déplace la feuille à un autre endroit du classeur.</span><span class="sxs-lookup"><span data-stu-id="8a309-554">Moves the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-555">Si vous ne spécifiez pas l’une ou l’autre des deux, Microsoft Excel crée un nouveau <paramref name="Before" /> <paramref name="After" /> workbook qui contient la feuille déplacée.</span><span class="sxs-lookup"><span data-stu-id="8a309-555">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-556">Cette propriété renvoie ou définit le nom de l'objet.</span><span class="sxs-lookup"><span data-stu-id="8a309-556">Returns or sets the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-557">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objet qui représente la feuille ou la cellule suivante.</span><span class="sxs-lookup"><span data-stu-id="8a309-557">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the next sheet or cell.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-558">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-558">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-559">Le nom ou numéro de l'objet OLE.</span><span class="sxs-lookup"><span data-stu-id="8a309-559">The name or number of the OLE object.</span></span></param>
        <summary><span data-ttu-id="8a309-560">Renvoie un objet qui représente soit un seul objet OLE (un ) soit une collection de tous les objets <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> OLE (une collection) sur le graphique <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> ou la feuille.</span><span class="sxs-lookup"><span data-stu-id="8a309-560">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-561">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="8a309-561">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-562">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-562">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-563">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-563">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-564">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-564">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-565">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-565">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-566">Renvoie un objet qui contient tous les paramètres de <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> mise en page de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="8a309-566">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-567">Renvoie l’objet parent pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="8a309-567">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Paste(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="8a309-568">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-568">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-569">Spécifie les données de graphique à coller si le Presse-papiers contient un graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-569">Specifies the chart information to paste if a chart is on the Clipboard.</span></span> <span data-ttu-id="8a309-570">Peut être l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constantes suivantes : <b>xlFormats,</b> <b>xlFormulas</b>ou <b>xlAll</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-570">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constants: <b>xlFormats</b>, <b>xlFormulas</b>, or <b>xlAll</b>.</span></span> <span data-ttu-id="8a309-571">La valeur par défaut <b>est xlAll</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-571">The default value is <b>xlAll</b>.</span></span> <span data-ttu-id="8a309-572">S’il existe des données autres qu’un graphique dans le Presse-papiers, cet argument ne peut pas être utilisé.</span><span class="sxs-lookup"><span data-stu-id="8a309-572">If there’s data other than a chart on the Clipboard, this argument cannot be used.</span></span></param>
        <summary><span data-ttu-id="8a309-573">Cette méthode colle les données de graphique provenant du Presse-papiers dans le graphique spécifié.</span><span class="sxs-lookup"><span data-stu-id="8a309-573">Pastes chart data from the Clipboard into the specified chart.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-574">Cette méthode modifie la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="8a309-574">This method changes the current selection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Perspective">
      <MemberSignature Language="C#" Value="public int Perspective { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Perspective" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Perspective" />
      <MemberSignature Language="VB.NET" Value="Public Property Perspective As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Perspective { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-575">Renvoie ou définit la perspective de la vue du graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-575">Returns or sets the perspective for the 3-D chart view.</span></span> <span data-ttu-id="8a309-576">Doit être entre 0 et 100.</span><span class="sxs-lookup"><span data-stu-id="8a309-576">Must be between 0 and 100.</span></span> <span data-ttu-id="8a309-577">Cette propriété est ignorée si la <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> propriété a la valeur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-577">This property is ignored if the <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> property is <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-578">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-578">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pie3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Pie3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pie3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Pie3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-579">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objet qui représente le groupe de graphiques en secteurs sur un graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-579">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the pie chart group on a 3-D chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PieGroups">
      <MemberSignature Language="C#" Value="public object PieGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PieGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PieGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PieGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-580">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-580">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-581">Spécifie le groupe de graphiques.</span><span class="sxs-lookup"><span data-stu-id="8a309-581">Specifies the chart group.</span></span></param>
        <summary><span data-ttu-id="8a309-582">Sur un graphique 2D, renvoie un objet qui représente soit un seul groupe de graphiques en secteurs (un objet), soit une collection de groupes de graphiques en secteurs <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> (une collection).</span><span class="sxs-lookup"><span data-stu-id="8a309-582">On a 2-D chart, returns an object that represents either a single pie chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the pie chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotLayout PivotLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotLayout PivotLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PivotLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotLayout As PivotLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotLayout ^ PivotLayout { Microsoft::Office::Interop::Excel::PivotLayout ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1814)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1814)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-583">Renvoie un objet qui représente le placement des champs dans un rapport de tableau croisé dynamique et le placement des axes dans <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> un rapport de tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="8a309-583">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> object that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8a309-584">Si le graphique spécifié n'est pas un rapport de graphique croisé dynamique, la valeur de cette propriété correspond alors à <b>Nothing</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-584">If the chart you specify isn’t a PivotChart report, the value of this property is <b>Nothing</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PlotArea PlotArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PlotArea PlotArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PlotArea As PlotArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PlotArea ^ PlotArea { Microsoft::Office::Interop::Excel::PlotArea ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(85)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(85)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PlotArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-585">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> objet qui représente la zone de traçage d’un graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-585">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotBy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRowCol PlotBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRowCol PlotBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotBy" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotBy As XlRowCol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlRowCol PlotBy { Microsoft::Office::Interop::Excel::XlRowCol get(); void set(Microsoft::Office::Interop::Excel::XlRowCol value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRowCol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-586">Renvoie ou spécifie la façon dont les colonnes ou les lignes sont utilisées comme séries de données sur le graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-586">Returns or sets the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="8a309-587">Peut être l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constantes suivantes : <b>xlColumns</b> ou <b>xlRows</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-587">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlColumns</b> or <b>xlRows</b>.</span></span> <span data-ttu-id="8a309-588">Pour les rapports de graphique croisé dynamique, cette propriété est en lecture seule et renvoie toujours la <b>constante xlColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-588">For PivotChart reports, this property is read-only and always returns <b>xlColumns</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotVisibleOnly">
      <MemberSignature Language="C#" Value="public bool PlotVisibleOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PlotVisibleOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotVisibleOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotVisibleOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PlotVisibleOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-589"><b>True</b> si seules les cellules visibles sont tracées.</span><span class="sxs-lookup"><span data-stu-id="8a309-589"><b>True</b> if only visible cells are plotted.</span></span> <span data-ttu-id="8a309-590"><b>False</b> si les cellules visibles et masquées sont tracées.</span><span class="sxs-lookup"><span data-stu-id="8a309-590"><b>False</b> if both visible and hidden cells are plotted.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-591">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objet qui représente la feuille ou la cellule précédente.</span><span class="sxs-lookup"><span data-stu-id="8a309-591">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the previous sheet or cell.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-592">Obtient le nombre de pages de commentaires qui seront imprimées pour le graphique actuel.</span><span class="sxs-lookup"><span data-stu-id="8a309-592">Gets the number of comment pages that will be printed for the current chart.</span></span></summary>
        <value><span data-ttu-id="8a309-593">Nombre de pages de commentaires qui seront imprimées pour le graphique actuel.</span><span class="sxs-lookup"><span data-stu-id="8a309-593">The number of comment pages that will be printed for the current chart.</span></span></value>
        <remarks><para><span data-ttu-id="8a309-594">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="8a309-594">Read-only.</span></span></para>
          <para><span data-ttu-id="8a309-595">Étant donné que les graphiques et les feuilles de graphique ne sont pas en charge les commentaires, la <see cref="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" /> propriété de l’objet retourne toujours <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> zéro.</span><span class="sxs-lookup"><span data-stu-id="8a309-595">Because charts and chart sheets do not support comments, the <see cref="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> object will always return zero.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="8a309-596">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-596">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-597">Numéro de la page à partir de laquelle commence l'impression.</span><span class="sxs-lookup"><span data-stu-id="8a309-597">The number of the page at which to start printing.</span></span> <span data-ttu-id="8a309-598">Si cet argument est omis, l'impression commence à la première page.</span><span class="sxs-lookup"><span data-stu-id="8a309-598">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="8a309-599">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-599">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-600">Numéro de la dernière page à imprimer.</span><span class="sxs-lookup"><span data-stu-id="8a309-600">The number of the last page to print.</span></span> <span data-ttu-id="8a309-601">Si cet argument est omis, l'impression s'effectue jusqu'à la dernière page.</span><span class="sxs-lookup"><span data-stu-id="8a309-601">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="8a309-602">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-602">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-603">Nombre de copies à imprimer.</span><span class="sxs-lookup"><span data-stu-id="8a309-603">The number of copies to print.</span></span> <span data-ttu-id="8a309-604">Si cet argument est omis, une seule copie est imprimée.</span><span class="sxs-lookup"><span data-stu-id="8a309-604">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="8a309-605">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-605">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-606"><b>True</b> pour que Microsoft Excel affiche l'aperçu avant impression avant d'imprimer l'objet.</span><span class="sxs-lookup"><span data-stu-id="8a309-606"><b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="8a309-607"><b>False</b> (ou non défini) pour imprimer l'objet immédiatement.</span><span class="sxs-lookup"><span data-stu-id="8a309-607"><b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="8a309-608">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-608">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-609">Définit le nom de l'imprimante active.</span><span class="sxs-lookup"><span data-stu-id="8a309-609">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="8a309-610">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-610">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-611"><b>True</b>  pour imprimer dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="8a309-611"><b>True</b> to print to a file.</span></span> <span data-ttu-id="8a309-612">Si <paramref name="PrToFileName" /> ce n’est pas spécifié, Microsoft Excel invite l’utilisateur à entrer le nom du fichier de sortie.</span><span class="sxs-lookup"><span data-stu-id="8a309-612">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="8a309-613">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-613">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-614"><b>True</b>  pour assembler plusieurs copies.</span><span class="sxs-lookup"><span data-stu-id="8a309-614"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="8a309-615">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-615">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-616">Si la valeur est True, cet argument spécifie le nom du fichier dans lequel <paramref name="PrintToFile" /> vous souhaitez <b></b>imprimer.</span><span class="sxs-lookup"><span data-stu-id="8a309-616">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="8a309-617">Cette méthode imprime l'objet.</span><span class="sxs-lookup"><span data-stu-id="8a309-617">Prints the object.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-618">« Pages » dans les descriptions des pages imprimées et fait référence à ces pages, et non à l’ensemble des pages de la feuille <paramref name="From" /> <paramref name="To" /> ou du workbook.</span><span class="sxs-lookup"><span data-stu-id="8a309-618">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages— not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary><span data-ttu-id="8a309-619">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-619">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="8a309-620">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-620">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-621"><b>True</b> pour activer les modifications apportées au graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-621"><b>True</b> to enable changes to the chart.</span></span></param>
        <summary><span data-ttu-id="8a309-622">Cette méthode affiche un aperçu de l'objet tel qu'il apparaîtra une fois imprimé.</span><span class="sxs-lookup"><span data-stu-id="8a309-622">Shows a preview of the object as it would look when printed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="8a309-623">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-623">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-624">Chaîne qui spécifie un mot de passe qui respecte la casse pour la feuille de calcul ou le classeur.</span><span class="sxs-lookup"><span data-stu-id="8a309-624">A string that specifies a case-sensitive password for the worksheet or workbook.</span></span> <span data-ttu-id="8a309-625">Si cet argument est omis, vous pouvez annuler la protection de la feuille de calcul ou du classeur sans utiliser de mot de passe.</span><span class="sxs-lookup"><span data-stu-id="8a309-625">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span></span> <span data-ttu-id="8a309-626">Dans le cas contraire, vous devez spécifier le mot de passe pour annuler la protection de la feuille de calcul ou du classeur.</span><span class="sxs-lookup"><span data-stu-id="8a309-626">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span></span> <span data-ttu-id="8a309-627">Si vous oubliez le mot de passe, vous ne pouvez plus annuler la protection de la feuille de calcul ni du classeur.</span><span class="sxs-lookup"><span data-stu-id="8a309-627">If you forget the password, you cannot unprotect the worksheet or workbook.</span></span> <span data-ttu-id="8a309-628">Pensez à conserver en lieu sûr une liste de vos mots de passe et les noms des documents correspondants.</span><span class="sxs-lookup"><span data-stu-id="8a309-628">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span></param>
        <param name="DrawingObjects"><span data-ttu-id="8a309-629">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-629">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-630"><b>True</b> pour protéger les formes.</span><span class="sxs-lookup"><span data-stu-id="8a309-630"><b>True</b> to protect shapes.</span></span> <span data-ttu-id="8a309-631">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-631">The default value is <b>False</b>.</span></span></param>
        <param name="Contents"><span data-ttu-id="8a309-632">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-632">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-633"><b>True</b> pour protéger le contenu.</span><span class="sxs-lookup"><span data-stu-id="8a309-633"><b>True</b> to protect contents.</span></span> <span data-ttu-id="8a309-634">Pour un graphique, cela protège le graphique entier.</span><span class="sxs-lookup"><span data-stu-id="8a309-634">For a chart, this protects the entire chart.</span></span> <span data-ttu-id="8a309-635">Pour une feuille de calcul, cela protège les cellules verrouillées.</span><span class="sxs-lookup"><span data-stu-id="8a309-635">For a worksheet, this protects the locked cells.</span></span> <span data-ttu-id="8a309-636">La valeur par défaut est <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-636">The default value is <b>True</b>.</span></span></param>
        <param name="Scenarios"><span data-ttu-id="8a309-637">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-637">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-638"><b>True</b> pour protéger les scénarios.</span><span class="sxs-lookup"><span data-stu-id="8a309-638"><b>True</b> to protect scenarios.</span></span> <span data-ttu-id="8a309-639">Cet argument n'est valide que pour les feuilles de calcul.</span><span class="sxs-lookup"><span data-stu-id="8a309-639">This argument is valid only for worksheets.</span></span> <span data-ttu-id="8a309-640">La valeur par défaut est <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-640">The default value is <b>True</b>.</span></span></param>
        <param name="UserInterfaceOnly"><span data-ttu-id="8a309-641">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-641">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-642"><b>True</b> pour protéger l'interface utilisateur, mais pas les macros.</span><span class="sxs-lookup"><span data-stu-id="8a309-642"><b>True</b> to protect the user interface, but not macros.</span></span> <span data-ttu-id="8a309-643">Si cet argument est omis, la protection s'applique à la fois aux macros et à l'interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="8a309-643">If this argument is omitted, protection applies both to macros and to the user interface.</span></span></param>
        <summary><span data-ttu-id="8a309-644">Cette méthode protège un graphique de sorte qu'il ne puisse pas être modifié.</span><span class="sxs-lookup"><span data-stu-id="8a309-644">Protects a chart so that it cannot be modified.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-p224">Utilisez des mots de passe forts qui associent des majuscules et des minuscules, des chiffres et des symboles. Les mots de passe faibles n'associent pas ces éléments. Mot de passe fort : Y6dh!et5. Mot de passe faible : House27. Utilisez un mot de passe fort facile à mémoriser afin de ne pas avoir à le noter.</span><span class="sxs-lookup"><span data-stu-id="8a309-p224">Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-650">Cette propriété renvoie la valeur <b>True</b> si le contenu de la feuille est protégé.</span><span class="sxs-lookup"><span data-stu-id="8a309-650"><b>True</b> if the contents of the sheet are protected.</span></span> <span data-ttu-id="8a309-651">Cela protège l’intégralité du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-651">This protects the entire chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectData">
      <MemberSignature Language="C#" Value="public bool ProtectData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectData" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-652">Cette propriété a la valeur <b>True</b> si les formules des séries ne peuvent pas être modifiées par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="8a309-652"><b>True</b> if series formulas cannot be modified by the user.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-653">Cette propriété renvoie la valeur <b>True</b> si les formes sont protégées.</span><span class="sxs-lookup"><span data-stu-id="8a309-653"><b>True</b> if shapes are protected.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectFormatting">
      <MemberSignature Language="C#" Value="public bool ProtectFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-654">Cette propriété a la valeur <b>True</b> si la mise en forme du graphique ne peut pas être modifiée par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="8a309-654"><b>True</b> if chart formatting cannot be modified by the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8a309-655">Lorsque cette propriété a la valeur <b>True,</b>la commande Objet du menu Format est désactivée et les éléments de graphique ne peuvent pas être ajoutés, déplacés, re ressergés ou supprimés.</span><span class="sxs-lookup"><span data-stu-id="8a309-655">When this property is <b>True</b>, the Object command on the Format menu is disabled and chart elements cannot be added, moved, resized, or deleted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectGoalSeek">
      <MemberSignature Language="C#" Value="public bool ProtectGoalSeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectGoalSeek" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectGoalSeek" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectGoalSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectGoalSeek { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-656">Cette propriété a la valeur <b>True</b> si l'utilisateur ne peut pas modifier les points de données du graphique à l'aide de la souris.</span><span class="sxs-lookup"><span data-stu-id="8a309-656"><b>True</b> if the user cannot modify chart data points with mouse actions.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-657">Cette propriété renvoie la valeur <b>True</b> si la protection Interface utilisateur seulement est activée.</span><span class="sxs-lookup"><span data-stu-id="8a309-657"><b>True</b> if user-interface-only protection is turned on.</span></span> <span data-ttu-id="8a309-658">Pour activer la protection de l’interface utilisateur, utilisez <see cref="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" /> la méthode dont <paramref name="UserInterfaceOnly" /> l’argument a la valeur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-658">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSelection">
      <MemberSignature Language="C#" Value="public bool ProtectSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-659">Cette propriété a la valeur <b>True</b> si les éléments d'un graphique ne peuvent pas être sélectionnés.</span><span class="sxs-lookup"><span data-stu-id="8a309-659"><b>True</b> if chart elements cannot be selected.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8a309-660">Lorsque cette propriété a la valeur <b>True</b>, il est impossible d'ajouter des formes dans le graphique et les événements Click et DoubleClick ne se produisent pas.</span><span class="sxs-lookup"><span data-stu-id="8a309-660">When this property is <b>True</b>, shapes cannot be added to the chart, and the Click and DoubleClick events for chart elements don’t occur.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RadarGroups">
      <MemberSignature Language="C#" Value="public object RadarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RadarGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.RadarGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RadarGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-661">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-661">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-662">Spécifie le groupe de graphiques.</span><span class="sxs-lookup"><span data-stu-id="8a309-662">Specifies the chart group.</span></span></param>
        <summary><span data-ttu-id="8a309-663">Sur un graphique 2D, renvoie un objet qui représente soit un seul groupe de graphiques en radar (un objet), soit une collection de groupes de graphiques en <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> radar <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> (une collection).</span><span class="sxs-lookup"><span data-stu-id="8a309-663">On a 2-D chart, returns an object that represents either a single radar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the radar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-664">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-664">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a309-665">Met à jour le cache du <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> ou de <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> l’objet.</span><span class="sxs-lookup"><span data-stu-id="8a309-665">Updates the cache of the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightAngleAxes">
      <MemberSignature Language="C#" Value="public object RightAngleAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RightAngleAxes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" />
      <MemberSignature Language="VB.NET" Value="Public Property RightAngleAxes As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RightAngleAxes { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-666">Cette propriété a la valeur <b>True</b> si les axes du graphique se coupent à angle droit, quelle que soit la rotation ou l’élévation du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-666"><b>True</b> if the chart axes are at right angles, independent of chart rotation or elevation.</span></span> <span data-ttu-id="8a309-667">Elle s’applique uniquement aux graphiques 3D en courbes, en histogrammes et en barres.</span><span class="sxs-lookup"><span data-stu-id="8a309-667">Applies only to 3-D line, column, and bar charts.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8a309-668">Si cette propriété a <b>la valeur True,</b> <see cref="P:Microsoft.Office.Interop.Excel._Chart.Perspective" /> elle est ignorée.</span><span class="sxs-lookup"><span data-stu-id="8a309-668">If this property is <b>True</b>, the <see cref="P:Microsoft.Office.Interop.Excel._Chart.Perspective" /> property is ignored.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public object Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Rotation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-669">Renvoie ou définit la rotation de l’affichage graphique 3D (rotation de la zone de traçage autour de l’axe z en degrés).</span><span class="sxs-lookup"><span data-stu-id="8a309-669">Returns or sets the rotation of the 3-D chart view (the rotation of the plot area around the z-axis in degrees).</span></span> <span data-ttu-id="8a309-670">La valeur de cette propriété doit être comprise entre 0 et 360, sauf pour les graphiques 3D en barres pour lesquels elle doit être comprise entre 0 et 44.</span><span class="sxs-lookup"><span data-stu-id="8a309-670">The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44.</span></span> <span data-ttu-id="8a309-671">La valeur par défaut est 20.</span><span class="sxs-lookup"><span data-stu-id="8a309-671">The default value is 20.</span></span> <span data-ttu-id="8a309-672">La propriété ne s'applique qu'aux graphiques 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-672">Applies only to 3-D charts.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="8a309-673">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-673">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-674">Chaîne qui indique le nom du fichier à enregistrer.</span><span class="sxs-lookup"><span data-stu-id="8a309-674">A string that indicates the name of the file to be saved.</span></span> <span data-ttu-id="8a309-675">Vous pouvez inclure un chemin complet ; si vous ne le faites pas, Microsoft Excel enregistre le fichier dans le dossier actif.</span><span class="sxs-lookup"><span data-stu-id="8a309-675">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span></span></param>
        <param name="FileFormat"><span data-ttu-id="8a309-676">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-676">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-677">Format de fichier à utiliser lorsque vous enregistrez le fichier.</span><span class="sxs-lookup"><span data-stu-id="8a309-677">The file format to use when you save the file.</span></span> <span data-ttu-id="8a309-678">Pour obtenir la liste des choix valides, voir la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="8a309-678">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span></span> <span data-ttu-id="8a309-679">Pour un fichier existant, le format par défaut est le dernier qui a été spécifié ; pour un nouveau fichier, le format par défaut est celui de la version d'Excel actuellement utilisée.</span><span class="sxs-lookup"><span data-stu-id="8a309-679">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span></span></param>
        <param name="Password"><span data-ttu-id="8a309-680">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-680">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-681">Chaîne qui respecte la casse (maximum 15 caractères) et indique le mot de passe de protection à donner au fichier.</span><span class="sxs-lookup"><span data-stu-id="8a309-681">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span></span></param>
        <param name="WriteResPassword"><span data-ttu-id="8a309-682">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-682">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-683">Chaîne qui indique le mot de passe de protection en écriture pour ce fichier.</span><span class="sxs-lookup"><span data-stu-id="8a309-683">A string that indicates the write-reservation password for this file.</span></span> <span data-ttu-id="8a309-684">Si un fichier est enregistré avec un mot de passe et que ce mot de passe n'est pas fourni lors de l'ouverture du fichier, celui-ci s'ouvre en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="8a309-684">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span></span></param>
        <param name="ReadOnlyRecommended"><span data-ttu-id="8a309-685">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-685">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-686"><b>True</b> pour afficher un message lorsque le fichier est ouvert, conseillant de l'ouvrir en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="8a309-686"><b>True</b> to display a message when the file is opened, recommending that the file be opened as read-only.</span></span></param>
        <param name="CreateBackup"><span data-ttu-id="8a309-687">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-687">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-688"><b>True</b> pour créer un fichier de sauvegarde.</span><span class="sxs-lookup"><span data-stu-id="8a309-688"><b>True</b> to create a backup file.</span></span></param>
        <param name="AddToMru"><span data-ttu-id="8a309-689">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-689">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-690"><b>True</b> pour ajouter ce classeur à la liste des derniers fichiers utilisés.</span><span class="sxs-lookup"><span data-stu-id="8a309-690"><b>True</b> to add this workbook to the list of recently used files.</span></span> <span data-ttu-id="8a309-691">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-691">The default value is <b>False</b>.</span></span></param>
        <param name="TextCodepage"><span data-ttu-id="8a309-692">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-692">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-693">Non utilisé dans la version française de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="8a309-693">Not used in U.S. English Microsoft Excel.</span></span></param>
        <param name="TextVisualLayout"><span data-ttu-id="8a309-694">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-694">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-695">Non utilisé dans la version française de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="8a309-695">Not used in U.S. English Microsoft Excel.</span></span></param>
        <param name="Local"><span data-ttu-id="8a309-696">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-696">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-697"><b>True</b> enregistre les fichiers par rapport à la langue de Microsoft Excel (y compris les paramètres du Panneau de configuration).</span><span class="sxs-lookup"><span data-stu-id="8a309-697"><b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span></span> <span data-ttu-id="8a309-698"><b>False</b> (par défaut) enregistre les fichiers dans la langue de Visual Basic pour Applications (qui est généralement l’anglais américain, sauf si le projet VBA à partir duquel <b>Workbooks.Open</b> est exécuté est un ancien projet VBA XL5/95 internationalisé).</span><span class="sxs-lookup"><span data-stu-id="8a309-698"><b>False</b> (default) saves files against the language of Visual Basic for Applications (which is typically U.S. English unless the VBA project where <b>Workbooks.Open</b> is run from is an old internationalized XL5/95 VBA project).</span></span></param>
        <summary><span data-ttu-id="8a309-699">Cette méthode enregistre dans un autre fichier les modifications effectuées sur le graphique ou la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="8a309-699">Saves changes to the chart or worksheet in a different file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChartTemplate">
      <MemberSignature Language="C#" Value="public void SaveChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChartTemplate([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SaveChartTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveChartTemplate (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveChartTemplate(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2508)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="8a309-700">Nom du modèle de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-700">The name of the chart template.</span></span></param>
        <summary><span data-ttu-id="8a309-701">Enregistre un modèle de graphique personnalisé dans la liste des modèles de graphique disponibles.</span><span class="sxs-lookup"><span data-stu-id="8a309-701">Saves a custom chart template to the list of available chart templates.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-p240">Par défaut, cette méthode enregistre le graphique actif dans le répertoire de modèles de graphique de l’utilisateur. Si un chemin UNC ou URL est spécifié, le graphique y sera enregistré.</span><span class="sxs-lookup"><span data-stu-id="8a309-p240">By default, this method saves the active chart to the user's chart template directory.  If a UNC or URL is specified, the chart will be saved to the specified location instead.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-704">Renvoie la collection, qui contient des objets représentant des blocs de script ou de code dans le document spécifié lorsqu’il est enregistré <see cref="T:Microsoft.Office.Core.Scripts" /> en tant que page <see cref="T:Microsoft.Office.Core.Script" /> Web.</span><span class="sxs-lookup"><span data-stu-id="8a309-704">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-705">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-705">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="8a309-706">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-706">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-707">Objet à remplacer.</span><span class="sxs-lookup"><span data-stu-id="8a309-707">The object to replace.</span></span></param>
        <summary><span data-ttu-id="8a309-708">Sélectionne l'objet.</span><span class="sxs-lookup"><span data-stu-id="8a309-708">Selects the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesCollection">
      <MemberSignature Language="C#" Value="public object SeriesCollection (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SeriesCollection([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SeriesCollection(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SeriesCollection (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(68)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-709">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-709">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-710">Le nom ou le numéro de la série.</span><span class="sxs-lookup"><span data-stu-id="8a309-710">The name or number of the series.</span></span></param>
        <summary><span data-ttu-id="8a309-711">Renvoie un objet qui représente une seule série (un objet) ou une collection de toutes les séries (une collection) dans le graphique ou le groupe <see cref="T:Microsoft.Office.Interop.Excel.Series" /> <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> de graphiques.</span><span class="sxs-lookup"><span data-stu-id="8a309-711">Returns an object that represents either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection) in the chart or chart group.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesNameLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSeriesNameLevel SeriesNameLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSeriesNameLevel SeriesNameLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SeriesNameLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property SeriesNameLevel As XlSeriesNameLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSeriesNameLevel SeriesNameLevel { Microsoft::Office::Interop::Excel::XlSeriesNameLevel get(); void set(Microsoft::Office::Interop::Excel::XlSeriesNameLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSeriesNameLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-712">Renvoie une constante faisant référence au niveau d’origine des noms <see cref="T:Microsoft.Office.Interop.Excel.XlSeriesNameLevel" /> de séries.</span><span class="sxs-lookup"><span data-stu-id="8a309-712">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlSeriesNameLevel" /> constant referring to the level of where the series names are being sourced from.</span></span> <span data-ttu-id="8a309-713"><b>Integer</b> <b>(int</b> en C#) En lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="8a309-713"><b>Integer</b> (<b>int</b> in C#) Read/Write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="8a309-714">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="8a309-714">Required <b>String</b>.</span></span> <span data-ttu-id="8a309-715">Nom du fichier graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-715">The name of the graphic file.</span></span></param>
        <summary><span data-ttu-id="8a309-716">Définit le graphique d’arrière-plan d’une feuille de calcul ou d’un graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-716">Sets the background graphic for a worksheet or chart.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetDefaultChart(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Name As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultChart(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="8a309-717">Spécifie le nom par défaut du modèle de graphique qui sera utilisé lors de la création des nouveaux graphiques.</span><span class="sxs-lookup"><span data-stu-id="8a309-717">Specifies the name of the default chart template that will be used when creating new charts.</span></span>  <span data-ttu-id="8a309-718">Ce nom peut être une chaîne nommant un graphique dans la galerie pour un modèle défini par l’utilisateur ou il peut s’agit d’une constante spéciale pour spécifier un modèle <see cref="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlBuiltIn" /> de graphique intégré.</span><span class="sxs-lookup"><span data-stu-id="8a309-718">This name can be a string naming a chart in the gallery for a user-defined template or it can be a special constant <see cref="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlBuiltIn" /> to specify a built-in chart template.</span></span></param>
        <summary><span data-ttu-id="8a309-719">Cette méthode spécifie le nom du modèle de graphique que Microsoft Excel utilise pour la création de graphiques.</span><span class="sxs-lookup"><span data-stu-id="8a309-719">Specifies the name of the  chart template that Microsoft Excel uses when creating new charts.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetElement">
      <MemberSignature Language="C#" Value="public void SetElement (Microsoft.Office.Core.MsoChartElementType Element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetElement([in]valuetype Microsoft.Office.Core.MsoChartElementType Element) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetElement (Element As MsoChartElementType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetElement(Microsoft::Office::Core::MsoChartElementType Element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Element" Type="Microsoft.Office.Core.MsoChartElementType" />
      </Parameters>
      <Docs>
        <param name="Element"><span data-ttu-id="8a309-720">Spécifie le type d'élément de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-720">Specifies the chart element type.</span></span></param>
        <summary><span data-ttu-id="8a309-721">Définit les éléments dans un graphique de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-721">Sets chart elements on a chart.</span></span> <span data-ttu-id="8a309-722">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="8a309-722">Read/write.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-723">Pour les graphiques, les commandes suivantes de l’onglet Disposition correspondent à la <see cref="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" /> méthode :</span><span class="sxs-lookup"><span data-stu-id="8a309-723">For charts, the following commands in the Layout tab correspond to the <see cref="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" /> method:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="8a309-724">Toutes les commandes du groupe Étiquettes.</span><span class="sxs-lookup"><span data-stu-id="8a309-724">Everything in the Labels group.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="8a309-725">Toutes les commandes du groupe Axes.</span><span class="sxs-lookup"><span data-stu-id="8a309-725">Everything in the Axes group.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="8a309-726">Toutes les commandes du groupe Analyse.</span><span class="sxs-lookup"><span data-stu-id="8a309-726">Everything in the Analysis group.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="8a309-727">Les boutons Zone de traçage, Paroi et Plancher de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-727">PlotArea, Chart Wall, and Chart Floor buttons.</span></span></description>
            </item>
          </list>
          <para> </para>
          <para><span data-ttu-id="8a309-728">
            <b>MsoChartElementType</b> est une énumération de constantes qui se réfèrent à toutes les commandes ci-dessus.</span><span class="sxs-lookup"><span data-stu-id="8a309-728">
            <b>MsoChartElementType</b> is an enumeration of constants that refer to all of the above commands.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSourceData">
      <MemberSignature Language="C#" Value="public void SetSourceData (Microsoft.Office.Interop.Excel.Range Source, object PlotBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSourceData([in]class Microsoft.Office.Interop.Excel.Range Source, [in]object PlotBy) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSourceData (Source As Range, Optional PlotBy As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="PlotBy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="8a309-729">Obligatoire <see cref="T:Microsoft.Office.Interop.Excel.Range" /> .</span><span class="sxs-lookup"><span data-stu-id="8a309-729">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span></span> <span data-ttu-id="8a309-730">Plage qui contient les données sources.</span><span class="sxs-lookup"><span data-stu-id="8a309-730">The range that contains the source data.</span></span></param>
        <param name="PlotBy"><span data-ttu-id="8a309-731">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-731">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-732">Spécifie la façon dont les données doivent être tracées.</span><span class="sxs-lookup"><span data-stu-id="8a309-732">Specifies the way the data is to be plotted.</span></span> <span data-ttu-id="8a309-733">Peut être l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constantes suivantes : <b>xlColumns</b> ou <b>xlRows</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-733">Can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlColumns</b> or <b>xlRows</b>.</span></span></param>
        <summary><span data-ttu-id="8a309-734">Définit la plage de données sources du graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-734">Sets the source data range for the chart.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-735">Renvoie un objet qui représente toutes les formes de la feuille <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> de calcul ou de la feuille de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-735">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span></span> <span data-ttu-id="8a309-736">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="8a309-736">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAllFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAllFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAllFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAllFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-737">Obtient ou définit si tous les boutons de champ d’un tableau croisé dynamique sont affichés.</span><span class="sxs-lookup"><span data-stu-id="8a309-737">Gets or sets whether to display all field buttons on a PivotChart.</span></span></summary>
        <value><span data-ttu-id="8a309-738"><b>true</b> si tous les boutons de champ d’un tableau croisé dynamique doivent être affichés ; sinon, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-738"><b>true</b> if all field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="8a309-739">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="8a309-739">Read/write.</span></span></para>
          <para><span data-ttu-id="8a309-740">Définissez <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> la propriété sur true <b>pour</b> afficher tous les boutons de champ sur le tableau croisé dynamique spécifié.</span><span class="sxs-lookup"><span data-stu-id="8a309-740">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> property to <b>true</b> to display all field buttons on the specified PivotChart.</span></span> <span data-ttu-id="8a309-741">Définissez la propriété sur <b>False</b> pour masquer tous les boutons de champ.</span><span class="sxs-lookup"><span data-stu-id="8a309-741">Set the property to <b>false</b> to hide all field buttons.</span></span></para>
          <para><span data-ttu-id="8a309-742">La propriété correspond à la commande Masquer tout dans la liste de listes listes de boutons de champ de l’onglet Analyse, qui est disponible lorsqu’un tableau croisé dynamique <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> est sélectionné.</span><span class="sxs-lookup"><span data-stu-id="8a309-742">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> property corresponds to the Hide All command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAxisFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAxisFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAxisFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAxisFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAxisFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-743">Obtient ou définit s’il faut afficher les boutons de champ d’axe dans un tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="8a309-743">Gets or sets whether to display axis field buttons on a PivotChart.</span></span></summary>
        <value><span data-ttu-id="8a309-744"><b>true</b> si les boutons de champ d’axe d’un tableau croisé dynamique doivent être affichés ; sinon, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-744"><b>true</b> if axis field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="8a309-745">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="8a309-745">Read/write.</span></span></para>
          <para><span data-ttu-id="8a309-746">Définissez la propriété sur true pour afficher les boutons de champ <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> d’axe <b></b> sur le tableau croisé dynamique spécifié.</span><span class="sxs-lookup"><span data-stu-id="8a309-746">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> property to <b>true</b> to display axis field buttons on the specified PivotChart.</span></span> <span data-ttu-id="8a309-747">Définissez la propriété sur <b>False</b> pour masquer les boutons.</span><span class="sxs-lookup"><span data-stu-id="8a309-747">Set the property to <b>false</b> to hide the buttons.</span></span></para>
          <para><span data-ttu-id="8a309-748">La propriété correspond à la commande Afficher les boutons de champ d’axe dans la liste de listes des boutons de champ de l’onglet Analyse, qui est disponible lorsqu’un tableau croisé dynamique <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> est sélectionné.</span><span class="sxs-lookup"><span data-stu-id="8a309-748">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> property corresponds to the Show Axis Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataLabelsOverMaximum">
      <MemberSignature Language="C#" Value="public bool ShowDataLabelsOverMaximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDataLabelsOverMaximum" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowDataLabelsOverMaximum" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDataLabelsOverMaximum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDataLabelsOverMaximum { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-749">Cette propriété renvoie ou définit une valeur indiquant s'il faut afficher les étiquettes de données lorsque la valeur est supérieure à la valeur maximale de l'axe des ordonnées.</span><span class="sxs-lookup"><span data-stu-id="8a309-749">Returns or sets whether to show the data labels when the value is greater than the  maximum value on the value axis.</span></span>  <span data-ttu-id="8a309-750">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="8a309-750">Read/write.</span></span></summary>
        <value><span data-ttu-id="8a309-751"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="8a309-751"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="8a309-p253">Si vous modifiez l'axe des ordonnées de telle sorte qu'il est maintenant plus petit que la taille des points de données, vous pouvez utiliser cette propriété pour indiquer s'il faut afficher les étiquettes des données. Cette propriété s'applique uniquement aux graphiques 2D.</span><span class="sxs-lookup"><span data-stu-id="8a309-p253">If you change the value axis in such a way that it became  smaller than the size of the data points, you can use this property to set whether to show the data labels. This property applies to 2-D charts only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowLegendFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowLegendFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLegendFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLegendFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLegendFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-754">Obtient ou définit s’il faut afficher les boutons de champ de légende dans un tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="8a309-754">Gets or sets whether to display legend field buttons on a PivotChart.</span></span></summary>
        <value><span data-ttu-id="8a309-755"><b>true</b> si les boutons de champ de légende d’un tableau croisé dynamique doivent être affichés ; sinon, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-755"><b>true</b> if legend field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="8a309-756">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="8a309-756">Read/write.</span></span></para>
          <para><span data-ttu-id="8a309-757">Définissez la propriété sur true pour afficher les boutons de champ de légende <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> sur le tableau croisé dynamique spécifié. <b></b></span><span class="sxs-lookup"><span data-stu-id="8a309-757">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> property to <b>true</b> to display legend field buttons on the specified PivotChart.</span></span> <span data-ttu-id="8a309-758">Définissez la propriété sur <b>False</b> pour masquer les boutons.</span><span class="sxs-lookup"><span data-stu-id="8a309-758">Set the property to <b>false</b> to hide the buttons.</span></span></para>
          <para><span data-ttu-id="8a309-759">La propriété correspond à la commande Afficher les boutons de champ de légende dans la liste de listes listes de boutons de champ de l’onglet Analyse, qui est disponible lorsqu’un tableau croisé dynamique <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> est sélectionné.</span><span class="sxs-lookup"><span data-stu-id="8a309-759">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> property corresponds to the Show Legend Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReportFilterFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowReportFilterFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReportFilterFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReportFilterFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReportFilterFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-760">Obtient ou définit s’il faut afficher les boutons de champ de filtre de rapport dans un tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="8a309-760">Gets or sets whether to display the report filter field buttons on a PivotChart.</span></span></summary>
        <value><span data-ttu-id="8a309-761"><b>true</b> si les boutons de champ de filtre de rapport dans un tableau croisé dynamique doivent être affichés ; sinon, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-761"><b>true</b> if the report filter field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="8a309-762">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="8a309-762">Read/write.</span></span></para>
          <para><span data-ttu-id="8a309-763">Définissez la propriété sur true pour afficher les boutons Champ filtre <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> de rapport sur le tableau croisé dynamique spécifié. <b></b></span><span class="sxs-lookup"><span data-stu-id="8a309-763">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> property to <b>true</b> to display the Report Filter Field buttons on the specified PivotChart.</span></span> <span data-ttu-id="8a309-764">Définissez la propriété sur <b>False</b> pour masquer les boutons.</span><span class="sxs-lookup"><span data-stu-id="8a309-764">Set the property to <b>false</b> to hide the buttons.</span></span></para>
          <para><span data-ttu-id="8a309-765">La propriété correspond à la commande Afficher les boutons de champ Filtre de rapport dans la liste de listes listes de boutons de champ de l’onglet Analyse, qui est disponible lorsqu’un tableau croisé dynamique <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> est sélectionné.</span><span class="sxs-lookup"><span data-stu-id="8a309-765">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> property corresponds to the Show Report Filter Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowValueFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowValueFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValueFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowValueFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowValueFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-766">Obtient ou définit s’il faut afficher les boutons de champ de valeur dans un tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="8a309-766">Gets or sets whether to display the value field buttons on a PivotChart.</span></span></summary>
        <value><span data-ttu-id="8a309-767"><b>true</b> si les boutons de champ de valeur d’un tableau croisé dynamique doivent être affichés ; sinon, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-767"><b>true</b> if the value field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="8a309-768">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="8a309-768">Read/write.</span></span></para>
          <para><span data-ttu-id="8a309-769">Définissez <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> la propriété sur <b>true</b> pour afficher les boutons Champ de valeur dans le tableau croisé dynamique spécifié.</span><span class="sxs-lookup"><span data-stu-id="8a309-769">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> property to <b>true</b> to display the Value Field buttons on the specified PivotChart.</span></span> <span data-ttu-id="8a309-770">Définissez la propriété sur <b>False</b> pour masquer le bouton.</span><span class="sxs-lookup"><span data-stu-id="8a309-770">Set the property to <b>false</b> to hide the button.</span></span></para>
          <para><span data-ttu-id="8a309-771">La propriété correspond à la commande Afficher les boutons de champ Valeur dans la liste de listes listes de boutons de champ de l’onglet Analyse, qui est disponible lorsqu’un tableau croisé dynamique <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> est sélectionné.</span><span class="sxs-lookup"><span data-stu-id="8a309-771">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> property corresponds to the Show Value Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindow">
      <MemberSignature Language="C#" Value="public bool ShowWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-772"><b>True</b> si le graphique incorporé est affiché dans une fenêtre distincte.</span><span class="sxs-lookup"><span data-stu-id="8a309-772"><b>True</b> if the embedded chart is displayed in a separate window.</span></span> <span data-ttu-id="8a309-773"><see cref="T:Microsoft.Office.Interop.Excel.Chart" />L’objet utilisé avec cette propriété doit faire référence à un graphique incorporé.</span><span class="sxs-lookup"><span data-stu-id="8a309-773">The <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object used with this property must refer to an embedded chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SideWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls SideWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls SideWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SideWall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SideWall As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ SideWall { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-774">Renvoie un objet qui permet à l’utilisateur de mettre en forme individuellement le mur <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> latéral d’un graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-774">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that allows the user to individually format the side wall of a 3-D chart.</span></span> <span data-ttu-id="8a309-775">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="8a309-775">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Walls" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeWithWindow">
      <MemberSignature Language="C#" Value="public bool SizeWithWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SizeWithWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SizeWithWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeWithWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SizeWithWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-776"><b>La</b> valeur true si Microsoft Excel re dimensionne le graphique pour qu’il corresponde à la taille de la fenêtre de la feuille de graphique.</span><span class="sxs-lookup"><span data-stu-id="8a309-776"><b>True</b> if Microsoft Excel resizes the chart to match the size of the chart sheet window.</span></span> <span data-ttu-id="8a309-777"><b>False</b> si la taille du graphique n’est pas attachée à la taille de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="8a309-777"><b>False</b> if the chart size isn't attached to the window size.</span></span> <span data-ttu-id="8a309-778">S’applique uniquement aux feuilles graphiques (ne s’applique pas aux graphiques incorporés).</span><span class="sxs-lookup"><span data-stu-id="8a309-778">Applies only to chart sheets (doesn't apply to embedded charts).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-779">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="8a309-779">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubType">
      <MemberSignature Language="C#" Value="public int SubType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SubType" />
      <MemberSignature Language="VB.NET" Value="Public Property SubType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubType { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-780">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-780">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SurfaceGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SurfaceGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ SurfaceGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-781">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objet qui représente le groupe de graphiques de surface d’un graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-781">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the surface chart group of a 3-D chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-782">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> objet pour un graphique ou une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="8a309-782">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="8a309-783">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="8a309-783">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-784">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="8a309-784">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="8a309-785">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-785">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-786">Chaîne qui contient le mot de passe qui respecte la casse à utiliser pour supprimer la protection de la feuille ou du classeur.</span><span class="sxs-lookup"><span data-stu-id="8a309-786">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span></span> <span data-ttu-id="8a309-787">Si la feuille ou le classeur n'est pas protégé par un mot de passe, cet argument est ignoré.</span><span class="sxs-lookup"><span data-stu-id="8a309-787">If the sheet or workbook isn't protected with a password, this argument is ignored.</span></span> <span data-ttu-id="8a309-788">Si vous omettez cet argument pour une feuille protégée par un mot de passe, vous serez invité à saisir ce dernier.</span><span class="sxs-lookup"><span data-stu-id="8a309-788">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span></span> <span data-ttu-id="8a309-789">Si vous omettez cet argument pour un classeur protégé par un mot de passe, la méthode échoue.</span><span class="sxs-lookup"><span data-stu-id="8a309-789">If you omit this argument for a workbook that's protected with a password, the method fails.</span></span></param>
        <summary><span data-ttu-id="8a309-790">Cette méthode supprime la protection d'une feuille ou d'un classeur.</span><span class="sxs-lookup"><span data-stu-id="8a309-790">Removes protection from a sheet or workbook.</span></span> <span data-ttu-id="8a309-791">Elle est sans effet si la feuille ou le classeur n'est pas protégé.</span><span class="sxs-lookup"><span data-stu-id="8a309-791">This method has no effect if the sheet or workbook isn't protected.</span></span></summary>
        <remarks><para><span data-ttu-id="8a309-p262">Si vous oubliez le mot de passe, vous ne pourrez pas supprimer la protection de la feuille ou du classeur. Pensez à conserver en lieu sûr une liste de vos mots de passe et les noms des documents correspondants.</span><span class="sxs-lookup"><span data-stu-id="8a309-p262">If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-794">Cette propriété détermine si l'objet est visible.</span><span class="sxs-lookup"><span data-stu-id="8a309-794">Determines whether the object is visible.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Walls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls Walls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls Walls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Walls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Walls As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ Walls { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(86)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(86)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-795">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> objet qui représente les murs du graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-795">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D chart.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8a309-796">Cette propriété ne s’applique pas aux graphiques en secteurs 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-796">This property doesn't apply to 3-D pie charts.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WallsAndGridlines2D">
      <MemberSignature Language="C#" Value="public bool WallsAndGridlines2D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WallsAndGridlines2D" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.WallsAndGridlines2D" />
      <MemberSignature Language="VB.NET" Value="Public Property WallsAndGridlines2D As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WallsAndGridlines2D { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a309-797">Cette propriété a la valeur <b>True</b> si le quadrillage est dessiné en 2D dans un graphique 3D.</span><span class="sxs-lookup"><span data-stu-id="8a309-797"><b>True</b> if gridlines are drawn two-dimensionally on a 3-D chart.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XYGroups">
      <MemberSignature Language="C#" Value="public object XYGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object XYGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.XYGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XYGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8a309-798">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="8a309-798">Optional <b>Object</b>.</span></span> <span data-ttu-id="8a309-799">Spécifie le groupe de graphiques.</span><span class="sxs-lookup"><span data-stu-id="8a309-799">Specifies the chart group.</span></span></param>
        <summary><span data-ttu-id="8a309-800">Sur un graphique 2D, renvoie un objet qui représente soit un seul groupe de graphiques en nuages de points (un objet), soit une collection de groupes de graphiques en nuages de points <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> (une collection).</span><span class="sxs-lookup"><span data-stu-id="8a309-800">On a 2-D chart, returns an object that represents either a single scatter chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the scatter chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
