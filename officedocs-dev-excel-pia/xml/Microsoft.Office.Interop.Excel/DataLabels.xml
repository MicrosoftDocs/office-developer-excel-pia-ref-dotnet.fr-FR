<Type Name="DataLabels" FullName="Microsoft.Office.Interop.Excel.DataLabels">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59a0db665b8a81c22e071c0c60a0f23b4492e55a" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20584552" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface DataLabels : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract DataLabels implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.DataLabels" />
  <TypeSignature Language="VB.NET" Value="Public Interface DataLabels&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class DataLabels : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208B3-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9d318-101">Collection de tous les <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> les objets de la série spécifiée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d318-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> objects for the specified series.</span>
      </span>
      <span data-ttu-id="9d318-102">Chaque objet <b>DataLabel</b> représente une étiquette de données pour une courbe de tendance ou un point.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d318-102">Each <b>DataLabel</b> object represents a data label for a point or trendline.</span>
      </span>
      <span data-ttu-id="9d318-103">Pour une série sans point définissable (par exemple une série en aires), la collection <b>DataLabels</b> contient une seule étiquette de données.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d318-103">For a series without definable points (such as an area series), the <b>DataLabels</b> collection contains a single data label.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="9d318-104">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.Series.DataLabels(System.Object)" /> méthode pour renvoyer la collection <b>DataLabels</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="9d318-104">Use the <see cref="M:Microsoft.Office.Interop.Excel.Series.DataLabels(System.Object)" /> method to return the <b>DataLabels</b> collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="9d318-105">Utilisez <b>DataLabels</b>(<paramref name="index" />), où <paramref name="index" /> est le numéro d’index d’étiquette de données, pour renvoyer un seul objet <b>DataLabel</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="9d318-105">Use <b>DataLabels</b>(<paramref name="index" />), where <paramref name="index" /> is the data-label index number, to return a single <b>DataLabel</b> object.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataLabel _Default (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DataLabel _Default([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataLabels._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Default (Index As Object) As DataLabel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::DataLabel ^ _Default(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataLabel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9d318-106">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-106">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy10">
      <MemberSignature Language="C#" Value="public void _Dummy10 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy10() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataLabels._Dummy10" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy10 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy10();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d318-107">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy13">
      <MemberSignature Language="C#" Value="public void _Dummy13 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy13() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataLabels._Dummy13" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy13 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy13();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d318-108">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-108">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy16">
      <MemberSignature Language="C#" Value="public void _Dummy16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy16() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataLabels._Dummy16" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy16 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d318-109">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy17">
      <MemberSignature Language="C#" Value="public void _Dummy17 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy17() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataLabels._Dummy17" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy17 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy17();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65553)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d318-110">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-110">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy9">
      <MemberSignature Language="C#" Value="public void _Dummy9 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy9() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataLabels._Dummy9" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy9 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy9();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65545)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d318-111">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-111">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-112">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-112">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="9d318-113">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-113">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaleFont">
      <MemberSignature Language="C#" Value="public object AutoScaleFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AutoScaleFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.AutoScaleFont" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScaleFont As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AutoScaleFont { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-114">
            <b>La valeur true</b> si le texte de l’objet modifie la taille de police lorsque la taille de l’objet change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-114">
              <b>True</b> if the text in the object changes font size when the object size changes.</span>
          </span>
          <span data-ttu-id="9d318-115">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-115">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="9d318-116">
            <b>Objet</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-116">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d318-117">
            <b>Objet</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-117">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoText">
      <MemberSignature Language="C#" Value="public bool AutoText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.AutoText" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoText { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(135)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(135)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(135)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-p104">
            <b>True</b> si l’objet génère automatiquement le texte approprié en fonction du contexte. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-p104">
              <b>True</b> if the object automatically generates appropriate text based on context. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-120">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Border" /> objet qui représente la bordure de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-120">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Border" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-121">Renvoie le nombre d'objets dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-121">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="9d318-122">Valeur <b>Integer</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-122">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-123">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-123">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="9d318-124">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-124">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="9d318-125">En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-125">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-126">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-126">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="9d318-127">Par exemple, Microsoft Excel possède le code créateur XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-127">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataLabels.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d318-128">Supprime l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-128">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As ChartFillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFillFormat ^ Fill { Microsoft::Office::Interop::Excel::ChartFillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-129">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> objet pour une forme spécifiée ou un <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> objet pour un graphique spécifié qui contient les propriétés de la forme ou le graphique de la mise en forme du remplissage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-129">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart.</span>
          </span>
          <span data-ttu-id="9d318-130">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-130">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-131">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Font" /> objet qui représente la police de l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-131">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Font" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFormat Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As ChartFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFormat ^ Format { Microsoft::Office::Interop::Excel::ChartFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-132">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-132">Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object.</span>
          </span>
          <span data-ttu-id="9d318-133">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-133">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataLabels.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-134">Cette propriété renvoie ou définit l'alignement horizontal de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-134">Returns or sets the horizontal alignment for the specified object.</span>
          </span>
          <span data-ttu-id="9d318-135">
            <b>Objet</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-135">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-136">Les constantes suivantes peuvent être utilisées :</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-136">The following constants can be used:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-137">
              <b>xlCenter</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-137">
                <b>xlCenter</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-138">
              <b>xlDistributed</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-138">
                <b>xlDistributed</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-139">
              <b>xlJustify</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-139">
                <b>xlJustify</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-140">t 
            <b>xlLef</b></span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-140">
                <b>xlLef</b>t</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-141">
              <b>xlRight</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-141">
                <b>xlRight</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-142">Certaines de ces constantes ne seront peut-être pas disponibles, en fonction de la langue sélectionnée ou installée (par exemple, le français).</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-142">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-143">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object qui représente l’intérieur de l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-143">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Interior" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataLabel Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DataLabel Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataLabels.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As DataLabel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::DataLabel ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataLabel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9d318-144">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-144">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9d318-145">Nom ou numéro d'index de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-145">The name or index number for the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d318-146">Renvoie un seul objet de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-146">Returns a single object from the collection.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-p112">Renvoie le nom de l'objet. En lecture seule <b>chaîne</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-p112">Returns the name of the object. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public string NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-p113">Cette propriété renvoie ou définit le code du format de l'objet. En lecture/écriture, <b>chaîne</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-p113">Returns or sets the format code for the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-151">Le code de format est la même chaîne que l'option de Codes de Format dans la boîte de dialogue Format de cellule.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-151">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span>
            </span>
            <span data-ttu-id="9d318-152">La fonction <b>Format</b> utilise des chaînes de code de format différentes <b>NumberFormat</b> et <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> propriétés.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-152">The <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> properties.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLinked">
      <MemberSignature Language="C#" Value="public bool NumberFormatLinked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NumberFormatLinked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.NumberFormatLinked" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLinked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NumberFormatLinked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(194)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-p115">
            <b>True</b> si le format numérique est lié aux cellules (de sorte que le format de nombre est modifié dans les étiquettes lorsqu'il est modifié dans les cellules). En lecture/écriture <b>booléen</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-p115">
              <b>True</b> if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells). Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-155">Cette propriété renvoie ou définit le code du format de l'objet sous forme de chaîne dans la langue de l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-155">Returns or sets the format code for the object as a string in the language of the user.</span>
          </span>
          <span data-ttu-id="9d318-156">
            <b>Objet</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-156">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-157">La fonction <b>Format</b> utilise des chaînes de code de format différentes que la <see cref="P:Microsoft.Office.Interop.Excel.DataLabels.NumberFormat" /> et propriétés <b>NumberFormatLocal</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-157">The <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.DataLabels.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-158">Orientation du texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-158">The text orientation.</span>
          </span>
          <span data-ttu-id="9d318-159">Peut être une valeur entière comprise entre -90 et 90 degrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-159">Can be an integer value from –90 to 90 degrees.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-160">Les constantes suivantes peuvent être utilisées :</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-160">The following constants can be used:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-161">
              <b>xlDownward</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-161">
                <b>xlDownward </b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-162">
              <b>xlHorizontal</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-162">
                <b>xlHorizontal </b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-163">
              <b>xlUpward</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-163">
                <b>xlUpward </b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-164">
              <b>xlVertical</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-164">
                <b>xlVertical</b>
              </span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-p118">Renvoie l'objet parent de l'objet spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-p118">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDataLabelPosition Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDataLabelPosition Position" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As XlDataLabelPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDataLabelPosition Position { Microsoft::Office::Interop::Excel::XlDataLabelPosition get(); void set(Microsoft::Office::Interop::Excel::XlDataLabelPosition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(133)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(133)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(133)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDataLabelPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-167">Renvoie ou définit la position de l'étiquette de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-167">Returns or sets the position of the data label.</span>
          </span>
          <span data-ttu-id="9d318-168">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelPosition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-168">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelPosition" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Propagate">
      <MemberSignature Language="C#" Value="public void Propagate (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Propagate([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataLabels.Propagate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Propagate (Index As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Propagate(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3087)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9d318-169">Numéro d’index de l’étiquette de données pour propager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-169">The index number of the data label to propagate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d318-170">Vous permet de prendre le contenu et la mise en forme d’une seule étiquette de données et s’appliquent à chaque étiquette de données dans la série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-170">Enables you to take the contents and formatting of a single data label and apply it to every other data label on the series.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="9d318-171">Si l’étiquette de données source prend en charge les champs qui sont incompatibles avec l’étiquette de données de destination, ces champs seront insérés en tant que leurs [nom du champ].</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-171">If the source data label supports fields that are incompatible with the destination data label, those fields will be inserted as their [FIELD NAME].</span>
            </span>
            <span data-ttu-id="9d318-172">Par exemple, si une étiquette de données sur une série de graphique en secteurs avec un champ pourcentage est propagée dans une étiquette de données sur un graphique en histogrammes, ce champ Pourcentage devient un champ affichant [pourcentage].</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-172">For example, if a data label on a pie series with a percentage field is propagated to a data label on a column chart, that percentage field will become an unresolved field showing [PERCENTAGE].</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-173">
              <b>Remarque</b>: passage d’un argument de zéro (0) réinitialise les étiquettes de données pour votre prototype en cours.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-173">
                <b>Note</b>: Passing an argument of zero (0) resets the data labels to your current prototype.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-174">Cette propriété renvoie ou définit le sens de lecture de l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-174">Returns or sets the reading order for the specified object.</span>
          </span>
          <span data-ttu-id="9d318-175">Peut être une des constantes suivantes : <b>xlContext</b>, <b>xlLTR</b> (de gauche à droite) ou <b>xlRTL</b> (de droite à gauche).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-175">Can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</span>
          </span>
          <span data-ttu-id="9d318-176">Type de données <b>Integer</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-176">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-177">Certaines de ces constantes ne seront peut-être pas disponibles, en fonction de la langue sélectionnée ou installée (par exemple, le français).</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-177">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataLabels.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d318-178">Sélectionne l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-178">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Separator">
      <MemberSignature Language="C#" Value="public object Separator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Separator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Separator" />
      <MemberSignature Language="VB.NET" Value="Public Property Separator As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Separator { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2027)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-179">Définit ou renvoie un <b>objet</b> représentant le séparateur utilisé pour les étiquettes de données dans un graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-179">Sets or returns an <b>Object</b> representing the separator used for the data labels on a chart.</span>
          </span>
          <span data-ttu-id="9d318-180">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-180">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-181">Le graphique doit d'abord être actif avant que vous pouvez accéder par programmation ; les étiquettes de données dans le cas contraire, une erreur d'exécution se produit.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-181">The chart must first be active before you can access the data labels programmatically; otherwise, a run-time error occurs.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public bool Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-182">
            <b>True</b> si la police est une police ombrée ou si l’objet est ombré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-182">
              <b>True</b> if the font is a shadow font or if the object has a shadow.</span>
          </span>
          <span data-ttu-id="9d318-183">Type de données <b>Boolean</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-183">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowBubbleSize">
      <MemberSignature Language="C#" Value="public bool ShowBubbleSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowBubbleSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.ShowBubbleSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowBubbleSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowBubbleSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2026)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2026)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2026)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-p124">Cette propriété renvoie la valeur <b>True</b> pour afficher la taille des bulles pour les étiquettes de données sur un graphique et la valeur <b>False</b> pour la masquer. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-p124">
              <b>True</b> to show the bubble size for the data labels on a chart. <b>False</b> to hide. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-187">Le graphique doit d'abord être actif avant que vous puissiez accéder aux étiquettes de données par programmation sinon, une erreur d'exécution se produit.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-187">The chart must first be active before you can access the data labels programmatically or a run-time error will occur.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCategoryName">
      <MemberSignature Language="C#" Value="public bool ShowCategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCategoryName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.ShowCategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCategoryName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCategoryName { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2023)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2023)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2023)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-p125">Cette propriété renvoie la valeur <b>True</b> pour afficher le nom des catégories pour les étiquettes de données dans un graphique. Elle renvoie la valeur <b>False</b> pour le masquer. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-p125">
              <b>True</b> to display the category name for the data labels on a chart. <b>False</b> to hide. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-191">Le graphique doit d'abord être actif avant que vous puissiez accéder aux étiquettes de données par programmation sinon, une erreur d'exécution se produit.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-191">The chart must first be active before you can access the data labels programmatically or a run-time error will occur.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowLegendKey">
      <MemberSignature Language="C#" Value="public bool ShowLegendKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLegendKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.ShowLegendKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLegendKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLegendKey { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(171)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-p126">Cette propriété a la valeur <b>True</b> si le symbole de légende d'étiquette de données est visible. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-p126">
              <b>True</b> if the data label legend key is visible. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPercentage">
      <MemberSignature Language="C#" Value="public bool ShowPercentage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPercentage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.ShowPercentage" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPercentage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPercentage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2025)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2025)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2025)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-p127">Cette propriété renvoie la valeur <b>True</b> pour afficher la valeur de pourcentage pour les étiquettes de données dans un graphique. Elle renvoie la valeur <b>False</b> pour la masquer. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-p127">
              <b>True</b> to display the percentage value for the data labels on a chart. <b>False</b> to hide. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-197">Le graphique doit d'abord être actif avant que vous puissiez accéder aux étiquettes de données par programmation sinon, une erreur d'exécution se produit.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-197">The chart must first be active before you can access the data labels programmatically or a run-time error will occur.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowRange">
      <MemberSignature Language="C#" Value="public bool ShowRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.ShowRange" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRange { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3086)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3086)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3086)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-198">Permet de basculer entre le champ de <b>tranche</b> s’il existe sur la plage d’étiquette de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-198">Used to toggle the <b>Range</b> field if it exists on the data label range.</span>
          </span>
          <span data-ttu-id="9d318-199">
            <b>Boolean</b> (<b>bool</b> en c#) En lecture/écriture</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-199">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-200">L’objet <b>Range</b> mappe une plage de cellules arbitraire à une plage d’étiquettes de données, afin que chaque étiquette de données correspond à l’une des cellules de la plage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-200">The <b>Range</b> object maps an arbitrary range of cells to a range of data labels, so that each data label corresponds to one of the cells in the range.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSeriesName">
      <MemberSignature Language="C#" Value="public bool ShowSeriesName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSeriesName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.ShowSeriesName" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSeriesName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSeriesName { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2022)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2022)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2022)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-p129">Cette propriété renvoie ou définit un objet de type <b>Boolean</b> pour indiquer le comportement d'affichage du nom de la série pour les étiquettes de données dans un graphique. Cette propriété a la valeur <b>True</b> pour afficher le nom de la série. Elle a la valeur <b>False</b> pour le masquer. En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-p129">Returns or sets a <b>Boolean</b> to indicate the series name display behavior for the data labels on a chart. <b>True</b> to show the series name. <b>False</b> to hide. Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-205">Le graphique doit d'abord être actif avant que vous puissiez accéder aux étiquettes de données par programmation sinon, une erreur d'exécution se produit.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-205">The chart must first be active before you can access the data labels programmatically or a run-time error will occur.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowValue">
      <MemberSignature Language="C#" Value="public bool ShowValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.ShowValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowValue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-p130">Cette propriété renvoie ou définit un objet de type <b>Boolean</b> correspondant à un comportement d'affichage des valeurs d'étiquettes de données d'un graphique spécifié. La valeur <b>True</b> affiche les valeurs. La valeur <b>False</b> les masque. En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-p130">Returns or sets a <b>Boolean</b> corresponding to a specified chart's data label values display behavior. <b>True</b> displays the values. <b>False</b> to hide. Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-210">Le graphique doit d'abord être actif avant que vous puissiez accéder aux étiquettes de données par programmation sinon, une erreur d'exécution se produit.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-210">The specified chart must first be active before you can access the data labels programmatically or a run-time error will occur.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public object Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Type { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-211">Cette propriété renvoie ou définit le type d’étiquette.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-211">Returns or sets the label type.</span>
          </span>
          <span data-ttu-id="9d318-212">
            <b>Objet</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-212">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d318-213">
            <b>Objet</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-213">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataLabels.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d318-214">Cette propriété renvoie ou définit l'alignement vertical de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d318-214">Returns or sets the vertical alignment of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="9d318-215">Les constantes suivantes peuvent être utilisées :</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-215">The following constants can be used:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-216">
              <b>xlBottom</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-216">
                <b>xlBottom</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-217">
              <b>xlCenter</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-217">
                <b>xlCenter</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-218">
              <b>xlDistributed</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-218">
                <b>xlDistributed</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-219">
              <b>xlJustify</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-219">
                <b>xlJustify</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="9d318-220">
              <b>xlTop</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="9d318-220">
                <b>xlTop</b>
              </span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>