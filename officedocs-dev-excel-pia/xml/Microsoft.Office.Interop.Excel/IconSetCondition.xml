<Type Name="IconSetCondition" FullName="Microsoft.Office.Interop.Excel.IconSetCondition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60529c90129fadd3409df7f77d68bfab6f56e963" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50000210" /></Metadata><TypeSignature Language="C#" Value="public interface IconSetCondition" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IconSetCondition" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.IconSetCondition" />
  <TypeSignature Language="VB.NET" Value="Public Interface IconSetCondition" />
  <TypeSignature Language="C++ CLI" Value="public interface class IconSetCondition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024497-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b1bf6-101">Cet objet représente une règle de mise en forme conditionnelle de jeu d’icônes.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-101">Represents an icon set conditional formatting rule.</span></span></summary>
    <remarks><para><span data-ttu-id="b1bf6-102">Tous les objets de mise en forme conditionnelle sont contenus dans un objet de collection, qui <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> est un enfant d’une <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-102">All conditional formatting objects are contained within a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection object, which is a child of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection.</span></span> <span data-ttu-id="b1bf6-103">Vous pouvez créer une règle de mise en forme de jeu d’icônes à l’aide de la méthode ou de la <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode de la collection <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddIconSetCondition" /> <b>FormatConditions.</b></span><span class="sxs-lookup"><span data-stu-id="b1bf6-103">You can create an icon set formatting rule by using either the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method or <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddIconSetCondition" /> method of the <b>FormatConditions</b> collection.</span></span></para>
      <para><span data-ttu-id="b1bf6-104">Chaque jeu d’icônes contient trois, quatre ou cinq icônes.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-104">Each icon set contains three, four, or five icons.</span></span> <span data-ttu-id="b1bf6-105">Vous utilisez la propriété de l’objet pour renvoyer un objet afin de spécifier l’un des jeux <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> d’icônes intégrés.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-105">You use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> object to return an <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> object to specify one of the built-in icon sets.</span></span> <span data-ttu-id="b1bf6-106">Chaque icône individuelle du jeu d’icônes est ensuite affectée à un sous-ensemble des valeurs de la plage par les membres de <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> laobect.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-106">Each individual icon in the icon set is then assigned to a subset of the values of the range by the members of the <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> obect.</span></span> <span data-ttu-id="b1bf6-107">Le type de seuil est également spécifié par cet objet.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-107">The type of threshold is also specified by this object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-108">Lorsqu’elle est utilisée sans qualificateur d’objet, cette propriété renvoie un objet qui représente  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> Microsoft Office’application Excel.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-108">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="b1bf6-109">Lorsqu’elle est utilisée avec un qualificateur d’objet, elle renvoie un objet <b>Application</b> qui représente l’auteur de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-109">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="b1bf6-110">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-110">Read-only.</span></span></summary>
        <value><span data-ttu-id="b1bf6-111"><b>Application</b> (voir ci-dessus)</span><span class="sxs-lookup"><span data-stu-id="b1bf6-111"><b>Application</b> (see above)</span></span></value>
        <remarks><para><span data-ttu-id="b1bf6-112">Vous pouvez utiliser cette propriété avec un objet OLE Automation pour renvoyer l'application de cet objet.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-112">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range AppliesTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range AppliesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliesTo As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ AppliesTo { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-113">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet spécifiant la plage de cellules à laquelle la règle de mise en forme est appliquée.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-113">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Range" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-114">Renvoie un nombre integer 32 bits équivalent à une valeur qui indique l’application dans laquelle cet objet a <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> été créé.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-114">Returns a 32-bit integer equivalent to an <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> value that indicates the application in which this object was created.</span></span> <span data-ttu-id="b1bf6-115">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-115">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="b1bf6-116">Si l'objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, qui équivaut au nombre hexadécimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-116">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="b1bf6-117">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, dans lequel chaque application possède un code de créateur à quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-117">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="b1bf6-118">Par exemple, Microsoft Excel possède le code de créateur XCEL.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-118">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1bf6-119">Supprime l’objet de règle de mise en forme conditionnelle spécifié.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-119">Deletes the specified conditional formatting rule object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-120">Cette propriété renvoie ou définit une valeur de type <b>String</b> représentant une formule qui détermine les valeurs auxquelles sera appliqué le jeu d'icônes.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-120">Returns or sets a <b>String</b> representing a formula, which determines the values to which the icon set will be applied.</span></span></summary>
        <value><span data-ttu-id="b1bf6-121"><b>String</b></span><span class="sxs-lookup"><span data-stu-id="b1bf6-121"><b>String</b></span></span></value>
        <remarks><para><span data-ttu-id="b1bf6-p106">Cette propriété permet de limiter la plage de valeurs affichant le format conditionnel. C'est utile par exemple lorsqu'une plage de nombres contient à la fois des valeurs positives et négatives. Vous pouvez créer plus d'un format conditionnel pour cette plage, un pour les valeurs positives et un autre pour les valeurs négatives.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-p106">This property is useful to limit the range of values that will display the conditional format. A typical scenario is when you have a range of numbers containing both positive and negative values. You may want to create more than one conditional format for this range of numbers—one for positive values and another for negative values.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IconCriteria">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.IconCriteria IconCriteria { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.IconCriteria IconCriteria" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconCriteria" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconCriteria As IconCriteria" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::IconCriteria ^ IconCriteria { Microsoft::Office::Interop::Excel::IconCriteria ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2727)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2727)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.IconCriteria</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-125">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> collection, qui représente l’ensemble de critères d’une règle de mise en forme conditionnelle de jeu d’icônes.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-125">Returns an <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> collection, which represents the set of criteria for an icon set conditional formatting rule.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /></value>
        <remarks><para><span data-ttu-id="b1bf6-126">Une fois que vous <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> avez la collection, vous pouvez utiliser la <see cref="P:Microsoft.Office.Interop.Excel.IconCriteria.Item(System.Object)" /> propriété de la collection pour renvoyer un <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> objet.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-126">After you have the <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" />collection, you can use the <see cref="P:Microsoft.Office.Interop.Excel.IconCriteria.Item(System.Object)" /> property of the collection to return an <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> object.</span></span> <span data-ttu-id="b1bf6-127"><see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" />L’objet représente un critère unique d’un jeu d’icônes.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-127">The <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> object represents a single criterion of an icon set.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSet">
      <MemberSignature Language="C#" Value="public object IconSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IconSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" />
      <MemberSignature Language="VB.NET" Value="Public Property IconSet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IconSet { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-128">Renvoie ou définit une <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection, qui spécifie le jeu d’icônes utilisé dans le format conditionnel.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-128">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection, which specifies the icon set used in the conditional format.</span></span></summary>
        <value><span data-ttu-id="b1bf6-129"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="b1bf6-129"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="b1bf6-130">Vous pouvez affecter le jeu d’icônes à l’aide <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> de la propriété de <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> l’objet.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-130">You can assign the icon set by using the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> object.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAppliesToRange">
      <MemberSignature Language="C#" Value="public void ModifyAppliesToRange (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyAppliesToRange([in]class Microsoft.Office.Interop.Excel.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyAppliesToRange(Microsoft::Office::Interop::Excel::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2627)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="b1bf6-131">Plage à laquelle cette règle de mise en forme sera appliquée.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-131">The range to which this formatting rule will be applied.</span></span></param>
        <summary><span data-ttu-id="b1bf6-132">Définit la plage de cellules à laquelle cette règle de mise en forme s’applique.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-132">Sets the cell range to which this formatting rule applies.</span></span></summary>
        <remarks><para><span data-ttu-id="b1bf6-133">La plage doit être dans le style de référence A1 et être entièrement contenue dans la feuille parent de la <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-133">The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span></span> <span data-ttu-id="b1bf6-134">Elle peut inclure l'opérateur de plage (le signe deux-points), l'opérateur d'intersection (un espace) ou l'opérateur de liaison (une virgule).</span><span class="sxs-lookup"><span data-stu-id="b1bf6-134">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="b1bf6-135">Les signes dollar peuvent également être utilisés, mais ils sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-135">Dollar signs can also be used but they are ignored.</span></span></para>
          <para><span data-ttu-id="b1bf6-136">Vous pouvez également utiliser un nom défini en local à n'importe quel endroit de la plage, mais le nom doit appartenir au langage de la macro.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-136">You can also use a local defined name in any part of the range, but the name must be in the language of the macro.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-137">Renvoie l’objet parent pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-137">Returns the parent object for the specified object.</span></span> <span data-ttu-id="b1bf6-138">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-138">Read-only.</span></span></summary>
        <value><span data-ttu-id="b1bf6-139"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="b1bf6-139"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentileValues">
      <MemberSignature Language="C#" Value="public bool PercentileValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PercentileValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.PercentileValues" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentileValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PercentileValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-140">Renvoie ou définit une valeur de type <b>Boolean</b> qui indique si les seuils d’un format conditionnel de jeu d’icônes sont déterminés à l’aide de centiles.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-140">Returns or sets a <b>Boolean</b> value indicating if the thresholds for an icon set conditional format are determined by using percentiles.</span></span></summary>
        <value><span data-ttu-id="b1bf6-141"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="b1bf6-141"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="b1bf6-142">Cette propriété renvoie <b>False</b> si tous les seuils ne sont pas définis pour utiliser les centiles.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-142">This property will return <b>False</b> if not every threshold is set to percentile.</span></span> <span data-ttu-id="b1bf6-143">Attribuez-lui la valeur <b>True</b> pour utiliser systématiquement les centiles.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-143">Setting this property to <b>True</b> will set every threshold type to percentile.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-p112">Renvoie ou définit la valeur de priorité de la règle de mise en forme conditionnelle. La priorité détermine l’ordre d’évaluation lorsqu’une feuille de calcul contient plusieurs règles de mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-p112">Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</span></span></summary>
        <value><span data-ttu-id="b1bf6-146"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="b1bf6-146"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="b1bf6-p113">La valeur de priorité que vous définissez doit être un entier positif compris entre 1 et le nombre total de règles de mise en forme conditionnelle contenues dans la feuille de calcul. Dans la mesure où la valeur de priorité doit être unique pour toutes les règles de la feuille de calcul, le fait de modifier la priorité d'une règle de mise en forme conditionnelle donnée risque d'entraîner la modification de la valeur de priorité des autres règles de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-p113">When setting the priority, the value must be a positive integer between 1 and the total number of conditional formatting rules on the worksheet. The priority must be a unique value for all rules on the worksheet, so changing the priority for the specified conditional formatting rule may cause the priority value of the other rules on the worksheet to be shifted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PTCondition">
      <MemberSignature Language="C#" Value="public bool PTCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PTCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.PTCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PTCondition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PTCondition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-149">Renvoie une valeur de type <b>Boolean</b> indiquant si le format conditionnel est appliqué à un graphique de tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-149">Returns a <b>Boolean</b> value indicating if the conditional format is being applied to a PivotTable chart.</span></span> <span data-ttu-id="b1bf6-150">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-150">Read-only.</span></span></summary>
        <value><span data-ttu-id="b1bf6-151"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="b1bf6-151"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseOrder">
      <MemberSignature Language="C#" Value="public bool ReverseOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReverseOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ReverseOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReverseOrder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReverseOrder { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-152">Renvoie ou définit une valeur <b>Boolean</b> indiquant si l’ordre des icônes est inversé pour un jeu d’icônes.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-152">Returns or sets a <b>Boolean</b> value indicating if the order of icons is reversed for an icon set.</span></span></summary>
        <value><span data-ttu-id="b1bf6-153"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="b1bf6-153"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="b1bf6-p115">Par défaut, la plupart des jeux d’icônes que vous pouvez utiliser associent des images positives avec des valeurs supérieures. Par exemple, le jeu d’icônes de « 3 Feux de circulation » applique un cercle vert au seuil de valeur supérieure et un cercle rouge aux valeurs plus petites de la plage. Si, pour vos données, des valeurs inférieures sont plus souhaitables, par exemple pour des résultats de marathon, vous souhaiterez peut-être inverser l’ordre d’application des icônes à la plage pour associer le cercle vert aux valeurs les plus petites petites.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-p115">By default, most of the icon sets you can use associate positive images with higher values. For example, the "3 Traffic Lights" icon set applies a green circle to the upper value threshold and a red circle to the lowest values in the range. If your data is such that lower values are more desirable, such as marathon time results, you may want to reverse the order that icons are applied to the range to associate the green circle to the lowest values.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ScopeType" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeType As XlPivotConditionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotConditionScope ScopeType { Microsoft::Office::Interop::Excel::XlPivotConditionScope get(); void set(Microsoft::Office::Interop::Excel::XlPivotConditionScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotConditionScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-157">Renvoie ou définit l’une des constantes de l’éumération, qui détermine l’étendue de la mise en forme conditionnelle lorsqu’elle est appliquée à un graphique de tableau <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-157">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /></value>
        <remarks><para><span data-ttu-id="b1bf6-158">La valeur par défaut <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" /> est , qui définit l’étendue à l’aide de la <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-158">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, which sets the scope using the <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFirstPriority">
      <MemberSignature Language="C#" Value="public void SetFirstPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFirstPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.SetFirstPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFirstPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFirstPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2629)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1bf6-159">Attribue à la règle de mise en forme conditionnelle en question la valeur de priorité « 1 » de sorte qu’elle soit évaluée avant toutes les autres règles présentes dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-159">Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="b1bf6-160">Lorsque vous avez plusieurs règles de mise en forme conditionnelle dans une feuille de calcul, si la règle n’a pas été précédemment définie sur la priorité « 1 », cette méthode augmente d’une fois la priorité de toutes les autres règles existantes de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-160">When you have multiple conditional formatting rules in a worksheet, if the rule was not previously set to priority "1", this method will cause the priority of all other existing rules on the worksheet to be increased by one.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastPriority">
      <MemberSignature Language="C#" Value="public void SetLastPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.SetLastPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1bf6-161">Définit l’ordre d’évaluation de la règle de mise en forme conditionnelle de sorte qu’elle soit évaluée après toutes les autres règles présentes dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-161">Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="b1bf6-162">La valeur réelle de la priorité sera égale au nombre total de règles de mise en forme conditionnelle dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-162">The actual value of the priority will be equal to the total number of conditional formatting rules on the worksheet.</span></span> <span data-ttu-id="b1bf6-163">Lorsque vous avez plusieurs règles de mise en forme conditionnelle dans une feuille de calcul, cette méthode augmente d’une fois la priorité des règles dont la valeur de priorité est supérieure à celle de cette règle.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-163">When you have multiple conditional formatting rules in a worksheet, this method will cause the priority of rules that had a priority value greater than this rule to be increased by one.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowIconOnly">
      <MemberSignature Language="C#" Value="public bool ShowIconOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowIconOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ShowIconOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowIconOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowIconOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-164">Renvoie ou définit une valeur <b>Boolean</b> indiquant si seule l'icône est affichée pour un format conditionnel de jeu d'icônes.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-164">Returns or sets a <b>Boolean</b> value indicating if only the icon is displayed for an icon set conditional format.</span></span></summary>
        <value><span data-ttu-id="b1bf6-165"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="b1bf6-165"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="b1bf6-166">La valeur par défaut de cette propriété est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-166">The default value for this property is <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StopIfTrue">
      <MemberSignature Language="C#" Value="public bool StopIfTrue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopIfTrue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.StopIfTrue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StopIfTrue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopIfTrue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-167">Renvoie ou définit une valeur de type <b>Boolean</b> qui détermine si les autres règles de mise en forme conditionnelle de la cellule doivent être évaluées lorsque la règle active renvoie la valeur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-167">Returns or sets a <b>Boolean</b> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <b>True</b>.</span></span></summary>
        <value><span data-ttu-id="b1bf6-168"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="b1bf6-168"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="b1bf6-169">Pour assurer une compatibilité en amont, la valeur par défaut de cette propriété est <b>True</b>, ce qui correspond au comportement contraire à celui d'une règle de mise en forme créée dans l'interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-169">To support backward compatibility, the default value for this property is <b>True</b>, which is the opposite behavior of a formatting rule created in the user interface.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1bf6-170">Renvoie l’une des constantes de <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> l’éumération, qui spécifie le type de mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-170">Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format.</span></span> <span data-ttu-id="b1bf6-171">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="b1bf6-171">Read-only.</span></span></summary>
        <value><span data-ttu-id="b1bf6-172"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="b1bf6-172"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="b1bf6-173">Cette propriété retourne toujours la valeur 6, ce qui équivaut à <see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" /> .</span><span class="sxs-lookup"><span data-stu-id="b1bf6-173">This property will always return a value of 6, which is equivalent to <see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>