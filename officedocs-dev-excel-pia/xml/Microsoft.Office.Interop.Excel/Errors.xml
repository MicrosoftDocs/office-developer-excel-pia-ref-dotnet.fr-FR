<Type Name="Errors" FullName="Microsoft.Office.Interop.Excel.Errors">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4f3cf8bb7a50a611d29713aebe29d640596ae60" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20576397" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Errors" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Errors" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Errors" />
  <TypeSignature Language="VB.NET" Value="Public Interface Errors" />
  <TypeSignature Language="C++ CLI" Value="public interface class Errors" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002445C-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="50214-101">Cet objet représente les diverses erreurs de feuille de calcul pour une plage.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50214-101">Represents the various spreadsheet errors for a range.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="50214-102">
        <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.Range.Errors" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection pour renvoyer un objet <b>Errors</b> .</para>
        <para>Une fois qu’un objet <b>Errors</b> est renvoyé, vous pouvez utiliser la <see cref="P:Microsoft.Office.Interop.Excel.Error.Value" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.Error" /> objet pour vérifier des conditions de vérification des erreurs particulières.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="50214-102">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Errors" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection to return an <b>Errors</b> object.</para>
          <para>Once an <b>Errors</b> object is returned, you can use the <see cref="P:Microsoft.Office.Interop.Excel.Error.Value" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Error" /> object to check for particular error-checking conditions.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Error this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Error _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Errors._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Error" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Error ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Error ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Error</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="50214-103">Cette propriété permet à l'utilisateur d'accéder aux options de vérification des erreurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50214-103">Allows the user to to access error checking options.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="50214-104">
            <para>Référence du <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> objet pour afficher la liste des valeurs d’index associées aux options de vérification des erreurs.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50214-104">
              <para>Reference the <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object to view a list of index values associated with error checking options.</para>
              <para />
            </span>
          </span>
        </remarks>
        <example>
          <span data-ttu-id="50214-105">
            <para>Dans cet exemple, un nombre écrit en tant que texte est placé dans la cellule A1.  Ensuite, Microsoft Excel détermine si le nombre est écrit en tant que texte dans la cellule A1 et avertit l’utilisateur en conséquence.</para>
            <code>&lt;span class="label"&gt;Sub CheckForErrors()































































































































































































































































































































































































































































































































    Range("A1").Formula = "'12"































































































































































































































































































































































































































































































































    If Range("A1").&lt;/span&gt;
&lt;i&gt;Errors&lt;/i&gt;
&lt;span class="label"&gt;.Item(xlNumberAsText).Value = True Then        MsgBox "The number is written as text."    Else        MsgBox "The number is not written as text."    End IfEnd Sub&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50214-105">
              <para>In this example, a number written as text is placed in cell A1.  Microsoft Excel then determines if the number is written as text in cell A1 and notifies the user accordingly.</para>
              <code>&lt;span class="label"&gt;Sub CheckForErrors()































































































































































































































































































































































































































































































































    Range("A1").Formula = "'12"































































































































































































































































































































































































































































































































    If Range("A1").&lt;/span&gt;
&lt;i&gt;Errors&lt;/i&gt;
&lt;span class="label"&gt;.Item(xlNumberAsText).Value = True Then        MsgBox "The number is written as text."    Else        MsgBox "The number is not written as text."    End IfEnd Sub&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Errors.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50214-106">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50214-106">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Errors.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50214-107">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50214-107">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="50214-108">
            <para>Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, ce qui équivaut à la c 5843454 nombre hexadécimal</para> Propriété 
          <para>le <b>créateur</b> est conçue pour être utilisé dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Excel possède le code créateur XCEL.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="50214-108">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Error Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Error Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Errors.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Error" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Error ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Error ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Error</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="50214-109">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50214-109">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="50214-110">Le <paramref name="Index" /> peut également être une de ces constantes :<b>xlEvaluateToError</b> la cellule contient une valeur d’erreur. <b>xlTextDate</b> La cellule contient une date au format texte avec des années à 2 chiffres. <b>xlNumberAsText</b> La cellule contient un nombre enregistré en tant que texte. <b>xlInconsistentFormula</b> La cellule contient une formule incohérente pour une zone. <b>xlOmittedCells</b> La cellule contient une formule qui omet une cellule pour une zone. <b>xlUnlockedFormulaCells</b> La cellule qui est déverrouillée contient une formule. <b>xlEmptyCellReferences</b> La cellule contient une formule faisant référence à des cellules vides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50214-110">The <paramref name="Index" /> can also be one of these constants:<b>xlEvaluateToError</b> The cell evaluates to an error value.<b>xlTextDate</b> The cell contains a text date with 2 digit years.<b>xlNumberAsText</b> The cell contains a number stored as text.<b>xlInconsistentFormula</b> The cell contains an inconsistent formula for a region.<b>xlOmittedCells</b> The cell contains a formula omitting a cell for a region.<b>xlUnlockedFormulaCells</b> The cell which is unlocked contains a formula.<b>xlEmptyCellReferences</b> The cell contains a formula referring to empty cells.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50214-111">Renvoie un seul membre de la <see cref="T:Microsoft.Office.Interop.Excel.Error" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50214-111">Returns a single member of the <see cref="T:Microsoft.Office.Interop.Excel.Error" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Errors.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50214-112">Cette propriété renvoie l'objet parent de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50214-112">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>