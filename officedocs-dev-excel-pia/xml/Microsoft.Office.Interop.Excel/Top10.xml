<Type Name="Top10" FullName="Microsoft.Office.Interop.Excel.Top10">
  <Metadata><Meta Name="ms.openlocfilehash" Value="474d68fa0fa867d70e67f0c483f206c92800d97e" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009512" /></Metadata><TypeSignature Language="C#" Value="public interface Top10" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Top10" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Top10" />
  <TypeSignature Language="VB.NET" Value="Public Interface Top10" />
  <TypeSignature Language="C++ CLI" Value="public interface class Top10" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002449D-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f0fa4-p101">Représente l’un des dix visuels supérieurs d’une règle conditionnelle de mise en forme. L’application d’une couleur à une plage améliore la visibilité de la valeur d’une cellule par rapport aux autres cellules.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-p101">Represents a top ten visual of a conditional formatting rule. Applying a color to a range helps you see the value of a cell relative to other cells.</span></span></summary>
    <remarks><para><span data-ttu-id="f0fa4-103">Tous les objets de mise en forme conditionnelle sont contenus dans un objet de collection, qui <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> est un enfant d’une <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-103">All conditional formatting objects are contained within a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection object, which is a child of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection.</span></span> <span data-ttu-id="f0fa4-104">Vous pouvez créer une règle de mise en forme des 10 premiers en utilisant la ou la méthode <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddTop10" /> de la collection <b>FormatConditions.</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-104">You can create a top 10 formatting rule by using either the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> or <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddTop10" /> method of the <b>FormatConditions</b> collection.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-105">Lorsqu’elle est utilisée sans qualificateur d’objet, cette propriété renvoie un objet qui  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> représente Microsoft Office’application Excel.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-105">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="f0fa4-106">Lorsqu’elle est utilisée avec un qualificateur d’objet, elle renvoie un objet <b>Application</b> qui représente l’auteur de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-106">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="f0fa4-107">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-107">Read-only.</span></span></summary>
        <value><span data-ttu-id="f0fa4-108"><b>Application</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-108"><b>Application</b></span></span></value>
        <remarks><para><span data-ttu-id="f0fa4-109">Vous pouvez utiliser cette propriété avec un objet OLE Automation pour renvoyer l'application de cet objet.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-109">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range AppliesTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range AppliesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliesTo As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ AppliesTo { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-110">Renvoie la plage de cellules à laquelle la règle de mise en forme est appliquée.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-110">Returns the cell range to which the formatting rule is applied.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Range" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-111">Renvoie une collection qui spécifie la mise en forme des bordures de cellule si la règle de mise en forme conditionnelle <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> a la valeur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-111">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that specifies the formatting of cell borders if the conditional formatting rule evaluates to <b>True</b>.</span></span> <span data-ttu-id="f0fa4-112">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-112">Read-only.</span></span></summary>
        <value><span data-ttu-id="f0fa4-113"><b>Borders</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-113"><b>Borders</b></span></span></value>
        <remarks><para><span data-ttu-id="f0fa4-114">Dans le cas d'un objet de mise en forme conditionnelle, vous pouvez uniquement définir les propriétés des bordures supérieure, inférieure et latérales de la cellule.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-114">For a conditional formatting object, you can only set the properties for the top, bottom, and side borders of the cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalcFor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalcFor CalcFor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalcFor CalcFor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.CalcFor" />
      <MemberSignature Language="VB.NET" Value="Public Property CalcFor As XlCalcFor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalcFor CalcFor { Microsoft::Office::Interop::Excel::XlCalcFor get(); void set(Microsoft::Office::Interop::Excel::XlCalcFor value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2730)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2730)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2730)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalcFor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-115">Renvoie ou définit la façon dont la mise en forme conditionnelle dans un rapport de tableau croisé dynamique doit être évaluée.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-115">Returns or sets how the conditional format in a PivotTable report should be evaluated.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCalcFor" /></value>
        <remarks><para><span data-ttu-id="f0fa4-116">Cette propriété ne s'applique que lorsque le format conditionnel est utilisé sur les données d'un rapport de tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-116">This property is applicable only when the conditional format is being applied to data in a PivotTable report.</span></span></para>
          <para><span data-ttu-id="f0fa4-117">Cette propriété peut être définie sur <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlAllValues" /> , ou uniquement si la propriété est définie sur <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlColGroups" /> <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlRowGroups" /> <see cref="P:Microsoft.Office.Interop.Excel.Top10.ScopeType" /> <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlFieldsScope" /> .</span><span class="sxs-lookup"><span data-stu-id="f0fa4-117">This property can be set to <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlAllValues" />, <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlColGroups" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlRowGroups" /> only if the <see cref="P:Microsoft.Office.Interop.Excel.Top10.ScopeType" /> property is set to <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlFieldsScope" />.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-118">Renvoie l’application qui a créé cet objet, sous la forme d’un nombre entier de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-118">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="f0fa4-119">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-119">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="f0fa4-120">Si l'objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, qui équivaut au nombre hexadécimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-120">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="f0fa4-121">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, dans lequel chaque application possède un code de créateur à quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-121">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="f0fa4-122">Par exemple, Microsoft Excel possède le code de créateur XCEL.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-122">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Top10.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0fa4-123">Supprime l’objet de règle de mise en forme conditionnelle spécifié.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-123">Deletes the specified conditional formatting rule object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-124">Renvoie un objet qui spécifie la mise en forme de police si la règle de mise en forme conditionnelle <see cref="T:Microsoft.Office.Interop.Excel.Font" /> a la valeur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-124">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that specifies the font formatting if the conditional formatting rule evaluates to <b>True</b>.</span></span> <span data-ttu-id="f0fa4-125">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-125">Read-only.</span></span></summary>
        <value><span data-ttu-id="f0fa4-126"><b>Font</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-126"><b>Font</b></span></span></value>
        <remarks><para><span data-ttu-id="f0fa4-127">Toutes les propriétés de l'objet <b>Font</b> ne sont pas prises en charge pour un objet de mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-127">Not all properties of the <b>Font</b> object are supported for a conditional formatting object.</span></span> <span data-ttu-id="f0fa4-128">Vous pouvez définir les attributs de style, soulignement, couleur et barré pour la police.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-128">You can set the font style, underline, color, and strikethrough attributes.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-129">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> objet qui spécifie les attributs intérieurs d’une cellule pour une règle de mise en forme conditionnelle qui renvoie la valeur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-129">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that specifies a cell's interior attributes for a conditional formatting rule that evaluates to <b>True</b>.</span></span> <span data-ttu-id="f0fa4-130">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-130">Read-only.</span></span></summary>
        <value><span data-ttu-id="f0fa4-131"><b>Interior</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-131"><b>Interior</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAppliesToRange">
      <MemberSignature Language="C#" Value="public void ModifyAppliesToRange (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyAppliesToRange([in]class Microsoft.Office.Interop.Excel.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Top10.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyAppliesToRange(Microsoft::Office::Interop::Excel::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2627)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="f0fa4-132">Plage à laquelle cette règle de mise en forme sera appliquée.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-132">The range to which this formatting rule will be applied.</span></span></param>
        <summary><span data-ttu-id="f0fa4-133">Définit la plage de cellules à laquelle cette règle de mise en forme s’applique.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-133">Sets the cell range to which this formatting rule applies.</span></span></summary>
        <remarks><para><span data-ttu-id="f0fa4-134">La plage doit être dans le style de référence A1 et être entièrement contenue dans la feuille qui est le parent de la <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-134">The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span></span> <span data-ttu-id="f0fa4-135">Elle peut inclure l'opérateur de plage (le signe deux-points), l'opérateur d'intersection (un espace) ou l'opérateur de liaison (une virgule).</span><span class="sxs-lookup"><span data-stu-id="f0fa4-135">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="f0fa4-136">Les signes dollar peuvent également être utilisés, mais ils sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-136">Dollar signs can also be used but they are ignored.</span></span></para>
          <para><span data-ttu-id="f0fa4-137">Vous pouvez également utiliser un nom défini en local à n'importe quel endroit de la plage, mais le nom doit appartenir au langage de la macro.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-137">You can also use a local defined name in any part of the range, but the name must be in the language of the macro.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-138">Renvoie ou définit le format numérique appliqué à une cellule si la règle de mise en forme conditionnelle renvoie <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-138">Returns or sets the number format applied to a cell if the conditional formatting rule evaluates to <b>True</b>.</span></span> <span data-ttu-id="f0fa4-139">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="f0fa4-139">Read/write.</span></span></summary>
        <value><span data-ttu-id="f0fa4-140"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-140"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="f0fa4-141">Le format numérique est spécifié à l'aide des mêmes codes de format que ceux affichés dans la boîte de dialogue Format de cellule, sous l'onglet Nombre.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-141">The number format is specified using the same format codes displayed on the Number tab of the Format Cells dialog box.</span></span> <span data-ttu-id="f0fa4-142">Vous pouvez utiliser un format numérique intégré, par exemple "General" ou créer un format numérique personnalisé.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-142">You can use a built-in number format, for example "General", or create a custom number format.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-143">Renvoie l’objet parent pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-143">Returns the parent object for the specified object.</span></span> <span data-ttu-id="f0fa4-144">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-144">Read-only.</span></span></summary>
        <value><span data-ttu-id="f0fa4-145"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-145"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Percent">
      <MemberSignature Language="C#" Value="public bool Percent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Percent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Percent" />
      <MemberSignature Language="VB.NET" Value="Public Property Percent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Percent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2729)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2729)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2729)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-146">Renvoie ou définit une valeur de type <b>Boolean</b> qui indique si le rang est déterminé par un pourcentage.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-146">Returns or sets a <b>Boolean</b> value, specifying if the rank is determined by a percentage value.</span></span></summary>
        <value><span data-ttu-id="f0fa4-147"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-147"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-p115">Renvoie ou définit la valeur de priorité de la règle de mise en forme conditionnelle. La priorité détermine l’ordre d’évaluation lorsqu’une feuille de calcul contient plusieurs règles de mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-p115">Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</span></span></summary>
        <value><span data-ttu-id="f0fa4-150"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-150"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="f0fa4-p116">La valeur de priorité que vous définissez doit être un entier positif compris entre 1 et le nombre total de règles de mise en forme conditionnelle contenues dans la feuille de calcul. Dans la mesure où la valeur de priorité doit être unique pour toutes les règles de la feuille de calcul, le fait de modifier la priorité d'une règle de mise en forme conditionnelle donnée risque d'entraîner la modification de la valeur de priorité des autres règles de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-p116">When setting the priority, the value must be a positive integer between 1 and the total number of conditional formatting rules on the worksheet. The priority must be a unique value for all rules on the worksheet, so changing the priority for the specified conditional formattting rule may cause the priority value of the other rules on the worksheet to be shifted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PTCondition">
      <MemberSignature Language="C#" Value="public bool PTCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PTCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.PTCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PTCondition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PTCondition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-153">Renvoie une valeur de type <b>Boolean</b> indiquant si le format conditionnel est appliqué à un graphique de tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-153">Returns a <b>Boolean</b> value indicating if the conditional format is being applied to a PivotTable chart.</span></span> <span data-ttu-id="f0fa4-154">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-154">Read-only.</span></span></summary>
        <value><span data-ttu-id="f0fa4-155"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-155"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public int Rank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rank" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Rank" />
      <MemberSignature Language="VB.NET" Value="Public Property Rank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rank { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1290)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-156">Cette propriété renvoie ou définit une valeur de nombre <b>integer,</b> en spécifiant le nombre ou le pourcentage de la valeur de classement pour la règle de mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-156">Returns or sets an <b>Integer</b> value, specifying either the number or percentage of the rank value for the conditional format rule.</span></span></summary>
        <value><span data-ttu-id="f0fa4-157"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-157"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.ScopeType" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeType As XlPivotConditionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotConditionScope ScopeType { Microsoft::Office::Interop::Excel::XlPivotConditionScope get(); void set(Microsoft::Office::Interop::Excel::XlPivotConditionScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotConditionScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-158">Renvoie ou définit l’étendue de la mise en forme conditionnelle lorsqu’elle est appliquée à un graphique de tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-158">Returns or sets the scope of the conditional format when it is applied to a PivotTable chart.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /></value>
        <remarks><para><span data-ttu-id="f0fa4-159">La valeur par défaut <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" /> est , qui définit l’étendue à l’aide de la <see cref="P:Microsoft.Office.Interop.Excel.Top10.AppliesTo" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-159">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, which sets the scope using the <see cref="P:Microsoft.Office.Interop.Excel.Top10.AppliesTo" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFirstPriority">
      <MemberSignature Language="C#" Value="public void SetFirstPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFirstPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Top10.SetFirstPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFirstPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFirstPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2629)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0fa4-160">Attribue à la règle de mise en forme conditionnelle en question la valeur de priorité « 1 » de sorte qu’elle soit évaluée avant toutes les autres règles présentes dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-160">Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="f0fa4-161">Lorsque vous avez plusieurs règles de mise en forme conditionnelle dans une feuille de calcul, si la règle n’a pas été précédemment définie sur la priorité « 1 », cette méthode augmente d’une fois la priorité de toutes les autres règles existantes de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-161">When you have multiple conditional formatting rules in a worksheet, if the rule was not previously set to priority "1", this method will cause the priority of all other existing rules on the worksheet to be increased by one.</span></span></para>
          <para><span data-ttu-id="f0fa4-162">
            <b>Remarque</b>: les niveaux de priorité pour les règles de mise en forme conditionnelle sont appliqués au niveau de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-162">
            <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastPriority">
      <MemberSignature Language="C#" Value="public void SetLastPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Top10.SetLastPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0fa4-163">Définit l’ordre d’évaluation de la règle de mise en forme conditionnelle de sorte qu’elle soit évaluée après toutes les autres règles présentes dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-163">Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="f0fa4-p118">La valeur effective de la priorité est égale au nombre total de règles de mise en forme conditionnelle présentes dans la feuille de calcul. Si la feuille de calcul contient plusieurs règles de mise en forme conditionnelle, cette méthode augmente d'une unité la priorité des règles dont la valeur était supérieure à celle de la règle en question.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-p118">The actual vaule of the priority will be equal to the total number of conditional formatting rules on the worksheet. When you have multiple conditional formatting rules  in a worksheet, this method will cause the priority of rules that had a priority value greater than this rule to be increased by one.</span></span></para>
          <para><span data-ttu-id="f0fa4-166">
            <b>Remarque</b>: les niveaux de priorité pour les règles de mise en forme conditionnelle sont appliqués au niveau de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-166">
            <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StopIfTrue">
      <MemberSignature Language="C#" Value="public bool StopIfTrue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopIfTrue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.StopIfTrue" />
      <MemberSignature Language="VB.NET" Value="Public Property StopIfTrue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopIfTrue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-167">Renvoie ou définit une valeur de type <b>Boolean</b> qui détermine si les autres règles de mise en forme conditionnelle de la cellule doivent être évaluées lorsque la règle active renvoie la valeur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-167">Returns or sets a <b>Boolean</b> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <b>True</b>.</span></span></summary>
        <value><span data-ttu-id="f0fa4-168"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-168"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="f0fa4-169">Pour assurer une compatibilité en amont, la valeur par défaut de cette propriété est <b>True</b>, ce qui correspond au comportement contraire à celui d'une règle de mise en forme créée dans l'interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-169">To support backward compatibility, the default value for this property is <b>True</b>, which is the opposite behavior of a formatting rule created in the user interface.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TopBottom">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTopBottom TopBottom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTopBottom TopBottom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.TopBottom" />
      <MemberSignature Language="VB.NET" Value="Public Property TopBottom As XlTopBottom" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTopBottom TopBottom { Microsoft::Office::Interop::Excel::XlTopBottom get(); void set(Microsoft::Office::Interop::Excel::XlTopBottom value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2728)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2728)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2728)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTopBottom</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-170">Renvoie ou définit l’une des constantes de l’éumération, déterminant si le classement est évalué à partir du <see cref="T:Microsoft.Office.Interop.Excel.XlTopBottom" /> haut ou du bas.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-170">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlTopBottom" /> enumeration, determining if the ranking is evaluated from the top or bottom.</span></span></summary>
        <value><span data-ttu-id="f0fa4-171"><b>XlTopBottom</b></span><span class="sxs-lookup"><span data-stu-id="f0fa4-171"><b>XlTopBottom</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0fa4-172">Renvoie le type de mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-172">Returns the type of conditional format.</span></span> <span data-ttu-id="f0fa4-173">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="f0fa4-173">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /></value>
        <remarks><para><span data-ttu-id="f0fa4-174">Cette propriété retourne toujours une valeur de <b>nombres integer</b> de « 5 », ce qui équivaut à <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlTop10" /> .</span><span class="sxs-lookup"><span data-stu-id="f0fa4-174">This property will always return an <b>Integer</b> value of "5", which is equivalent to <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlTop10" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>