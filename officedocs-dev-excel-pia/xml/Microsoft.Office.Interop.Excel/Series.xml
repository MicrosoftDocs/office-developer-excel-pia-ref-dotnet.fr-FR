<Type Name="Series" FullName="Microsoft.Office.Interop.Excel.Series">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a8cc36d1324ac7595cb7a40f82c526876f56ea7" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20574829" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Series" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Series" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Series" />
  <TypeSignature Language="VB.NET" Value="Public Interface Series" />
  <TypeSignature Language="C++ CLI" Value="public interface class Series" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002086B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="03ffe-101">Représente une série dans un graphique.</span>
      <span class="sxs-lookup">
        <span data-stu-id="03ffe-101">Represents a series in a chart.</span>
      </span>
      <span data-ttu-id="03ffe-102">L’objet <b>Series</b> est un membre de la <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="03ffe-102">The <b>Series</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary>
          <span data-ttu-id="03ffe-103">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-103">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-104">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-104">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="03ffe-105">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-105">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType ChartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCustomType([in]valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyCustomType (ChartType As XlChartType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCustomType(Microsoft::Office::Interop::Excel::XlChartType ChartType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ChartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
      </Parameters>
      <Docs>
        <param name="ChartType">
          <span data-ttu-id="03ffe-106">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-106">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
          <span data-ttu-id="03ffe-107">Un type de graphique standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-107">A standard chart type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03ffe-108">Applique un type de graphique standard ou personnalisé à une série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-108">Applies a standard or custom chart type to a series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines, [in]object ShowSeriesName, [in]object ShowCategoryName, [in]object ShowValue, [in]object ShowPercentage, [in]object ShowBubbleSize, [in]object Separator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object, Optional ShowSeriesName As Object, Optional ShowCategoryName As Object, Optional ShowValue As Object, Optional ShowPercentage As Object, Optional ShowBubbleSize As Object, Optional Separator As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="03ffe-109">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-109">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          </span>
          <span data-ttu-id="03ffe-110">Type d'étiquette de données à appliquer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-110">The type of data label to apply.</span>
          </span>
        </param>
        <param name="LegendKey">
          <span data-ttu-id="03ffe-111">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-111">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-112">
            <b>True</b> pour afficher le symbole de légende à côté du point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-112">
              <b>True</b> to show the legend key next to the point.</span>
          </span>
          <span data-ttu-id="03ffe-113">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-113">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AutoText">
          <span data-ttu-id="03ffe-114">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-115">
            <b>True</b> si l'objet génère automatiquement un texte approprié d'après le contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-115">
              <b>True</b> if the object automatically generates appropriate text based on content.</span>
          </span>
        </param>
        <param name="HasLeaderLines">
          <span data-ttu-id="03ffe-116">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-116">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-117">Pour le <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> et <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objets, <b>la valeur True</b> si la série possède des lignes d’étiquettes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-117">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <b>True</b> if the series has leader lines.</span>
          </span>
        </param>
        <param name="ShowSeriesName">
          <span data-ttu-id="03ffe-118">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-119">Le nom de série pour l’étiquette de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-119">The series name for the data label.</span>
          </span>
        </param>
        <param name="ShowCategoryName">
          <span data-ttu-id="03ffe-120">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-120">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-121">Le nom de catégorie pour l’étiquette de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-121">The category name for the data label.</span>
          </span>
        </param>
        <param name="ShowValue">
          <span data-ttu-id="03ffe-122">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-122">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-123">La valeur de l’étiquette de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-123">The value for the data label.</span>
          </span>
        </param>
        <param name="ShowPercentage">
          <span data-ttu-id="03ffe-124">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-124">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-125">Le pourcentage pour l’étiquette de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-125">The percentage for the data label.</span>
          </span>
        </param>
        <param name="ShowBubbleSize">
          <span data-ttu-id="03ffe-126">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-126">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-127">La taille des bulles pour l’étiquette de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-127">The bubble size for the data label.</span>
          </span>
        </param>
        <param name="Separator">
          <span data-ttu-id="03ffe-128">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-128">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-129">Séparateur pour l'étiquette de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-129">The separator for the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03ffe-130">Cette méthode applique des étiquettes de données à un point, à une série ou à toutes les séries d’un graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-130">Applies data labels to a point, a series, or all the series in a chart.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToEnd">
      <MemberSignature Language="C#" Value="public bool ApplyPictToEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToEnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToEnd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToEnd { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p114">Cette propriété a la valeur <b>True</b> si une image est appliquée à l'extrémité du point ou de tous les points de la série. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p114">
              <b>True</b> if a picture is applied to the end of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToFront">
      <MemberSignature Language="C#" Value="public bool ApplyPictToFront { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToFront" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToFront" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToFront As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToFront { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p115">Cette propriété a la valeur <b>True</b> si une image est appliquée devant le point ou tous les points de la série. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p115">
              <b>True</b> if a picture is applied to the front of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToSides">
      <MemberSignature Language="C#" Value="public bool ApplyPictToSides { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToSides" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToSides" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToSides As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToSides { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p116">Cette propriété a la valeur <b>True</b> si une image est appliquée aux côtés du point ou de tous les points de la série. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p116">
              <b>True</b> if a picture is applied to the sides of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.AxisGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisGroup As XlAxisGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAxisGroup AxisGroup { Microsoft::Office::Interop::Excel::XlAxisGroup get(); void set(Microsoft::Office::Interop::Excel::XlAxisGroup value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAxisGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-137">Renvoie le groupe pour la série ou le groupe de graphiques spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-137">Returns the group for the specified chart group or series.</span>
          </span>
          <span data-ttu-id="03ffe-138">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-138">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-139">Pour les graphiques 3D, seule la constante <b>xlPrimary</b> est valide.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-139">For 3-D charts, only <b>xlPrimary</b> is valid.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.BarShape" />
      <MemberSignature Language="VB.NET" Value="Public Property BarShape As XlBarShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlBarShape BarShape { Microsoft::Office::Interop::Excel::XlBarShape get(); void set(Microsoft::Office::Interop::Excel::XlBarShape value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-140">Cette propriété renvoie ou définit la forme utilisée avec un graphique en histogrammes ou en barres 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-140">Returns or sets the shape used with the 3-D bar or column chart.</span>
          </span>
          <span data-ttu-id="03ffe-141">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-141">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-142">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Border" /> objet qui représente la bordure de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-142">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BubbleSizes">
      <MemberSignature Language="C#" Value="public object BubbleSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BubbleSizes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.BubbleSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property BubbleSizes As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BubbleSizes { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-143">Cette propriété renvoie ou définit une chaîne qui fait référence aux cellules de la feuille de calcul contenant les données de la taille du graphique en bulles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-143">Returns or sets a string that refers to the worksheet cells containing the size data for the bubble chart.</span>
          </span>
          <span data-ttu-id="03ffe-144">S’applique uniquement aux graphiques en bulles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-144">Applies only to bubble charts.</span>
          </span>
          <span data-ttu-id="03ffe-145">
            <b>Objet</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-145">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-146">Lorsque vous revenez à la référence de cellule, elle retourne une chaîne décrivant les cellules en notation de style A1.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-146">When you return the cell reference, it will return a string describing the cells in A1-style notation.</span>
            </span>
            <span data-ttu-id="03ffe-147">Pour définir les données de la taille du graphique en bulles, vous devez utiliser le style de référence R1.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-147">To set the size data for the bubble chart, you must use R1-style notation.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As XlChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartType ChartType { Microsoft::Office::Interop::Excel::XlChartType get(); void set(Microsoft::Office::Interop::Excel::XlChartType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-148">Renvoie ou définit le type de graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-148">Returns or sets the chart type.</span>
          </span>
          <span data-ttu-id="03ffe-149">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-149">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-150">Certains types de graphique ne sont pas disponibles pour les rapports de graphique croisé dynamique.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-150">Some chart types aren’t available for PivotChart reports.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-151">Annule la mise en forme de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-151">Clears the formatting of the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-152">Copie l'objet dans le Presse-papiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-152">Copies the object to the Clipboard.</span>
          </span>
          <span data-ttu-id="03ffe-153">Copie une image du point ou de la série dans le Presse-papiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-153">Copies a picture of the point or series to the Clipboard.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-154">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-154">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="03ffe-155">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-155">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="03ffe-156">En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-156">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-157">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-157">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="03ffe-158">Par exemple, Microsoft Excel possède le code créateur XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-158">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLabels">
      <MemberSignature Language="C#" Value="public object DataLabels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DataLabels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.DataLabels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataLabels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(157)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="03ffe-159">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-159">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-160">Numéro de l'étiquette de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-160">The number of the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03ffe-161">Renvoie un objet qui représente soit une seule étiquette de données (un <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> objet), soit une collection de toutes les étiquettes de données de la série (un <see cref="T:Microsoft.Office.Interop.Excel.DataLabels" /> collection).</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-161">Returns an object that represents either a single data label (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> object) or a collection of all the data labels for the series (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabels" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-p126">Si l'option <b>Afficher la valeur</b> de la série est activée pour les étiquettes de données, la collection renvoyée pourra contenir jusqu'à une étiquette pour chaque point. Les étiquettes de données peuvent être activées ou désactivées pour des points individuels dans la série.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p126">If the series has the <b>Show Value</b> option turned on for the data labels, the returned collection can contain up to one label for each point. Data labels can be turned on or off for individual points in the series.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-164">Si la série est dans un graphique en aires et que l'option <b>Afficher l'étiquette</b> est activée pour les étiquettes de données, la collection renvoyée contient seulement l'étiquette de la série en aires.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-164">If the series is on an area chart and has the <b>Show Label</b> option turned on for the data labels, the returned collection contains only a single label, which is the label for the area series.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-165">Supprime l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-165">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-166">La suppression d'un objet <b>Point</b> ou <b>LegendKey</b> supprime toute la série.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-166">Deleting a <b>Point</b> or <b>LegendKey</b> object deletes the entire series.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorBar">
      <MemberSignature Language="C#" Value="public object ErrorBar (Microsoft.Office.Interop.Excel.XlErrorBarDirection Direction, Microsoft.Office.Interop.Excel.XlErrorBarInclude Include, Microsoft.Office.Interop.Excel.XlErrorBarType Type, object Amount, object MinusValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ErrorBar([in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarDirection Direction, [in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarInclude Include, [in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarType Type, [in]object Amount, [in]object MinusValues) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ErrorBar(Microsoft.Office.Interop.Excel.XlErrorBarDirection,Microsoft.Office.Interop.Excel.XlErrorBarInclude,Microsoft.Office.Interop.Excel.XlErrorBarType,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErrorBar (Direction As XlErrorBarDirection, Include As XlErrorBarInclude, Type As XlErrorBarType, Optional Amount As Object, Optional MinusValues As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlErrorBarDirection" />
        <Parameter Name="Include" Type="Microsoft.Office.Interop.Excel.XlErrorBarInclude" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlErrorBarType" />
        <Parameter Name="Amount" Type="System.Object" />
        <Parameter Name="MinusValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Direction">
          <span data-ttu-id="03ffe-167">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-167">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection" />.</span>
          </span>
          <span data-ttu-id="03ffe-168">Direction de la barre d'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-168">The error bar direction.</span>
          </span>
        </param>
        <param name="Include">
          <span data-ttu-id="03ffe-169">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-169">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude" />.</span>
          </span>
          <span data-ttu-id="03ffe-170">Parties de la barre d'erreur à inclure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-170">The error bar parts to include.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="03ffe-171">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-171">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarType" />.</span>
          </span>
          <span data-ttu-id="03ffe-172">Type de la barre d'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-172">The error bar type.</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="03ffe-173">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-173">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-174">La marge d'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-174">The error amount.</span>
          </span>
          <span data-ttu-id="03ffe-175">Utilisé pour seulement la marge d’erreur positive lorsque <paramref name="Type" /> a la <b>valeur xlErrorBarTypeCustom</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-175">Used for only the positive error amount when <paramref name="Type" /> is <b>xlErrorBarTypeCustom</b>.</span>
          </span>
        </param>
        <param name="MinusValues">
          <span data-ttu-id="03ffe-176">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-176">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-177">Marge d’erreur négative lorsque <paramref name="Type" /> a la <b>valeur xlErrorBarTypeCustom</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-177">The negative error amount when <paramref name="Type" /> is <b>xlErrorBarTypeCustom</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03ffe-178">Applique des barres d'erreur à la série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-178">Applies error bars to the series.</span>
          </span>
          <span data-ttu-id="03ffe-179">
            <b>Objet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-179">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorBars ErrorBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorBars ErrorBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ErrorBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorBars As ErrorBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorBars ^ ErrorBars { Microsoft::Office::Interop::Excel::ErrorBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-180">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ErrorBars" /> object qui représente les barres d’erreur pour la série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-180">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorBars" /> object that represents the error bars for the series.</span>
          </span>
          <span data-ttu-id="03ffe-181">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-181">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Explosion">
      <MemberSignature Language="C#" Value="public int Explosion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Explosion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Explosion" />
      <MemberSignature Language="VB.NET" Value="Public Property Explosion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Explosion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-182">Cette propriété renvoie ou définit la valeur d’un secteur-graphique en secteurs ou de graphique en anneau explosion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-182">Returns or sets the explosion value for a pie-chart or doughnut-chart slice.</span>
          </span>
          <span data-ttu-id="03ffe-183">Renvoie la valeur 0 (zéro) s’il n’existe pas d’explosion (la pointe de la tranche est au centre du graphique en secteurs).</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-183">Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).</span>
          </span>
          <span data-ttu-id="03ffe-184">Type de données <b>Integer</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-184">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As ChartFillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFillFormat ^ Fill { Microsoft::Office::Interop::Excel::ChartFillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-185">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> objet qui contient les propriétés pour le graphique spécifié ou de la forme mise en forme du remplissage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-185">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.</span>
          </span>
          <span data-ttu-id="03ffe-186">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-186">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFormat Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As ChartFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFormat ^ Format { Microsoft::Office::Interop::Excel::ChartFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-187">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-187">Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object.</span>
          </span>
          <span data-ttu-id="03ffe-188">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-188">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-189">Cette propriété renvoie ou définit la formule de l’objet dans une notation de style A1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-189">Returns or sets the object's formula in A1-style notation.</span>
          </span>
          <span data-ttu-id="03ffe-190">Valeur <b>String</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-190">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-191">Cette propriété n'est pas disponible pour les sources de données OLAP.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-191">This property is not available for OLAP data sources.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-p138">Si la cellule contient une constante, la propriété renvoie cette constante. Si la cellule est vide, cette propriété <b>Formula</b> renvoie une chaîne vide. Si la cellule contient une formule, la propriété <b>Formula</b> renvoie la formule en tant que chaîne dans le même format que celui qui doit s'afficher dans la barre de formule (y compris le signe égal).</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p138">If the cell contains a constant, this property returns the constant. If the cell is empty, this <b>Formula</b> property returns an empty string. If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-p139">Si vous affectez une date à la formule d'une cellule, Microsoft Excel vérifie si la cellule est déjà dotée de l'un des formats numériques ou de date. Si tel n'est pas le cas, Microsoft Excel lui affecte le format de date numérique par défaut.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p139">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-p140">S'il s'agit d'une plage à une ou deux dimensions, vous pouvez désigner la formule comme un tableau Visual Basic possédant les mêmes dimensions. De même, vous pouvez inclure la formule dans un tableau Visual Basic.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p140">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-199">Le fait de définir la formule pour une plage comprenant plusieurs cellules insère cette formule dans la totalité des cellules de la plage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-199">Setting the formula for a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLocal">
      <MemberSignature Language="C#" Value="public string FormulaLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaLocal { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-200">Cette propriété renvoie ou définit la formule de l’objet à l’aide de références de style A1 dans la langue de l’utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-200">Returns or sets the formula for the object using A1-style references in the language of the user.</span>
          </span>
          <span data-ttu-id="03ffe-201">En lecture/écriture, <b>chaîne</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-201">Read/write <b>String</b></span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-p142">Si la cellule contient une constante, la propriété renvoie cette constante. Si la cellule est vide, la propriété renvoie une chaîne vide. Si la cellule contient une formule, la propriété la renvoie sous forme de chaîne, dans le format affiché dans la barre de formule (signe égal inclus).</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p142">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-p143">Si vous définissez une date comme valeur ou formule d'une cellule, Microsoft Excel vérifie si la cellule est déjà mise en forme avec un des formats de nombre Date ou Heure. Si ce n'est pas le cas, Microsoft Excel applique le format Date court par défaut.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p143">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-p144">S'il s'agit d'une plage à une ou deux dimensions, vous pouvez désigner la formule comme un tableau Visual Basic possédant les mêmes dimensions. De même, vous pouvez inclure la formule dans un tableau Visual Basic.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p144">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-209">En définissant la formule d'une plage à cellules multiples, toutes les cellules de la plage sont remplies par la formule.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-209">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1">
      <MemberSignature Language="C#" Value="public string FormulaR1C1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaR1C1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaR1C1" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaR1C1 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-210">Cette propriété renvoie ou définit la formule de l’objet en utilisant la notation de style R1C1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-210">Returns or sets the formula for the object using R1C1-style notation.</span>
          </span>
          <span data-ttu-id="03ffe-211">Valeur <b>String</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-211">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-p146">Si la cellule contient une constante, la propriété renvoie cette constante. Si la cellule est vide, la propriété renvoie une chaîne vide. Si la cellule contient une formule, la propriété la renvoie sous forme de chaîne, dans le format affiché dans la barre de formule (signe égal inclus).</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p146">If the cell contains a constant, this property returns the constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-p147">Si vous définissez une date comme valeur ou formule d'une cellule, Microsoft Excel vérifie si la cellule est déjà mise en forme avec un des formats de nombre Date ou Heure. Si ce n'est pas le cas, Microsoft Excel applique le format Date court par défaut.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p147">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-p148">S'il s'agit d'une plage à une ou deux dimensions, vous pouvez désigner la formule comme un tableau Visual Basic possédant les mêmes dimensions. De même, vous pouvez inclure la formule dans un tableau Visual Basic.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p148">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-219">En définissant la formule d'une plage à cellules multiples, toutes les cellules de la plage sont remplies par la formule.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-219">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1Local">
      <MemberSignature Language="C#" Value="public string FormulaR1C1Local { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaR1C1Local" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaR1C1Local" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1Local As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaR1C1Local { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p149">Cette propriété renvoie ou définit la formule de l'objet, en utilisant la notation R1C1 dans la langue de l'utilisateur. En lecture/écriture, <b>chaîne</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p149">Returns or sets the formula for the object, using R1C1-style notation in the language of the user. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-p150">Si la cellule contient une constante, la propriété renvoie cette constante. Si la cellule est vide, la propriété renvoie une chaîne vide. Si la cellule contient une formule, la propriété la renvoie sous forme de chaîne, dans le format affiché dans la barre de formule (signe égal inclus).</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p150">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-p151">Si vous définissez une date comme valeur ou formule d'une cellule, Microsoft Excel vérifie si la cellule est déjà mise en forme avec un des formats de nombre Date ou Heure. Si ce n'est pas le cas, Microsoft Excel applique le format Date court par défaut.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p151">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-p152">S'il s'agit d'une plage à une ou deux dimensions, vous pouvez désigner la formule comme un tableau Visual Basic possédant les mêmes dimensions. De même, vous pouvez inclure la formule dans un tableau Visual Basic.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p152">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-229">En définissant la formule d'une plage à cellules multiples, toutes les cellules de la plage sont remplies par la formule.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-229">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Has3DEffect">
      <MemberSignature Language="C#" Value="public bool Has3DEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Has3DEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Has3DEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property Has3DEffect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Has3DEffect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p153">Cette propriété a la valeur <b>True</b> si la série est en 3D. S'applique uniquement aux graphiques en bulle. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p153">
              <b>True</b> if the series has a three-dimensional appearance. Applies only to bubble charts. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataLabels">
      <MemberSignature Language="C#" Value="public bool HasDataLabels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataLabels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasDataLabels" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDataLabels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDataLabels { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p154">Cette propriété a la valeur <b>True</b> si la série a des étiquettes de données. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p154">
              <b>True</b> if the series has data labels. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasErrorBars">
      <MemberSignature Language="C#" Value="public bool HasErrorBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrorBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasErrorBars" />
      <MemberSignature Language="VB.NET" Value="Public Property HasErrorBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrorBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-235">
            <b>True</b> si la série possède des barres d'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-235">
              <b>True</b> if the series has error bars.</span>
          </span>
          <span data-ttu-id="03ffe-236">Cette propriété n’est pas disponible pour les graphiques 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-236">This property isn’t available for 3-D charts.</span>
          </span>
          <span data-ttu-id="03ffe-237">Type de données <b>Boolean</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-237">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLeaderLines">
      <MemberSignature Language="C#" Value="public bool HasLeaderLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLeaderLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasLeaderLines" />
      <MemberSignature Language="VB.NET" Value="Public Property HasLeaderLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLeaderLines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p156">Cette propriété a la valeur <b>True</b> si la série possède des lignes d'étiquettes. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p156">
              <b>True</b> if the series has leader lines. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-240">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object qui représente l’intérieur de l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-240">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertColor">
      <MemberSignature Language="C#" Value="public int InvertColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InvertColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InvertColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-241">Obtient ou définit la couleur de remplissage des points de données négatifs dans une série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-241">Gets or sets the fill color for negative data points in a series.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03ffe-242">La couleur de remplissage pour les points de données négatifs dans une série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-242">The fill color for negative data points in a series.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-243">Lecture/écriture.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-243">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-244">Le <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> propriété permet de définir la couleur de remplissage des points de données négatives comme valeur de couleur RVB, hexadécimal, octal ou numérique spécifique.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-244">The <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property enables you to set the fill color for negative data points as a specific numeric, hexadecimal, octal, or RGB color value.</span>
            </span>
            <span data-ttu-id="03ffe-245">Pour définir la valeur comme une valeur RVB, utilisez la fonction Visual Basic <b>RVB</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-245">To set the value as an RBG value, use the Visual Basic <b>RGB</b> function.</span>
            </span>
            <span data-ttu-id="03ffe-246">Au lieu d’utiliser la <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> propriété, vous pouvez utiliser la <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> propriété, qui utilise un ensemble de valeurs entières à partir de la palette de couleurs actuelle plus simple.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-246">Instead of using the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property, you can use the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property, which uses a simpler set of integer values from the current color palette.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-247">Pour le <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />propriété ait un effet, la <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objet doit également être défini sur <b>true</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-247">For the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />property to have an effect, the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object must also be set to <b>true</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertColorIndex">
      <MemberSignature Language="C#" Value="public int InvertColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InvertColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertColorIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InvertColorIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-248">Obtient ou définit la couleur de remplissage des points de données négatifs dans une série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-248">Gets or sets the fill color for negative data points in a series.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03ffe-249">La couleur de remplissage pour les points de données négatifs dans une série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-249">The fill color for negative data points in a series.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-250">Lecture/écriture.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-250">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-251">Le <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> propriété permet de définir la couleur de remplissage des points de données négatives comme une valeur d’index de couleur de 0 à 56.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-251">The <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property enables you to set the fill color for negative data points as a color index value from 0 to 56.</span>
            </span>
            <span data-ttu-id="03ffe-252">Au lieu d’utiliser la <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> propriété, vous pouvez utiliser la <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> propriété, qui vous permet de définir la couleur comme un hexadécimal numérique, spécifique, octal ou valeur RVB.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-252">Instead of using the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property, you can use the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property, which enables you to set the color as a specific numeric, hexadecimal, octal, or RGB color value.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-253">Pour le <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> propriété ait un effet, la <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objet doit également être défini sur <b>true</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-253">For the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property to have an effect, the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object must also be set to <b>true</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertIfNegative">
      <MemberSignature Language="C#" Value="public bool InvertIfNegative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvertIfNegative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertIfNegative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvertIfNegative { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p159">Cette propriété renvoie la valeur <b>True</b> si Microsoft Excel inverse le motif de l'élément lorsque celui-ci correspond à un nombre négatif. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p159">
              <b>True</b> if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFiltered">
      <MemberSignature Language="C#" Value="public bool IsFiltered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFiltered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.IsFiltered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFiltered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFiltered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-256">Ce paramètre détermine si la série a été éliminée du graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-256">This setting controls whether the series has been filtered out from the chart.</span>
          </span>
          <span data-ttu-id="03ffe-257">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-257">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="03ffe-258">
            <b>Boolean</b> (<b>bool</b> en c#) En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-258">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-259">Quand un utilisateur filtre une série, la propriété <b>IsFiltered</b> série bascule sur <b>True</b>et la série est transférée en dehors de son parent <b>SeriesCollection</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-259">When a user filters out a series, the series <b>IsFiltered</b> property switches to <b>True</b>, and the series is transferred out of its parent <b>SeriesCollection</b>.</span>
            </span>
            <span data-ttu-id="03ffe-260">Toutefois, cette série conserve son parent <b>FullSeriesCollection</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-260">However, that series still remains in its parent <b>FullSeriesCollection</b>.</span>
            </span>
            <span data-ttu-id="03ffe-261">Lorsqu’un filtre utilisateur de nouveau la série, il est inséré dans son emplacement d’origine dans le <b>SeriesCollection</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-261">When a user filters the series back in, it is inserted back in its original place in the <b>SeriesCollection</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaderLines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LeaderLines LeaderLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LeaderLines LeaderLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.LeaderLines" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeaderLines As LeaderLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LeaderLines ^ LeaderLines { Microsoft::Office::Interop::Excel::LeaderLines ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1666)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LeaderLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p162">Renvoie un objet <b>LeaderLines</b> qui représente les lignes d’étiquettes de la série. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p162">Returns a <b>LeaderLines</b> object that represents the leader lines for the series. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColor">
      <MemberSignature Language="C#" Value="public int MarkerBackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerBackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerBackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerBackgroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-264">Cette propriété renvoie ou définit la couleur d’arrière-plan marqueur comme une valeur RVB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-264">Returns or sets the marker background color as an RGB value.</span>
          </span>
          <span data-ttu-id="03ffe-265">S’applique uniquement aux graphiques en courbes, en nuages de points et en radar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-265">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="03ffe-266">Type de données <b>Integer</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-266">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerBackgroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerBackgroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-267">Cette propriété renvoie ou définit la couleur d’arrière-plan de marque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-267">Returns or sets the marker background color.</span>
          </span>
          <span data-ttu-id="03ffe-268">S’applique uniquement aux graphiques en courbes, en nuages de points et en radar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-268">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="03ffe-269">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-269">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColor">
      <MemberSignature Language="C#" Value="public int MarkerForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerForegroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerForegroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-270">Cette propriété renvoie ou définit la couleur de premier plan du marqueur comme une valeur RVB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-270">Returns or sets the foreground color of the marker as an RGB value.</span>
          </span>
          <span data-ttu-id="03ffe-271">S’applique uniquement aux graphiques en courbes, en nuages de points et en radar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-271">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="03ffe-272">Type de données <b>Integer</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-272">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerForegroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerForegroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-273">Cette propriété renvoie ou définit la couleur de premier plan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-273">Returns or sets the marker foreground color.</span>
          </span>
          <span data-ttu-id="03ffe-274">S’applique uniquement aux graphiques en courbes, en nuages de points et en radar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-274">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="03ffe-275">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-275">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerSize">
      <MemberSignature Language="C#" Value="public int MarkerSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-276">Cette propriété renvoie ou définit la taille en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-276">Returns or sets the data-marker size in points.</span>
          </span>
          <span data-ttu-id="03ffe-277">Type de données <b>Integer</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-277">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStyle As XlMarkerStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMarkerStyle MarkerStyle { Microsoft::Office::Interop::Excel::XlMarkerStyle get(); void set(Microsoft::Office::Interop::Excel::XlMarkerStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMarkerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-278">Renvoie ou définit le style de marqueur pour un point ou une série dans un graphique en courbes, à nuages de points ou en radar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-278">Returns or sets the marker style for a point or series in a line chart, scatter chart, or radar chart.</span>
          </span>
          <span data-ttu-id="03ffe-279">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-279">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p169">Cette propriété renvoie ou définit le nom de l'objet. Type de données <b>String</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p169">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-282">Le tableau suivant contient des valeurs d’exemple de la propriété <b>Name</b> et des propriétés liées affectées d’une source de données OLAP dotée du nom unique "[Europe].[France].[Paris]" et d’une source de données autre que OLAP dotée du nom "Paris".</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-282">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="03ffe-283">
                  <b>Légende</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-283">
                    <b>Caption</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="03ffe-284">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-284">Paris</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="03ffe-285">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-285">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="03ffe-286">
                  <b>Nom</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-286">
                    <b>Name</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="03ffe-287">[Europe].[France].[Paris] (en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-287">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="03ffe-288">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-288">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="03ffe-289">
                  <b>SourceName</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-289">
                    <b>SourceName</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="03ffe-290">[Europe].[France].[Paris] (en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-290">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="03ffe-291">(Valeur identique à celle de la propriété SQL ; en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-291">(Same as SQL property value, read-only)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="03ffe-292">
                  <b>Valeur</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-292">
                    <b>Value</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="03ffe-293">[Europe].[France].[Paris] (en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-293">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="03ffe-294">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-294">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="03ffe-295">Lorsque vous spécifiez un index dans la <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, vous pouvez utiliser la syntaxe présentée dans le tableau suivant.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-295">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="03ffe-296">expression. PivotItems (« [Europe]. [ France]. [Paris] »)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-296">expression.PivotItems("[Europe].[France].[Paris]")</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="03ffe-297">expression. PivotItems("Paris")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-297">expression.PivotItems("Paris")</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="03ffe-298">Lorsque vous utilisez la <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> propriété pour référencer un membre spécifique d’une collection, vous pouvez utiliser le nom d’index de texte comme indiqué dans le tableau suivant.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-298">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="03ffe-299">[Europe]. [France]. [Paris]</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-299">[Europe].[France].[Paris]</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="03ffe-300">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="03ffe-300">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p170">Renvoie l'objet parent de l'objet spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p170">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public object Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Function Paste () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-303">Colle une image du Presse-papiers en tant que marqueur sur la série sélectionnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-303">Pastes a picture from the Clipboard as the marker on the selected series.</span>
          </span>
          <span data-ttu-id="03ffe-304">Cette méthode peut être utilisée dans la colonne, barre, ligne ou en radar, et il définit les <see cref="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" /> propriété <b>MarkerStyle</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-304">This method can be used on column, bar, line, or radar charts, and it sets the <see cref="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" /> property to <b>xlMarkerStylePicture</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartPictureType PictureType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartPictureType PictureType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureType" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureType As XlChartPictureType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartPictureType PictureType { Microsoft::Office::Interop::Excel::XlChartPictureType get(); void set(Microsoft::Office::Interop::Excel::XlChartPictureType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartPictureType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-305">Cette propriété renvoie ou définit le mode d’affichage des images sur une colonne ou barre d’un graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-305">Returns or sets the way pictures are displayed on a column or bar picture chart.</span>
          </span>
          <span data-ttu-id="03ffe-306">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-306">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit">
      <MemberSignature Language="C#" Value="public int PictureUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PictureUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PictureUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-307">Cette propriété renvoie ou définit l’unité de chaque image du graphique si le <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> propriété est définie à la <b>propriété PictureType</b> (sinon, cette propriété est ignorée).</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-307">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> property is set to <b>xlScale</b> (if not, this property is ignored).</span>
          </span>
          <span data-ttu-id="03ffe-308">Type de données <b>Integer</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-308">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit2">
      <MemberSignature Language="C#" Value="public double PictureUnit2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PictureUnit2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureUnit2" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit2 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PictureUnit2 { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-309">Cette propriété renvoie ou définit l’unité de chaque image du graphique si le <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> propriété est définie sur <see cref="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale" /> (si pas, cette propriété est ignorée).</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-309">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> property is set to <see cref="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale" /> (if not, this property is ignored).</span>
          </span>
          <span data-ttu-id="03ffe-310">En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-310">Read/Write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03ffe-311">
            <b>Double</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-311">
              <b>Double</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotColorIndex">
      <MemberSignature Language="C#" Value="public int PlotColorIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlotColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PlotColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PlotColorIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PlotColorIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2915)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2915)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-312">Obtient une valeur d’index qui est utilisée en interne pour associer série mise en forme des éléments de graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-312">Gets an index value that is used internally to associate series formatting with chart elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03ffe-313">Une valeur d’index qui est utilisée en interne pour associer série mise en forme des éléments de graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-313">An index value that is used internally to associate series formatting with chart elements.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-314">En lecture seule.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-314">Read-only.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-315">Cette propriété est utilisée en interne par Excel et ne doit pas être appelée à partir de votre code.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-315">This property is used internally by Excel and is not intended to be called from your code.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotOrder">
      <MemberSignature Language="C#" Value="public int PlotOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlotOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PlotOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PlotOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-316">Cette propriété renvoie ou définit l'ordre de traçage de la série sélectionnée au sein du groupe de graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-316">Returns or sets the plot order for the selected series within the chart group.</span>
          </span>
          <span data-ttu-id="03ffe-317">Type de données <b>Integer</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-317">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-p176">L'ordre de traçage ne peut être défini qu'au sein d'un groupe de graphiques (vous ne pouvez pas définir l'ordre de traçage pour la totalité du graphique en présence de plusieurs types de graphique). Par groupe de graphiques, il faut entendre un ensemble de séries de données qui possèdent le même type de graphique.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-p176">You can set plot order only within a chart group (you cannot set the plot order for the entire chart if you have more than one chart type). A chart group is a collection of series with the same chart type.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="03ffe-320">Modification de l’ordre de traçage d’une série entraîne le traçage des autres séries du groupe de graphiques à ajuster que nécessaire.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-320">Changing the plot order of one series will cause the plot orders of the other series in the chart group to be adjusted as necessary.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public object Points (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Points([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Points(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Points (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(70)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="03ffe-321">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-321">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-322">Nom ou numéro du point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-322">The name or number of the point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03ffe-323">Renvoie un object qui représente un point unique (un <see cref="T:Microsoft.Office.Interop.Excel.Point" /> objet), soit une collection de tous les points (un <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection) de la série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-323">Returns an object that represents a single point (a <see cref="T:Microsoft.Office.Interop.Excel.Point" /> object) or a collection of all the points (a <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection) in the series.</span>
          </span>
          <span data-ttu-id="03ffe-324">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-324">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-325">Sélectionne l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-325">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-326">Pour sélectionner une cellule ou une plage de cellules, utilisez la méthode <b>Select</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-326">To select a cell or a range of cells, use the <b>Select</b> method.</span>
            </span>
            <span data-ttu-id="03ffe-327">Pour activer une cellule de la cellule active, utilisez la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-327">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public bool Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-328">
            <b>True</b> si la police est une police ombrée ou si l’objet est ombré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-328">
              <b>True</b> if the font is a shadow font or if the object has a shadow.</span>
          </span>
          <span data-ttu-id="03ffe-329">Type de données <b>Boolean</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-329">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Smooth">
      <MemberSignature Language="C#" Value="public bool Smooth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Smooth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Smooth" />
      <MemberSignature Language="VB.NET" Value="Public Property Smooth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Smooth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-p181">
            <b>True</b> si le lissage des courbes est activé pour les graphiques en courbes ou en nuages de points. Ne s’applique qu’à ces deux types de graphiques. Type de données en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-p181">
              <b>True</b> if curve smoothing is turned on for the line chart or scatter chart. Applies only to line and scatter charts. Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trendlines">
      <MemberSignature Language="C#" Value="public object Trendlines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Trendlines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Trendlines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trendlines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(154)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="03ffe-333">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-333">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="03ffe-334">Nom ou numéro de la courbe de tendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-334">The name or number of the trendline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03ffe-335">Renvoie un object qui représente une seule courbe de tendance (un <see cref="T:Microsoft.Office.Interop.Excel.Trendline" /> objet), soit une collection de toutes les courbes de tendance (un <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> collection) de la série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-335">Returns an object that represents a single trendline (a <see cref="T:Microsoft.Office.Interop.Excel.Trendline" /> object) or a collection of all the trendlines (a <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> collection) for the series.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-336">Cette propriété renvoie ou définit le type de graphique ou la série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-336">Returns or sets the chart or series type.</span>
          </span>
          <span data-ttu-id="03ffe-337">Type de données <b>Integer</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-337">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public object Values { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Values" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Values" />
      <MemberSignature Language="VB.NET" Value="Public Property Values As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Values { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-338">Cette propriété renvoie ou définit une collection de toutes les valeurs de la série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-338">Returns or sets a collection of all the values in the series.</span>
          </span>
          <span data-ttu-id="03ffe-339">Il peut s’agir d’une plage d’une feuille de calcul ou un tableau de valeurs de constantes, mais pas une combinaison des deux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-339">This can be a range on a worksheet or an array of constant values, but not a combination of both.</span>
          </span>
          <span data-ttu-id="03ffe-340">
            <b>Objet</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-340">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-341">Pour les rapports de graphique croisé dynamique, cette propriété est en lecture seule.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-341">For PivotChart reports, this property is read-only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValues">
      <MemberSignature Language="C#" Value="public object XValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.XValues" />
      <MemberSignature Language="VB.NET" Value="Public Property XValues As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XValues { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03ffe-342">Cette propriété renvoie ou définit un tableau de valeurs x pour une série de graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-342">Returns or sets an array of x values for a chart series.</span>
          </span>
          <span data-ttu-id="03ffe-343">La propriété <b>XValues</b> peut être définie sur une plage dans une feuille de calcul ou d’un tableau de valeurs, mais elle ne peut pas être une combinaison des deux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-343">The <b>XValues</b> property can be set to a range on a worksheet or to an array of values, but it cannot be a combination of both.</span>
          </span>
          <span data-ttu-id="03ffe-344">
            <b>Objet</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03ffe-344">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="03ffe-345">Pour les rapports de graphique croisé dynamique de cette propriété est en lecture seule.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03ffe-345">For PivotChart reports this property is read-only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>