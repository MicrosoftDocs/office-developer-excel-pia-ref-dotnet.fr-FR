<Type Name="_Worksheet" FullName="Microsoft.Office.Interop.Excel._Worksheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f0ab611aa4d579db9ac504ef7ee328ea8f5b52e" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20583131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Worksheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Worksheet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Worksheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Worksheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Worksheet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="10eb6-101">Il s’agit d’une interface principale dans une coclasse COM qui est requis par le code managé pour l’interopérabilité avec l’objet COM correspondant.</span>
      <span class="sxs-lookup">
        <span data-stu-id="10eb6-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="10eb6-102">Utilisez cette interface principale uniquement lorsque la méthode que vous souhaitez utiliser partageant le même nom qu’un événement de l’objet COM ; Dans ce cas, effectuez un cast à cette interface pour appeler la méthode et dans l’interface d’événements le plus récent pour se connecter à l’événement.</span>
      <span class="sxs-lookup">
        <span data-stu-id="10eb6-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="10eb6-103">Sinon, utilisez l’interface .NET est dérivé de la coclasse COM pour accéder aux méthodes, propriétés et événements de l’objet COM.</span>
      <span class="sxs-lookup">
        <span data-stu-id="10eb6-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="10eb6-104">Pour plus d’informations sur l’objet COM, voir <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="10eb6-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CheckSpelling">
      <MemberSignature Language="C#" Value="public void _CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang, object IgnoreFinalYaa, object SpellScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang, [in]object IgnoreFinalYaa, [in]object SpellScript) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object, Optional IgnoreFinalYaa As Object, Optional SpellScript As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
        <Parameter Name="IgnoreFinalYaa" Type="System.Object" />
        <Parameter Name="SpellScript" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">To be added.</param>
        <param name="IgnoreUppercase">To be added.</param>
        <param name="AlwaysSuggest">To be added.</param>
        <param name="SpellLang">To be added.</param>
        <param name="IgnoreFinalYaa">To be added.</param>
        <param name="SpellScript">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-105">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-105">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-106">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-106">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public int _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int _DisplayRightToLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-107">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-107">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-108">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public void _PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">To be added.</param>
        <param name="Link">To be added.</param>
        <param name="DisplayAsIcon">To be added.</param>
        <param name="IconFileName">To be added.</param>
        <param name="IconIndex">To be added.</param>
        <param name="IconLabel">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-109">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-110">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-110">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-111">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-111">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-112">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-112">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-113">Active la feuille sélectionnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-113">Makes the current sheet the active sheet.</span>
          </span>
          <span data-ttu-id="10eb6-114">Équivaut à cliquer sur l’onglet de la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-114">Equivalent to clicking the sheet's tab.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-115">Utilisée sans qualificateur d’objet, cette propriété renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-115">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="10eb6-116">Utilisée avec un identificateur d’objet, cette propriété renvoie un objet<b>Application</b> qui représente le créateur de l’objet spécifié (vous pouvez utiliser cette propriété avec un objet OLE Automation pour renvoyer l’application de cet objet).</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-116">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
          <span data-ttu-id="10eb6-117">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-117">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-118">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-118">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoFilter AutoFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoFilter AutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoFilter As AutoFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoFilter ^ AutoFilter { Microsoft::Office::Interop::Excel::AutoFilter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-119">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> objet si le filtrage est activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object if filtering is on.</span>
          </span>
          <span data-ttu-id="10eb6-120">Renvoie la <b>valeur Nothing</b> si le filtrage est désactivé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-120">Returns <b>Nothing</b> if filtering is off.</span>
          </span>
          <span data-ttu-id="10eb6-121">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-121">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-122">
            <para>Pour créer un objet <b>AutoFilter</b> pour une feuille de calcul, vous devez activer le filtrage automatique pour une plage de la feuille de calcul soit manuellement ou à l’aide de la <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> méthode de la <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-122">
              <para>To create an <b>AutoFilter</b> object for a worksheet, you must turn autofiltering on for a range on the worksheet either manually or using the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterMode">
      <MemberSignature Language="C#" Value="public bool AutoFilterMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilterMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-123">
            <b>La valeur true</b> si les flèches de la liste déroulante Filtre automatique sont actuellement affichées dans la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-123">
              <b>True</b> if the AutoFilter drop-down arrows are currently displayed on the sheet.</span>
          </span>
          <span data-ttu-id="10eb6-124">Cette propriété est indépendante de la <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-124">This property is independent of the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> property.</span>
          </span>
          <span data-ttu-id="10eb6-125">Type de données <b>Boolean</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-125">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-126">
            <para>Cette propriété renvoie <b>la valeur True</b> si les flèches du menu déroulant sont actuellement affichées. Vous pouvez définir cette propriété sur <b>False</b> pour supprimer les flèches, mais vous ne pouvez pas la valeur <b>True</b>. Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> méthode pour filtrer une liste et afficher les flèches du menu déroulant.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-126">
              <para>This property returns <b>True</b> if the drop-down arrows are currently displayed. You can set this property to <b>False</b> to remove the arrows, but you cannot set it to <b>True</b>. Use the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method to filter a list and display the drop-down arrows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-127">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-127">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-128">Cette méthode calcule tous les classeurs ouverts, une feuille de calcul particulière dans un classeur ou une plage de cellules déterminée dans une feuille de calcul, comme l'indique le tableau ci-dessous.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-128">Calculates all open workbooks, a specific worksheet in a workbook, or a specified range of cells on a worksheet, as shown in the following table.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-129">
            <list type="table">
              <item>
                <term>Tous les classeurs ouverts</term>
                <description>Application.Calculate</description>
              </item>
              <item>
                <term>Une feuille de calcul particulière</term>
                <description>Worksheets (1). Calculer</description>
              </item>
              <item>
                <term>une plage spécifiée</term>
                <description>Worksheets (1). Rows(2). Calculer</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-129">
              <list type="table">
                <item>
                  <term>All open workbooks</term>
                  <description>Application.Calculate</description>
                </item>
                <item>
                  <term>A specific worksheet</term>
                  <description>Worksheets(1).Calculate</description>
                </item>
                <item>
                  <term>A specified range</term>
                  <description>Worksheets(1).Rows(2).Calculate</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-130">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les cellules de la feuille de calcul (pas seulement les cellules qui sont actuellement en cours d’utilisation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-130">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</span>
          </span>
          <span data-ttu-id="10eb6-131">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-131">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-132">
            <para>Étant donné que la <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> propriété est la propriété par défaut pour l’objet <b>Range</b> , vous pouvez spécifier l’index de ligne et de colonne immédiatement après le mot clé <b>Cells</b> . Pour plus d’informations, voir la propriété <b>Item</b> .</para>
            <para>à l’aide de cette propriété sans qualificateur d’objet renvoie un objet <b>Range</b> qui représente toutes les cellules de la feuille de calcul active.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-132">
              <para>Because the <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword. For more information, see the <b>Item</b> property.</para>
              <para>Using this property without an object qualifier returns a <b>Range</b> object that represents all the cells on the active worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="10eb6-133">Facultatif <b>de type Variant</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-133">Optional <b>Variant</b>.</span>
          </span>
          <span data-ttu-id="10eb6-134">Nom ou numéro du graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-134">The name or number of the chart.</span>
          </span>
          <span data-ttu-id="10eb6-135">Cet argument peut être un tableau pour spécifier plusieurs graphiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-135">This argument can be an array to specify more than one chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-136">Renvoie un objet qui représente soit un seul graphique incorporé (un <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> objet), soit une collection de tous les graphiques incorporés (un <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> objet) sur la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-136">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="10eb6-137">
            <para>Cette méthode n’est pas équivalente à la <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> propriété. Cette méthode retourne des graphiques incorporés ; la propriété <b>Charts</b> renvoie des feuilles de graphique. Utiliser le <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> propriété permet de renvoyer la <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objet pour un graphique incorporé.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-137">
              <para>This method isn't equivalent to the <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> property. This method returns embedded charts; the <b>Charts</b> property returns chart sheets. Use the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> property to return the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object for an embedded chart.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-138">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-138">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="10eb6-139">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-139">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-140">Chaîne qui indique le nom de fichier du dictionnaire personnalisé à examiner si le mot n’est pas trouvé dans le dictionnaire principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-140">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="10eb6-141">Si cet argument est omis, le dictionnaire actuellement spécifié est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-141">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="10eb6-142">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-142">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-143">
            <b>True</b> pour que Microsoft Excel ignore les mots en majuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-143">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="10eb6-144">
            <b>False</b> pour que Microsoft Excel vérifie les mots en majuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-144">
              <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="10eb6-145">Si cet argument est omis, la valeur actuelle est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-145">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="10eb6-146">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-146">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-147">
            <b>True</b> pour que Microsoft Excel affiche une liste d’orthographes lorsqu’une orthographe incorrecte est trouvée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-147">
              <b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span>
          </span>
          <span data-ttu-id="10eb6-148">
            <b>False</b> pour que Microsoft Excel vous permet d’entrer l’orthographe correcte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-148">
              <b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span>
          </span>
          <span data-ttu-id="10eb6-149">Si cet argument est omis, la valeur actuelle est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-149">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="10eb6-150">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-150">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-151">La langue du dictionnaire utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-151">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="10eb6-152">Peut être une des valeurs <b>MsoLanguageID</b> utilisées par la <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-152">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-153">Vérifie l’orthographe d’un objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-153">Checks the spelling of an object.</span>
          </span>
          <span data-ttu-id="10eb6-154">Ce formulaire n’a aucune valeur de retour ; Microsoft Excel affiche la boîte de dialogue Orthographe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-154">This form has no return value; Microsoft Excel displays the Spelling dialog box.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-155">
            <para>Utilisez cette méthode pour vérifier les en-têtes, pieds de page et les objets sur une feuille de calcul.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-155">
              <para>Use this method to check headers, footers, and objects on a worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CircleInvalid">
      <MemberSignature Language="C#" Value="public void CircleInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CircleInvalid() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Sub CircleInvalid ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CircleInvalid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-156">Encercle les entrées incorrectes dans la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-156">Circles invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularReference">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CircularReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CircularReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CircularReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CircularReference As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CircularReference { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-157">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente la plage contenant la première référence circulaire de la feuille ou renvoie <b>Nothing</b> s’il n’existe pas de référence circulaire dans la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-157">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet, or returns <b>Nothing</b> if there's no circular reference on the sheet.</span>
          </span>
          <span data-ttu-id="10eb6-158">La référence circulaire doit être supprimée avant de procéder de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-158">The circular reference must be removed before calculation can proceed.</span>
          </span>
          <span data-ttu-id="10eb6-159">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-159">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearArrows">
      <MemberSignature Language="C#" Value="public void ClearArrows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearArrows() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearArrows" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearArrows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearArrows();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(970)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p114">Efface les flèches d’audit de la feuille de calcul. Ces flèches ont été ajoutées à l’aide de la fonctionnalité d’audit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p114">Clears the tracer arrows from the worksheet. Tracer arrows are added by using the auditing feature.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCircles">
      <MemberSignature Language="C#" Value="public void ClearCircles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCircles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearCircles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCircles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCircles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1436)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-162">Supprime les cercles des entrées incorrectes de la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-162">Clears circles from invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-163">
            <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> méthode pour encercler les cellules qui contiennent des données non valides.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-163">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> method to circle cells that contain invalid data.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-164">Renvoie le nom de code pour l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-164">Returns the code name for the object.</span>
          </span>
          <span data-ttu-id="10eb6-165">Valeur <b>String</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-165">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-166">
            <para>La valeur que vous voyez dans la cellule à droite de <b>(nom)</b> dans la fenêtre Propriétés est le nom de code de l’objet sélectionné. Au moment du design, vous pouvez modifier le nom de code d’un objet en changeant cette valeur. Vous ne pouvez pas modifier par programme de cette propriété au moment de l’exécution.</para>
            <para>Le nom de code pour un objet peut être utilisé à la place d’une expression qui renvoie l’objet.</para>
            <para>, Il est possible que le nom de feuille peut être différent du nom de code. Lorsque vous créez une feuille, le nom de la feuille et le nom de code sont identiques, mais la modification du nom de feuille ne change pas le nom de code et réciproquement (à l’aide de la fenêtre Propriétés dans Visual Basic Editor) ne change pas le nom de la feuille.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-166">
              <para>The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object. At design time, you can change the code name of an object by changing this value. You cannot programmatically change this property at run time.</para>
              <para>The code name for an object can be used in place of an expression that returns the object.</para>
              <para>It’s possible for the sheet name to be different from the code name. When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-167">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les colonnes de la feuille de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-167">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the specified worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-168">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-168">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As Comments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comments ^ Comments { Microsoft::Office::Interop::Excel::Comments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-169">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection qui représente tous les commentaires de la feuille de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-169">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-170">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-170">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationFunction As XlConsolidationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConsolidationFunction ConsolidationFunction { Microsoft::Office::Interop::Excel::XlConsolidationFunction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConsolidationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-171">Retourne le code de fonction utilisé pour la consolidation en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-171">Returns the function code used for the current consolidation.</span>
          </span>
          <span data-ttu-id="10eb6-172">Peut être une de le <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-172">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constants.</span>
          </span>
          <span data-ttu-id="10eb6-173">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-173">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationOptions">
      <MemberSignature Language="C#" Value="public object ConsolidationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationOptions As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationOptions { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-174">Renvoie un tableau de trois éléments d’options de consolidation, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-174">Returns a three-element array of consolidation options, as shown in the following table.</span>
          </span>
          <span data-ttu-id="10eb6-175">Si l’élément a la <b>valeur True</b>, cette option est définie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-175">If the element is <b>True</b>, that option is set.</span>
          </span>
          <span data-ttu-id="10eb6-176">En lecture seule <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-176">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-177">
            <list type="table">
              <item>
                <term>1</term>
                <description>Utiliser des étiquettes de ligne du haut.</description>
              </item>
              <item>
                <term>2</term>
                <description>utiliser des étiquettes dans la colonne de gauche.</description>
              </item>
              <item>
                <term>3</term>
                <description>créer des liens vers les données sources.</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-177">
              <list type="table">
                <item>
                  <term>1</term>
                  <description>Use labels in top row.</description>
                </item>
                <item>
                  <term>2</term>
                  <description>Use labels in left column.</description>
                </item>
                <item>
                  <term>3</term>
                  <description>Create links to source data.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationSources">
      <MemberSignature Language="C#" Value="public object ConsolidationSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationSources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationSources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationSources As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationSources { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-178">Renvoie un tableau de valeurs de chaîne qui nomment les feuilles source pour la consolidation en cours de la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-178">Returns an array of string values that name the source sheets for the worksheet's current consolidation.</span>
          </span>
          <span data-ttu-id="10eb6-179">Renvoie la valeur <b>Empty</b> s’il n’existe aucune consolidation dans la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-179">Returns <b>Empty</b> if there's no consolidation on the sheet.</span>
          </span>
          <span data-ttu-id="10eb6-180">En lecture seule <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-180">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="10eb6-181">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-181">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-182">La feuille avant laquelle la feuille copiée sera placée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-182">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="10eb6-183">Vous ne pouvez pas spécifier <paramref name="Before" /> si vous spécifiez <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-183">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="10eb6-184">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-184">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-185">La feuille après laquelle la feuille copiée sera placée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-185">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="10eb6-186">Vous ne pouvez pas spécifier <paramref name="After" /> si vous spécifiez <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-186">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-187">Copie la feuille à un autre emplacement dans le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-187">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-188">
            <para>Si vous ne spécifiez pas ces <paramref name="Before" /> ou <paramref name="After" />, Microsoft Excel crée un nouveau classeur contenant la feuille copiée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-188">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-189">Renvoie une constante dans la <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> énumération qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-189">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="10eb6-190">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-190">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="10eb6-191">En lecture seule <b>xlCreatorCode</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-191">Read-only <b>xlCreatorCode</b>.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
        </value>
        <remarks>
          <span data-ttu-id="10eb6-192">
            <para>La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Excel possède le code créateur XCEL.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-192">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomProperties CustomProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomProperties CustomProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CustomProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomProperties As CustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomProperties ^ CustomProperties { Microsoft::Office::Interop::Excel::CustomProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-193">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> représentant les informations d’identificateur associées à une feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-193">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-194">
            <para>Pour la propriété <b>CustomProperties</b> , les informations d’identificateur pour une feuille de calcul peuvent représenter des métadonnées pour XML.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-194">
              <para>For the <b>CustomProperties</b> property, identifier information for a worksheet can represent metadata for XML.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-195">Supprime l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-195">Deletes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-196">
            <para>Lorsque vous supprimez un <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, cette méthode affiche une boîte de dialogue qui invite l’utilisateur à confirmer la suppression. Cette boîte de dialogue s’affiche par défaut. La méthode <b>Delete</b> renvoie une valeur de <b>type Boolean</b> qui a la <b>valeur False</b> si l’utilisateur a cliqué sur Annuler dans la boîte de dialogue ou <b>la valeur True</b> si l’utilisateur a cliqué sur Supprimer.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-196">
              <para>When you delete a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, this method displays a dialog box that prompts the user to confirm the deletion. This dialog box is displayed by default. The <b>Delete</b> method returns a <b>Boolean</b> value that is <b>False</b> if the user clicked Cancel on the dialog box or <b>True</b> if the user clicked Delete.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAutomaticPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayAutomaticPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAutomaticPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayAutomaticPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAutomaticPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAutomaticPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-197">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-197">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p124">
            <b>True</b> si les sauts de page (automatiques et manuels) de la feuille de calcul spécifiée sont affichés. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p124">
              <b>True</b> if page breaks (both automatic and manual) on the specified worksheet are displayed. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-200">
            <para>Vous ne pouvez pas définir cette propriété si vous ne disposez pas d’imprimante installée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-200">
              <para>You can't set this property if you don't have a printer installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-201">
            <b>True</b> si la fenêtre spécifiée, une feuille de calcul ou un <b>objet ListObject</b> s’affiche de droite à gauche plutôt que de gauche à droite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-201">
              <b>True</b> if the specified window, worksheet, or <b>ListObject</b> is displayed from right to left instead of from left to right.</span>
          </span>
          <span data-ttu-id="10eb6-202">
            <b>False</b> si l’objet est affiché de gauche à droite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-202">
              <b>False</b> if the object is displayed from left to right.</span>
          </span>
          <span data-ttu-id="10eb6-203">Type <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-203">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-204">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-204">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-205">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-205">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-206">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-206">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoFilter">
      <MemberSignature Language="C#" Value="public bool EnableAutoFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableAutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p126">
            <b>True</b> si les flèches du filtre automatique sont activées lorsque la protection Interface utilisateur seulement est activée. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p126">
              <b>True</b> if AutoFilter arrows are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-209">
            <para>Cette propriété s’applique à chaque feuille de calcul et n’est pas enregistrée avec la feuille de calcul ou la session.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-209">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCalculation">
      <MemberSignature Language="C#" Value="public bool EnableCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p127">
            <b>True</b> si Microsoft Excel recalcule automatiquement la feuille de calcul quand cela est nécessaire. <b>False</b> si Excel ne recalcule pas la feuille. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p127">
              <b>True</b> if Microsoft Excel automatically recalculates the worksheet when necessary. <b>False</b> if Excel doesn't recalculate the sheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-213">
            <para>Lorsque la valeur de cette propriété a la <b>valeur False</b>, vous ne pouvez pas demander un recalcul. Lorsque vous modifiez la valeur <b>false</b> à <b>la valeur True</b>, Excel recalcule la feuille de calcul.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-213">
              <para>When the value of this property is <b>False</b>, you cannot request a recalculation. When you change the value from <b>False</b> to <b>True</b>, Excel recalculates the worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFormatConditionsCalculation">
      <MemberSignature Language="C#" Value="public bool EnableFormatConditionsCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFormatConditionsCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableFormatConditionsCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFormatConditionsCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFormatConditionsCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-214">Cette propriété renvoie ou définit si les formats conditionnels se produira automatiquement selon vos besoins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-214">Returns or sets if conditional formats will occur automatically as needed.</span>
          </span>
          <span data-ttu-id="10eb6-215">Type de données <b>Boolean</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-215">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10eb6-216">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-216">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="10eb6-217">
            <para>Lorsque la valeur <b>True</b> (valeur par défaut), d’évaluation de formats conditionnels se produira automatiquement selon vos besoins.  Lorsque cette propriété a la valeur <b>False</b>, mises en forme conditionnelles sera pas réévaluées.  N’importe quel précédemment mise en forme conditionnelle sera toujours visible, mais il ne mettra pas à jour en tant que valeurs de cellule ou <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> plages sont modifiées.  </para>
            <para>L’objectif de cet indicateur est pour permettre aux programmeurs configurer une règle entièrement avant de l’évaluer.  Ceci est particulièrement utile lorsque la condition est appliquée à une plage de grande taille comme performances peuvent être lente dans ces cas-là.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-217">
              <para>When set to <b>True</b> (default), evaluation of conditional formats will occur automatically as needed.  When set to <b>False</b>, conditional formats will not be re-evaluated.  Any previously applied conditional formatting will still be visible, but it will not update as cell values or <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> ranges are changed.  </para>
              <para>The purpose of this flag is to allow programmers to configure a rule completely before evaluating it.  This is particularly useful when condition is applied over a large range as performance can be slow in these cases.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableOutlining">
      <MemberSignature Language="C#" Value="public bool EnableOutlining { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableOutlining" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableOutlining" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableOutlining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableOutlining { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p129">
            <b>True</b> si les symboles du plan sont activés lorsque la protection Interface utilisateur seulement est activée. Type de données <b>Boolean</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p129">
              <b>True</b> if outlining symbols are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-220">
            <para>Cette propriété s’applique à chaque feuille de calcul et n’est pas enregistrée avec la feuille de calcul ou la session.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-220">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePivotTable">
      <MemberSignature Language="C#" Value="public bool EnablePivotTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnablePivotTable" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePivotTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePivotTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p130">
            <b>True</b> si les contrôles et les actions du tableau croisé dynamique sont activés lorsque la protection Interface utilisateur seulement est activée. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p130">
              <b>True</b> if PivotTable controls and actions are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-223">
            <para>Cette propriété s’applique à chaque feuille de calcul et n’est pas enregistrée avec la feuille de calcul ou la session.</para>
            <para>Il doit exister un nombre suffisant de cellules non verrouillées en dessous et à droite du rapport de tableau croisé dynamique pour Microsoft Excel puisse le recalculer et afficher le rapport de tableau croisé dynamique.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-223">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para>There must be a sufficient number of unlocked cells below and to the right of the PivotTable report for Microsoft Excel to recalculate and display the PivotTable report.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSelection As XlEnableSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableSelection EnableSelection { Microsoft::Office::Interop::Excel::XlEnableSelection get(); void set(Microsoft::Office::Interop::Excel::XlEnableSelection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-224">Cette propriété renvoie ou définit ce qui peut être sélectionné dans la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-224">Returns or sets what can be selected on the sheet.</span>
          </span>
          <span data-ttu-id="10eb6-225">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-225">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-226">
            <para>Cette propriété prend effet que lorsque la feuille de calcul est protégée : <b>xlNoSelection</b> empêche toute sélection dans la feuille, <b>xlUnlockedCells</b> autorise uniquement les cellules dont la propriété <b>Locked</b> a la <b>valeur False</b> à sélectionner et <b> xlNoRestrictions</b> permet de n’importe quelle cellule à sélectionner.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-226">
              <para>This property takes effect only when the worksheet is protected: <b>xlNoSelection</b> prevents any selection on the sheet, <b>xlUnlockedCells</b> allows only those cells whose <b>Locked</b> property is <b>False</b> to be selected, and <b>xlNoRestrictions</b> allows any cell to be selected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="10eb6-227">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-227">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="10eb6-228">Nom de l'objet, conformément aux conventions de dénomination de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-228">The name of the object, using the naming convention of Microsoft Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-229">Cette méthode convertit un nom Microsoft Excel en un objet ou une valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-229">Converts a Microsoft Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="10eb6-230">
            <para>Les types suivants de noms dans Microsoft Excel peuvent être utilisés avec cette méthode :</para> Noms 
          <list type="bullet"><item><description>défini. Vous pouvez spécifier n’importe quel nom.</description></item> Références 
            <item><description>externe. Vous pouvez utiliser le ! Pour faire référence à une feuille de calcul défini dans un autre classeur.</description></item></list><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-230">
              <para>The following types of names in Microsoft Excel can be used with this method:</para>
              <list type="bullet">
                <item>
                  <description>Defined names. You can specify any name.</description>
                </item>
                <item>
                  <description>External references. You can use the ! operator to refer to a worksheet defined in another workbook.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="10eb6-231">Type de format de fichier vers lequel exporter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-231">The type of file format to export to.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="10eb6-232">Le nom de fichier du fichier à enregistrer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-232">The file name of the file to be saved.</span>
          </span>
          <span data-ttu-id="10eb6-233">Vous pouvez inclure un chemin d’accès complet ou short_Excel2007 enregistre le fichier dans le dossier actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-233">You can include a full path, or short_Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="10eb6-234">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-234">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          </span>
          <span data-ttu-id="10eb6-235">Spécifie la qualité du fichier publié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-235">Specifies the quality of the published file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="10eb6-236">
            <b>True</b> pour inclure les propriétés du document ; sinon <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-236">
              <b>True</b> to include the document properties; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="10eb6-237">
            <b>True</b> pour ignorer les zones d’impression définies lors de la publication ; sinon <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-237">
              <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="10eb6-p135">Numéro de la page à partir de laquelle commence la publication. Si cet argument est omis, la publication commence à la première page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p135">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="10eb6-p136">Numéro de la dernière page à publier. Si cet argument est omis, la publication se termine à la dernière page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p136">The number of the last page to publish. If this argument is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="10eb6-242">
            <b>True</b> pour afficher le fichier dans la visionneuse après sa publication ; Sinon, <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-242">
              <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="10eb6-243">Pointeur vers la classe <b>FixedFormatExt</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-243">Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-244">Réalise une exportation dans un fichier avec le format spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-244">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-245">
            <para>Cette méthode prend également en charge l’initialisation d’un complément pour exporter un fichier dans un fichier au format fixe. Par exemple, Excel effectue la conversion du format de fichier si les convertisseurs sont présents. La conversion est généralement lancée par l’utilisateur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-245">
              <para>This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMode">
      <MemberSignature Language="C#" Value="public bool FilterMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-246">
            <b>True</b> si la feuille de calcul est en mode filtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-246">
              <b>True</b> if the worksheet is in filter mode.</span>
          </span>
          <span data-ttu-id="10eb6-247">Type <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-247">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-248">
            <para>Cette propriété est <b>True</b> si la feuille de calcul contient une liste filtrée des lignes masquées.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-248">
              <para>This property is <b>True</b> if the worksheet contains a filtered list in which there are hidden rows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-249">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-249">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-250">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-250">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-251">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> sauts de collection qui représente la page horizontale sur la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-251">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="10eb6-252">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-252">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-253">
            <para>Il existe une limite de 1026 sauts de page horizontaux par feuille.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-253">
              <para>There is a limit of 1,026 horizontal page breaks per sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-254">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection qui représente les liens hypertexte de la plage ou la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-254">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-255">Cette propriété renvoie le numéro d'index de l'objet dans la collection des objets similaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-255">Returns the index number of the object within the collection of similar objects.</span>
          </span>
          <span data-ttu-id="10eb6-256">Valeur <b>Integer</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-256">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-257">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-257">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-258">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-258">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-259">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-259">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObjects ListObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObjects ListObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObjects As ListObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObjects ^ ListObjects { Microsoft::Office::Interop::Excel::ListObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-260">Retourne une collection de <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> des objets dans la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-260">Returns a collection of <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects in the worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-261">Collection <b>ListObjects</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-261">Read-only <b>ListObjects</b> collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-262">Représente un en-tête de message électronique pour un document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-262">Represents an e-mail header for a document.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="10eb6-263">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-263">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-264">La feuille avant laquelle la feuille déplacée sera placée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-264">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="10eb6-265">Vous ne pouvez pas spécifier <paramref name="Before" /> si vous spécifiez <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-265">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="10eb6-266">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-266">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-267">La feuille après laquelle la feuille déplacée sera placée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-267">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="10eb6-268">Vous ne pouvez pas spécifier <paramref name="After" /> si vous spécifiez <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-268">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-269">Déplace la feuille vers un autre emplacement dans le classeur</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-269">Moves the sheet to another location in the workbook</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-270">
            <para>Si vous ne spécifiez pas ces <paramref name="Before" /> ou <paramref name="After" />, Microsoft Excel crée un nouveau classeur contenant la feuille déplacée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-270">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p143">Cette propriété renvoie ou définit le nom de l'objet. Type de données <b>String</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p143">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-273">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection qui représente tous les noms spécifiques à la feuille de calcul (noms définis avec le préfixe « WorksheetName ! »</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-273">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!"</span>
          </span>
          <span data-ttu-id="10eb6-274">préfixe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-274">prefix).</span>
          </span>
          <span data-ttu-id="10eb6-275">Objet <b>Names</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-275">Read-only <b>Names</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-276">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, ou <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object qui représente la cellule ou la feuille suivante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-276">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet or cell.</span>
          </span>
          <span data-ttu-id="10eb6-277">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-277">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-278">
            <para>Si l’objet est une plage, cette propriété simule l’utilisation de la touche TAB, bien que la propriété renvoie la prochaine cellule sans la sélectionner it.</para>
            <para>Dans une feuille de calcul protégée, cette propriété renvoie la prochaine cellule non verrouillée. Dans une feuille non protégée, cette propriété renvoie toujours la cellule immédiatement à droite de la cellule spécifiée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-278">
              <para>If the object is a range, this property emulates the TAB key, although the property returns the next cell without selecting it.</para>
              <para>On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="10eb6-279">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-279">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-280">Le nom ou numéro de l'objet OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-280">The name or number of the OLE object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-281">Renvoie un objet qui représente soit un seul objet OLE (un <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) ou une collection de tous les objets OLE (une <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) sur le graphique ou la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-281">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span>
          </span>
          <span data-ttu-id="10eb6-282">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-282">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-283">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-283">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-284">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-284">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-285">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-285">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-286">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-286">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-287">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-287">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-288">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-288">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-289">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-289">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Outline Outline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Outline Outline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Outline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outline As Outline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Outline ^ Outline { Microsoft::Office::Interop::Excel::Outline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Outline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-290">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> object qui représente le plan de la feuille de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-290">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> object that represents the outline for the specified worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-291">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-291">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-292">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-292">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-293">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> objet qui contient tous les paramètres de mise en page pour l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-293">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span>
          </span>
          <span data-ttu-id="10eb6-294">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-294">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p150">Renvoie l'objet parent de l'objet spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p150">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Destination, object Link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Destination, [in]object Link) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Paste(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Destination As Object, Optional Link As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="10eb6-297">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-297">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-298">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui spécifie où le contenu du Presse-papiers doit être collé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-298">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where the Clipboard contents should be pasted.</span>
          </span>
          <span data-ttu-id="10eb6-299">Si cet argument est omis, la sélection actuelle est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-299">If this argument is omitted, the current selection is used.</span>
          </span>
          <span data-ttu-id="10eb6-300">Cet argument peut être spécifié uniquement si le contenu du Presse-papiers peut être collé dans une plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-300">This argument can be specified only if the contents of the Clipboard can be pasted into a range.</span>
          </span>
          <span data-ttu-id="10eb6-301">Si cet argument n’est spécifié, le <paramref name="Link" /> argument ne peut pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-301">If this argument is specified, the <paramref name="Link" /> argument cannot be used.</span>
          </span>
        </param>
        <param name="Link">
          <span data-ttu-id="10eb6-302">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-302">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-303">
            <b>True</b> pour établir un lien vers la source des données collées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-303">
              <b>True</b> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="10eb6-304">Si cet argument n’est spécifié, le <paramref name="Destination" /> argument ne peut pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-304">If this argument is specified, the <paramref name="Destination" /> argument cannot be used.</span>
          </span>
          <span data-ttu-id="10eb6-305">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-305">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-306">Cette méthode colle le contenu du Presse-papiers dans la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-306">Pastes the contents of the Clipboard onto the sheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-307">
            <para>Si vous ne spécifiez pas le <paramref name="Destination" /> argument, vous devez sélectionner la plage de destination avant d’utiliser cette méthode.</para>
            <para>Cette méthode peut modifier la sélection de la feuille, selon le contenu du Presse-papiers.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-307">
              <para>If you don’t specify the <paramref name="Destination" /> argument, you must select the destination range before you use this method.</para>
              <para>This method may modify the sheet selection, depending on the contents of the Clipboard.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel, object NoHTMLFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel, [in]object NoHTMLFormatting) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object, Optional NoHTMLFormatting As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
        <Parameter Name="NoHTMLFormatting" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">
          <span data-ttu-id="10eb6-308">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-308">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-309">Chaîne qui spécifie le format des données du Presse-papiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-309">A string that specifies the Clipboard format of the data.</span>
          </span>
        </param>
        <param name="Link">
          <span data-ttu-id="10eb6-310">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-310">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-311">
            <b>True</b> pour établir un lien vers la source des données collées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-311">
              <b>True</b> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="10eb6-312">Si la source de données n’est pas approprié pour la liaison ou l’application source ne prend pas en charge la liaison, ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-312">If the source data isn’t suitable for linking or the source application doesn't support linking, this parameter is ignored.</span>
          </span>
          <span data-ttu-id="10eb6-313">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-313">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="DisplayAsIcon">
          <span data-ttu-id="10eb6-314">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-314">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-315">
            <b>True</b> pour afficher les données collées sous forme d’icône.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-315">
              <b>True</b> to display the pasted data as an icon.</span>
          </span>
          <span data-ttu-id="10eb6-316">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-316">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="IconFileName">
          <span data-ttu-id="10eb6-317">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-317">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-318">Le nom du fichier qui contient l’icône à utiliser si <paramref name="DisplayAsIcon" /> a la <b>valeur True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-318">The name of the file that contains the icon to use if <paramref name="DisplayAsIcon" /> is <b>True</b>.</span>
          </span>
        </param>
        <param name="IconIndex">
          <span data-ttu-id="10eb6-319">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-319">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-320">Numéro d'index de l'icône dans le fichier d'icônes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-320">The index number of the icon within the icon file.</span>
          </span>
        </param>
        <param name="IconLabel">
          <span data-ttu-id="10eb6-321">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-321">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-322">Étiquette de texte de l'icône.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-322">The text label of the icon.</span>
          </span>
        </param>
        <param name="NoHTMLFormatting">
          <span data-ttu-id="10eb6-323">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-323">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-324">
            <b>True</b> pour supprimer la mise en forme et des liens hypertexte, les images du code HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-324">
              <b>True</b> to remove all formatting, hyperlinks, and images from HTML.</span>
          </span>
          <span data-ttu-id="10eb6-325">
            <b>False</b> pour coller le code HTML tel quel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-325">
              <b>False</b> to paste HTML as is.</span>
          </span>
          <span data-ttu-id="10eb6-326">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-326">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-327">Colle le contenu du Presse-papiers dans la feuille à l’aide d’un format spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-327">Pastes the contents of the Clipboard onto the sheet using a specified format.</span>
          </span>
          <span data-ttu-id="10eb6-328">Utilisez cette méthode pour coller des données à partir d’autres applications ou pour coller des données dans un format spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-328">Use this method to paste data from other applications or to paste data in a specific format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-329">
            <para>
              <paramref name="NoHTMLFormatting" />importe uniquement lorsque <paramref name="Format" /> = « HTML ». Dans tous les autres cas, <paramref name="NoHTMLFormatting" /> sera ignorée.</para>
            <para>Vous devez sélectionner la plage de destination avant d’utiliser cette méthode.</para>
            <para>Cette méthode peut modifier la sélection de la feuille, selon le contenu du Presse-papiers.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-329">
              <para>
                <paramref name="NoHTMLFormatting" /> will only matter when <paramref name="Format" /> = “HTML”. In all other cases, <paramref name="NoHTMLFormatting" /> will be ignored.</para>
              <para>You must select the destination range before you use this method.</para>
              <para>This method may modify the sheet selection, depending on the contents of the Clipboard.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-330">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-330">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PivotTables([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTables(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTables (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="10eb6-331">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-331">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-332">Nom ou numéro du rapport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-332">The name or number of the report.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-333">Renvoie un objet qui représente soit un seul rapport de tableau croisé dynamique (un <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> objet), soit une collection de tous les rapports de tableau croisé dynamique (un <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> objet) sur une feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-333">Returns an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-334">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-334">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object) As PivotTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">
          <span data-ttu-id="10eb6-335">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-335">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-336">La source de données du rapport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-336">The source of the report data.</span>
          </span>
          <span data-ttu-id="10eb6-337">Peut être une de le <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-337">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</span>
          </span>
        </param>
        <param name="SourceData">
          <span data-ttu-id="10eb6-338">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-338">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-339">Les données pour le nouveau rapport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-339">The data for the new report.</span>
          </span>
          <span data-ttu-id="10eb6-340">Peut être un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet, un tableau de plages ou une constante de texte qui représente le nom d’un autre rapport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-340">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report.</span>
          </span>
          <span data-ttu-id="10eb6-341">Pour une base de données externe, <paramref name="SourceData" /> est un tableau de chaînes contenant la chaîne de requête SQL où chaque élément est de 255 caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-341">For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length.</span>
          </span>
          <span data-ttu-id="10eb6-342">Vous devez utiliser le <paramref name="Connection" /> argument afin de spécifier la chaîne de connexion ODBC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-342">You should use the <paramref name="Connection" /> argument to specify the ODBC connection string.</span>
          </span>
          <span data-ttu-id="10eb6-343">Pour assurer la compatibilité avec les versions antérieures d’Excel, <paramref name="SourceData" /> peut être un tableau à deux éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-343">For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array.</span>
          </span>
          <span data-ttu-id="10eb6-344">Le premier élément est la chaîne de connexion spécifiant la source ODBC pour les données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-344">The first element is the connection string specifying the ODBC source for the data.</span>
          </span>
          <span data-ttu-id="10eb6-345">Le deuxième élément est la chaîne de requête SQL utilisée pour obtenir les données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-345">The second element is the SQL query string used to get the data.</span>
          </span>
          <span data-ttu-id="10eb6-346">Si vous spécifiez <paramref name="SourceData" />, vous devez également spécifier <paramref name="SourceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-346">If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />.</span>
          </span>
          <span data-ttu-id="10eb6-347">Si la cellule active se trouve dans le <paramref name="SourceData" /> plage, vous devez spécifier <paramref name="TableDestination" /> également.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-347">If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</span>
          </span>
        </param>
        <param name="TableDestination">
          <span data-ttu-id="10eb6-348">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-348">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-349">Un objet <b>Range</b> spécifiant où le rapport doit être placé sur la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-349">A <b>Range</b> object specifying where the report should be placed on the worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-350">Si cet argument est omis, le rapport est placé dans la cellule active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-350">If this argument is omitted, the report is placed at the active cell.</span>
          </span>
        </param>
        <param name="TableName">
          <span data-ttu-id="10eb6-351">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-351">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-352">Chaîne qui indique le nom du nouveau rapport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-352">A string that specifies the name of the new report.</span>
          </span>
        </param>
        <param name="RowGrand">
          <span data-ttu-id="10eb6-353">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-353">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-354">
            <b>True</b> pour afficher les totaux généraux des lignes du rapport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-354">
              <b>True</b> to show grand totals for rows in the report.</span>
          </span>
        </param>
        <param name="ColumnGrand">
          <span data-ttu-id="10eb6-355">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-355">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-356">
            <b>True</b> pour afficher les totaux généraux des colonnes du rapport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-356">
              <b>True</b> to show grand totals for columns in the report.</span>
          </span>
        </param>
        <param name="SaveData">
          <span data-ttu-id="10eb6-357">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-357">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-358">
            <b>True</b> pour enregistrer les données avec le rapport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-358">
              <b>True</b> to save data with the report.</span>
          </span>
          <span data-ttu-id="10eb6-359">
            <b>False</b> pour enregistrer uniquement la définition de rapport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-359">
              <b>False</b> to save only the report definition.</span>
          </span>
        </param>
        <param name="HasAutoFormat">
          <span data-ttu-id="10eb6-360">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-360">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-361">
            <b>True</b> pour que Microsoft Excel mette automatiquement en forme le rapport lorsqu'il est actualisé ou que des champs sont déplacés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-361">
              <b>True</b> to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</span>
          </span>
        </param>
        <param name="AutoPage">
          <span data-ttu-id="10eb6-362">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-362">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-363">Valide uniquement si <paramref name="SourceType" /> a la <b>valeur xlConsolidation</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-363">Valid only if <paramref name="SourceType" /> is <b>xlConsolidation</b>.</span>
          </span>
          <span data-ttu-id="10eb6-364">
            <b>True</b> pour que Microsoft Excel crée un champ de page pour la consolidation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-364">
              <b>True</b> to have Microsoft Excel create a page field for the consolidation.</span>
          </span>
          <span data-ttu-id="10eb6-365">Si <paramref name="AutoPage" /> est <b>False</b>, vous devez créer les champs de page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-365">If <paramref name="AutoPage" /> is <b>False</b>, you must create the page field or fields.</span>
          </span>
        </param>
        <param name="Reserved">
          <span data-ttu-id="10eb6-366">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-366">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-367">N'est pas utilisé par Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-367">Not used by Microsoft Excel.</span>
          </span>
        </param>
        <param name="BackgroundQuery">
          <span data-ttu-id="10eb6-368">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-368">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-369">
            <b>True</b> pour qu’Excel exécute des requêtes pour le rapport de manière asynchrone (en arrière-plan).</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-369">
              <b>True</b> to have Excel perform queries for the report asynchronously (in the background).</span>
          </span>
          <span data-ttu-id="10eb6-370">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-370">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OptimizeCache">
          <span data-ttu-id="10eb6-371">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-371">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-372">
            <b>True</b> pour optimiser le cache de tableau croisé dynamique lorsqu’il est créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-372">
              <b>True</b> to optimize the PivotTable cache when it's constructed.</span>
          </span>
          <span data-ttu-id="10eb6-373">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-373">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="PageFieldOrder">
          <span data-ttu-id="10eb6-374">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-374">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-375">L’ordre dans la page champs sont ajoutés à la disposition de l’état de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-375">The order in which page fields are added to the PivotTable report’s layout.</span>
          </span>
          <span data-ttu-id="10eb6-376">Peut être une des constantes <b>XlOrder</b> suivantes : <b>xlDownThenOver</b> ou <b>xlOverThenDown</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-376">Can be one of the following <b>XlOrder</b> constants: <b>xlDownThenOver</b> or <b>xlOverThenDown</b>.</span>
          </span>
          <span data-ttu-id="10eb6-377">La valeur par défaut est <b>xlDownThenOver</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-377">The default value is <b>xlDownThenOver</b>.</span>
          </span>
        </param>
        <param name="PageFieldWrapCount">
          <span data-ttu-id="10eb6-378">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-378">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-379">Le nombre de champs de page dans chaque colonne ou ligne du rapport de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-379">The number of page fields in each column or row in the PivotTable report.</span>
          </span>
          <span data-ttu-id="10eb6-380">La valeur par défaut est 0 (zéro).</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-380">The default value is 0 (zero).</span>
          </span>
        </param>
        <param name="ReadData">
          <span data-ttu-id="10eb6-381">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-381">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-382">
            <b>True</b> pour créer un cache de tableau croisé dynamique qui contient tous les enregistrements à partir de la base de données externe ; Ce cache peut être très volumineux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-382">
              <b>True</b> to create a PivotTable cache that contains all records from the external database; this cache can be very large.</span>
          </span>
          <span data-ttu-id="10eb6-383">Si <paramref name="ReadData" /> est <b>False</b>, vous pouvez définir certains champs comme champs de page serveur avant la lecture des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-383">If <paramref name="ReadData" /> is <b>False</b>, you can set some of the fields as server-based page fields before the data is actually read.</span>
          </span>
        </param>
        <param name="Connection">
          <span data-ttu-id="10eb6-384">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-384">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-385">Chaîne qui contient les paramètres ODBC qui permettent à Excel de se connecter à une source de données ODBC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-385">A string that contains ODBC settings that allow Excel to connect to an ODBC data source.</span>
          </span>
          <span data-ttu-id="10eb6-386">La chaîne de connexion a la forme « ODBC ; &lt;chaîne de connexion&gt;».</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-386">The connection string has the form "ODBC;&lt;connection string&gt;".</span>
          </span>
          <span data-ttu-id="10eb6-387">Cet argument annule le paramètre précédent pour le <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> l’objet <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-387">This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-388">Crée un <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-388">Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span>
          </span>
          <span data-ttu-id="10eb6-389">Cette méthode n’affiche pas l’Assistant tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-389">This method doesn’t display the PivotTable Wizard.</span>
          </span>
          <span data-ttu-id="10eb6-390">Cette méthode n’est pas disponible pour les sources de données OLE DB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-390">This method isn’t available for OLE DB data sources.</span>
          </span>
          <span data-ttu-id="10eb6-391">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> méthode pour ajouter un cache de tableau croisé dynamique, puis créer un rapport de tableau croisé dynamique basé sur le cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-391">Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to add a PivotTable cache, and then create a PivotTable report based on the cache.</span>
          </span>
          <span data-ttu-id="10eb6-392">Objet <b>PivotTable</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-392">
              <b>PivotTable</b> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-393">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, ou <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object qui représente la cellule ou la feuille précédente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-393">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet or cell.</span>
          </span>
          <span data-ttu-id="10eb6-394">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-394">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-395">
            <para>Si l’objet est une plage, cette propriété revient à appuyer sur MAJ + TAB, contrairement à la combinaison de touches, toutefois, la propriété renvoie la cellule précédente sans la sélectionner it.</para>
            <para>Dans une feuille de calcul protégée, cette propriété renvoie la cellule non verrouillée précédente. Dans une feuille non protégée, cette propriété renvoie toujours la cellule immédiatement à gauche de la cellule spécifiée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-395">
              <para>If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</para>
              <para>On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-396">Obtient le nombre de pages de commentaires qui seront imprimées pour la feuille de calcul active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-396">Gets the number of comment pages that will be printed for the current worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10eb6-397">Le nombre de pages de commentaires qui seront imprimées pour la feuille de calcul active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-397">The number of comment pages that will be printed for the current worksheet.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="10eb6-398">
            <para>En lecture seule.</para>
            <para>La <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> propriété retournera uniquement un nombre supérieur à zéro si les commentaires dans l’onglet Feuille de la mise en Page boîte de dialogue a la valeur à la fin de la feuille. Cette propriété renvoie zéro si la feuille est une feuille de graphique ou une feuille boîte de dialogue MS Excel 5.0.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-398">
              <para>Read-only.</para>
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> property will only return a number greater than zero if the Comments setting on the Sheet tab of the Page Setup dialog box is set to At end of sheet. This property will return zero if the sheet is a Chart sheet or a MS Excel 5.0 Dialog sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="10eb6-399">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-399">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-400">Le numéro de la page à laquelle commence l’impression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-400">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="10eb6-401">Si cet argument est omis, l’impression commence au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-401">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="10eb6-402">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-402">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-403">Le numéro de la dernière page à imprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-403">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="10eb6-404">Si cet argument est omis, l’impression se termine par la dernière page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-404">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="10eb6-405">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-405">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-406">Le nombre de copies à imprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-406">The number of copies to print.</span>
          </span>
          <span data-ttu-id="10eb6-407">Si cet argument est omis, une seule copie est imprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-407">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="10eb6-408">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-408">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-409">
            <b>True</b> pour que Microsoft Excel affiche un aperçu avant impression de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-409">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="10eb6-410">
            <b>False</b> (ou omis) pour imprimer l’objet immédiatement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-410">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="10eb6-411">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-411">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-412">Définit le nom de l'imprimante active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-412">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="10eb6-413">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-413">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-414">
            <b>True</b> pour imprimer dans un fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-414">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="10eb6-415">Si <paramref name="PrToFileName" /> n’est pas spécifié, Microsoft Excel invite l’utilisateur à entrer le nom du fichier de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-415">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="10eb6-416">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-416">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-417">
            <b>True</b> pour assembler plusieurs copies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-417">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="10eb6-418">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-418">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-419">Si <paramref name="PrintToFile" /> est définie sur <b>True</b>, cet argument spécifie le nom du fichier que vous souhaitez effectuer l’impression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-419">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-420">Imprime l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-420">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-421">
            <para>« Pages » dans les descriptions de <paramref name="From" /> et <paramref name="To" /> fait référence aux pages imprimées, pas toutes les pages de la feuille ou du classeur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-421">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-422">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-422">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="10eb6-423">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-423">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-424">
            <b>True</b> pour activer les modifications apportées à la feuille de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-424">
              <b>True</b> to enable changes to the specified worksheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-425">Cette méthode affiche un aperçu de l'objet tel qu'il apparaîtra une fois imprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-425">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly, object AllowFormattingCells, object AllowFormattingColumns, object AllowFormattingRows, object AllowInsertingColumns, object AllowInsertingRows, object AllowInsertingHyperlinks, object AllowDeletingColumns, object AllowDeletingRows, object AllowSorting, object AllowFiltering, object AllowUsingPivotTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly, [in]object AllowFormattingCells, [in]object AllowFormattingColumns, [in]object AllowFormattingRows, [in]object AllowInsertingColumns, [in]object AllowInsertingRows, [in]object AllowInsertingHyperlinks, [in]object AllowDeletingColumns, [in]object AllowDeletingRows, [in]object AllowSorting, [in]object AllowFiltering, [in]object AllowUsingPivotTables) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object, Optional AllowFormattingCells As Object, Optional AllowFormattingColumns As Object, Optional AllowFormattingRows As Object, Optional AllowInsertingColumns As Object, Optional AllowInsertingRows As Object, Optional AllowInsertingHyperlinks As Object, Optional AllowDeletingColumns As Object, Optional AllowDeletingRows As Object, Optional AllowSorting As Object, Optional AllowFiltering As Object, Optional AllowUsingPivotTables As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
        <Parameter Name="AllowFormattingCells" Type="System.Object" />
        <Parameter Name="AllowFormattingColumns" Type="System.Object" />
        <Parameter Name="AllowFormattingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingColumns" Type="System.Object" />
        <Parameter Name="AllowInsertingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingHyperlinks" Type="System.Object" />
        <Parameter Name="AllowDeletingColumns" Type="System.Object" />
        <Parameter Name="AllowDeletingRows" Type="System.Object" />
        <Parameter Name="AllowSorting" Type="System.Object" />
        <Parameter Name="AllowFiltering" Type="System.Object" />
        <Parameter Name="AllowUsingPivotTables" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="10eb6-426">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-426">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-427">Chaîne qui spécifie un mot de passe qui respecte la casse pour la feuille de calcul ou du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-427">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="10eb6-428">Si cet argument est omis, vous pouvez ôter la protection de la feuille de calcul ou du classeur sans l’aide d’un mot de passe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-428">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="10eb6-429">Dans le cas contraire, vous devez spécifier le mot de passe pour ôter la protection de la feuille de calcul ou du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-429">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="10eb6-430">Si vous oubliez le mot de passe, vous ne pouvez pas ôter la protection de la feuille de calcul ou du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-430">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="10eb6-431">Il est conseillé de conserver une liste de vos mots de passe et les noms de documents correspondants dans un endroit sûr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-431">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="DrawingObjects">
          <span data-ttu-id="10eb6-432">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-432">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-433">
            <b>True</b> pour protéger les formes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-433">
              <b>True</b> to protect shapes.</span>
          </span>
          <span data-ttu-id="10eb6-434">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-434">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Contents">
          <span data-ttu-id="10eb6-435">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-435">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-436">
            <b>True</b> pour protéger le contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-436">
              <b>True</b> to protect contents.</span>
          </span>
          <span data-ttu-id="10eb6-437">Pour un graphique, cela protège le graphique entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-437">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="10eb6-438">Pour une feuille de calcul, cela protège les cellules verrouillées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-438">For a worksheet, this protects the locked cells.</span>
          </span>
          <span data-ttu-id="10eb6-439">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-439">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Scenarios">
          <span data-ttu-id="10eb6-440">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-440">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-441">
            <b>True</b> pour protéger les scénarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-441">
              <b>True</b> to protect scenarios.</span>
          </span>
          <span data-ttu-id="10eb6-442">Cet argument est valide uniquement pour les feuilles de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-442">This argument is valid only for worksheets.</span>
          </span>
          <span data-ttu-id="10eb6-443">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-443">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="UserInterfaceOnly">
          <span data-ttu-id="10eb6-444">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-444">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-445">
            <b>True</b> pour protéger l’interface utilisateur, mais pas les macros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-445">
              <b>True</b> to protect the user interface but not macros.</span>
          </span>
          <span data-ttu-id="10eb6-446">Si cet argument est omis, la protection s’applique à la fois aux macros et à l’interface utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-446">If this argument is omitted, protection applies both to macros and to the user interface.</span>
          </span>
        </param>
        <param name="AllowFormattingCells">
          <span data-ttu-id="10eb6-447">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-447">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-448">
            <b>True</b> permet à l’utilisateur de mettre en forme n’importe quelle cellule dans une feuille de calcul protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-448">
              <b>True</b> allows the user to format any cell on a protected worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-449">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-449">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFormattingColumns">
          <span data-ttu-id="10eb6-450">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-450">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-451">
            <b>True</b> permet à l’utilisateur de mettre en forme n’importe quelle colonne sur une feuille de calcul protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-451">
              <b>True</b> allows the user to format any column on a protected worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-452">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-452">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFormattingRows">
          <span data-ttu-id="10eb6-453">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-453">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-454">
            <b>True</b> permet à l’utilisateur de mettre en forme n’importe quelle ligne sur une feuille de calcul protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-454">
              <b>True</b> allows the user to format any row on a protected worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-455">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-455">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingColumns">
          <span data-ttu-id="10eb6-456">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-456">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-457">
            <b>True</b> permet à l’utilisateur d’insérer des colonnes dans la feuille de calcul protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-457">
              <b>True</b> allows the user to insert columns on the protected worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-458">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-458">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingRows">
          <span data-ttu-id="10eb6-459">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-459">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-460">
            <b>True</b> permet à l’utilisateur d’insérer des lignes dans la feuille de calcul protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-460">
              <b>True</b> allows the user to insert rows on the protected worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-461">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-461">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingHyperlinks">
          <span data-ttu-id="10eb6-462">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-462">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-463">
            <b>True</b> permet à l’utilisateur d’insérer des liens hypertexte de la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-463">
              <b>True</b> allows the user to insert hyperlinks on the worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-464">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-464">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowDeletingColumns">
          <span data-ttu-id="10eb6-465">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-465">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-466">
            <b>True</b> permet à l’utilisateur de supprimer des colonnes dans la feuille de calcul protégée, où chaque cellule de la colonne à supprimer est déverrouillée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-466">
              <b>True</b> allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="10eb6-467">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-467">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowDeletingRows">
          <span data-ttu-id="10eb6-468">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-468">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-469">
            <b>True</b> permet à l’utilisateur de supprimer des lignes dans la feuille de calcul protégée où chaque cellule de la ligne à supprimer est déverrouillée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-469">
              <b>True</b> allows the user to delete rows on the protected worksheet where every cell in the row to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="10eb6-470">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-470">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowSorting">
          <span data-ttu-id="10eb6-471">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-471">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-472">
            <b>True</b> permet à l’utilisateur d’effectuer un tri sur la feuille de calcul protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-472">
              <b>True</b> allows the user to sort on the protected worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-473">Toutes les cellules de la plage de tri doivent être déverrouillées ou non protégées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-473">Every cell in the sort range must be unlocked or unprotected.</span>
          </span>
          <span data-ttu-id="10eb6-474">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-474">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFiltering">
          <span data-ttu-id="10eb6-475">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-475">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-476">
            <b>True</b> permet à l’utilisateur de définir des filtres de la feuille de calcul protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-476">
              <b>True</b> allows the user to set filters on the protected worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-477">Les utilisateurs peuvent modifier les critères de filtre mais ne peuvent pas activer ou désactiver un filtre automatique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-477">Users can change filter criteria but can not enable or disable an auto filter.</span>
          </span>
          <span data-ttu-id="10eb6-478">Les utilisateurs peuvent définir des filtres sur un filtre automatique existant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-478">Users can set filters on an existing auto filter.</span>
          </span>
          <span data-ttu-id="10eb6-479">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-479">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowUsingPivotTables">
          <span data-ttu-id="10eb6-480">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-480">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-481">
            <b>True</b> permet à l’utilisateur d’utiliser des rapports de tableau croisé dynamique sur la feuille de calcul protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-481">
              <b>True</b> allows the user to use pivot table reports on the protected worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-482">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-482">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-483">Cette méthode protège une feuille de calcul de sorte qu'elle ne puisse être modifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-483">Protects a worksheet so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-484">
            <para>Si vous appliquez la méthode <b>Protect</b> avec la <paramref name="UserInterfaceOnly" /> argument la valeur <b>True</b> pour une feuille de calcul et puis enregistrez le classeur, la feuille de calcul entière (pas seulement l’interface) sera protégée lorsque vous rouvrez le classeur. Pour réactiver la protection d’interface utilisateur une fois que le classeur est ouvert, vous devez de nouveau appliquer la méthode <b>Protect</b> avec <paramref name="UserInterfaceOnly" /> la valeur <b>True</b>.</para>
            <para>Si vous souhaitez apporter une modification à une feuille de calcul protégée, il est possible d’utiliser la méthode <b>Protect</b> sur une feuille de calcul protégée si le mot de passe est fourni. Une autre méthode consisterait à ôter la protection de la feuille de calcul, apportez les modifications nécessaires, puis protéger la feuille de calcul à nouveau.</para>
            <para>
              <b>Remarque</b>: 'Non protégé' signifie la cellule peut être verrouillée (boîte de dialogue Format de cellule) mais est inclus dans une plage définie dans le permettre aux utilisateurs de modifier les plages de boîte de dialogue, et l’utilisateur sans protection de la plage avec un mot de passe a été validée via des autorisations NT.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-484">
              <para>If you apply the <b>Protect</b> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b> to a worksheet and then save the workbook, the entire worksheet (not just the interface) will be fully protected when you reopen the workbook. To re-enable the user interface protection after the workbook is opened, you must again apply the <b>Protect</b> method with <paramref name="UserInterfaceOnly" /> set to <b>True</b>.</para>
              <para>If you want to make a change to a protected worksheet, it is possible to use the <b>Protect</b> method on a protected worksheet if the password is supplied. Another method would be to unprotect the worksheet, make the necessary changes, and then protect the worksheet again.</para>
              <para>
                <b>Note</b>: 'Unprotected' means the cell may be locked (Format Cells dialog) but is included in a range defined in the Allow Users to Edit Ranges dialog, and the user has unprotected the range with a password or been validated via NT permissions.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-485">
            <b>La valeur true</b> si le contenu de la feuille est protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-485">
              <b>True</b> if the contents of the sheet are protected.</span>
          </span>
          <span data-ttu-id="10eb6-486">Pour un graphique, cela protège le graphique entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-486">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="10eb6-487">Pour une feuille de calcul, cela protège les cellules individuelles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-487">For a worksheet, this protects the individual cells.</span>
          </span>
          <span data-ttu-id="10eb6-488">Type <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-488">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-489">
            <b>La valeur true</b> si les formes sont protégées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-489">
              <b>True</b> if shapes are protected.</span>
          </span>
          <span data-ttu-id="10eb6-490">Type <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-490">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Protection Protection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Protection Protection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protection As Protection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Protection ^ Protection { Microsoft::Office::Interop::Excel::Protection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Protection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-491">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> objet qui représente les options de protection de la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-491">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-492">
            <b>True</b> si la protection d’interface utilisateur uniquement est activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-492">
              <b>True</b> if user-interface-only protection is turned on.</span>
          </span>
          <span data-ttu-id="10eb6-493">Pour activer la protection de l’interface utilisateur, utilisez la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode avec la <paramref name="UserInterfaceOnly" /> argument la valeur <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-493">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span>
          </span>
          <span data-ttu-id="10eb6-494">Type <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-494">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectScenarios">
      <MemberSignature Language="C#" Value="public bool ProtectScenarios { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectScenarios" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectScenarios" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectScenarios As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectScenarios { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p209">
            <b>True</b> si les scénarios de feuille de calcul sont protégés. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p209">
              <b>True</b> if the worksheet scenarios are protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTables QueryTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTables QueryTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.QueryTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTables As QueryTables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTables ^ QueryTables { Microsoft::Office::Interop::Excel::QueryTables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-497">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection qui représente toutes les tables de requête de la feuille de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-497">Returns the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the specified worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-498">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-498">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <span data-ttu-id="10eb6-499">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-499">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-500">Nom de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-500">The name of the range.</span>
          </span>
          <span data-ttu-id="10eb6-501">Ce doit être une référence de style A1 dans la langue de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-501">This must be an A1-style reference in the language of the macro.</span>
          </span>
          <span data-ttu-id="10eb6-502">Il peut inclure l’opérateur de plage (le signe deux-points), l’opérateur d’intersection (un espace) ou l’opérateur union (une virgule).</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-502">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
          </span>
          <span data-ttu-id="10eb6-503">Il peut également inclure des signes dollar, mais ils sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-503">It can also include dollar signs, but they’re ignored.</span>
          </span>
          <span data-ttu-id="10eb6-504">Vous pouvez utiliser un nom local défini dans n’importe quelle partie de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-504">You can use a local defined name in any part of the range.</span>
          </span>
          <span data-ttu-id="10eb6-505">Si vous utilisez un nom, le nom est supposé pour être dans la langue de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-505">If you use a name, the name is assumed to be in the language of the macro.</span>
          </span>
        </param>
        <param name="Cell2">
          <span data-ttu-id="10eb6-506">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-506">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-507">La cellule dans le coin supérieur gauche et inférieur droit de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-507">The cell in the upper-left and lower-right corner of the range.</span>
          </span>
          <span data-ttu-id="10eb6-508">Peut être un objet <b>Range</b> qui contient une seule cellule, une colonne entière ou une ligne entière, ou il peut être une chaîne qui nomme une seule cellule dans la langue de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-508">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-509">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente une cellule ou une plage de cellules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-509">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-510">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-510">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAllPageBreaks">
      <MemberSignature Language="C#" Value="public void ResetAllPageBreaks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllPageBreaks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ResetAllPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAllPageBreaks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAllPageBreaks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-511">Redéfinit tous les sauts de page de la feuille de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-511">Resets all page breaks on the specified worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-512">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les lignes de la feuille de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-512">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the specified worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-513">Objet <b>Range</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-513">Read-only <b>Range</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="10eb6-514">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-514">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-515">Chaîne qui indique le nom du fichier à enregistrer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-515">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="10eb6-516">Vous pouvez inclure un chemin d’accès complet ; Si vous n’avez pas, Microsoft Excel enregistre le fichier dans le dossier actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-516">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="10eb6-517">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-517">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-518">Le format de fichier à utiliser lorsque vous enregistrez le fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-518">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="10eb6-519">Pour obtenir la liste de choix, voir la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-519">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="10eb6-520">Pour un fichier existant, le format par défaut est le dernier format de fichier spécifié ; pour un nouveau fichier, la valeur par défaut est le format de la version d’Excel utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-520">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="10eb6-521">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-521">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-522">Chaîne qui respecte la casse (maximum 15 caractères) et indique le mot de passe de protection à donner au fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-522">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="10eb6-523">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-523">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-524">Chaîne qui indique le mot de passe de réservation d’écriture pour ce fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-524">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="10eb6-525">Si un fichier est enregistré avec le mot de passe et le mot de passe n’est pas fourni lors de l’ouverture du fichier, le fichier est ouvert en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-525">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="10eb6-526">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-526">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-527">
            <b>True</b> pour afficher un message lorsque le fichier est ouvert, conseillant de l’ouvrir en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-527">
              <b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="10eb6-528">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-528">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-529">
            <b>True</b> pour créer un fichier de sauvegarde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-529">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="10eb6-530">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-530">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-531">
            <b>True</b> pour ajouter ce classeur à la liste des derniers fichiers utilisés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-531">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="10eb6-532">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-532">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="10eb6-533">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-533">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-534">Non utilisé dans la version française de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-534">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="10eb6-535">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-535">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-536">Non utilisé dans la version française de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-536">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="10eb6-537">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-537">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-538">
            <b>True</b> enregistre les fichiers en fonction de la langue de Microsoft Excel (y compris les paramètres du Panneau de configuration).</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-538">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="10eb6-539">
            <b>False</b> (valeur par défaut) enregistre les fichiers par rapport à la langue de Visual Basic pour Applications (VBA) (qui est généralement l’anglais (États-Unis), sauf si le projet VBA où Workbooks.Open est exécuté est un ancien projet VBA XL5/95).</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-539">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-540">Cette méthode enregistre dans un autre fichier les modifications effectuées sur le graphique ou la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-540">Saves changes to the chart or worksheet in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scenarios">
      <MemberSignature Language="C#" Value="public object Scenarios (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Scenarios([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scenarios (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(908)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="10eb6-541">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-541">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-542">Nom ou numéro du scénario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-542">The name or number of the scenario.</span>
          </span>
          <span data-ttu-id="10eb6-543">Utilisez un tableau pour spécifier plusieurs scénarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-543">Use an array to specify more than one scenario.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-544">Renvoie un objet qui représente soit un seul scénario (un <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> objet), soit une collection de scénarios (un <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> objet) sur la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-544">Returns an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-545">Renvoie le <see cref="T:Microsoft.Office.Core.Scripts" /> collection contenant <see cref="T:Microsoft.Office.Core.Script" /> objets représentant les blocs de script ou de code dans le document spécifié lorsqu’il est enregistré en tant que page Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-545">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollArea">
      <MemberSignature Language="C#" Value="public string ScrollArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ScrollArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-546">Cette propriété renvoie ou définit la plage où le défilement est autorisé comme une référence de plage de style A1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-546">Returns or sets the range where scrolling is allowed as an A1-style range reference.</span>
          </span>
          <span data-ttu-id="10eb6-547">Cellules en dehors de la zone de défilement ne peuvent pas être sélectionnés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-547">Cells outside the scroll area cannot be selected.</span>
          </span>
          <span data-ttu-id="10eb6-548">Valeur <b>String</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-548">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-549">
            <para>Définir cette propriété sur une chaîne vide (« ») pour permettre la sélection de cellule pour la totalité de la feuille.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-549">
              <para>Set this property to the empty string ("") to enable cell selection for the entire sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-550">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-550">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="10eb6-551">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-551">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-552">Objet à remplacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-552">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-553">Sélectionne l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-553">Selects the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-554">
            <para>Pour sélectionner une cellule ou une plage de cellules, utilisez la méthode <b>Select</b> . Pour activer une cellule de la cellule active, utilisez la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> méthode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-554">
              <para>To select a cell or a range of cells, use the <b>Select</b> method. To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="10eb6-555">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-555">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="10eb6-556">Nom du fichier graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-556">The name of the graphic file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-557">Définit le graphique de l’arrière-plan d’une feuille de calcul ou d’un graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-557">Sets the background graphic for a worksheet or chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-558">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object qui représente toutes les formes de la feuille de graphique ou la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-558">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span>
          </span>
          <span data-ttu-id="10eb6-559">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-559">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllData">
      <MemberSignature Language="C#" Value="public void ShowAllData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAllData() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowAllData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowAllData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowAllData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p229">Cette méthode affiche toutes les lignes de la liste actuellement filtrée. Si le filtre automatique est utilisé, cette méthode remplace les flèches par « Tout »</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p229">Makes all rows of the currently filtered list visible. If AutoFilter is in use, this method changes the arrows to "All."</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataForm">
      <MemberSignature Language="C#" Value="public void ShowDataForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDataForm() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowDataForm" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowDataForm ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowDataForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-562">Affiche la grille de données associée au classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-562">Displays the data form associated with the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-563">
            <para>L’exécution s’arrête lorsque vous utilisez le formulaire de données. Lorsque vous fermez le formulaire de données, l’exécution reprend à la ligne qui suit la méthode <b>ShowDataForm</b> .</para>
            <para>Cette méthode exécute la grille de données personnalisée, si elle existe.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-563">
              <para>Execution pauses while you’re using the data form. When you close the data form, execution resumes at the line following the <b>ShowDataForm</b> method.</para>
              <para>This method runs the custom data form, if one exists.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-564">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> objet qui représente l’identificateur de la cellule spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-564">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sort Sort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sort Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Sort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sort As Sort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sort ^ Sort { Microsoft::Office::Interop::Excel::Sort ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p230">Renvoie les valeurs triées dans la feuille de calcul active. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p230">Returns the sorted values in the current worksheet. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Sort" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-567">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-567">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardHeight">
      <MemberSignature Language="C#" Value="public double StandardHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-568">Renvoie la hauteur standard (valeur par défaut) de toutes les lignes dans la feuille de calcul en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-568">Returns the standard (default) height of all the rows in the worksheet in points.</span>
          </span>
          <span data-ttu-id="10eb6-569">En lecture seule <b>Double</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-569">Read-only <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardWidth">
      <MemberSignature Language="C#" Value="public double StandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p232">Renvoie ou définit la largeur standard (valeur par défaut) pour toutes les colonnes de la feuille de calcul. Type de données <b>Double</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p232">Returns or sets the standard (default) width of all the columns in the worksheet. Read/write <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-572">
            <para>Une unité de largeur de colonne est égale à la largeur d’un caractère du style Normal. Pour les polices proportionnelles, la largeur du caractère 0 (zéro) est utilisée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-572">
              <para>One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-573">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> objet d’un graphique ou une feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-573">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="10eb6-574">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-574">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionExpEval">
      <MemberSignature Language="C#" Value="public bool TransitionExpEval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionExpEval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionExpEval" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionExpEval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionExpEval { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p233">
            <b>True</b> si Microsoft Excel applique à la feuille de calcul les règles d’évaluation d’expression propres à Lotus 1-2-3. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p233">
              <b>True</b> if Microsoft Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionFormEntry">
      <MemberSignature Language="C#" Value="public bool TransitionFormEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionFormEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionFormEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionFormEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionFormEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-p234">
            <b>True</b> si Microsoft Excel applique à la feuille de calcul les règles de saisie de formules propres à Lotus 1-2-3. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p234">
              <b>True</b> if Microsoft Excel uses Lotus 1-2-3 formula entry rules for the worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlSheetType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetType Type { Microsoft::Office::Interop::Excel::XlSheetType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-579">Cette propriété renvoie ou définit le type de feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-579">Returns or sets the worksheet type.</span>
          </span>
          <span data-ttu-id="10eb6-580">En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-580">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="10eb6-581">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-581">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-582">Chaîne qui indique le mot de passe qui respecte la casse à utiliser pour ôter la protection de la feuille ou du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-582">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="10eb6-583">Si la feuille ou du classeur n’est pas protégé par un mot de passe, cet argument est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-583">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="10eb6-584">Si vous omettez cet argument pour une feuille est protégée par un mot de passe, vous devrez le mot de passe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-584">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="10eb6-585">Si vous omettez cet argument pour un classeur est protégé par un mot de passe, la méthode échoue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-585">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-p237">Cette méthode supprime la protection d'une feuille ou d'un classeur. Elle est sans effet si la feuille ou le classeur n'est pas protégé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-p237">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="10eb6-588">
            <para>Si vous oubliez le mot de passe, vous ne pouvez pas ôter la protection de la feuille ou du classeur. Il est conseillé de conserver une liste de vos mots de passe et les noms de documents correspondants dans un endroit sûr.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-588">
              <para>If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range UsedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range UsedRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.UsedRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ UsedRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-589">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente la plage utilisée dans la feuille de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-589">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the used range on the specified worksheet.</span>
          </span>
          <span data-ttu-id="10eb6-590">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-590">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-591">Détermine si l’objet est visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-591">Determines whether the object is visible.</span>
          </span>
          <span data-ttu-id="10eb6-592">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-592">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="10eb6-593">
            <para>La propriété <b>Visible</b> d’un élément de tableau croisé dynamique a la <b>valeur True</b> si l’élément est actuellement visible dans le tableau.</para>
            <para>Si vous définissez la propriété <b>Visible</b> d’un nom à la <b>valeur False</b>, le nom n’apparaît pas dans la boîte de dialogue Définir un nom.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-593">
              <para>The <b>Visible</b> property for a PivotTable item is <b>True</b> if the item is currently visible in the table.</para>
              <para>If you set the <b>Visible</b> property for a name to <b>False</b>, the name won't appear in the Define Name dialog box.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10eb6-594">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection qui représente la page verticale sauts sur la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-594">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="10eb6-595">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-595">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDataQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlDataQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlDataQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlDataQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="10eb6-596">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-596">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-597">L'objet XPath de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-597">The XPath to query for.</span>
          </span>
        </param>
        <param name="SelectionNamespaces">
          <span data-ttu-id="10eb6-598">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-598">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-599">Séparateur : espace <b>chaîne</b> qui contient les espaces de noms référencés dans le paramètre XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-599">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="10eb6-600">Une erreur d’exécution sera générée si un des espaces de noms spécifié ne peut pas être résolu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-600">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="10eb6-601">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-601">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="10eb6-602">Spécifie un mappage XML comme cible d'une requête de XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-602">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-603">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente les cellules mappées à un XPath particulier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-603">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="10eb6-604">Renvoie la <b>valeur Nothing</b> si l’objet XPath spécifié n’a pas été mappé à la feuille de calcul ou si la plage mappée est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-604">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet or if the mapped range is empty.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="10eb6-605">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para>Si l’objet XPath existe dans une colonne dans une liste XML, l’objet <b>Range</b> renvoyé n’inclut pas la ligne d’en-tête ni la ligne d’insertion.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-605">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>If the XPath exists within a column in an XML list, the <b>Range</b> object returned does not include the header row or the Insert row.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMapQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlMapQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlMapQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlMapQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlMapQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="10eb6-606">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-606">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-607">L'objet XPath de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-607">The XPath to query for.</span>
          </span>
        </param>
        <param name="SelectionNamespaces">
          <span data-ttu-id="10eb6-608">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-608">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="10eb6-609">Séparateur : espace <b>chaîne</b> qui contient les espaces de noms référencés dans le paramètre XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-609">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="10eb6-610">Une erreur d’exécution sera générée si un des espaces de noms spécifié ne peut pas être résolu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-610">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="10eb6-611">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-611">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="10eb6-612">Spécifie un mappage XML comme cible d'une requête de XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-612">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10eb6-613">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente les cellules mappées à un XPath particulier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-613">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="10eb6-614">Renvoie la <b>valeur Nothing</b> si l’objet XPath spécifié n’a pas été mappé à la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-614">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="10eb6-615">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para>Contrairement à la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> méthode, la méthode <b>XmlMapQuery</b> renvoie la colonne entière d’une liste XML, y compris la ligne d’en-tête et la ligne d’insertion.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="10eb6-615">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Unlike the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> method, the <b>XmlMapQuery</b> method returns the entire column of an XML list, including the header row and the Insert row.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>