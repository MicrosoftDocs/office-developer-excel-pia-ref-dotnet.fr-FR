<Type Name="ThreeDFormat" FullName="Microsoft.Office.Interop.Excel.ThreeDFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d21b65911fea75417444605a0fe5b47bd944918" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20585945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ThreeDFormat : Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ThreeDFormat implements class Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ThreeDFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface ThreeDFormat&#xA;Implements _IMsoDispObj" />
  <TypeSignature Language="C++ CLI" Value="public interface class ThreeDFormat : Microsoft::Office::Core::_IMsoDispObj" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C0321-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="62d9f-101">Représente la mise en forme en trois dimensions de la forme.</span>
      <span class="sxs-lookup">
        <span data-stu-id="62d9f-101">Represents a shape's three-dimensional formatting.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="62d9f-102">
        <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.Shape.ThreeD" /> propriété pour renvoyer un objet <b>ThreeDFormat</b> .</para>
        <para>Vous ne pouvez pas appliquer la mise en forme en trois dimensions à certains types de formes, telles que des chemins d’accès multiple-disjoints ou en relief. La plupart des propriétés et méthodes de l' <b>ThreeDFormat</b> d’objet pour les formes échouera.</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="62d9f-102">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ThreeD" /> property to return a <b>ThreeDFormat</b> object.</para>
          <para>You cannot apply three-dimensional formatting to some kinds of shapes, such as beveled shapes or multiple-disjoint paths. Most of the properties and methods of the <b>ThreeDFormat</b> object for such a shape will fail.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-103">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-103">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BevelBottomDepth">
      <MemberSignature Language="C#" Value="public float BevelBottomDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BevelBottomDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelBottomDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property BevelBottomDepth As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BevelBottomDepth { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(119)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(119)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(119)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-104">Cette propriété renvoie ou définit la profondeur inférieure lors de l’utilisation de l’effet de biseau sur un <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-104">Returns or sets the bottom depth when using the bevel effect on a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-105">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-105">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62d9f-106">
            <b>Unique</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-106">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BevelBottomInset">
      <MemberSignature Language="C#" Value="public float BevelBottomInset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BevelBottomInset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelBottomInset" />
      <MemberSignature Language="VB.NET" Value="Public Property BevelBottomInset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BevelBottomInset { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-107">Cette propriété renvoie ou définit une valeur indiquant si le biseau inférieur à insérer doit être déclenché pour un <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-107">Returns or sets a value indicating whether the bottom insert bevel should be raised for  a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-108">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-108">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62d9f-109">
            <b>Unique</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-109">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BevelBottomType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBevelType BevelBottomType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBevelType BevelBottomType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelBottomType" />
      <MemberSignature Language="VB.NET" Value="Public Property BevelBottomType As MsoBevelType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBevelType BevelBottomType { Microsoft::Office::Core::MsoBevelType get(); void set(Microsoft::Office::Core::MsoBevelType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBevelType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-110">Cette propriété renvoie ou définit le type de biseau du bas d’une <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-110">Returns or sets the bottom bevel type for a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-111">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-111">Read/write.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoBevelType" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BevelTopDepth">
      <MemberSignature Language="C#" Value="public float BevelTopDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BevelTopDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelTopDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property BevelTopDepth As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BevelTopDepth { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-112">Cette propriété renvoie ou définit la profondeur supérieure lors de l’utilisation de l’effet de biseau sur un <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-112">Returns or sets the top depth when using the bevel effect on a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-113">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-113">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62d9f-114">
            <b>Unique</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-114">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BevelTopInset">
      <MemberSignature Language="C#" Value="public float BevelTopInset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BevelTopInset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelTopInset" />
      <MemberSignature Language="VB.NET" Value="Public Property BevelTopInset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BevelTopInset { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(115)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(115)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(115)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-115">Cette propriété renvoie ou définit une valeur indiquant si le biseau supérieur à insérer doit être déclenché pour un <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetThreeDFormat(Microsoft.Office.Core.MsoPresetThreeDFormat)" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-115">Returns or sets a value indicating whether the top insert bevel should be raised for  a <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetThreeDFormat(Microsoft.Office.Core.MsoPresetThreeDFormat)" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-116">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-116">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62d9f-117">
            <b>Unique</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-117">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BevelTopType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBevelType BevelTopType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBevelType BevelTopType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.BevelTopType" />
      <MemberSignature Language="VB.NET" Value="Public Property BevelTopType As MsoBevelType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBevelType BevelTopType { Microsoft::Office::Core::MsoBevelType get(); void set(Microsoft::Office::Core::MsoBevelType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBevelType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-118">Cette propriété renvoie ou définit le type de biseau supérieur d’un objet <b>ThreeDFormat</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-118">Returns or sets the top Bevel type for a <b>ThreeDFormat</b> object.</span>
          </span>
          <span data-ttu-id="62d9f-119">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-119">Read/write.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoBevelType" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContourColor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ColorFormat ContourColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ColorFormat ContourColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.ContourColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContourColor As ColorFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ColorFormat ^ ContourColor { Microsoft::Office::Interop::Excel::ColorFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ColorFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-120">Renvoie la couleur du contour d’un <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-120">Returns the contour color for a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-121">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-121">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.ColorFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContourWidth">
      <MemberSignature Language="C#" Value="public float ContourWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ContourWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.ContourWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ContourWidth As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ContourWidth { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-122">Cette propriété renvoie ou définit la largeur du contour d’un <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-122">Returns or sets the contour width for  a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-123">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-123">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62d9f-124">
            <b>Unique</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-124">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-125">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-125">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="62d9f-126">
            <para>Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, ce qui équivaut à la c 5843454 nombre hexadécimal</para> Propriété 
          <para>le <b>créateur</b> est conçue pour être utilisé dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Excel possède le code créateur XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-126">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public float Depth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Depth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Property Depth As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Depth { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-127">Cette propriété renvoie ou définit la profondeur d'extrusion de la forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-127">Returns or sets the depth of the shape's extrusion.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="62d9f-128">
            <para>La propriété <b>Depth</b> peut être une valeur comprise entre –600 et 9 600 (les valeurs positives créent une extrusion dont la face avant est la forme d’origine ; les valeurs négatives créent une extrusion dont la face arrière est la forme d’origine).</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-128">
              <para>The <b>Depth</b> property can be a value from –600 through 9600 (positive values produce an extrusion whose front face is the original shape; negative values produce an extrusion whose back face is the original shape).</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtrusionColor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ColorFormat ExtrusionColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ColorFormat ExtrusionColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.ExtrusionColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtrusionColor As ColorFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ColorFormat ^ ExtrusionColor { Microsoft::Office::Interop::Excel::ColorFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ColorFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-129">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ColorFormat" /> object qui représente la couleur d’extrusion de la forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-129">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ColorFormat" /> object that represents the color of the shape's extrusion.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtrusionColorType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoExtrusionColorType ExtrusionColorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoExtrusionColorType ExtrusionColorType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.ExtrusionColorType" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtrusionColorType As MsoExtrusionColorType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoExtrusionColorType ExtrusionColorType { Microsoft::Office::Core::MsoExtrusionColorType get(); void set(Microsoft::Office::Core::MsoExtrusionColorType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoExtrusionColorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-130">Cette propriété renvoie ou définit une valeur qui indique si la couleur d’extrusion est basée sur le remplissage de la forme extrudée (la face avant de l’extrusion) et change automatiquement le remplissage d’une forme, ou si la couleur d’extrusion est indépendante du remplissage de la forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-130">Returns or sets a value that indicates whether the extrusion color is based on the extruded shape’s fill (the front face of the extrusion) and automatically changes when the shape’s fill changes, or whether the extrusion color is independent of the shape’s fill.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldOfView">
      <MemberSignature Language="C#" Value="public float FieldOfView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 FieldOfView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.FieldOfView" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldOfView As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float FieldOfView { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(124)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(124)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(124)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-131">Cette propriété renvoie ou définit l’angle auquel un <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet peut être affiché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-131">Returns or sets the angle at which a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object can be viewed.</span>
          </span>
          <span data-ttu-id="62d9f-132">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-132">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62d9f-133">
            <b>Unique</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-133">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementRotationHorizontal">
      <MemberSignature Language="C#" Value="public void IncrementRotationHorizontal (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementRotationHorizontal([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationHorizontal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementRotationHorizontal (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementRotationHorizontal(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">
          <span data-ttu-id="62d9f-p110">Spécifie la rotation horizontale (en degrés) de la forme à modifier. Il peut s'agir d'une valeur comprise entre -90 et 90. Une valeur positive oriente la forme vers la gauche ; une valeur négative l'oriente vers la droite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-p110">Specifies how much (in degrees) the rotation of the shape is to be changed horizontally. Can be a value from  –90 through 90. A positive value moves the shape left; a negative value moves it to the right.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62d9f-137">Fait pivoter horizontalement la forme spécifiée selon le nombre de degrés spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-137">Changes the rotation of the specified shape horizontally by the specified number of degrees.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementRotationVertical">
      <MemberSignature Language="C#" Value="public void IncrementRotationVertical (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementRotationVertical([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationVertical(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementRotationVertical (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementRotationVertical(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">
          <span data-ttu-id="62d9f-p111">Spécifie la rotation horizontale (en degrés) de la forme à modifier. Il peut s'agir d'une valeur comprise entre -90 et 90. Une valeur positive oriente la forme vers le haut ; une valeur négative l'oriente vers le bas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-p111">Specifies how much (in degrees) the rotation of the shape is to be changed horizontally. Can be a value from  –90 through 90. A positive value tilts the shape up; a negative value tilts it down.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62d9f-141">Fait pivoter verticalement la forme spécifiée selon le nombre de degrés spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-141">Changes the rotation of the specified shape vertically by the specified number of degrees.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementRotationX">
      <MemberSignature Language="C#" Value="public void IncrementRotationX (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementRotationX([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementRotationX (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementRotationX(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">
          <span data-ttu-id="62d9f-142">
            <b>Single</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-142">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="62d9f-143">Spécifie la quantité (en degrés) de la rotation de la forme autour de l’axe des abscisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-143">Specifies how much (in degrees) the rotation of the shape around the x-axis is to be changed.</span>
          </span>
          <span data-ttu-id="62d9f-144">Peut être une valeur comprise entre -90 et 90.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-144">Can be a value from –90 through 90.</span>
          </span>
          <span data-ttu-id="62d9f-145">Une valeur positive fait pivoter la forme une valeur négative la fait pivoter vers le bas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-145">A positive value tilts the shape up; a negative value tilts it down.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62d9f-146">Fait pivoter la forme indiquée autour de l'axe x, selon le nombre de degrés spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-146">Changes the rotation of the specified shape around the x-axis by the specified number of degrees.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="62d9f-147">
            <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationX" /> propriété pour définir la rotation absolue de la forme autour de l’axe des abscisses.</para>
            <para>Vous ne pouvez pas ajuster la rotation de la forme spécifiée autour de l’axe des x au-delà de la limite supérieure ou inférieure de la propriété <b>RotationX</b> (90 degrés à – 90 degrés). Par exemple, si la propriété <b>RotationX</b> est initialement définie à 80 et que vous spécifiez 40 pour le <paramref name="Increment" /> argument, la rotation obtenue sera de 90 (limite supérieure de la propriété <b>RotationX</b> ) au lieu de 120.</para>
            <para>Pour changer la rotation d’une forme autour de l’axe des y, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> méthode. Pour modifier la rotation autour de l’axe z, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.Shape.IncrementRotation(System.Single)" /> méthode.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-147">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationX" /> property to set the absolute rotation of the shape around the x-axis.</para>
              <para>You cannot adjust the specified shape's rotation around the x-axis past the upper or lower limit for the <b>RotationX</b> property (90 degrees to –90 degrees). For example, if the <b>RotationX</b> property is initially set to 80 and you specify 40 for the <paramref name="Increment" /> argument, the resulting rotation will be 90 (the upper limit for the <b>RotationX</b> property) instead of 120.</para>
              <para>To change the rotation of a shape around the y-axis, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> method. To change the rotation around the z-axis, use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.IncrementRotation(System.Single)" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementRotationY">
      <MemberSignature Language="C#" Value="public void IncrementRotationY (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementRotationY([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementRotationY (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementRotationY(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">
          <span data-ttu-id="62d9f-148">
            <b>Single</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-148">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="62d9f-149">Spécifie la quantité (en degrés) de la rotation de la forme autour de l’axe des ordonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-149">Specifies how much (in degrees) the rotation of the shape around the y-axis is to be changed.</span>
          </span>
          <span data-ttu-id="62d9f-150">Peut être une valeur comprise entre -90 et 90.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-150">Can be a value from –90 through 90.</span>
          </span>
          <span data-ttu-id="62d9f-151">Une valeur positive fait pivoter la forme vers la gauche. une valeur négative la fait pivoter à droite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-151">A positive value tilts the shape to the left; a negative value tilts it to the right.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62d9f-152">Fait pivoter la forme indiquée, selon le nombre de degrés spécifié, autour de l'axe y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-152">Changes the rotation of the specified shape around the y-axis by the specified number of degrees.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="62d9f-153">
            <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationY" /> propriété pour définir la rotation absolue de la forme autour de l’axe des y.</para>
            <para>Pour changer la rotation d’une forme autour de l’axe des x, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> méthode. Pour modifier la rotation autour de l’axe z, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.Shape.IncrementRotation(System.Single)" /> méthode.</para>
            <para>Vous ne pouvez pas ajuster la rotation de la forme spécifiée autour de l’axe des y au-delà de la limite supérieure ou inférieure de la propriété <b>RotationY</b> (90 degrés à – 90 degrés). Par exemple, si la propriété <b>RotationY</b> est initialement définie à 80 et que vous spécifiez 40 pour le <paramref name="Increment" /> argument, la rotation obtenue sera de 90 (limite supérieure de la propriété <b>RotationY</b> ) au lieu de 120.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-153">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationY" /> property to set the absolute rotation of the shape around the y-axis.</para>
              <para>To change the rotation of a shape around the x-axis, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> method. To change the rotation around the z-axis, use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.IncrementRotation(System.Single)" /> method.</para>
              <para>You cannot adjust the specified shape's rotation around the y-axis shape past the upper or lower limit for the <b>RotationY</b> property (90 degrees to –90 degrees). For example, if the <b>RotationY</b> property is initially set to 80 and you specify 40 for the <paramref name="Increment" /> argument, the resulting rotation will be 90 (the upper limit for the <b>RotationY</b> property) instead of 120.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementRotationZ">
      <MemberSignature Language="C#" Value="public void IncrementRotationZ (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementRotationZ([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationZ(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementRotationZ (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementRotationZ(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">
          <span data-ttu-id="62d9f-154">Spécifie la quantité (en degrés) de la rotation de la forme autour de l’axe z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-154">Specifies how much (in degrees) the rotation of the shape around the z-axis is to be changed.</span>
          </span>
          <span data-ttu-id="62d9f-155">Peut être une valeur comprise entre – 90 et 90.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-155">Can be a value from – 90 through 90.</span>
          </span>
          <span data-ttu-id="62d9f-156">Une valeur positive fait pivoter la forme vers la gauche. une valeur négative la fait pivoter à droite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-156">A positive value tilts the shape to the left; a negative value tilts it to the right.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62d9f-157">Fait pivoter la forme spécifiée, selon le nombre de degrés spécifié, autour de l'axe z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-157">Changes the rotation of the specified shape around the z-axis by the specified number of degrees.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="62d9f-158">
            <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationZ" /> propriété pour définir la rotation absolue de la forme autour de l’axe z.</para>
            <para>Pour changer la rotation d’une forme autour de l’axe z, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationZ(System.Single)" /> méthode.</para>
            <para>Vous ne pouvez pas ajuster la rotation autour de l’axe z de la forme spécifiée au-delà de la limite supérieure ou inférieure de la propriété <b>RotationZ</b> (90 degrés à – 90 degrés). Par exemple, si la propriété <b>RotationZ</b> est initialement définie à 80 et que vous spécifiez 40 pour le <paramref name="Increment" /> argument, la rotation obtenue sera de 90 (limite supérieure de la propriété <b>RotationZ</b> ) au lieu de 120.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-158">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationZ" /> property to set the absolute rotation of the shape around the z-axis.</para>
              <para>To change the rotation of a shape around the z-axis, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationZ(System.Single)" /> method.</para>
              <para>You cannot adjust the rotation around the z-axis of the specified shape past the upper or lower limit for the <b>RotationZ</b> property (90 degrees to  – 90 degrees). For example, if the <b>RotationZ</b> property is initially set to 80 and you specify 40 for the <paramref name="Increment" /> argument, the resulting rotation will be 90 (the upper limit for the <b>RotationZ</b> property) instead of 120.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LightAngle">
      <MemberSignature Language="C#" Value="public float LightAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LightAngle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.LightAngle" />
      <MemberSignature Language="VB.NET" Value="Public Property LightAngle As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float LightAngle { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-159">Cette propriété renvoie ou définit l’ange des lumières d’extrusion définies sur une <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-159">Returns or sets the angel of the extrusion lights set on a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-160">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-160">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62d9f-161">
            <b>Unique</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-161">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-162">Renvoie l'objet parent de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-162">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Perspective">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Perspective { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Perspective" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Perspective" />
      <MemberSignature Language="VB.NET" Value="Public Property Perspective As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Perspective { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-163">Détermine si l’extrusion s’affiche en perspective.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-163">Determines whether the extrusion appears in perspective.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetCamera">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoPresetCamera PresetCamera { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoPresetCamera PresetCamera" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetCamera" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresetCamera As MsoPresetCamera" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoPresetCamera PresetCamera { Microsoft::Office::Core::MsoPresetCamera get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(120)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(120)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoPresetCamera</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-164">Cette propriété renvoie ou définit l’appareil photo prédéfini extrusion pour un <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-164">Returns or sets the extrusion preset camera for a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-165">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-165">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoPresetCamera" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetExtrusionDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoPresetExtrusionDirection PresetExtrusionDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoPresetExtrusionDirection PresetExtrusionDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetExtrusionDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresetExtrusionDirection As MsoPresetExtrusionDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoPresetExtrusionDirection PresetExtrusionDirection { Microsoft::Office::Core::MsoPresetExtrusionDirection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoPresetExtrusionDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-166">Renvoie la direction qu’adopte l’extrusion par la forme extrudée (la face avant de l’extrusion).</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-166">Returns the direction that the extrusion's sweep path takes away from the extruded shape (the front face of the extrusion).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="62d9f-167">
            <para>Pour définir la valeur de cette propriété, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetExtrusionDirection(Microsoft.Office.Core.MsoPresetExtrusionDirection)" /> méthode.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-167">
              <para>To set the value of this property, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetExtrusionDirection(Microsoft.Office.Core.MsoPresetExtrusionDirection)" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetLighting">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoLightRigType PresetLighting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoLightRigType PresetLighting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetLighting" />
      <MemberSignature Language="VB.NET" Value="Public Property PresetLighting As MsoLightRigType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoLightRigType PresetLighting { Microsoft::Office::Core::MsoLightRigType get(); void set(Microsoft::Office::Core::MsoLightRigType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoLightRigType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-168">Renvoie ou définit l’extrusion éclairage prédéfini pour un <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-168">Returns or sets the extrusion preset lighting for a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-169">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-169">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoLightRigType" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetLightingDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoPresetLightingDirection PresetLightingDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoPresetLightingDirection PresetLightingDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetLightingDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property PresetLightingDirection As MsoPresetLightingDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoPresetLightingDirection PresetLightingDirection { Microsoft::Office::Core::MsoPresetLightingDirection get(); void set(Microsoft::Office::Core::MsoPresetLightingDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoPresetLightingDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-170">Cette propriété renvoie ou définit la position de la source lumineuse par rapport à l'extrusion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-170">Returns or sets the position of the light source relative to the extrusion.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoLightRigType" />
        </value>
        <remarks>
          <span data-ttu-id="62d9f-171">
            <para>Vous ne verrez pas les effets d’éclairage définis si l’extrusion a une surface filetée.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-171">
              <para>You won't see the lighting effects you set if the extrusion has a wire frame surface.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetLightingSoftness">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoPresetLightingSoftness PresetLightingSoftness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoPresetLightingSoftness PresetLightingSoftness" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetLightingSoftness" />
      <MemberSignature Language="VB.NET" Value="Public Property PresetLightingSoftness As MsoPresetLightingSoftness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoPresetLightingSoftness PresetLightingSoftness { Microsoft::Office::Core::MsoPresetLightingSoftness get(); void set(Microsoft::Office::Core::MsoPresetLightingSoftness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoPresetLightingSoftness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-172">Cette propriété renvoie ou définit l'intensité de l'éclairage de l'extrusion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-172">Returns or sets the intensity of the extrusion lighting.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetMaterial">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoPresetMaterial PresetMaterial { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoPresetMaterial PresetMaterial" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetMaterial" />
      <MemberSignature Language="VB.NET" Value="Public Property PresetMaterial As MsoPresetMaterial" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoPresetMaterial PresetMaterial { Microsoft::Office::Core::MsoPresetMaterial get(); void set(Microsoft::Office::Core::MsoPresetMaterial value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoPresetMaterial</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-173">Cette propriété renvoie ou définit la surface de l'extrusion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-173">Returns or sets the extrusion surface material.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetThreeDFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoPresetThreeDFormat PresetThreeDFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoPresetThreeDFormat PresetThreeDFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetThreeDFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresetThreeDFormat As MsoPresetThreeDFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoPresetThreeDFormat PresetThreeDFormat { Microsoft::Office::Core::MsoPresetThreeDFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoPresetThreeDFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-174">Renvoie le format d'extrusion prédéfini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-174">Returns the preset extrusion format.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="62d9f-175">
            <para>Chaque format d’extrusion prédéfini contient un ensemble de valeurs prédéfinies pour les différentes propriétés de l’extrusion. Si l’extrusion a un format personnalisé plutôt qu’un format prédéfini, cette propriété renvoie <see cref="F:Microsoft.Office.Core.MsoPresetThreeDFormat.msoPresetThreeDFormatMixed" />. Les valeurs de cette propriété correspondent aux options (numérotées de gauche à droite et de haut en bas) affichées lorsque vous cliquez sur le bouton 3D de la barre d’outils dessin.</para>
            <para>Pour définir le format d’extrusion prédéfini, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetThreeDFormat(Microsoft.Office.Core.MsoPresetThreeDFormat)" /> méthode.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-175">
              <para>Each preset extrusion format contains a set of preset values for the various properties of the extrusion. If the extrusion has a custom format rather than a preset format, this property returns <see cref="F:Microsoft.Office.Core.MsoPresetThreeDFormat.msoPresetThreeDFormatMixed" />. The values for this property correspond to the options (numbered from left to right, top to bottom) displayed when you click the 3-D button on the Drawing toolbar.</para>
              <para>To set the preset extrusion format, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetThreeDFormat(Microsoft.Office.Core.MsoPresetThreeDFormat)" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectText">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState ProjectText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState ProjectText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.ProjectText" />
      <MemberSignature Language="VB.NET" Value="Public Property ProjectText As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState ProjectText { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(125)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(125)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(125)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-176">Cette propriété renvoie ou définit l’état du projet texte spécifié <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-176">Returns or sets the project text state for the specified <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-177">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-177">Read/write.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoTriState" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetRotation">
      <MemberSignature Language="C#" Value="public void ResetRotation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetRotation() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ThreeDFormat.ResetRotation" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetRotation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetRotation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-178">Ramène à zéro la rotation de l'extrusion autour des axes x et y de façon à orienter l'avant de l'extrusion vers l'avant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-178">Resets the extrusion rotation around the x-axis and the y-axis to 0 (zero) so that the front of the extrusion faces forward.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="62d9f-179">
            <para>Cette méthode ne redéfinit pas la rotation autour de l’axe z.</para>
            <para>Pour définir la rotation de l’extrusion autour de l’axe des abscisses et des ordonnées sur tout autre que 0 (zéro), utilisez la <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationX" /> et <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationY" /> propriétés de la <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet. Pour définir la rotation de l’extrusion autour de l’axe z, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object qui représente la forme extrudée.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-179">
              <para>This method doesn’t reset the rotation around the z-axis.</para>
              <para>To set the extrusion rotation around the x-axis and the y-axis to anything other than 0 (zero), use the <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationX" /> and <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationY" /> properties of the <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. To set the extrusion rotation around the z-axis, use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the extruded shape.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationX">
      <MemberSignature Language="C#" Value="public float RotationX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RotationX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationX" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float RotationX { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-180">Cette propriété renvoie ou définit la rotation de la forme extrudée autour de l'axe des x en degrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-180">Returns or sets the rotation of the extruded shape around the x-axis in degrees.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="62d9f-181">
            <para>La propriété <b>RotationX</b> peut être une valeur comprise entre -90 et 90. Une valeur positive indique une rotation vers le haut ; une valeur négative indique une rotation vers le bas.</para>
            <para>Pour définir la rotation de la forme extrudée autour de l’axe des y, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationY" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet. Pour définir la rotation de la forme extrudée autour de l’axe z, utilisez la propriété Rotation de le <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet. Pour changer la direction du chemin de balayage de l’extrusion sans faire pivoter la face avant de l’extrusion, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetExtrusionDirection(Microsoft.Office.Core.MsoPresetExtrusionDirection)" /> méthode.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-181">
              <para>The <b>RotationX</b> property can be a value from –90 through 90. A positive value indicates upward rotation; a negative value indicates downward rotation.</para>
              <para>To set the rotation of the extruded shape around the y-axis, use the <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationY" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. To set the rotation of the extruded shape around the z-axis, use the Rotation property of the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object. To change the direction of the extrusion’s sweep path without rotating the front face of the extrusion, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetExtrusionDirection(Microsoft.Office.Core.MsoPresetExtrusionDirection)" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationY">
      <MemberSignature Language="C#" Value="public float RotationY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RotationY" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationY" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float RotationY { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-182">Cette propriété renvoie ou définit la rotation de la forme extrudée autour de l’axe des y en degrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-182">Returns or sets the rotation of the extruded shape around the y-axis in degrees.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="62d9f-183">
            <para>La propriété <b>RotationY</b> peut être une valeur comprise entre -90 et 90. Une valeur positive indique une rotation vers la gauche. une valeur négative indique une rotation vers la droite.</para>
            <para>Pour définir la rotation de la forme extrudée autour de l’axe des x, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationX" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet. Pour définir la rotation de la forme extrudée autour de l’axe z, utilisez la propriété Rotation de le <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet. Pour changer la direction du chemin de balayage de l’extrusion sans faire pivoter la face avant de l’extrusion, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetExtrusionDirection(Microsoft.Office.Core.MsoPresetExtrusionDirection)" /> méthode.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-183">
              <para>The <b>RotationY</b> property can be a value from –90 through 90. A positive value indicates rotation to the left; a negative value indicates rotation to the right.</para>
              <para>To set the rotation of the extruded shape around the x-axis, use the <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationX" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. To set the rotation of the extruded shape around the z-axis, use the Rotation property of the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object. To change the direction of the extrusion’s sweep path without rotating the front face of the extrusion, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetExtrusionDirection(Microsoft.Office.Core.MsoPresetExtrusionDirection)" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationZ">
      <MemberSignature Language="C#" Value="public float RotationZ { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RotationZ" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationZ" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationZ As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float RotationZ { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-184">Cette propriété renvoie ou définit la rotation de la forme extrudée autour de l’axe z en degrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-184">Returns or sets the rotation of the extruded shape around the z-axis in degrees.</span>
          </span>
          <span data-ttu-id="62d9f-185">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-185">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62d9f-186">
            <b>Unique</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-186">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="62d9f-187">
            <para>La propriété <b>RotationZ</b> peut être une valeur comprise entre – 90 et 90. Une valeur positive indique une rotation vers le haut ; une valeur négative indique une rotation vers le bas.</para>
            <para>Pour définir la rotation de la forme extrudée autour de l’axe des y, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationY" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet. Pour définir la rotation de la forme extrudée autour de l’axe des x, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationX" /> propriété de l’objet <b>ThreeDFormat</b> . Pour changer la direction du chemin de balayage de l’extrusion sans faire pivoter la face avant de l’extrusion, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetExtrusionDirection(Microsoft.Office.Core.MsoPresetExtrusionDirection)" /> méthode.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-187">
              <para>The <b>RotationZ</b> property can be a value from  – 90 through 90. A positive value indicates upward rotation; a negative value indicates downward rotation.</para>
              <para>To set the rotation of the extruded shape around the y-axis, use the <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationY" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object. To set the rotation of the extruded shape around the x-axis, use the <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.RotationX" /> property of the <b>ThreeDFormat</b> object. To change the direction of the extrusion's sweep’s path without rotating the front face of the extrusion, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetExtrusionDirection(Microsoft.Office.Core.MsoPresetExtrusionDirection)" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExtrusionDirection">
      <MemberSignature Language="C#" Value="public void SetExtrusionDirection (Microsoft.Office.Core.MsoPresetExtrusionDirection PresetExtrusionDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetExtrusionDirection([in]valuetype Microsoft.Office.Core.MsoPresetExtrusionDirection PresetExtrusionDirection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetExtrusionDirection(Microsoft.Office.Core.MsoPresetExtrusionDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExtrusionDirection (PresetExtrusionDirection As MsoPresetExtrusionDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExtrusionDirection(Microsoft::Office::Core::MsoPresetExtrusionDirection PresetExtrusionDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PresetExtrusionDirection" Type="Microsoft.Office.Core.MsoPresetExtrusionDirection" />
      </Parameters>
      <Docs>
        <param name="PresetExtrusionDirection">
          <span data-ttu-id="62d9f-188">Requis <see cref="T:Microsoft.Office.Core.MsoPresetExtrusionDirection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-188">Required <see cref="T:Microsoft.Office.Core.MsoPresetExtrusionDirection" />.</span>
          </span>
          <span data-ttu-id="62d9f-189">Spécifie la direction de l'extrusion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-189">Specifies the extrusion direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62d9f-190">Définit la direction que le mouvement de l'extrusion prend hors de la forme mise en relief.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-190">Sets the direction that the extrusion's sweep path takes away from the extruded shape.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="62d9f-191">
            <para>Cette méthode définit la <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetExtrusionDirection" /> propriété à la direction spécifiée par la <paramref name="PresetExtrusionDirection" /> argument.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-191">
              <para>This method sets the <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetExtrusionDirection" /> property to the direction specified by the <paramref name="PresetExtrusionDirection" /> argument.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPresetCamera">
      <MemberSignature Language="C#" Value="public void SetPresetCamera (Microsoft.Office.Core.MsoPresetCamera PresetCamera);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPresetCamera([in]valuetype Microsoft.Office.Core.MsoPresetCamera PresetCamera) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetPresetCamera(Microsoft.Office.Core.MsoPresetCamera)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPresetCamera (PresetCamera As MsoPresetCamera)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPresetCamera(Microsoft::Office::Core::MsoPresetCamera PresetCamera);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PresetCamera" Type="Microsoft.Office.Core.MsoPresetCamera" />
      </Parameters>
      <Docs>
        <param name="PresetCamera">
          <span data-ttu-id="62d9f-192">Spécifie l'appareil photo prédéfini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-192">Specifies the preset camera.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62d9f-193">Définit l’appareil photo pour le <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-193">Sets the camera for the specified <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreeDFormat">
      <MemberSignature Language="C#" Value="public void SetThreeDFormat (Microsoft.Office.Core.MsoPresetThreeDFormat PresetThreeDFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetThreeDFormat([in]valuetype Microsoft.Office.Core.MsoPresetThreeDFormat PresetThreeDFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetThreeDFormat(Microsoft.Office.Core.MsoPresetThreeDFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreeDFormat (PresetThreeDFormat As MsoPresetThreeDFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreeDFormat(Microsoft::Office::Core::MsoPresetThreeDFormat PresetThreeDFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PresetThreeDFormat" Type="Microsoft.Office.Core.MsoPresetThreeDFormat" />
      </Parameters>
      <Docs>
        <param name="PresetThreeDFormat">
          <span data-ttu-id="62d9f-194">Requis <b>MsoPresetThreeDFormat</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-194">Required <b>MsoPresetThreeDFormat</b>.</span>
          </span>
          <span data-ttu-id="62d9f-195">Spécifie un format d'extrusion prédéfini qui correspond à l'une des options (numérotées de gauche à droite et du haut vers le bas) affichées lorsque vous cliquez sur le bouton 3-D de la barre d'outils Dessin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-195">Specifies a preset extrusion format that corresponds to one of the options (numbered from left to right, from top to bottom) displayed when you click the 3-D button on the Drawing toolbar.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62d9f-p122">Cette méthode définit le format d'extrusion prédéfini. Chaque format d'extrusion prédéfini contient un ensemble de valeurs prédéfinies pour les diverses propriétés de l'extrusion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-p122">Sets the preset extrusion format. Each preset extrusion format contains a set of preset values for the various properties of the extrusion.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="62d9f-198">
            <para>Cette méthode définit la <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetThreeDFormat" /> propriété au format spécifié par le <paramref name="PresetThreeDFormat" /> argument.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-198">
              <para>This method sets the <see cref="P:Microsoft.Office.Interop.Excel.ThreeDFormat.PresetThreeDFormat" /> property to the format specified by the <paramref name="PresetThreeDFormat" /> argument.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Visible { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-199">Détermine si l’objet est visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-199">Determines whether the object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public float Z { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Z" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ThreeDFormat.Z" />
      <MemberSignature Language="VB.NET" Value="Public Property Z As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Z { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62d9f-200">Renvoie l’ordre de plan de l’objet <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-200">Returns the Z order of the specified  <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object.</span>
          </span>
          <span data-ttu-id="62d9f-201">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-201">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62d9f-202">
            <b>Unique</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62d9f-202">
              <b>Single</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>