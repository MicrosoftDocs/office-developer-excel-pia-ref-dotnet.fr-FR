<Type Name="_Workbook" FullName="Microsoft.Office.Interop.Excel._Workbook">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0dc241801e29cd7a9aa2098f883cf029f3c40f54" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20575046" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Workbook" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Workbook" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Workbook" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Workbook" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="afd82-101">Il s’agit d’une interface principale dans une coclasse COM qui est requis par le code managé pour l’interopérabilité avec l’objet COM correspondant.</span>
      <span class="sxs-lookup">
        <span data-stu-id="afd82-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="afd82-102">Utilisez cette interface principale uniquement lorsque la méthode que vous souhaitez utiliser partageant le même nom qu’un événement de l’objet COM ; Dans ce cas, effectuez un cast à cette interface pour appeler la méthode et dans l’interface d’événements le plus récent pour se connecter à l’événement.</span>
      <span class="sxs-lookup">
        <span data-stu-id="afd82-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="afd82-103">Sinon, utilisez l’interface .NET est dérivé de la coclasse COM pour accéder aux méthodes, propriétés et événements de l’objet COM.</span>
      <span class="sxs-lookup">
        <span data-stu-id="afd82-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="afd82-104">Pour plus d’informations sur l’objet COM, voir <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="afd82-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-105">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-105">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="afd82-106">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-106">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="Structure">To be added.</param>
        <param name="Windows">To be added.</param>
        <summary>
          <span data-ttu-id="afd82-107">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool _ReadOnlyRecommended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool _ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property _ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool _ReadOnlyRecommended { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-108">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-108">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AccessMode">To be added.</param>
        <param name="ConflictResolution">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="afd82-109">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptAllChanges">
      <MemberSignature Language="C#" Value="public void AcceptAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AcceptAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1466)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="afd82-110">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-111">Indique quand tous les changements sont acceptés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-111">Specifies when all the changes are accepted.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="afd82-112">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-112">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-113">Indique par qui tous les changements sont acceptés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-113">Specifies by whom all the changes are accepted.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="afd82-114">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-115">Indique où tous les changements sont acceptés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-115">Specifies where all the changes are accepted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-116">Accepte toutes les modifications apportées au classeur partagé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-116">Accepts all changes in the specified shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptLabelsInFormulas">
      <MemberSignature Language="C#" Value="public bool AcceptLabelsInFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptLabelsInFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AcceptLabelsInFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptLabelsInFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptLabelsInFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-117">
            <b>La valeur true</b> si les étiquettes peuvent être utilisées dans les formules de feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-117">
              <b>True</b> if labels can be used in worksheet formulas.</span>
          </span>
          <span data-ttu-id="afd82-118">La valeur par défaut est <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-118">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="afd82-119">En lecture/écriture <b>booléen</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-119">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccuracyVersion">
      <MemberSignature Language="C#" Value="public int AccuracyVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccuracyVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AccuracyVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AccuracyVersion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-120">Obtient ou définit si certaines fonctions de feuille de calcul utilisent les algorithmes de précision le plus récent pour calculer leurs résultats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-120">Gets or sets whether certain worksheet functions use the latest accuracy algorithms to calculate their results.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-121">Spécifie la version d’algorithmes à utiliser pour certaines fonctions de feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-121">Specifies which version of algorithms to use for certain worksheet functions.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="afd82-122">
            <para>En lecture/écriture</para>
            <para>Par défaut, certaines fonctions de feuille de calcul à partir de Microsoft Office Excel 2007 et versions antérieures de Microsoft Excel utilisent les nouveaux algorithmes qui augmentent leur exactitude. Toutefois, dans certains cas, les nouveaux algorithmes de diminuent les performances de ces fonctions par rapport à leurs performances dans Microsoft Office Excel 2007 et versions antérieures d’Excel. Pour spécifier que ces fonctions de feuille de calcul utilisent les algorithmes plus anciens pour augmenter les performances, définissez la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> propriété 1. Le tableau suivant décrit les paramètres possibles pour le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> propriété.</para>
            <list type="table">
              <item>
                <term>0</term>pour
              <description>utiliser les algorithmes plus récents et les plus précis (par défaut)</description></item>
              <item>
                <term>1</term>
                <description>utiliser Microsoft Office Excel 2007 ou les algorithmes de version antérieures</description>
              </item>
              <item>
                <term>2</term>
                <description>algorithmes d’utiliser Microsoft Excel 2010</description>
              </item>
            </list>
            <para>
              <b>Attention</b>: paramètre le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> propriété une valeur autre que 0, 1 ou 2 entraînera un comportement indéfini.</para> Table 
          <para>suit résume les fonctions affectées en définissant le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> propriété 1. Les fonctions qui sont répertoriées dans la colonne « Fonctions non affectées » utiliseront toujours les algorithmes de précision le plus récent ou n’ont pas été modifiées dans Excel 2010. Pour les noms de fonction qui contiennent un point (.) dans leurs noms, pour déterminer le nom de la fonction correspondante implémenté dans VBA en tant que méthode de le <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> objet, substituez le caractère de soulignement (_) au point. Par exemple, la méthode VBA qui correspond à la version bêta. Fonction de distribution est la <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> méthode.</para><list type="table"><item><term>BETADIST</term><description>agrégation</description></item><item><term>Beta</term><description>bêta. Distribution</description></item><item><term>BINOMDIST</term><description>bêta. INV</description></item><item><term>CHIDIST</term><description>BINOM. Distribution</description></item><item><term>CHIINV</term><description>BINOM. INV</description></item><item><term>CHITEST</term><description>CEILING</description></item><item><term>confiance</term><description>plafond. PRÉCISE</description></item><item><term>CRITBINOM</term><description>CHISQ. Distribution</description></item><item><term>CUMIPMT</term><description>CHISQ. DISTRIBUTION RT</description></item><item><term>CUMPRINC</term><description>CHISQ. INV</description></item><item><term>ERF</term><description>CHISQ. FACTURE RT</description></item><item><term>ERFC</term><description>CHISQ. TEST</description></item><item><term>EXPONDIST</term><description>confiance. NORME</description></item><item><term>FDIST</term><description>confiance. T</description></item><item><term>FINV</term><description>COVAR</description></item><item><term>FTEST</term><description>COVARIANCE. P</description></item><item><term>GAMMADIST</term><description>COVARIANCE. S</description></item><item><term>GAMMALN</term><description>ERF. PRÉCISE</description></item><item><term>GAMMINV</term><description>ERFC. PRÉCISE</description></item><item><term>méthode HYPGEOMDIST</term><description>EXPON. Distribution</description></item><item><term>IPMT</term><description>loi</description></item><item><term>IRR</term><description>loi. RT</description></item><item><term>LOGINV</term><description>F.INV</description></item><item><term>LOGNORMDIST</term><description>F.INV. RT</description></item><item><term>NEGBINOMDIST</term><description>F.TEST</description></item><item><term>NORMDIST</term><description>plancher</description></item><item><term>NORMINV</term><description>FLOOR. PRÉCISE</description></item><item><term>NORMSDIST</term><description>GAMMA. Distribution</description></item><item><term>NORMSINV</term><description>GAMMA. INV</description></item><item><term>PMT</term><description>GAMMALN. PRÉCISE</description></item><item><term>POISSON</term><description>HYPGEOM. Distribution</description></item><item><term>PPMT</term><description>ISO. PLAFOND</description></item><item><term>STDEV</term><description>LOGNORM. Distribution</description></item><item><term>STDEVP</term><description>LOGNORM. INV</description></item><item><term>TDIST</term><description>MOD</description></item><item><term>TINV</term><description>MODE</description></item><item><term>fonction TTEST</term><description>MODE. Plusieurs</description></item><item><term>VAR</term><description>MODE. SNGL</description></item><item><term>VARA</term><description>NEGBINOM. Distribution</description></item><item><term>VARP</term><description>Nb. INTL</description></item><item><term>VARPA</term><description>normales. Distribution</description></item><item><term>WEIBULL</term><description>normales. INV</description></item><item><term>fonction XIRR</term><description>normales. S.DIST</description></item><item><term>la fonction ZTEST</term><description>normales. S.INV</description></item><item><term />centile
            </item><item><term />centile. Exclure
            </item><item><term />centile. INC
            </item><item><term />fonction PERCENTRANK
            </item><item><term />rang. Exclure
            </item><item><term />rang. INC
            </item><item><term />POISSON. Distribution
            </item><item><term />QUARTILE
            </item><item><term />QUARTILE. Exclure
            </item><item><term />QUARTILE. INC
            </item><item><term />rang
            </item><item><term />rang. AVG
            </item><item><term />rang. EQ
            </item><item><term />STDEV. P
            </item><item><term />STDEV. S
            </item><item><term />T.DIST
            </item><item><term />T.DIST.2T
            </item><item><term />T.DIST. RT
            </item><item><term />T.DIST. RT
            </item><item><term />T.INV
            </item><item><term />T.INV.2T
            </item><item><term />T.INV. RT
            </item><item><term />T.TEST
            </item><item><term />var P
            </item><item><term />var S
            </item><item><term />WEEKDAY
            </item><item><term />WEEKNUM
            </item><item><term />WEIBULL. Distribution
            </item><item><term />journée de travail. INTL
            </item><item><term />Z.TEST
            </item></list><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-122">
              <para>Read/write</para>
              <para>By default, some of the worksheet functions from Microsoft Office Excel 2007 and earlier versions of Microsoft Excel use new algorithms that increase their accuracy. However, in some cases, the new algorithms decrease the performance of these functions relative to their performance in Microsoft Office Excel 2007 and earlier versions of Excel. To specify that these worksheet functions use the older algorithms to increase their performance, set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1. The following table describes the possible settings for the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property.</para>
              <list type="table">
                <item>
                  <term>0</term>
                  <description>Use the latest, most accurate algorithms (default)</description>
                </item>
                <item>
                  <term>1</term>
                  <description>Use Microsoft Office Excel 2007 or earlier version algorithms</description>
                </item>
                <item>
                  <term>2</term>
                  <description>Use Microsoft Excel 2010 algorithms</description>
                </item>
              </list>
              <para>
                <b>Caution</b>: Setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to a value other than 0, 1, or 2 will result in undefined behavior.</para>
              <para>The following table summarizes which functions are affected by setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1. The functions that are listed in the "Functions not affected" column will always use the latest accuracy algorithms or were not changed in Excel 2010. For function names that include a period (.) in their names, to determine the name of the corresponding function implemented in VBA as a method of the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object, substitute the underscore character ( _ ) for the period. For example, the VBA method that corresponds to the BETA.DIST function is the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> method.</para>
              <list type="table">
                <item>
                  <term>BETADIST</term>
                  <description>AGGREGATE</description>
                </item>
                <item>
                  <term>BETAINV</term>
                  <description>BETA.DIST</description>
                </item>
                <item>
                  <term>BINOMDIST</term>
                  <description>BETA.INV</description>
                </item>
                <item>
                  <term>CHIDIST</term>
                  <description>BINOM.DIST</description>
                </item>
                <item>
                  <term>CHIINV</term>
                  <description>BINOM.INV</description>
                </item>
                <item>
                  <term>CHITEST</term>
                  <description>CEILING</description>
                </item>
                <item>
                  <term>CONFIDENCE</term>
                  <description>CEILING.PRECISE</description>
                </item>
                <item>
                  <term>CRITBINOM</term>
                  <description>CHISQ.DIST</description>
                </item>
                <item>
                  <term>CUMIPMT</term>
                  <description>CHISQ.DIST.RT</description>
                </item>
                <item>
                  <term>CUMPRINC</term>
                  <description>CHISQ.INV</description>
                </item>
                <item>
                  <term>ERF</term>
                  <description>CHISQ.INV.RT</description>
                </item>
                <item>
                  <term>ERFC</term>
                  <description>CHISQ.TEST</description>
                </item>
                <item>
                  <term>EXPONDIST</term>
                  <description>CONFIDENCE.NORM</description>
                </item>
                <item>
                  <term>FDIST</term>
                  <description>CONFIDENCE.T</description>
                </item>
                <item>
                  <term>FINV</term>
                  <description>COVAR</description>
                </item>
                <item>
                  <term>FTEST</term>
                  <description>COVARIANCE.P</description>
                </item>
                <item>
                  <term>GAMMADIST</term>
                  <description>COVARIANCE.S</description>
                </item>
                <item>
                  <term>GAMMALN</term>
                  <description>ERF.PRECISE</description>
                </item>
                <item>
                  <term>GAMMINV</term>
                  <description>ERFC.PRECISE</description>
                </item>
                <item>
                  <term>HYPGEOMDIST</term>
                  <description>EXPON.DIST</description>
                </item>
                <item>
                  <term>IPMT</term>
                  <description>F.DIST</description>
                </item>
                <item>
                  <term>IRR</term>
                  <description>F.DIST.RT</description>
                </item>
                <item>
                  <term>LOGINV</term>
                  <description>F.INV</description>
                </item>
                <item>
                  <term>LOGNORMDIST</term>
                  <description>F.INV.RT</description>
                </item>
                <item>
                  <term>NEGBINOMDIST</term>
                  <description>F.TEST</description>
                </item>
                <item>
                  <term>NORMDIST</term>
                  <description>FLOOR</description>
                </item>
                <item>
                  <term>NORMINV</term>
                  <description>FLOOR.PRECISE</description>
                </item>
                <item>
                  <term>NORMSDIST</term>
                  <description>GAMMA.DIST</description>
                </item>
                <item>
                  <term>NORMSINV</term>
                  <description>GAMMA.INV</description>
                </item>
                <item>
                  <term>PMT</term>
                  <description>GAMMALN.PRECISE</description>
                </item>
                <item>
                  <term>POISSON</term>
                  <description>HYPGEOM.DIST</description>
                </item>
                <item>
                  <term>PPMT</term>
                  <description>ISO.CEILING</description>
                </item>
                <item>
                  <term>STDEV</term>
                  <description>LOGNORM.DIST</description>
                </item>
                <item>
                  <term>STDEVP</term>
                  <description>LOGNORM.INV</description>
                </item>
                <item>
                  <term>TDIST</term>
                  <description>MOD</description>
                </item>
                <item>
                  <term>TINV</term>
                  <description>MODE</description>
                </item>
                <item>
                  <term>TTEST</term>
                  <description>MODE.MULT</description>
                </item>
                <item>
                  <term>VAR</term>
                  <description>MODE.SNGL</description>
                </item>
                <item>
                  <term>VARA</term>
                  <description>NEGBINOM.DIST</description>
                </item>
                <item>
                  <term>VARP</term>
                  <description>NETWORKDAYS.INTL</description>
                </item>
                <item>
                  <term>VARPA</term>
                  <description>NORM.DIST</description>
                </item>
                <item>
                  <term>WEIBULL</term>
                  <description>NORM.INV</description>
                </item>
                <item>
                  <term>XIRR</term>
                  <description>NORM.S.DIST</description>
                </item>
                <item>
                  <term>ZTEST</term>
                  <description>NORM.S.INV</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE.EXC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE.INC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK.EXC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK.INC</description>
                </item>
                <item>
                  <term />
                  <description>POISSON.DIST</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE.EXC</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE.INC</description>
                </item>
                <item>
                  <term />
                  <description>RANK</description>
                </item>
                <item>
                  <term />
                  <description>RANK.AVG</description>
                </item>
                <item>
                  <term />
                  <description>RANK.EQ</description>
                </item>
                <item>
                  <term />
                  <description>STDEV.P</description>
                </item>
                <item>
                  <term />
                  <description>STDEV.S</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.2T</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.INV</description>
                </item>
                <item>
                  <term />
                  <description>T.INV.2T</description>
                </item>
                <item>
                  <term />
                  <description>T.INV.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.TEST</description>
                </item>
                <item>
                  <term />
                  <description>VAR.P</description>
                </item>
                <item>
                  <term />
                  <description>VAR.S</description>
                </item>
                <item>
                  <term />
                  <description>WEEKDAY</description>
                </item>
                <item>
                  <term />
                  <description>WEEKNUM</description>
                </item>
                <item>
                  <term />
                  <description>WEIBULL.DIST</description>
                </item>
                <item>
                  <term />
                  <description>WORKDAY.INTL</description>
                </item>
                <item>
                  <term />
                  <description>Z.TEST</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-123">Cette méthode active la première fenêtre associée au classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-123">Activates the first window associated with the workbook.</span>
          </span>
          <span data-ttu-id="afd82-124">Cela n’exécute aucune macro Auto_Activate ou Auto_Deactivate qui peut-être être associées au classeur (utilisez la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> méthode pour exécuter ces macros).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-124">This won't run any Auto_Activate or Auto_Deactivate macros that might be attached to the workbook (use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run those macros).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-125">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object qui représente le graphique actif (un graphique incorporé ou une feuille de graphique).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-125">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span>
          </span>
          <span data-ttu-id="afd82-126">Un graphique incorporé est considéré comme actif lorsqu’il est sélectionné ou activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-126">An embedded chart is considered active when it's either selected or activated.</span>
          </span>
          <span data-ttu-id="afd82-127">Lorsqu’aucun graphique n’est actif, cette propriété renvoie la <b>valeur Nothing</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-127">When no chart is active, this property returns <b>Nothing</b>.</span>
          </span>
          <span data-ttu-id="afd82-128">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-128">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-129">
            <para>Si vous ne spécifiez pas un qualificateur d’objet, cette propriété renvoie le graphique actif du classeur actif.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-129">
              <para>If you don't specify an object qualifier, this property returns the active chart in the active workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-130">Renvoie un object qui représente la feuille active (feuille au premier plan) dans le classeur actif ou dans la fenêtre spécifiée ou du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-130">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook.</span>
          </span>
          <span data-ttu-id="afd82-131">Renvoie la <b>valeur Nothing</b> si aucune feuille n’est active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-131">Returns <b>Nothing</b> if no sheet is active.</span>
          </span>
          <span data-ttu-id="afd82-132">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-132">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-133">
            <para>Si vous ne spécifiez pas un qualificateur d’objet, cette propriété renvoie la feuille active du classeur actif.</para>
            <para>Si un classeur apparaît dans plusieurs fenêtres, la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" /> propriété peut être différente dans différentes fenêtres.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-133">
              <para>If you don’t specify an object qualifier, this property returns the active sheet in the active workbook.</para>
              <para>If a workbook appears in more than one window, the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" /> property may be different in different windows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSlicer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Slicer ActiveSlicer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Slicer ActiveSlicer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSlicer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSlicer As Slicer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Slicer ^ ActiveSlicer { Microsoft::Office::Interop::Excel::Slicer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Slicer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-134">Obtient un objet qui représente le slicer actif du classeur actif ou du classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-134">Gets an object that represents the active slicer in the active workbook or in the specified workbook.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-135">Objet qui représente le slicer actif du classeur actif ou du classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-135">An object that represents the active slicer in the active workbook or in the specified workbook.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="afd82-136">
            <para>Retourne une référence null (Nothing dans Visual Basic) si aucun segment n’est actif.</para>
            <para>En lecture seule.</para>
            <para>Si vous ne spécifiez pas un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> d’objet, cette propriété retourne le slicer actif du classeur actif.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-136">
              <para>Returns a null reference (Nothing in Visual Basic) if no slicer is active.</para>
              <para>Read-only.</para>
              <para>If you do not specify a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the active slicer in the active workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToFavorites">
      <MemberSignature Language="C#" Value="public void AddToFavorites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToFavorites() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AddToFavorites" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToFavorites ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToFavorites();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1476)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-137">Ajoute un raccourci vers le classeur ou un lien hypertexte dans le dossier Favoris.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-137">Adds a shortcut to the workbook or a hyperlink to the Favorites folder.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-138">Utilisée sans qualificateur d’objet, cette propriété renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-138">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="afd82-139">Utilisée avec un identificateur d’objet, cette propriété renvoie un objet<b>Application</b> qui représente le créateur de l’objet spécifié (vous pouvez utiliser cette propriété avec un objet OLE Automation pour renvoyer l’application de cet objet).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-139">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
          <span data-ttu-id="afd82-140">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-140">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="C#" Value="public void ApplyTheme (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyTheme([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ApplyTheme(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyTheme (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyTheme(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2534)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="afd82-141">Nom du thème.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-141">Name of the theme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-142">Applique le thème spécifié au classeur actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-142">Applies the specified theme to the current workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Author">
      <MemberSignature Language="C#" Value="public string Author { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Author" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Author" />
      <MemberSignature Language="VB.NET" Value="Public Property Author As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Author { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p110">Cette propriété renvoie ou définit l’auteur du commentaire. Type de données <b>String</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p110">Returns or sets the author of the comment. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-145">Cette propriété renvoie <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-145">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="afd82-146">
            <para>Cet exemple montre comment supprime tous les commentaires ajoutés par Jean Selva dans la feuille active.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-146">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="afd82-147">
            <para>Cet exemple montre comment supprime tous les commentaires ajoutés par Jean Selva dans la feuille active.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-147">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="afd82-148">
            <para>Cet exemple montre comment supprime tous les commentaires ajoutés par Jean Selva dans la feuille active.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-148">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateFrequency">
      <MemberSignature Language="C#" Value="public int AutoUpdateFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoUpdateFrequency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateFrequency As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoUpdateFrequency { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-149">Cette propriété renvoie ou définit le nombre de minutes entre les mises à jour automatiques dans le classeur partagé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-149">Returns or sets the number of minutes between automatic updates to the shared workbook.</span>
          </span>
          <span data-ttu-id="afd82-150">Type de données <b>Integer</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-150">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-151">
            <para>La propriété <b>AutoUpdateFrequency</b> doit être définie sur une valeur comprise entre 5 et 1 440 pour cette propriété prenne effet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-151">
              <para>The <b>AutoUpdateFrequency</b> property must be set to a value from 5 to 1,440 for this property to take effect.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateSaveChanges">
      <MemberSignature Language="C#" Value="public bool AutoUpdateSaveChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoUpdateSaveChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateSaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateSaveChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoUpdateSaveChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p112">
            <b>True</b> si les modifications apportées au classeur partagé sont transmises aux autres utilisateurs dès que le classeur est mis à jour automatiquement. <b>False</b> si les modifications ne sont pas transmises (ce classeur est néanmoins toujours synchronisé avec les modifications effectuées par d’autres utilisateurs). La valeur par défaut est <b>True</b>. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p112">
              <b>True</b> if current changes to the shared workbook are posted to other users whenever the workbook is automatically updated. <b>False</b> if changes aren’t posted (this workbook is still synchronized with changes made by other users). The default value is <b>True</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-156">
            <para>Le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" /> propriété doit être définie sur une valeur comprise entre 5 et 1 440 pour cette propriété prenne effet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-156">
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" /> property must be set to a value from 5 to 1,440 for this property to take effect.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakLink">
      <MemberSignature Language="C#" Value="public void BreakLink (string Name, Microsoft.Office.Interop.Excel.XlLinkType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BreakLink([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.BreakLink(System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BreakLink (Name As String, Type As XlLinkType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BreakLink(System::String ^ Name, Microsoft::Office::Interop::Excel::XlLinkType Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2047)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="afd82-157">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-157">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-158">Nom du lien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-158">The name of the link.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="afd82-159">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-159">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
          <span data-ttu-id="afd82-160">Type du lien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-160">The type of link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-161">Convertit des formules liées à d’autres sources Microsoft Excel ou sources OLE en valeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-161">Converts formulas linked to other Microsoft Excel sources or OLE sources to values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltinDocumentProperties">
      <MemberSignature Language="C#" Value="public object BuiltinDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BuiltinDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltinDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BuiltinDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-162">Renvoie un <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection qui représente toutes les propriétés de document intégrées pour le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-162">Returns a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the built-in document properties for the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-163">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-163">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-164">
            <para>Cette propriété renvoie l’ensemble des propriétés de document prédéfinies. Utiliser le <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> méthode pour renvoyer un seul membre de la collection (un <see cref="T:Microsoft.Office.Core.DocumentProperty" /> objet) en spécifiant le nom de la propriété ou l’index de la collection (en tant que numéro).</para>
            <para>Vous pouvez faire référence aux propriétés de document par valeur d’index ou par son nom. La liste suivante présente le document prédéfinies disponible les noms de propriété :</para>
            <para>titre </para>
            <para>objet</para>
            <para>auteur</para>
            <para>mots clés</para>
            <para>commentaires</para>
            <para>modèle</para>
            <para>Auteur dernier</para>
            <para>Numéro de révision</para>
            <para> Nom de l’application</para>
            <para>la Date de dernière impression</para>
            <para>Creation Date </para>
            <para>heure du dernier enregistrement</para>
            <para>temps Total d’édition</para>
            <para>nombre de Pages</para>
            <para>nombre de mots</para>
            <para>nombre de caractères</para>
            <para>sécurité</para>
            <para> Catégorie</para>
            <para>Format</para>
            <para>Gestionnaire</para>
            <para>nombre d’octets</para>
            <para>nombre de lignes de</para>
            <para>nombre de paragraphes</para>
            <para>nombre de diapositives</para>
            <para>nombre de Notes</para>de la
          <para>société</para><para>nombre de diapositives masquées</para><para>Nombre d’éléments multimédias Clips</para><para>Base de lien hypertexte</para><para>Nombre de caractères (avec des espaces)</para> Les applications conteneur 
          <para>ne sont pas nécessaires pour définir des valeurs pour chaque propriété de document prédéfinie. Si Microsoft Excel ne définit pas une valeur pour une des propriétés de document prédéfinies, la lecture de la <see cref="P:Microsoft.Office.Core.DocumentProperty.Value" /> propriété pour cette propriété de document provoque une erreur.</para><para>La méthode <b>Item</b> est la méthode par défaut pour la collection <b>DocumentProperties</b> .</para><para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" /> propriété pour renvoyer la collection de propriétés de document personnalisées.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-164">
              <para>This property returns the entire collection of built-in document properties. Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</para>
              <para>You can refer to document properties either by index value or by name. The following list shows the available built-in document property names:</para>
              <para>Title </para>
              <para>Subject</para>
              <para>Author</para>
              <para>Keywords</para>
              <para>Comments</para>
              <para>Template</para>
              <para>Last Author</para>
              <para>Revision Number</para>
              <para>Application Name</para>
              <para>Last Print Date</para>
              <para>Creation Date </para>
              <para>Last Save Time</para>
              <para>Total Editing Time</para>
              <para>Number of Pages</para>
              <para>Number of Words</para>
              <para>Number of Characters</para>
              <para>Security</para>
              <para>Category</para>
              <para>Format</para>
              <para>Manager</para>
              <para>Company</para>
              <para>Number of Bytes</para>
              <para>Number of Lines</para>
              <para>Number of Paragraphs</para>
              <para>Number of Slides</para>
              <para>Number of Notes</para>
              <para>Number of Hidden Slides</para>
              <para>Number of Multimedia Clips</para>
              <para>Hyperlink Base</para>
              <para>Number of Characters (with spaces)</para>
              <para>Container applications aren’t required to define values for every built-in document property. If Microsoft Excel doesn’t define a value for one of the built-in document properties, reading the <see cref="P:Microsoft.Office.Core.DocumentProperty.Value" /> property for that document property causes an error.</para>
              <para>The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" /> property to return the collection of custom document properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-165">Renvoie un nombre dont les quatre derniers chiffres sont le numéro de version de moteur de calcul secondaire et dont autres chiffres (à gauche) sont la version principale de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-165">Returns a number whose rightmost four digits are the minor calculation engine version number and whose other digits (on the left) are the major version of Microsoft Excel.</span>
          </span>
          <span data-ttu-id="afd82-166">Pour un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> d’objet, cette propriété renvoie des informations sur la version d’Excel que le classeur a été entièrement recalculé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-166">For a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the information about the version of Excel that the workbook was last fully recalculated by.</span>
          </span>
          <span data-ttu-id="afd82-167">Valeur <b>Integer</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-167">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-168">
            <para>Si le classeur a été enregistré dans une version antérieure de Microsoft Excel, et si le classeur n’a pas été entièrement recalculé, cette propriété renvoie la valeur 0.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-168">
              <para>If the workbook was saved in an earlier version of Excel, and if the workbook hasn't been fully recalculated, this property returns 0.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckIn">
      <MemberSignature Language="C#" Value="public bool CanCheckIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckIn() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CanCheckIn" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckIn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2053)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-169">
            <b>La valeur true</b> si Microsoft Excel peut archiver un classeur spécifié sur un serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-169">
              <b>True</b> if Microsoft Excel can check in a specified workbook to a server.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-170">
            <b>La valeur true</b> si le classeur fait la distinction entre les cas de majuscules et minuscules lors de la comparaison de contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-170">
              <b>True</b> if the workbook distinguishes between upper and lower case when comparing content.</span>
          </span>
          <span data-ttu-id="afd82-171">En lecture seule <b>Boolean</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-171">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeFileAccess">
      <MemberSignature Language="C#" Value="public void ChangeFileAccess (Microsoft.Office.Interop.Excel.XlFileAccess Mode, object WritePassword, object Notify);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeFileAccess([in]valuetype Microsoft.Office.Interop.Excel.XlFileAccess Mode, [in]object WritePassword, [in]object Notify) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeFileAccess (Mode As XlFileAccess, Optional WritePassword As Object, Optional Notify As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(989)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mode" Type="Microsoft.Office.Interop.Excel.XlFileAccess" />
        <Parameter Name="WritePassword" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Mode">
          <span data-ttu-id="afd82-172">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-172">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />.</span>
          </span>
          <span data-ttu-id="afd82-173">Indique le nouveau mode d'accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-173">Specifies the new access mode.</span>
          </span>
        </param>
        <param name="WritePassword">
          <span data-ttu-id="afd82-174">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-174">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-175">Spécifie le mot de passe de protection contre l’écriture si le fichier est réservé en écriture et <paramref name="Mode" /> a pour <b>valeur xlReadWrite</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-175">Specifies the write-reserved password if the file is write reserved and <paramref name="Mode" /> is <b>xlReadWrite</b>.</span>
          </span>
          <span data-ttu-id="afd82-176">Ignoré s’il n’existe aucun mot de passe pour le fichier ou si <paramref name="Mode" /> a la <b>valeur xlReadOnly</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-176">Ignored if there's no password for the file or if <paramref name="Mode" /> is <b>xlReadOnly</b>.</span>
          </span>
        </param>
        <param name="Notify">
          <span data-ttu-id="afd82-177">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-177">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-178">Cet argument est omis ou a la valeur <b>True</b> pour prévenir l'utilisateur si le fichier n'est pas immédiatement accessible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-178">
              <b>True</b> (or omitted) to notify the user if the file cannot be immediately accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-p121">Modifie les autorisations d’accès au classeur ce qui peut impliquer la nécessité de charger, à partir du disque, une version mise à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p121">Changes the access permissions for the workbook. This may require an updated version to be loaded from the disk.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-181">
            <para>Si vous avez un fichier ouvert en mode lecture seule, vous n’avez pas accès exclusif au fichier. Si vous remplacez un fichier en lecture seule en lecture/écriture, Microsoft Excel doit charger une nouvelle copie du fichier pour s’assurer que sans modifications ont été apportées pendant que le fichier était ouvert en lecture seule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-181">
              <para>If you have a file open in read-only mode, you don't have exclusive access to the file. If you change a file from read-only to read/write, Microsoft Excel must load a new copy of the file to ensure that no changes were made while you had the file open as read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeHistoryDuration">
      <MemberSignature Language="C#" Value="public int ChangeHistoryDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChangeHistoryDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChangeHistoryDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangeHistoryDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChangeHistoryDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-182">Cette propriété renvoie ou définit le nombre de jours affichés dans l’historique des modifications du classeur partagé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-182">Returns or sets the number of days shown in the shared workbook's change history.</span>
          </span>
          <span data-ttu-id="afd82-183">Type de données <b>Integer</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-183">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-184">
            <para>Les modifications apportées à l’historique de modification antérieurs à la valeur de cette propriété sont supprimées lorsque le classeur est fermé.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-184">
              <para>Any changes in the change history older than the setting for this property are removed when the workbook is closed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeLink">
      <MemberSignature Language="C#" Value="public void ChangeLink (string Name, string NewName, Microsoft.Office.Interop.Excel.XlLinkType Type = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeLink([in]string Name, [in]string NewName, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeLink (Name As String, NewName As String, Optional Type As XlLinkType = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NewName" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="afd82-185">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-185">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-186">Le nom de la liaison Microsoft Excel ou DDE/OLE à modifier, tel qu’il a été renvoyé à partir de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-186">The name of the Microsoft Excel or DDE/OLE link to be changed, as it was returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="NewName">
          <span data-ttu-id="afd82-187">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-187">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-188">Nouveau nom de la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-188">The new name of the link.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="afd82-189">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-189">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
          <span data-ttu-id="afd82-190">Type de la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-190">The link type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-191">Modifie une liaison entre deux documents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-191">Changes a link from one document to another.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-192">
            <b>La valeur True</b> provoque tous les graphiques dans le document actif pour suivre le point de données à laquelle elle est associée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-192">
              <b>True</b> will cause all charts in the current document to track the actual data point to which it’s attached.</span>
          </span>
          <span data-ttu-id="afd82-193">
            <b>False</b> revient à l’index du point de données de suivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-193">
              <b>False</b> will revert back to tracking the index of the data point.</span>
          </span>
          <span data-ttu-id="afd82-194">
            <b>Boolean</b> (<b>bool</b> en c#) En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-194">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-195">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles graphiques du classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-195">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-196">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-196">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-197">
            <para>À l’aide de cette propriété sans qualificateur d’objet renvoie toutes les feuilles graphiques du classeur actif.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-197">
              <para>Using this property without an object qualifier returns all chart sheets in the active workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCompatibility">
      <MemberSignature Language="C#" Value="public bool CheckCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCompatibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CheckCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCompatibility As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCompatibility { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-198">Contrôle si le vérificateur de compatibilité est exécuté automatiquement lorsque le classeur est enregistré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-198">Controls whether or not the compatibility checker is run automatically when the workbook is saved.</span>
          </span>
          <span data-ttu-id="afd82-199">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-199">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-200">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-200">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIn">
      <MemberSignature Language="C#" Value="public void CheckIn (object SaveChanges, object Comments, object MakePublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckIn([in]object SaveChanges, [in]object Comments, [in]object MakePublic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckIn(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckIn (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2051)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="afd82-201">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-201">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-202">
            <b>True</b> enregistre les modifications et archive le document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-202">
              <b>True</b> saves changes and checks in the document.</span>
          </span>
          <span data-ttu-id="afd82-203">
            <b>La valeur False</b> renvoie le document à un statut archivé sans enregistrer les révisions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-203">
              <b>False</b> returns the document to a checked-in status without saving revision.</span>
          </span>
        </param>
        <param name="Comments">
          <span data-ttu-id="afd82-204">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-204">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-205">Permet à l’utilisateur d’entrer des commentaires d’archivage pour la révision du classeur archivé (s’applique uniquement si <paramref name="SaveChanges" /> est égal à <b>True</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-205">Allows the user to enter check-in comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span>
          </span>
        </param>
        <param name="MakePublic">
          <span data-ttu-id="afd82-206">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-206">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-207">
            <b>True</b> permet à l’utilisateur de publier le classeur après que qu’il a été archivé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-207">
              <b>True</b> allows the user to publish the workbook after it has been checked in.</span>
          </span>
          <span data-ttu-id="afd82-208">Le classeur pour le processus d’approbation, qui peut éventuellement aboutir à une version du classeur publié aux utilisateurs ayant des droits en lecture seule sur le classeur (s’applique uniquement si <paramref name="SaveChanges" /> est égal à <b>True</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-208">This submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-209">Renvoie un classeur à partir d’un ordinateur local vers un serveur et définit le classeur local en lecture seule afin qu’il ne peut pas être modifié localement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-209">Returns a workbook from a local computer to a server and sets the local workbook to read-only so that it cannot be edited locally.</span>
          </span>
          <span data-ttu-id="afd82-210">Appel de cette méthode ferme également le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-210">Calling this method will also close the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckInWithVersion">
      <MemberSignature Language="C#" Value="public void CheckInWithVersion (object SaveChanges, object Comments, object MakePublic, object VersionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckInWithVersion([in]object SaveChanges, [in]object Comments, [in]object MakePublic, [in]object VersionType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckInWithVersion(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckInWithVersion (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object, Optional VersionType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
        <Parameter Name="VersionType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="afd82-211">
            <b>true</b> pour enregistrer le classeur à l’emplacement du serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-211">
              <b>true</b> to save the workbook to the server location.</span>
          </span>
          <span data-ttu-id="afd82-212">La valeur par défaut est <b>true</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-212">The default is <b>true</b>.</span>
          </span>
        </param>
        <param name="Comments">
          <span data-ttu-id="afd82-213">Représente les commentaires de la révision du classeur archivé (s’applique uniquement si <paramref name="SaveChanges" /> est défini sur <b>true</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-213">Comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>).</span>
          </span>
        </param>
        <param name="MakePublic">
          <span data-ttu-id="afd82-214">
            <b>la valeur true</b> pour autoriser l’utilisateur de publier le classeur après son archivage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-214">
              <b>true</b> to allow the user to publish the workbook after it is checked in.</span>
          </span>
        </param>
        <param name="VersionType">
          <span data-ttu-id="afd82-215">Fournit les informations de version se rapportant au classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-215">Specifies versioning information for the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-216">Enregistre un classeur sur un serveur à partir d’un ordinateur local, et définit le classeur local en lecture seule pour éviter qu’il ne soit modifié localement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-216">Saves a workbook to a server from a local computer, and sets the local workbook to read-only so that it cannot be edited locally.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-217">
            <para>Paramètre le <paramref name="MakePublic" /> paramètre sur <b>true</b> envoie le classeur pour le processus d’approbation, qui peut éventuellement aboutir à une version du classeur publié aux utilisateurs ayant des droits en lecture seule sur le classeur (s’applique uniquement si <paramref name="SaveChanges" /> est défini sur true <b></b>). </para>
            <para>Pour tirer parti des fonctionnalités de collaboration intégrées à Microsoft Excel, documents doivent être stockés sur un serveur Microsoft SharePoint Server.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-217">
              <para>Setting the <paramref name="MakePublic" /> parameter to <b>true</b> submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>). </para>
              <para>To take advantage of the collaboration features built into Microsoft Excel, documents must be stored on a Microsoft SharePoint Server. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (object SaveChanges, object Filename, object RouteWorkbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close([in]object SaveChanges, [in]object Filename, [in]object RouteWorkbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Close(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (Optional SaveChanges As Object, Optional Filename As Object, Optional RouteWorkbook As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="RouteWorkbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="afd82-218">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-218">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-219">S’il n’y a aucune modification au classeur, cet argument est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-219">If there are no changes to the workbook, this argument is ignored.</span>
          </span>
          <span data-ttu-id="afd82-220">Si des modifications sont apportées au classeur et le classeur s’affiche dans d’autres fenêtres ouvertes, cet argument est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-220">If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored.</span>
          </span>
          <span data-ttu-id="afd82-221">Si des modifications sont apportées au classeur, mais n’apparaît pas dans d’autres fenêtres ouvertes, cet argument spécifie si les modifications doivent être enregistrées, comme illustré dans le tableau suivant. ValueAction<b>True</b>enregistre les modifications apportées au classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-221">If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueAction<b>True</b>Saves the changes to the workbook.</span>
          </span>
          <span data-ttu-id="afd82-222">S’il n’existe pas encore associé au classeur, puis un nom de fichier <paramref name="FileName" /> est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-222">If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used.</span>
          </span>
          <span data-ttu-id="afd82-223">Si <paramref name="FileName" /> est omis, l’utilisateur est invité à fournir un nom de fichier. <b>False</b> N’enregistre pas les modifications apportées à ce fichier. OmittedDisplays une boîte de dialogue demandant à l’utilisateur s’il faut enregistrer les modifications.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-223">If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.<b>False</b>Does not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="afd82-224">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-224">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-225">Enregistrer les modifications sous ce nom de fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-225">Save changes under this file name.</span>
          </span>
        </param>
        <param name="RouteWorkbook">
          <span data-ttu-id="afd82-226">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-226">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-227">Si le classeur ne doit pas être routé au destinataire suivant (s’il n’a aucun bordereau de routage ou a déjà été acheminé), cet argument est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-227">If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored.</span>
          </span>
          <span data-ttu-id="afd82-228">Dans le cas contraire, Microsoft Excel achemine le classeur comme indiqué dans le tableau suivant. <b>True</b>ValueMeaning envoie le classeur au destinataire suivant. <b>False</b> N’envoie pas le classeur. OmittedDisplays une boîte de dialogue demandant à l’utilisateur si le classeur doit être envoyé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-228">Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaning<b>True</b>Sends the workbook to the next recipient.<b>False</b>Doesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-229">Ferme l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-229">Closes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-230">
            <para>Fermeture d’un classeur à l’aide de la méthode <b>Close</b> n’exécute aucune macro Auto_Close du classeur. Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> méthode pour exécuter la macro Auto_Close.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-230">
              <para>Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the Auto_Close macros.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-231">Renvoie le nom de code pour l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-231">Returns the code name for the object.</span>
          </span>
          <span data-ttu-id="afd82-232">Valeur <b>String</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-232">Read-only <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-233">La valeur que vous voyez dans la cellule à droite de <b>(nom)</b> dans la fenêtre Propriétés est le nom de code de l’objet sélectionné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-233">The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object.</span>
          </span>
          <span data-ttu-id="afd82-234">Au moment du design, vous pouvez modifier le nom de code d’un objet en changeant cette valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-234">At design time, you can change the code name of an object by changing this value.</span>
          </span>
          <span data-ttu-id="afd82-235">Vous ne pouvez pas modifier par programme cette propriété à l’exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-235">You cannot programmatically change this property at run time.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-236">
            <para>Le nom de code pour un objet peut être utilisé à la place d’une expression qui renvoie l’objet.</para>
            <para>, Il est possible que le nom de feuille peut être différent du nom de code. Lorsque vous créez une feuille, le nom de la feuille et le nom de code sont identiques, mais la modification du nom de feuille ne change pas le nom de code et réciproquement (à l’aide de la fenêtre Propriétés dans Visual Basic Editor) ne change pas le nom de la feuille.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-236">
              <para>The code name for an object can be used in place of an expression that returns the object.</para>
              <para>It’s possible for the sheet name to be different from the code name. When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Colors">
      <MemberSignature Language="C#" Value="public object Colors[object Index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Colors(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Colors(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Colors(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Colors[System::Object ^] { System::Object ^ get(System::Object ^ Index); void set(System::Object ^ Index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="afd82-237">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-237">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-238">Le nombre de couleurs (de 1 à 56).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-238">The color number (from 1 to 56).</span>
          </span>
          <span data-ttu-id="afd82-239">Si cet argument n’est pas spécifié, cette méthode renvoie un tableau qui contient tous les 56 dans la palette de couleurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-239">If this argument isn’t specified, this method returns an array that contains all 56 of the colors in the palette.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-240">Cette propriété renvoie ou définit les couleurs dans la palette pour le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-240">Returns or sets colors in the palette for the workbook.</span>
          </span>
          <span data-ttu-id="afd82-241">La palette comporte 56 entrées, chacun étant représenté par une valeur RVB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-241">The palette has 56 entries, each represented by an RGB value.</span>
          </span>
          <span data-ttu-id="afd82-242">
            <b>Objet</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-242">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-243">Renvoie un <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> object qui représente les barres de commandes de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-243">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> object that represents the Microsoft Excel command bars.</span>
          </span>
          <span data-ttu-id="afd82-244">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-244">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-245">
            <para>Lorsqu’un classeur est incorporé dans une autre application et activé par l’utilisateur en double-cliquant sur le classeur à l’aide de cette propriété avec un objet <b>Workbook</b> renvoie l’ensemble des barres d’outils Microsoft Excel disponibles dans l’autre application. À tout autre moment, à l’aide de cette propriété avec un objet <b>Workbook</b> renvoie <b>Nothing</b>.</para>
            <para>Il n’existe aucun moyen par programme pour renvoyer l’ensemble de barres de commandes attaché à un classeur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-245">
              <para>When a workbook is embedded in another application and activated by the user by double-clicking the workbook, using this property with a <b>Workbook</b> object returns the set of Microsoft Excel command bars available within the other application. At all other times, using this property with a <b>Workbook</b> object returns <b>Nothing</b>.</para>
              <para>There is no programmatic way to return the set of command bars attached to a workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Comments" />
      <MemberSignature Language="VB.NET" Value="Public Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-246">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection qui représente tous les commentaires de la feuille de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-246">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span>
          </span>
          <span data-ttu-id="afd82-247">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-247">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-248">Cette propriété renvoie <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-248">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="afd82-249">
            <para>Cet exemple montre comment supprime tous les commentaires ajoutés par Jean Selva dans la feuille active.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-249">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="afd82-250">
            <para>Cet exemple montre comment supprime tous les commentaires ajoutés par Jean Selva dans la feuille active.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-250">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="afd82-251">
            <para>Cet exemple montre comment supprime tous les commentaires ajoutés par Jean Selva dans la feuille active.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-251">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ConflictResolution">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConflictResolution" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictResolution As XlSaveConflictResolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSaveConflictResolution ConflictResolution { Microsoft::Office::Interop::Excel::XlSaveConflictResolution get(); void set(Microsoft::Office::Interop::Excel::XlSaveConflictResolution value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSaveConflictResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-252">Renvoie ou définit les façon dont les conflits sont résolus dès qu’un classeur partagé est mis à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-252">Returns or sets the way conflicts are to be resolved whenever a shared workbook is updated.</span>
          </span>
          <span data-ttu-id="afd82-253">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-253">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Connections Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Connections Connections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As Connections" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Connections ^ Connections { Microsoft::Office::Interop::Excel::Connections ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Connections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-254">Le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> propriété établit une connexion entre le classeur et une ODBC ou une source de données OLEDB et actualise les données sans inviter l’utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-254">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> property establishes a connection between the workbook and an ODBC or an OLEDB data source and refreshes the data without prompting the user.</span>
          </span>
          <span data-ttu-id="afd82-255">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-255">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Connections" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsDisabled">
      <MemberSignature Language="C#" Value="public bool ConnectionsDisabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConnectionsDisabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConnectionsDisabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionsDisabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConnectionsDisabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p144">Désactive les connexions externes ou les liens dans le classeur. En lecture seule</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p144">Disables the external connections or links in the workbook. Read-only</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-258">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-258">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public object Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Container { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p145">Renvoie l’objet qui représente l’application de conteneur de l’objet OLE spécifié. Type de données <b>Object</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p145">Returns the object that represents the container application for the specified OLE object. Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-261">
            <para>Cette propriété permet d’accéder au modèle objet de l’application conteneur si un classeur Excel est ouvert dans une application hôte, tel que Microsoft Internet Explorer.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-261">
              <para>This property provides a way to access the object model of the container application if an Excel workbook is opened within a host application such as Microsoft Internet Explorer.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTypeProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MetaProperties ContentTypeProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MetaProperties ContentTypeProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ContentTypeProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTypeProperties As MetaProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MetaProperties ^ ContentTypeProperties { Microsoft::Office::Core::MetaProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MetaProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-262">Renvoie un <see cref="T:Microsoft.Office.Core.MetaProperties" /> collection décrivant les métadonnées stockées dans le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-262">Returns a <see cref="T:Microsoft.Office.Core.MetaProperties" /> collection that describes the metadata stored in the workbook.</span>
          </span>
          <span data-ttu-id="afd82-263">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-263">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-264">
            <b>MetaProperties</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-264">
              <b>MetaProperties</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBackup">
      <MemberSignature Language="C#" Value="public bool CreateBackup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateBackup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CreateBackup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateBackup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateBackup { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p147">
            <b>True</b> si une copie de sauvegarde est créée lorsque ce fichier est enregistré. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p147">
              <b>True</b> if a backup file is created when this file is saved. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-267">Renvoie une constante dans la <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> énumération qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-267">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="afd82-268">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-268">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="afd82-269">En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-269">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-270">
            <para>La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Excel possède le code créateur XCEL.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-270">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDocumentProperties">
      <MemberSignature Language="C#" Value="public object CustomDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CustomDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CustomDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-271">Cette propriété renvoie ou définit une <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection qui représente toutes les propriétés de document personnalisées pour le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-271">Returns or sets a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the custom document properties for the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-272">
            <para>Cette propriété renvoie l’ensemble des propriétés de document personnalisées. Utiliser le <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> méthode pour renvoyer un seul membre de la collection (un <see cref="T:Microsoft.Office.Core.DocumentProperty" /> objet) en spécifiant le nom de la propriété ou l’index de la collection (en tant que numéro).</para>
            <para>La méthode <b>Item</b> est la méthode par défaut pour la collection <b>DocumentProperties</b> .</para>
            <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" /> propriété pour renvoyer la collection de propriétés de document prédéfinies.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-272">
              <para>This property returns the entire collection of custom document properties. Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</para>
              <para>The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" /> property to return the collection of built-in document properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomViews">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomViews CustomViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomViews CustomViews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomViews As CustomViews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomViews ^ CustomViews { Microsoft::Office::Interop::Excel::CustomViews ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-273">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> collection qui représente toutes les vues personnalisées du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-273">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> collection that represents all the custom views for the workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomXMLParts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLParts CustomXMLParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLParts CustomXMLParts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomXMLParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomXMLParts As CustomXMLParts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLParts ^ CustomXMLParts { Microsoft::Office::Core::CustomXMLParts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLParts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-274">Renvoie un.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-274">Returns a.</span>
          </span>
          <span data-ttu-id="afd82-275">
            <see cref="T:Microsoft.Office.Core.CustomXMLParts" />collection qui représente la partie XML personnalisée dans le magasin de données XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-275">
              <see cref="T:Microsoft.Office.Core.CustomXMLParts" /> collection that represents the custom XML in the XML data store.</span>
          </span>
          <span data-ttu-id="afd82-276">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-276">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-277">
            <b>CustomXMLParts</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-277">
              <b>CustomXMLParts</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Date1904">
      <MemberSignature Language="C#" Value="public bool Date1904 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Date1904" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Date1904" />
      <MemberSignature Language="VB.NET" Value="Public Property Date1904 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Date1904 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p150">
            <b>True</b> si le classeur utilise le calendrier depuis 1904. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p150">
              <b>True</b> if the workbook uses the 1904 date system. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPivotTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultPivotTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultPivotTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultPivotTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPivotTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultPivotTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-280">Spécifie le style de tableau à partir de la <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection qui est utilisée comme style par défaut pour les tableaux croisés dynamiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-280">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default style for PivotTables.</span>
          </span>
          <span data-ttu-id="afd82-281">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-281">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-282">
            <b>Objet</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-282">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSlicerStyle">
      <MemberSignature Language="C#" Value="public object DefaultSlicerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultSlicerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultSlicerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSlicerStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultSlicerStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-283">Obtient ou définit le style de la <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> objet qui est utilisé comme style par défaut pour les slicers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-283">Gets or sets the style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-284">Le style à partir de la <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> objet qui est utilisé comme style par défaut pour les slicers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-284">The style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="afd82-285">
            <para>En lecture-écriture.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-285">
              <para>Read/write.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-286">Spécifie le style de tableau à partir de la <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection qui est utilisée par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-286">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default TableStyle.</span>
          </span>
          <span data-ttu-id="afd82-287">En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-287">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-288">
            <b>Objet</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-288">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTimelineStyle">
      <MemberSignature Language="C#" Value="public object DefaultTimelineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTimelineStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTimelineStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTimelineStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTimelineStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-289">Le nom du style de segment par défaut du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-289">The name of the default slicer style of the workbook.</span>
          </span>
          <span data-ttu-id="afd82-290">
            <b>Objet</b> (<b>objet</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-290">
              <b>Object</b> (<b>object</b> in C#).</span>
          </span>
          <span data-ttu-id="afd82-291">Lecture/Écriture</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-291">Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNumberFormat">
      <MemberSignature Language="C#" Value="public void DeleteNumberFormat (string NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteNumberFormat([in]string NumberFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.DeleteNumberFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteNumberFormat (NumberFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteNumberFormat(System::String ^ NumberFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="NumberFormat">
          <span data-ttu-id="afd82-292">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-292">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-293">Nomme le format numérique à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-293">Names the number format to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-294">Supprime du classeur un format numérique personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-294">Deletes a custom number format from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-295">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-295">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDrawingObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDrawingObjects As XlDisplayDrawingObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects DisplayDrawingObjects { Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects get(); void set(Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-296">Cette propriété renvoie ou définit le mode d’affichage des formes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-296">Returns or sets how shapes are displayed.</span>
          </span>
          <span data-ttu-id="afd82-297">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-297">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-298">
            <para>Peut être une des constantes XlDisplayDrawingObjects.</para>
            <list type="table">
              <item>
                <term>
                  <paramref name="xlDisplayShapes" />
                </term>Affiche toutes les formes.
            </item>
              <item>
                <term>
                  <paramref name="xlPlaceholders" />
                </term>Afficher uniquement des espaces réservés.
            </item>
              <item>
                <term>
                  <paramref name="xlHide" />
                </term>Masquer toutes les formes.
            </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-298">
              <para>Can be one of the following XlDisplayDrawingObjects constants.</para>
              <list type="table">
                <item>
                  <term>
                    <paramref name="xlDisplayShapes" />
                  </term>
                  <description>Show all shapes.</description>
                </item>
                <item>
                  <term>
                    <paramref name="xlPlaceholders" />
                  </term>
                  <description>Show only placeholders.</description>
                </item>
                <item>
                  <term>
                    <paramref name="xlHide" />
                  </term>
                  <description>Hide all shapes.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInkComments">
      <MemberSignature Language="C#" Value="public bool DisplayInkComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInkComments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayInkComments" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInkComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInkComments { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p156">Valeur de type <b>Boolean</b> qui détermine si les commentaires manuscrits sont affichés dans le classeur. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p156">A <b>Boolean</b> value that determines whether ink comments are displayed in the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentInspectors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentInspectors DocumentInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentInspectors DocumentInspectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentInspectors As DocumentInspectors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentInspectors ^ DocumentInspectors { Microsoft::Office::Core::DocumentInspectors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentInspectors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-301">Renvoie un <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> collection qui représente les modules Inspecteur de Document pour le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-301">Returns a <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> collection that represents the Document Inspector modules for the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-302">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-302">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-303">
            <b>DocumentInspectors</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-303">
              <b>DocumentInspectors</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentLibraryVersions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentLibraryVersions As DocumentLibraryVersions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentLibraryVersions ^ DocumentLibraryVersions { Microsoft::Office::Core::DocumentLibraryVersions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentLibraryVersions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-304">Renvoie un <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> collection qui représente la collection de versions d’un classeur partagé qui a activé le contrôle de version et qui est stockée dans une bibliothèque de documents sur un serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-304">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> collection that represents the collection of versions of a shared workbook that has versioning enabled and that is stored in a document library on a server.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-305">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-305">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotPromptForConvert">
      <MemberSignature Language="C#" Value="public bool DoNotPromptForConvert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotPromptForConvert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DoNotPromptForConvert" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotPromptForConvert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotPromptForConvert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-306">Cette propriété renvoie ou définit si l’utilisateur doit être invité à convertir le classeur si le classeur contient des fonctionnalités qui ne sont pas pris en charge par les versions antérieures à short_Excel2007.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-306">Returns or sets if the user should be prompted to convert the workbook if the workbook contains features that are not supported by versions of Excel earlier than short_Excel2007.</span>
          </span>
          <span data-ttu-id="afd82-307">En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-307">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-308">Bool�en</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-308">Boolean</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy16">
      <MemberSignature Language="C#" Value="public void Dummy16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy16() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy16" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy16 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-309">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-309">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy17">
      <MemberSignature Language="C#" Value="public void Dummy17 (int calcid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy17([in]int32 calcid) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy17(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy17 (calcid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy17(int calcid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2044)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calcid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="calcid">To be added.</param>
        <summary>
          <span data-ttu-id="afd82-310">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-310">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy26">
      <MemberSignature Language="C#" Value="public void Dummy26 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy26() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy26" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy26 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy26();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy27">
      <MemberSignature Language="C#" Value="public void Dummy27 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy27() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy27" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy27 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy27();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoRecover">
      <MemberSignature Language="C#" Value="public bool EnableAutoRecover { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnableAutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoRecover As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoRecover { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p159">Enregistre des fichiers modifiés, de tout format, dans un intervalle de temps. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p159">Saves changed files, of all formats, on a timed interval. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-313">
            <para>Si Microsoft Excel échoue, le système ne fonctionne pas, ou si le système est fermée (ne pas permettant à Excel d’enregistrer les fichiers modifiés), les fichiers sauvegardés sont ouverts et l’utilisateur a la possibilité d’enregistrer les modifications dans le cas contraire auraient été perdues. Lorsque l’utilisateur redémarre Excel, une fenêtre de récupération de document s’affiche, l’utilisateur de récupérer les fichiers que dont ils ont été occupent. Cette fonctionnalité permet de définir cette propriété sur <b>True</b> (valeur par défaut).</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-313">
              <para>If Microsoft Excel fails, the system fails, or if the system is improperly shut down (not allowing Excel to save the changed files), the backed up files are opened and the user has an opportunity to save changes that otherwise would have been lost. When the user restarts Excel, a document recovery window opens, giving the user an option to recover the files they were working on. Setting this property to <b>True</b> (default) enables this feature.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableConnections">
      <MemberSignature Language="C#" Value="public void EnableConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnableConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2537)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-314">Le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> méthode permet aux développeurs d’activer par programme des connexions de données au sein du classeur pour l’utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-314">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> method allows developers to programmatically enable data connections within the workbook for the user.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProvider">
      <MemberSignature Language="C#" Value="public string EncryptionProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-315">Renvoie une <b>chaîne</b> spécifiant le nom du fournisseur de chiffrement d’algorithme que 1st_Excel12 utilise pour chiffrer les documents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-315">Returns a <b>String</b> specifying the name of the algorithm encryption provider that 1st_Excel12 uses when encrypting documents.</span>
          </span>
          <span data-ttu-id="afd82-316">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-316">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-317">
            <b>s</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-317">
              <b>s</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReview">
      <MemberSignature Language="C#" Value="public void EndReview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndReview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndReview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndReview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-318">Termine la révision d’un fichier qui a été envoyé pour révision à l’aide du <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-318">Terminates a review of a file that has been sent for review using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVisible">
      <MemberSignature Language="C#" Value="public bool EnvelopeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnvelopeVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnvelopeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvelopeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnvelopeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p161">
            <b>True</b> si l'en-tête de composition de message électronique et la barre d'outils d'enveloppe sont visibles. Type de données <b>Boolean</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p161">
              <b>True</b> if the e-mail composition header and the envelope toolbar are both visible. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-321">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles de macro internationales de Microsoft Excel 4.0 dans le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-321">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-322">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-322">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-323">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles macro Microsoft Excel 4.0 dans le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-323">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-324">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-324">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel8CompatibilityMode">
      <MemberSignature Language="C#" Value="public bool Excel8CompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Excel8CompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel8CompatibilityMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Excel8CompatibilityMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-325">Le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> propriété fournit aux développeurs un moyen de vérifier si le classeur est en mode de compatibilité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-325">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> property provides developers with a way to check if the workbook is in compatibility mode.</span>
          </span>
          <span data-ttu-id="afd82-326">Lecture seule</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-326">Read-only</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-327">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-327">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="afd82-328">
            <para>En mode de compatibilité, certaines fonctionnalités sont désactivées ou fonctionnent différemment.  Par exemple, dans short_Excel2007 il existe plus de lignes et de colonnes que les versions antérieures d’Excel. Référencement structuré est également disponible dans short_Excel2007.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-328">
              <para>In compatibility mode, certain functionality is disabled or functions differently.  For example, in short_Excel2007 there are more rows and columns available as compared to the earlier versions of Excel. Also structured referencing is available in short_Excel2007.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAccess">
      <MemberSignature Language="C#" Value="public bool ExclusiveAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExclusiveAccess() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function ExclusiveAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ExclusiveAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-329">Attribue à l’utilisateur en cours un accès exclusif au classeur ouvert en tant que liste partagée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-329">Assigns the current user exclusive access to the workbook that's open as a shared list.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="afd82-330">
            <para>La méthode <b>ExclusiveAccess</b> enregistre toute modification apportée au classeur et oblige les autres utilisateurs qui ont le classeur ouvrent à enregistrer leurs modifications dans un fichier différent.</para>
            <para>Si le classeur spécifié n’est pas ouvert en tant que liste partagée, cette méthode échoue. Pour déterminer si un classeur est ouvert en tant que liste partagée, utilisez la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> propriété.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-330">
              <para>The <b>ExclusiveAccess</b> method saves any changes you've made to the workbook and requires other users who have the workbook open to save their changes to a different file.</para>
              <para>If the specified workbook isn't open as a shared list, this method fails. To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="afd82-331">Peut être le <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" /> ou <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-331">Can be either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="afd82-332">
            <b>Chaîne</b> qui indique le nom du fichier à enregistrer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-332">A <b>String</b> that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="afd82-333">Vous pouvez inclure un chemin d’accès complet ou le short.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-333">You can include a full path or short.</span>
          </span>
          <span data-ttu-id="afd82-334">Excel2007 enregistre le fichier dans le dossier actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-334">Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="afd82-335">Peut avoir la valeur <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" /> ou <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-335">Can  be set to either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="afd82-336">Définissez sur <b>True</b> pour indiquer ce document propriétés doivent être incluses ou a la valeur <b>False</b> pour indiquer qu’elles sont omises.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-336">Set to <b>True</b> to indicate that document properties should be included or set to <b>False</b> to indicate that they are omitted.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="afd82-337">Si la valeur <b>True</b>, ignore les zones d’impression définies lors de la publication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-337">If set to <b>True</b>, ignores any print areas set when publishing.</span>
          </span>
          <span data-ttu-id="afd82-338">Si la valeur <b>False</b>, utilise les zones d’impression définies lors de la publication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-338">If set to <b>False</b>, will use the print areas set when publishing.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="afd82-p167">Numéro de la page à partir de laquelle commence la publication. Si cet argument est omis, la publication commence à la première page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p167">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="afd82-p168">Numéro de la dernière page à publier. Si cet argument est omis, la publication se termine à la dernière page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p168">The number of the last page to publish. If this argument is omitted, publishing ends with the last page</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="afd82-343">Si la valeur <b>True</b> affiche le fichier dans la visionneuse après sa publication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-343">If set to <b>True</b> displays file in viewer after it is published.</span>
          </span>
          <span data-ttu-id="afd82-344">Si la valeur <b>False</b> le fichier est publiée mais pas affiché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-344">If set to <b>False</b> the file is published but not displayed.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="afd82-345">Pointeur vers la classe <b>FixedFormatExt</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-345">Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-346">Le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode est utilisée pour publier un classeur au format PDF ou XPS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-346">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method is used to publish a workbook to either the PDF or XPS format.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="afd82-347">
            <para>L’exemple suivant crée le PDF avec la qualité standard dans le répertoire du fichier actif et affiche le fichier dans la visionneuse après sa publication.</para>
            <para>
              <b>Remarque</b>: une erreur se produit si le complément PDF n’est pas installé.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-347">
              <para>The following example creates the PDF at standard quality in the current file’s directory and displays file in viewer after it is published.</para>
              <para>
                <b>Note</b>: An error will occur if the PDF add-in is not currently installed.</para>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="FileFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat FileFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat FileFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat FileFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-348">Renvoie le format de fichier et/ou le type du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-348">Returns the file format and/or type of the workbook.</span>
          </span>
          <span data-ttu-id="afd82-349">En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-349">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-350">
            <para>Certaines de ces constantes ne soient pas disponibles, en fonction de la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-350">
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Final">
      <MemberSignature Language="C#" Value="public bool Final { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Final" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Final" />
      <MemberSignature Language="VB.NET" Value="Public Property Final As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Final { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-351">Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique si un classeur est final.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-351">Returns or sets a <b>Boolean</b> that indicates whether a workbook is final.</span>
          </span>
          <span data-ttu-id="afd82-352">En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-352">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-353">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-353">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="afd82-354">
            <para>Définition de la valeur à <b>la valeur True</b> marque le classeur comme étant final, avertit les destinataires (le cas échéant) que le classeur est final et définit le classeur en lecture seule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-354">
              <para>Setting the value to <b>True</b> marks the workbook as final, notifies recipients (if any) that the workbook is final, and sets the workbook to read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowHyperlink">
      <MemberSignature Language="C#" Value="public void FollowHyperlink (string Address, object SubAddress, object NewWindow, object AddHistory, object ExtraInfo, object Method, object HeaderInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FollowHyperlink([in]string Address, [in]object SubAddress, [in]object NewWindow, [in]object AddHistory, [in]object ExtraInfo, [in]object Method, [in]object HeaderInfo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FollowHyperlink (Address As String, Optional SubAddress As Object, Optional NewWindow As Object, Optional AddHistory As Object, Optional ExtraInfo As Object, Optional Method As Object, Optional HeaderInfo As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1470)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="SubAddress" Type="System.Object" />
        <Parameter Name="NewWindow" Type="System.Object" />
        <Parameter Name="AddHistory" Type="System.Object" />
        <Parameter Name="ExtraInfo" Type="System.Object" />
        <Parameter Name="Method" Type="System.Object" />
        <Parameter Name="HeaderInfo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="afd82-355">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-355">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-356">Adresse du document cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-356">The address of the target document.</span>
          </span>
        </param>
        <param name="SubAddress">
          <span data-ttu-id="afd82-357">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-357">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-358">L’emplacement dans le document cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-358">The location within the target document.</span>
          </span>
          <span data-ttu-id="afd82-359">La valeur par défaut est une chaîne vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-359">The default value is the empty string.</span>
          </span>
        </param>
        <param name="NewWindow">
          <span data-ttu-id="afd82-360">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-360">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-361">
            <b>True</b> pour afficher l’application cible dans une nouvelle fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-361">
              <b>True</b> to display the target application in a new window.</span>
          </span>
          <span data-ttu-id="afd82-362">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-362">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AddHistory">
          <span data-ttu-id="afd82-363">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-363">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-364">Non utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-364">Not used.</span>
          </span>
          <span data-ttu-id="afd82-365">Réservé à une utilisation ultérieure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-365">Reserved for future use.</span>
          </span>
        </param>
        <param name="ExtraInfo">
          <span data-ttu-id="afd82-366">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-366">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-367">Un chaîne ou tableau d’octets qui spécifie des informations supplémentaires pour HTTP à utiliser pour résoudre le lien hypertexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-367">A string or byte array that specifies additional information for HTTP to use to resolve the hyperlink.</span>
          </span>
          <span data-ttu-id="afd82-368">Par exemple, vous pouvez utiliser <paramref name="ExtraInfo" /> pour spécifier les coordonnées d’une image interactive, le contenu d’un formulaire ou un nom de fichier FAT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-368">For example, you can use <paramref name="ExtraInfo" /> to specify the coordinates of an image map, the contents of a form, or a FAT file name.</span>
          </span>
        </param>
        <param name="Method">
          <span data-ttu-id="afd82-369">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-369">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-370">Spécifie la façon dont <paramref name="ExtraInfo" /> est attaché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-370">Specifies the way <paramref name="ExtraInfo" /> is attached.</span>
          </span>
          <span data-ttu-id="afd82-371">Peut être une de le <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> constantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-371">Can be one of the <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> constants.</span>
          </span>
        </param>
        <param name="HeaderInfo">
          <span data-ttu-id="afd82-372">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-372">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-373">Chaîne qui spécifie les informations d’en-tête pour la requête HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-373">A string that specifies header information for the HTTP request.</span>
          </span>
          <span data-ttu-id="afd82-374">La valeur par défaut est une chaîne vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-374">The default value is an empty string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-375">Affiche un document mis en cache s’il a déjà été téléchargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-375">Displays a cached document if it’s already been downloaded.</span>
          </span>
          <span data-ttu-id="afd82-376">Dans le cas contraire, cette méthode résout le lien hypertexte, télécharge le document cible et affiche le document dans l’application appropriée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-376">Otherwise, this method resolves the hyperlink, downloads the target document, and displays the document in the appropriate application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceFullCalculation">
      <MemberSignature Language="C#" Value="public bool ForceFullCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceFullCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ForceFullCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceFullCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceFullCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-377">Provoque un calcul intégral d’un classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-377">Forces a full calculation of a workbook.</span>
          </span>
          <span data-ttu-id="afd82-378">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-378">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-379">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-379">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardMailer">
      <MemberSignature Language="C#" Value="public void ForwardMailer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForwardMailer() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ForwardMailer" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForwardMailer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForwardMailer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(973)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p181">Vous avez demandé de l’aide sur un mot clé Visual Basic utilisé uniquement pour les Macintosh. Pour plus d’informations sur ce mot clé, consultez l’Aide fournie avec l’édition de Microsoft Office pour Macintosh</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p181">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p182">Renvoie le nom de l’objet, accompagné de son chemin d’accès sur le disque, sous la forme d’une chaîne de caractères. Type de données <b>String</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p182">Returns the name of the object, including its path on disk, as a string. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-384">
            <para>Cette propriété est équivalente à la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> , suivie du séparateur de système de fichier actif, suivi par le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> propriété.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-384">
              <para>This property is equivalent to the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property, followed by the current file system separator, followed by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullNameURLEncoded">
      <MemberSignature Language="C#" Value="public string FullNameURLEncoded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullNameURLEncoded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullNameURLEncoded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullNameURLEncoded As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullNameURLEncoded { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p183">Renvoie un objet <b>String</b> qui indique le nom de l’objet, incluant son chemin sur le disque, en tant que chaîne. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p183">Returns a <b>String</b> indicating the name of the object, including its path on disk, as a string. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTasks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTasks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTasks () As WorkflowTasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTasks ^ GetWorkflowTasks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTasks</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-387">Retourne la collection de <see cref="T:Microsoft.Office.Core.WorkflowTask" /> objets pour le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-387">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTask" /> objects for the specified workbook.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.WorkflowTasks" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTemplates">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTemplates" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTemplates () As WorkflowTemplates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTemplates ^ GetWorkflowTemplates();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2523)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTemplates</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-388">Retourne la collection de <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> objets pour le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-388">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> objects for the specified workbook.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.WorkflowTemplates" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMailer">
      <MemberSignature Language="C#" Value="public bool HasMailer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasMailer" />
      <MemberSignature Language="VB.NET" Value="Public Property HasMailer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasMailer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-389">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-389">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPassword">
      <MemberSignature Language="C#" Value="public bool HasPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPassword { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p184">
            <b>True</b> si le classeur est protégé par un mot de passe. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p184">
              <b>True</b> if the workbook has a protection password. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-392">
            <para>Vous pouvez attribuer un mot de passe à un classeur à l’aide de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-392">
              <para>You can assign a protection password to a workbook by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRoutingSlip">
      <MemberSignature Language="C#" Value="public bool HasRoutingSlip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public Property HasRoutingSlip As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasRoutingSlip { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p185">Cette propriété a la valeur <b>True</b> si le classeur possède un bordereau de routage. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p185">
              <b>True</b> if the workbook has a routing slip. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-395">
            <para>Définir cette propriété sur <b>True</b> crée un bordereau de routage avec les valeurs par défaut. Définition de la propriété sur <b>False</b> supprime le bordereau de routage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-395">
              <para>Setting this property to <b>True</b> creates a routing slip with default values. Setting the property to <b>False</b> deletes the routing slip.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVBProject">
      <MemberSignature Language="C#" Value="public bool HasVBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasVBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVBProject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVBProject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-396">Renvoie un <b>type Boolean</b> qui indique si un classeur possède un attaché Microsoft projet Visual Basic pour Applications.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-396">Returns a <b>Boolean</b> that represents whether a workbook has an attached Microsoft Visual Basic for Applications project.</span>
          </span>
          <span data-ttu-id="afd82-397">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-397">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-398">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-398">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="afd82-399">
            <para>Cette propriété est particulièrement utile par programme pour déterminer si un classeur doit être enregistré dans un format de fichier prenant en charge. Si enregistré dans un autre format, les macros et les projets de code contenus dans le document peuvent être perdues.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-399">
              <para>This property is most useful in programmatically determining whether a workbook needs to be saved into a macro-enabled file format. If saved in another format, macros and code projects contained within the document may be lost.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOnScreen">
      <MemberSignature Language="C#" Value="public bool HighlightChangesOnScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighlightChangesOnScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOnScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property HighlightChangesOnScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighlightChangesOnScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p187">
            <b>True</b> si les modifications dans le classeur en mode partagé sont mises en surbrillance à l’écran. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p187">
              <b>True</b> if changes to the shared workbook are highlighted on-screen. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOptions">
      <MemberSignature Language="C#" Value="public void HighlightChangesOptions (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HighlightChangesOptions([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOptions(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HighlightChangesOptions (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1458)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="afd82-402">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-402">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-403">Les modifications qui sont affichées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-403">The changes that are shown.</span>
          </span>
          <span data-ttu-id="afd82-404">Peut être une des constantes <b>XlHighlightChangesTime</b> suivantes : <b>xlSinceMyLastSave</b>, <b>xlAllChanges</b>ou <b>xlNotYetReviewed</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-404">Can be one of the following <b>XlHighlightChangesTime</b> constants: <b>xlSinceMyLastSave</b>, <b>xlAllChanges</b>, or <b>xlNotYetReviewed</b>.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="afd82-405">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-405">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-406">Les utilisateurs dont les modifications sont affichées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-406">The user or users whose changes are shown.</span>
          </span>
          <span data-ttu-id="afd82-407">Peut être « Tout le monde », « Tout le monde sauf moi » ou le nom de l’un des utilisateurs du classeur partagé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-407">Can be "Everyone", "Everyone but Me", or the name of one of the users of the shared workbook.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="afd82-408">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-408">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-409">Référence de plage de style A1 qui indique la zone où rechercher d'éventuelles modifications.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-409">An A1-style range reference that specifies the area to check for changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-410">Permet d’agir sur l’affichage des modifications effectuées dans un classeur en mode partagé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-410">Controls how changes are shown in a shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLProject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.HTMLProject HTMLProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.HTMLProject HTMLProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HTMLProject As HTMLProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::HTMLProject ^ HTMLProject { Microsoft::Office::Core::HTMLProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.HTMLProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-411">Renvoie le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> objet dans le classeur spécifié, qui représente une branche de projet de niveau supérieur comme dans l’Explorateur de projets dans Microsoft Script Editor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-411">Returns the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> object in the specified workbook, which represents a top-level project branch as in the Project Explorer in the Microsoft Script Editor.</span>
          </span>
          <span data-ttu-id="afd82-412">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-412">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.IconSets IconSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.IconSets IconSets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconSets As IconSets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::IconSets ^ IconSets { Microsoft::Office::Interop::Excel::IconSets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.IconSets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-413">Cette propriété est utilisée pour filtrer les données dans un classeur en fonction d’une icône de cellule à partir de la <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-413">This property is used to filter data in a workbook based on a cell icon from the <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection.</span>
          </span>
          <span data-ttu-id="afd82-414">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-414">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-415">
            <b>IconSets</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-415">
              <b>IconSets</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InactiveListBorderVisible">
      <MemberSignature Language="C#" Value="public bool InactiveListBorderVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InactiveListBorderVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.InactiveListBorderVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property InactiveListBorderVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InactiveListBorderVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p193">Valeur de type <b>Boolean</b> qui spécifie si les bordures de la liste sont visibles lorsqu’une liste n’est pas active. Renvoie la valeur <b>True</b> si la bordure est visible. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p193">A <b>Boolean</b> value that specifies whether list borders are visible when a list is not active. Returns <b>True</b> if the border is visible. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-419">
            <para>Définir cette propriété affecte toutes les listes qui se trouvent sur la feuille de calcul.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-419">
              <para>Setting this property will affect all the lists that are on the worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddin">
      <MemberSignature Language="C#" Value="public bool IsAddin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsAddin" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAddin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddin { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p194">
            <b>True</b> si le classeur s’exécute comme un programme complémentaire. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p194">
              <b>True</b> if the workbook is running as an add-in. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-422">
            <para>Lorsque vous définissez cette propriété sur <b>True</b>, le classeur présente les caractéristiques suivantes :</para>
            <list type="bullet">
              <item>
                <description>vous n’êtes pas invité à enregistrer le classeur si les modifications sont effectuées pendant que le classeur est ouvert.</description>
              </item>
              <item>
                <description>La fenêtre du classeur n’est pas visible.</description>
              </item>
              <item>
                <description>Toutes les macros dans le classeur ne soit visibles dans la boîte de dialogue Macro (affichée en pointant sur Macro dans le menu Outils et en cliquant sur Macros).</description>
              </item>
              <item>
                <description>Macros du classeur peuvent toujours être exécutées à partir de la boîte de dialogue Macro même si elles ne sont pas visibles. En outre, les noms de macro ne doivent être qualifié avec le nom du classeur.</description>
              </item>
              <item>
                <description>Maintenant la touche MAJ enfoncée lorsque vous ouvrez le classeur n’a aucun effet.</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-422">
              <para>When you set this property to <b>True</b>, the workbook has the following characteristics:</para>
              <list type="bullet">
                <item>
                  <description>You won’t be prompted to save the workbook if changes are made while the workbook is open.</description>
                </item>
                <item>
                  <description>The workbook window won’t be visible.</description>
                </item>
                <item>
                  <description>Any macros in the workbook won’t be visible in the Macro dialog box (displayed by pointing to Macro on the Tools menu and clicking Macros).</description>
                </item>
                <item>
                  <description>Macros in the workbook can still be run from the Macro dialog box even though they’re not visible. In addition, macro names don’t need to be qualified with the workbook name.</description>
                </item>
                <item>
                  <description>Holding down the SHIFT key when you open the workbook has no effect.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInplace">
      <MemberSignature Language="C#" Value="public bool IsInplace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInplace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsInplace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInplace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInplace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p195">
            <b>True</b> si le classeur spécifié est modifié dans le programme d’origine. <b>False</b> si le classeur a été ouvert dans Microsoft Excel pour être modifié. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p195">
              <b>True</b> if the specified workbook is being edited in place. <b>False</b> if the workbook has been opened in Microsoft Excel for editing. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepChangeHistory">
      <MemberSignature Language="C#" Value="public bool KeepChangeHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepChangeHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.KeepChangeHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepChangeHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepChangeHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p196">
            <b>True</b> si le suivi des modifications est activé pour le classeur partagé. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p196">
              <b>True</b> if change tracking is enabled for the shared workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="public string Keywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Keywords" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Keywords" />
      <MemberSignature Language="VB.NET" Value="Public Property Keywords As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Keywords { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-428">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-428">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkInfo">
      <MemberSignature Language="C#" Value="public object LinkInfo (string Name, Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, object Type, object EditionRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkInfo([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, [in]object Type, [in]object EditionRef) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkInfo (Name As String, LinkInfo As XlLinkInfo, Optional Type As Object, Optional EditionRef As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="LinkInfo" Type="Microsoft.Office.Interop.Excel.XlLinkInfo" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="EditionRef" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="afd82-429">Valeur <b>String</b> facultative. </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-429">Optional <b>String</b>.</span>
          </span>
        </param>
        <param name="LinkInfo">
          <span data-ttu-id="afd82-430">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-430">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />.</span>
          </span>
          <span data-ttu-id="afd82-431">Type d'information à renvoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-431">The type of information to be returned.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="afd82-432">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-432">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />.</span>
          </span>
          <span data-ttu-id="afd82-433">Le type de liaison à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-433">The type of link to return.</span>
          </span>
        </param>
        <param name="EditionRef">
          <span data-ttu-id="afd82-434">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-434">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-435">Si le lien est une édition, cet argument spécifie la référence de l’édition sous forme de chaîne dans le style R1C1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-435">If the link is an edition, this argument specifies the edition reference as a string in R1C1 style.</span>
          </span>
          <span data-ttu-id="afd82-436">Cet argument est obligatoire s’il existe plusieurs éditeurs ou abonnés portant le même nom dans le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-436">This argument is required if there's more than one publisher or subscriber with the same name in the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-437">Renvoie la date de liaison et l’état de mise à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-437">Returns the link date and update status.</span>
          </span>
          <span data-ttu-id="afd82-438">
            <b>Objet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-438">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkSources">
      <MemberSignature Language="C#" Value="public object LinkSources (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkSources([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkSources (Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="afd82-439">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-439">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          </span>
          <span data-ttu-id="afd82-440">Le type de liaison à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-440">The type of link to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-441">Renvoie un tableau de liaisons dans le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-441">Returns an array of links in the workbook.</span>
          </span>
          <span data-ttu-id="afd82-442">Les noms dans le tableau sont les noms des documents liés, des éditions ou des serveurs DDE ou OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-442">The names in the array are the names of the linked documents, editions, or DDE or OLE servers.</span>
          </span>
          <span data-ttu-id="afd82-443">Renvoie la valeur <b>Empty</b> s’il n’y a aucun lien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-443">Returns <b>Empty</b> if there are no links.</span>
          </span>
          <span data-ttu-id="afd82-444">
            <b>Objet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-444">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="afd82-445">
            <para>Le format du tableau est un tableau unidimensionnel pour tous les types mais éditeur et l’abonné. Les chaînes retournées contiennent le nom de la source de liaison, dans la notation appropriée pour le type de lien. Par exemple, des liens utiliser DDE la « Server | Document ! Élément « syntaxe.</para>
            <para>Pour les liaisons éditeur et abonné, le tableau retourné est à deux dimensions. La première colonne du tableau contient les noms de l’édition et la deuxième colonne contient les références des éditions en tant que texte.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-445">
              <para>The format of the array is a one-dimensional array for all types but publisher and subscriber. The returned strings contain the name of the link source, in the appropriate notation for the link type. For example, DDE links use the "Server|Document!Item" syntax.</para>
              <para>For publisher and subscriber links, the returned array is two-dimensional. The first column of the array contains the names of the edition, and the second column contains the references of the editions as text.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChangesOnNewSheet">
      <MemberSignature Language="C#" Value="public bool ListChangesOnNewSheet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ListChangesOnNewSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ListChangesOnNewSheet" />
      <MemberSignature Language="VB.NET" Value="Public Property ListChangesOnNewSheet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ListChangesOnNewSheet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p203">
            <b>True</b> si les modifications dans le classeur partagé s’affichent dans une feuille de calcul distincte. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p203">
              <b>True</b> if changes to the shared workbook are shown on a separate worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockServerFile">
      <MemberSignature Language="C#" Value="public void LockServerFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockServerFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LockServerFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockServerFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockServerFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2520)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-448">Verrouille le classeur sur le serveur pour en empêcher la modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-448">Locks the workbook on the server to prevent modification.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mailer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Mailer Mailer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Mailer Mailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Mailer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mailer As Mailer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Mailer ^ Mailer { Microsoft::Office::Interop::Excel::Mailer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Mailer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p204">Vous avez demandé de l’aide sur un mot clé Visual Basic utilisé uniquement pour les Macintosh. Pour plus d’informations sur ce mot clé, consultez l’Aide fournie avec l’édition de Microsoft Office pour Macintosh</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p204">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeWorkbook">
      <MemberSignature Language="C#" Value="public void MergeWorkbook (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeWorkbook([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.MergeWorkbook(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeWorkbook (Filename As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeWorkbook(System::Object ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1446)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="afd82-451">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-451">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-452">Nom de fichier du classeur contenant les modifications à fusionner dans le classeur ouvert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-452">The file name of the workbook that contains the changes to be merged into the open workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-453">Fusionne, dans un classeur ouvert, les modifications effectuées dans un autre classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-453">Merges changes from one workbook into an open workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Model Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Model Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As Model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Model ^ Model { Microsoft::Office::Interop::Excel::Model ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Model</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-454">Renvoie le niveau supérieur <see cref="T:Microsoft.Office.Interop.Excel.Model" /> objet qui est l’un modèle de données pour le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-454">Returns the top level <see cref="T:Microsoft.Office.Interop.Excel.Model" /> object which is the one Data Model for the workbook.</span>
          </span>
          <span data-ttu-id="afd82-455">Lecture seule</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-455">Read-only</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Modules { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-456">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-456">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiUserEditing">
      <MemberSignature Language="C#" Value="public bool MultiUserEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiUserEditing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiUserEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiUserEditing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p207">
            <b>True</b> si le classeur est ouvert en tant que liste partagée. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p207">
              <b>True</b> if the workbook is open as a shared list. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-459">
            <para>Pour enregistrer un classeur en tant que liste partagée, utilisez la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode. Pour basculer le classeur du mode partagé au mode exclusif, utilisez la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" /> méthode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-459">
              <para>To save a workbook as a shared list, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method. To switch the workbook from shared mode to exclusive mode, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p208">Renvoie le nom de l'objet. En lecture seule <b>chaîne</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p208">Returns the name of the object. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-462">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection qui représente tous les noms du classeur spécifié (y compris tous les noms de feuille de calcul spécifique).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-462">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the specified workbook (including all worksheet-specific names).</span>
          </span>
          <span data-ttu-id="afd82-463">Objet <b>Names</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-463">Read-only <b>Names</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window NewWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Window NewWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewWindow () As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Window ^ NewWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-464">Crée une nouvelle fenêtre ou une copie de la fenêtre spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-464">Creates a new window or a copy of the specified window.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSave">
      <MemberSignature Language="C#" Value="public string OnSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSave" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSave As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSave { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-465">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-465">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-466">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-466">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-467">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-467">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenLinks">
      <MemberSignature Language="C#" Value="public void OpenLinks (string Name, object ReadOnly, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenLinks([in]string Name, [in]object ReadOnly, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.OpenLinks(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenLinks (Name As String, Optional ReadOnly As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="afd82-468">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-468">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-469">Le nom de la liaison Microsoft Excel ou DDE/OLE renvoyé à partir de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-469">The name of the Microsoft Excel or DDE/OLE link, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="ReadOnly">
          <span data-ttu-id="afd82-470">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-470">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-471">
            <b>True</b> pour ouvrir des documents en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-471">
              <b>True</b> to open documents as read-only.</span>
          </span>
          <span data-ttu-id="afd82-472">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-472">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="afd82-473">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-473">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          </span>
          <span data-ttu-id="afd82-474">Type de la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-474">The link type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-475">Ouvre les documents source d’une ou plusieurs liaisons.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-475">Opens the supporting documents for a link or links.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p213">Renvoie l'objet parent de l'objet spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p213">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p214">Renvoie ou définit le mot de passe qui doit être fourni pour ouvrir le classeur spécifié. Type de données <b>String</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p214">Returns or sets the password that must be supplied to open the specified workbook. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-480">
            <para>Utilisez des mots de passe forts combinant des majuscules et minuscules, nombres et des symboles. Mots de passe faibles ne combinent pas ces éléments. Mot de passe fort : Y6dh ! et5. Mot de passe faible : House27. Utilisez un mot de passe fort dont vous pouvez vous souvenir afin que vous n’êtes pas obligé d’écrire.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-480">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p215">Renvoie une valeur de type <b>String</b> indiquant l’algorithme que Microsoft Excel utilise pour chiffrer les mots de passe du classeur spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p215">Returns a <b>String</b> indicating the algorithm Microsoft Excel uses to encrypt passwords for the specified workbook. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-483">
            <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> méthode pour indiquer si Excel chiffre les propriétés de fichier pour des classeurs protégés par mot de passe.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-483">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for password-protected workbooks.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionFileProperties">
      <MemberSignature Language="C#" Value="public bool PasswordEncryptionFileProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PasswordEncryptionFileProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionFileProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionFileProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PasswordEncryptionFileProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p216">
            <b>True</b> si Microsoft Excel chiffre les propriétés de fichier du classeur spécifié et protégé par un mot de passe. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p216">
              <b>True</b> if Microsoft Excel encrypts file properties for the specified password-protected workbook. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-486">
            <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> méthode pour indiquer si Excel chiffre les propriétés de fichier pour le classeur spécifié protégé par mot de passe.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-486">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionKeyLength">
      <MemberSignature Language="C#" Value="public int PasswordEncryptionKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordEncryptionKeyLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PasswordEncryptionKeyLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-487">Renvoie un <b>entier</b> indiquant la longueur de clé de l’algorithme que Microsoft Excel utilise pour chiffrer les mots de passe pour le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-487">Returns an <b>Integer</b> indicating the key length of the algorithm Microsoft Excel uses when encrypting passwords for the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-488">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-488">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-489">
            <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> méthode pour indiquer si Excel chiffre les propriétés de fichier pour le classeur spécifié protégé par mot de passe.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-489">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionProvider">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionProvider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p218">Renvoie une valeur de type <b>String</b> indiquant le nom du fournisseur de chiffrement relatif à l’algorithme que Microsoft Excel utilise pour chiffrer les mots de passe du classeur spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p218">Returns a <b>String</b> specifying the name of the algorithm encryption provider that Microsoft Excel uses when encrypting passwords for the specified workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-492">
            <b>Chaîne</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-492">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-493">Renvoie le chemin d’accès complet à l’application, à l’exclusion du séparateur final et du nom de l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-493">Returns the complete path to the application, excluding the final separator and name of the application.</span>
          </span>
          <span data-ttu-id="afd82-494">Valeur <b>String</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-494">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Permission">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Permission Permission { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Permission Permission" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Permission" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Permission As Permission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Permission ^ Permission { Microsoft::Office::Core::Permission ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Permission</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-495">Renvoie un <see cref="T:Microsoft.Office.Core.Permission" /> object qui représente les paramètres d’autorisation dans le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-495">Returns a <see cref="T:Microsoft.Office.Core.Permission" /> object that represents the permission settings in the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewListSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewListSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewListSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewListSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewListSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewListSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p220">
            <b>True</b> si les paramètres de filtre et de tri font partie de la vue personnelle du classeur partagé définie par l’utilisateur. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p220">
              <b>True</b> if filter and sort settings for lists are included in the user's personal view of the shared workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewPrintSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewPrintSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewPrintSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewPrintSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewPrintSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewPrintSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p221">
            <b>True</b> si les paramètres d’impression font partie de la vue personnelle du classeur partagé définie par l’utilisateur. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p221">
              <b>True</b> if print settings are included in the user's personal view of the shared workbook. Read-write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCaches PivotCaches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotCaches PivotCaches() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotCaches" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotCaches () As PivotCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::PivotCaches ^ PivotCaches();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCaches</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-500">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection qui représente le tableau croisé dynamique met en cache dans le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-500">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection that represents all the PivotTable caches in the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-501">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-501">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTables As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PivotTables { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-502">Renvoie un object qui représente une collection de l’objet PivotTable les rapports sur une feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-502">Returns an object that represents a collection of all the PivotTable reports on a worksheet.</span>
          </span>
          <span data-ttu-id="afd82-503">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-503">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public void PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">To be added.</param>
        <param name="SourceData">To be added.</param>
        <param name="TableDestination">To be added.</param>
        <param name="TableName">To be added.</param>
        <param name="RowGrand">To be added.</param>
        <param name="ColumnGrand">To be added.</param>
        <param name="SaveData">To be added.</param>
        <param name="HasAutoFormat">To be added.</param>
        <param name="AutoPage">To be added.</param>
        <param name="Reserved">To be added.</param>
        <param name="BackgroundQuery">To be added.</param>
        <param name="OptimizeCache">To be added.</param>
        <param name="PageFieldOrder">To be added.</param>
        <param name="PageFieldWrapCount">To be added.</param>
        <param name="ReadData">To be added.</param>
        <param name="Connection">To be added.</param>
        <summary>
          <span data-ttu-id="afd82-504">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-504">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (object DestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Post([in]object DestName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Post(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (Optional DestName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DestName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="DestName">
          <span data-ttu-id="afd82-505">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-505">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-506">Argument ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-506">This argument is ignored.</span>
          </span>
          <span data-ttu-id="afd82-507">La méthode <b>Post</b> invite l’utilisateur à spécifier la destination pour le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-507">The <b>Post</b> method prompts the user to specify the destination for the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-p225">Envoie le classeur spécifié dans un dossier public. Cette méthode ne fonctionne qu’avec un client Microsoft Exchange connecté à un serveur Microsoft Exchange.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p225">Posts the specified workbook to a public folder. This method works only with a Microsoft Exchange client connected to a Microsoft Exchange server.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecisionAsDisplayed">
      <MemberSignature Language="C#" Value="public bool PrecisionAsDisplayed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrecisionAsDisplayed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PrecisionAsDisplayed" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecisionAsDisplayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrecisionAsDisplayed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p226">
            <b>True</b> si les calculs réalisés dans ce classeur utiliseront uniquement la précision des nombres tels qu’ils sont affichés. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p226">
              <b>True</b> if calculations in this workbook will be done using only the precision of the numbers as they’re displayed. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="afd82-512">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-512">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-513">Le numéro de la page à laquelle commence l’impression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-513">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="afd82-514">Si cet argument est omis, l’impression commence au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-514">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="afd82-515">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-515">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-516">Le numéro de la dernière page à imprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-516">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="afd82-517">Si cet argument est omis, l’impression se termine par la dernière page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-517">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="afd82-518">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-518">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-519">Le nombre de copies à imprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-519">The number of copies to print.</span>
          </span>
          <span data-ttu-id="afd82-520">Si cet argument est omis, une seule copie est imprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-520">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="afd82-521">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-521">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-522">
            <b>True</b> pour que Microsoft Excel affiche un aperçu avant impression de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-522">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="afd82-523">
            <b>False</b> (ou omis) pour imprimer l’objet immédiatement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-523">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="afd82-524">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-524">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-525">Définit le nom de l'imprimante active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-525">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="afd82-526">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-526">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-527">
            <b>True</b> pour imprimer dans un fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-527">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="afd82-528">Si <paramref name="PrToFileName" /> n’est pas spécifié, Microsoft Excel invite l’utilisateur à entrer le nom du fichier de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-528">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="afd82-529">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-529">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-530">
            <b>True</b> pour assembler plusieurs copies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-530">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="afd82-531">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-531">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-532">Si <paramref name="PrintToFile" /> est définie sur <b>True</b>, cet argument spécifie le nom du fichier que vous souhaitez effectuer l’impression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-532">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-533">Imprime l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-533">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-534">
            <para>« Pages » dans les descriptions de <paramref name="From" /> et <paramref name="To" /> fait référence aux pages imprimées, pas toutes les pages de la feuille ou du classeur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-534">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="afd82-535">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-535">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="afd82-536">Permet la modification de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-536">Enables changes to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-537">Cette méthode affiche un aperçu de l'objet tel qu'il apparaîtra une fois imprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-537">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="afd82-538">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-538">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-539">Chaîne qui spécifie un mot de passe qui respecte la casse pour la feuille de calcul ou du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-539">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="afd82-540">Si cet argument est omis, vous pouvez ôter la protection de la feuille de calcul ou du classeur sans l’aide d’un mot de passe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-540">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="afd82-541">Dans le cas contraire, vous devez spécifier le mot de passe pour ôter la protection de la feuille de calcul ou du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-541">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="afd82-542">Si vous oubliez le mot de passe, vous ne pouvez pas ôter la protection de la feuille de calcul ou du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-542">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="afd82-543">Il est conseillé de conserver une liste de vos mots de passe et les noms de documents correspondants dans un endroit sûr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-543">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="Structure">
          <span data-ttu-id="afd82-544">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-544">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-545">
            <b>True</b> pour protéger la structure du classeur (position relative des feuilles).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-545">
              <b>True</b> to protect the structure of the workbook (the relative position of the sheets).</span>
          </span>
          <span data-ttu-id="afd82-546">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-546">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Windows">
          <span data-ttu-id="afd82-547">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-547">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-548">
            <b>True</b> pour protéger les fenêtres du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-548">
              <b>True</b> to protect the workbook windows.</span>
          </span>
          <span data-ttu-id="afd82-549">Si cet argument est omis, les fenêtres ne sont pas protégées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-549">If this argument is omitted, the windows aren’t protected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-550">Cette méthode protège un classeur de sorte qu'il ne puisse pas être modifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-550">Protects a workbook so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharing">
      <MemberSignature Language="C#" Value="public void ProtectSharing (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharing([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharing (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="afd82-551">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-551">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-552">Chaîne indiquant le nom du fichier enregistré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-552">A string indicating the name of the saved file.</span>
          </span>
          <span data-ttu-id="afd82-553">Vous pouvez inclure un chemin d’accès complet ; Si vous n’avez pas, Microsoft Excel enregistre le fichier dans le dossier actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-553">You can include a full path; if you don’t, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="afd82-554">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-554">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-555">Chaîne qui respecte la casse indiquant le mot de passe de protection à donner au fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-555">A case-sensitive string indicating the protection password to be given to the file.</span>
          </span>
          <span data-ttu-id="afd82-556">Doit être pas plus de 15 caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-556">Should be no longer than 15 characters.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="afd82-557">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-557">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-558">Chaîne indiquant le mot de passe de réservation d’écriture pour ce fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-558">A string indicating the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="afd82-559">Si un fichier est enregistré avec le mot de passe et le mot de passe n’est pas fourni lors de l’ouverture du fichier, le fichier est ouvert en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-559">If a file is saved with the password and the password isn’t supplied when the file is opened, the file is opened read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="afd82-560">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-560">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-561">
            <b>True</b> pour afficher un message lorsque le fichier est ouvert, conseillant de l’ouvrir en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-561">
              <b>True</b> to display a message when the file is opened recommending that the file be opened read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="afd82-562">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-562">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-563">
            <b>True</b> pour créer un fichier de sauvegarde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-563">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="SharingPassword">
          <span data-ttu-id="afd82-564">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-564">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-565">Chaîne indiquant le mot de passe à utiliser pour protéger le fichier contre le partage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-565">A string indicating the password to be used to protect the file for sharing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-566">Enregistre le classeur et le protège contre le partage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-566">Saves the workbook and protects it for sharing.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-567">
            <para>Utilisez des mots de passe forts combinant des majuscules et minuscules, nombres et des symboles. Mots de passe faibles ne combinent pas ces éléments. Mot de passe fort : Y6dh ! et5. Mot de passe faible : House27. Utilisez un mot de passe fort dont vous pouvez vous souvenir afin que vous n’êtes pas obligé d’écrire.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-567">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharingEx">
      <MemberSignature Language="C#" Value="public void ProtectSharingEx (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword, object FileFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharingEx([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword, [in]object FileFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharingEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharingEx (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object, Optional FileFormat As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="SharingPassword">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <summary>
          <span data-ttu-id="afd82-568">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-568">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectStructure">
      <MemberSignature Language="C#" Value="public bool ProtectStructure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectStructure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectStructure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectStructure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectStructure { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p244">
            <b>True</b> si l’ordre des pages dans le classeur est protégé. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p244">
              <b>True</b> if the order of the sheets in the workbook is protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectWindows">
      <MemberSignature Language="C#" Value="public bool ProtectWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectWindows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectWindows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p245">
            <b>True</b> si les fenêtres du classeur sont protégées. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p245">
              <b>True</b> if the windows of the workbook are protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PublishObjects PublishObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PublishObjects PublishObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PublishObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublishObjects As PublishObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PublishObjects ^ PublishObjects { Microsoft::Office::Interop::Excel::PublishObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PublishObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-573">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-573">Returns the <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> collection.</span>
          </span>
          <span data-ttu-id="afd82-574">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-574">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeChangeHistoryNow">
      <MemberSignature Language="C#" Value="public void PurgeChangeHistoryNow (int Days, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PurgeChangeHistoryNow([in]int32 Days, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PurgeChangeHistoryNow(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PurgeChangeHistoryNow (Days As Integer, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Days" Type="System.Int32" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Days">
          <span data-ttu-id="afd82-575">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-575">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="afd82-576">Nombre de jours pour lesquels des modifications dans le journal de suivi des modifications sont à conserver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-576">The number of days that changes in the change log are to be retained.</span>
          </span>
        </param>
        <param name="SharingPassword">
          <span data-ttu-id="afd82-577">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-577">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-578">Le mot de passe qui ôte la protection du classeur pour le partage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-578">The password that unprotects the workbook for sharing.</span>
          </span>
          <span data-ttu-id="afd82-579">Si le classeur est protégé contre le partage avec un mot de passe et cet argument est omis, l’utilisateur soit invité à entrer le mot de passe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-579">If the workbook is protected for sharing with a password and this argument is omitted, the user is prompted for the password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-580">Supprime des entrées du journal de suivi des modifications du classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-580">Removes entries from the change log for the specified workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p249">
            <b>True</b> si l’objet a été ouvert en lecture seule. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p249">Returns <b>True</b> if the object has been opened as read-only. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-583">
            <para>Cette propriété est utilisée uniquement pour les listes liées à un site SharePoint.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-583">
              <para>This property is used only for lists that are linked to a SharePoint site.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool ReadOnlyRecommended { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyRecommended { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p250">
            <b>True</b> si le classeur a été enregistré en lecture seule recommandée. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p250">
              <b>True</b> if the workbook was saved as read-only recommended. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-586">
            <para>Lorsque vous ouvrez un classeur qui a été enregistré en lecture seule recommandée, Microsoft Excel affiche un message vous conseillant d’ouvrir le classeur en lecture seule.</para>
            <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode modifier cette propriété.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-586">
              <para>When you open a workbook that was saved as read-only recommended, Microsoft Excel displays a message recommending that you open the workbook as read-only.</para>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to change this property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecheckSmartTags">
      <MemberSignature Language="C#" Value="public void RecheckSmartTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecheckSmartTags() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RecheckSmartTags" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecheckSmartTags ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RecheckSmartTags();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-587">Entraîne une vérification de balise active de premier plan se produise, annotant automatiquement les données ne étaient pas encore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-587">Causes a foreground smart tag check to occur, automatically annotating data that was not annotated before.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshAll">
      <MemberSignature Language="C#" Value="public void RefreshAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RefreshAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1452)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-588">Cette méthode actualise toutes les plages de données externes et les rapports de tableau croisé dynamique du classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-588">Refreshes all external data ranges and PivotTable reports in the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-589">
            <para>Les objets dont la <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" /> propriété la valeur <b>True</b> sont actualisés en arrière-plan.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-589">
              <para>Objects that have the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" /> property set to <b>True</b> are refreshed in the background.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectAllChanges">
      <MemberSignature Language="C#" Value="public void RejectAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RejectAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RejectAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1467)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="afd82-590">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-590">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-591">Indique le moment où toutes les modifications sont refusées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-591">Specifies when all the changes are rejected.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="afd82-592">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-592">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-593">Identifie la personne qui refuse toutes les modifications.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-593">Specifies by whom all the changes are rejected.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="afd82-594">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-594">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-595">Indique l'emplacement où toutes les modifications sont refusées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-595">Specifies where all the changes are rejected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-596">Interdit toutes les modifications apportées au classeur partagé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-596">Rejects all changes in the specified shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadAs">
      <MemberSignature Language="C#" Value="public void ReloadAs (Microsoft.Office.Core.MsoEncoding Encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReloadAs([in]valuetype Microsoft.Office.Core.MsoEncoding Encoding) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReloadAs(Microsoft.Office.Core.MsoEncoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadAs (Encoding As MsoEncoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadAs(Microsoft::Office::Core::MsoEncoding Encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1821)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Encoding" Type="Microsoft.Office.Core.MsoEncoding" />
      </Parameters>
      <Docs>
        <param name="Encoding">
          <span data-ttu-id="afd82-597">Requis <see cref="T:Microsoft.Office.Core.MsoEncoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-597">Required <see cref="T:Microsoft.Office.Core.MsoEncoding" />.</span>
          </span>
          <span data-ttu-id="afd82-598">Codage à appliquer au classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-598">The encoding that is to be applied to the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-599">Recharge un classeur en fonction d’un document HTML, à l’aide du type d’encodage de document spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-599">Reloads a workbook based on an HTML document, using the specified document encoding.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-600">
            <para>Seules les constantes <b>msoEncoding</b> applicable au format HTML fonctionnent avec la méthode <b>ReloadAs</b> .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-600">
              <para>Only <b>msoEncoding</b> constants that are applicable to HTML work with the <b>ReloadAs</b> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDocumentInformation">
      <MemberSignature Language="C#" Value="public void RemoveDocumentInformation (Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDocumentInformation([in]valuetype Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveDocumentInformation(Microsoft.Office.Interop.Excel.XlRemoveDocInfoType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDocumentInformation (RemoveDocInfoType As XlRemoveDocInfoType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDocumentInformation(Microsoft::Office::Interop::Excel::XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RemoveDocInfoType" Type="Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" />
      </Parameters>
      <Docs>
        <param name="RemoveDocInfoType">
          <span data-ttu-id="afd82-601">Parmi les <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> valeurs indiquant le type d’informations à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-601">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> values indicating the type of information to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-602">Supprime du classeur toutes les informations du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-602">Removes all information of the specified type from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePersonalInformation">
      <MemberSignature Language="C#" Value="public bool RemovePersonalInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemovePersonalInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RemovePersonalInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property RemovePersonalInformation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemovePersonalInformation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p255">
            <b>True</b> si des informations personnelles peuvent être supprimées du classeur spécifié. La valeur par défaut est <b>False</b>. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p255">
              <b>True</b> if personal information can be removed from the specified workbook. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUser">
      <MemberSignature Language="C#" Value="public void RemoveUser (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUser([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveUser(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveUser (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveUser(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1453)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="afd82-606">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-606">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="afd82-607">Index de l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-607">The user index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-608">Déconnecte l’utilisateur spécifié du classeur partagé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-608">Disconnects the specified user from the shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public void Reply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(977)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p257">Vous avez demandé de l’aide sur un mot clé Visual Basic utilisé uniquement pour les Macintosh. Pour plus d’informations sur ce mot clé, consultez l’Aide fournie avec l’édition de Microsoft Office pour Macintosh</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p257">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyAll">
      <MemberSignature Language="C#" Value="public void ReplyAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplyAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(978)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p258">Vous avez demandé de l’aide sur un mot clé Visual Basic utilisé uniquement pour les Macintosh. Pour plus d’informations sur ce mot clé, consultez l’Aide fournie avec l’édition de Microsoft Office pour Macintosh</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p258">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyWithChanges">
      <MemberSignature Language="C#" Value="public void ReplyWithChanges (object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyWithChanges([in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyWithChanges(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyWithChanges (Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ShowMessage">
          <span data-ttu-id="afd82-613">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-613">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-614">
            <b>False</b> n’affiche pas le message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-614">
              <b>False</b> does not display the message.</span>
          </span>
          <span data-ttu-id="afd82-615">
            <b>True :</b> affiche le message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-615">
              <b>True</b> displays the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-616">Envoie un message électronique à l’auteur d’un classeur envoyé pour être révisé, lui notifiant que la révision du classeur a été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-616">Sends an e-mail message to the author of a workbook that has been sent out for review, notifying them that a reviewer has completed review of the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-617">
            <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> méthode pour démarrer une révision collaborative d’un classeur. Si la méthode <b>ReplyWithChanges</b> est exécutée sur un classeur qui ne fait pas partie d’un cycle de révision collaborative, l’utilisateur reçoit une erreur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-617">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method to start a collaborative review of a workbook. If the <b>ReplyWithChanges</b> method is executed on a workbook that is not part of a collaborative review cycle, the user will receive an error.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Research">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Research Research { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Research Research" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Research" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Research As Research" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Research ^ Research { Microsoft::Office::Interop::Excel::Research ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Research</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-618">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Research" /> object qui représente le service de recherche d’un classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-618">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Research" /> object that represents the research service for a workbook.</span>
          </span>
          <span data-ttu-id="afd82-619">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-619">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-620">
            <b>Research</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-620">
              <b>Research</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetColors">
      <MemberSignature Language="C#" Value="public void ResetColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetColors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ResetColors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetColors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetColors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1468)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-621">Réinitialise la palette de couleurs aux couleurs par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-621">Resets the color palette to the default colors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevisionNumber">
      <MemberSignature Language="C#" Value="public int RevisionNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RevisionNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RevisionNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RevisionNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RevisionNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-622">Renvoie le nombre de fois que le classeur a été enregistré pendant l’ouverture en tant que liste partagée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-622">Returns the number of times the workbook has been saved while open as a shared list.</span>
          </span>
          <span data-ttu-id="afd82-623">Si le classeur est ouvert en mode exclusif, cette propriété renvoie la valeur 0 (zéro).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-623">If the workbook is open in exclusive mode, this property returns 0 (zero).</span>
          </span>
          <span data-ttu-id="afd82-624">Valeur <b>Integer</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-624">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-625">
            <para>La propriété <b>RevisionNumber</b> est mise à jour uniquement lorsque la copie locale du classeur est enregistrée, pas lorsque des copies distantes sont enregistrés.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-625">
              <para>The <b>RevisionNumber</b> property is updated only when the local copy of the workbook is saved, not when remote copies are saved.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Route">
      <MemberSignature Language="C#" Value="public void Route ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Route() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Route" />
      <MemberSignature Language="VB.NET" Value="Public Sub Route ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Route();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-626">Cette méthode route le classeur à l'aide du bordereau de routage en cours du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-626">Routes the workbook, using the workbook's current routing slip.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-627">
            <para>Routage d’un classeur affecte la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" /> propriété la <b>valeur True</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-627">
              <para>Routing a workbook sets the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" /> property to <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Routed">
      <MemberSignature Language="C#" Value="public bool Routed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Routed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Routed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Routed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Routed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p262">Cette propriété a la valeur <b>True</b> si le classeur a été routé au destinataire suivant et la valeur <b>False</b> si le classeur doit être routé. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p262">
              <b>True</b> if the workbook has been routed to the next recipient. <b>False</b> if the workbook needs to be routed. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-631">
            <para>Si le classeur n’a pas été routé au destinataire actif, cette propriété est toujours <b>False</b> (par exemple, si le document ne possède pas de bordereau de routage ou si un bordereau de routage vient d’être créé).</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-631">
              <para>If the workbook wasn't routed to the current recipient, this property is always <b>False</b> (for example, if the document has no routing slip, or if a routing slip was just created).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingSlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoutingSlip As RoutingSlip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RoutingSlip ^ RoutingSlip { Microsoft::Office::Interop::Excel::RoutingSlip ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RoutingSlip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-632">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> object qui représente le bordereau de routage pour le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-632">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> object that represents the routing slip for the workbook.</span>
          </span>
          <span data-ttu-id="afd82-633">Lecture s’il n’existe pas de bordereau de routage de cette propriété génère une erreur (vérifier la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> propriété premier).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-633">Reading this property if there's no routing slip causes an error (check the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> property first).</span>
          </span>
          <span data-ttu-id="afd82-634">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-634">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAutoMacros">
      <MemberSignature Language="C#" Value="public void RunAutoMacros (Microsoft.Office.Interop.Excel.XlRunAutoMacro Which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunAutoMacros([in]valuetype Microsoft.Office.Interop.Excel.XlRunAutoMacro Which) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunAutoMacros (Which As XlRunAutoMacro)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunAutoMacros(Microsoft::Office::Interop::Excel::XlRunAutoMacro Which);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(634)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Which" Type="Microsoft.Office.Interop.Excel.XlRunAutoMacro" />
      </Parameters>
      <Docs>
        <param name="Which">
          <span data-ttu-id="afd82-635">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-635">Required <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-636">Exécute la macro Auto_Open, Auto_Close, Auto_Activate ou Auto_Deactivate attachée au classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-636">Runs the Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro attached to the workbook.</span>
          </span>
          <span data-ttu-id="afd82-637">Cette méthode est fournie pour la compatibilité descendante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-637">This method is included for backward compatibility.</span>
          </span>
          <span data-ttu-id="afd82-638">Vous devez utiliser l’ouvrir, fermer, activer et désactiver des événements au lieu de ces macros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-638">You should use the Open, Close, Activate and Deactivate events instead of these macros.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-639">Cette méthode enregistre les modifications apportées au classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-639">Saves changes to the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-640">
            <para>Pour ouvrir un fichier classeur, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode.</para>
            <para>Pour marquer le classeur comme enregistré, sans l’enregistrer sur un disque, définissez sa <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> propriété la <b>valeur True</b>.</para>
            <para>La première fois que vous enregistrez un classeur, utilisez la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode pour spécifier un nom pour le fichier.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-640">
              <para>To open a workbook file, use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</para>
              <para>To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property to <b>True</b>.</para>
              <para>The first time you save a workbook, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to specify a name for the file.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="afd82-641">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-641">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-642">Chaîne qui indique le nom du fichier à enregistrer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-642">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="afd82-643">Vous pouvez inclure un chemin d’accès complet ; Si vous n’avez pas, Microsoft Excel enregistre le fichier dans le dossier actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-643">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="afd82-644">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-644">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-645">Le format de fichier à utiliser lorsque vous enregistrez le fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-645">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="afd82-646">Pour obtenir la liste de choix, voir la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-646">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="afd82-647">Pour un fichier existant, le format par défaut est le dernier format de fichier spécifié ; pour un nouveau fichier, la valeur par défaut est le format de la version d’Excel utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-647">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="afd82-648">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-648">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-649">Chaîne qui respecte la casse (maximum 15 caractères) et indique le mot de passe de protection à donner au fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-649">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="afd82-650">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-650">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-651">Chaîne qui indique le mot de passe de réservation d’écriture pour ce fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-651">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="afd82-652">Si un fichier est enregistré avec le mot de passe et le mot de passe n’est pas fourni lors de l’ouverture du fichier, le fichier est ouvert en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-652">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="afd82-653">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-653">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-654">
            <b>True</b> pour afficher un message lorsque le fichier est ouvert, conseillant de l’ouvrir en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-654">
              <b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="afd82-655">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-655">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-656">
            <b>True</b> pour créer un fichier de sauvegarde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-656">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AccessMode">
          <span data-ttu-id="afd82-657">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-657">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />.</span>
          </span>
        </param>
        <param name="ConflictResolution">
          <span data-ttu-id="afd82-658">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="afd82-659">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-659">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-660">
            <b>True</b> pour ajouter ce classeur à la liste des derniers fichiers utilisés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-660">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="afd82-661">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-661">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="afd82-662">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-662">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-663">Non utilisé dans la version française de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-663">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="afd82-664">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-664">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-665">Non utilisé dans la version française de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-665">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="afd82-666">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-666">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-667">
            <b>True</b> enregistre les fichiers en fonction de la langue de Microsoft Excel (y compris les paramètres du Panneau de configuration).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-667">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="afd82-668">
            <b>False</b> (valeur par défaut) enregistre les fichiers par rapport à la langue de Visual Basic pour Applications (VBA) (qui est généralement l’anglais (États-Unis), sauf si le projet VBA où Workbooks.Open est exécuté est un ancien projet VBA XL5/95).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-668">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-669">Enregistre les modifications apportées au classeur dans un autre fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-669">Saves changes to the workbook in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsXMLData">
      <MemberSignature Language="C#" Value="public void SaveAsXMLData (string Filename, Microsoft.Office.Interop.Excel.XmlMap Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsXMLData([in]string Filename, [in]class Microsoft.Office.Interop.Excel.XmlMap Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsXMLData (Filename As String, Map As XmlMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsXMLData(System::String ^ Filename, Microsoft::Office::Interop::Excel::XmlMap ^ Map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2278)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="afd82-670">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-670">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-671">Chaîne qui indique le nom du fichier à enregistrer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-671">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="afd82-672">Vous pouvez inclure un chemin d’accès complet ; Si vous n’avez pas, Microsoft Excel enregistre le fichier dans le dossier actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-672">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="afd82-673">Requis <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-673">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="afd82-674">Mappage de schéma à appliquer aux données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-674">The schema map to apply to the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-675">Exporte les données qui ont été mappées au mappage de schéma XML spécifié dans un fichier de données XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-675">Exports the data that has been mapped to the specified XML schema map to an XML data file.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-676">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para>Cette méthode provoquera une erreur d’exécution si Excel ne peut pas exporter les données avec le mappage de schéma spécifié. Pour vérifier si Excel peut utiliser le mappage de schéma spécifié pour exporter des données, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" /> propriété.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-676">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>This method will result in a run-time error if Excel cannot export data with the specified schema map. To check whether Excel can use the specified schema map to export data, use the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCopyAs">
      <MemberSignature Language="C#" Value="public void SaveCopyAs (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCopyAs([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveCopyAs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveCopyAs (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="afd82-677">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-677">Required.</span>
          </span>
          <span data-ttu-id="afd82-678">Spécifie le nom de fichier de la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-678">Specifies the file name for the copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-679">Cette méthode enregistre une copie du classeur dans un fichier sans modifier le classeur ouvert en mémoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-679">Saves a copy of the workbook to a file but doesn't modify the open workbook in memory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Saved">
      <MemberSignature Language="C#" Value="public bool Saved { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Saved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Saved" />
      <MemberSignature Language="VB.NET" Value="Public Property Saved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Saved { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p278">
            <b>True</b> si le classeur spécifié n’a pas été modifié depuis son dernier enregistrement. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p278">
              <b>True</b> if no changes have been made to the specified workbook since it was last saved. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-682">
            <para>Si un classeur n’a jamais été enregistré, sa <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> propriété renvoie une chaîne vide (« »).</para>
            <para>Vous pouvez définir cette propriété sur <b>True</b> si vous voulez fermer un classeur modifié sans l’enregistrer ni être invité à enregistrer les it.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-682">
              <para>If a workbook has never been saved, its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property returns an empty string ("").</para>
              <para>You can set this property to <b>True</b> if you want to close a modified workbook without either saving it or being prompted to save it.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLinkValues">
      <MemberSignature Language="C#" Value="public bool SaveLinkValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveLinkValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SaveLinkValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveLinkValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveLinkValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p279">
            <b>True</b> si Microsoft Excel enregistre les valeurs des liaisons externes avec le classeur. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p279">
              <b>True</b> if Microsoft Excel saves external link values with the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="sblt">
      <MemberSignature Language="C#" Value="public void sblt (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void sblt([in]string s) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.sblt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub sblt (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void sblt(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>
          <span data-ttu-id="afd82-685">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-685">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendFaxOverInternet">
      <MemberSignature Language="C#" Value="public void SendFaxOverInternet (object Recipients, object Subject, object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendFaxOverInternet([in]object Recipients, [in]object Subject, [in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendFaxOverInternet(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendFaxOverInternet (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="afd82-686">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-686">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-687">Une chaîne qui représente les numéros de télécopie et les adresses de messagerie des personnes auxquelles la télécopie est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-687">A string that represents the fax numbers and e-mail addresses of the people to whom the fax will be sent.</span>
          </span>
          <span data-ttu-id="afd82-688">Séparez les destinataires par un point-virgule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-688">Separate multiple recipients with a semicolon.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="afd82-689">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-689">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-690">Chaîne qui représente la ligne objet du document télécopié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-690">A string that represents the subject line for the faxed document.</span>
          </span>
        </param>
        <param name="ShowMessage">
          <span data-ttu-id="afd82-691">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-691">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-692">
            <b>True :</b> affiche le message de télécopie avant de l'envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-692">
              <b>True</b> displays the fax message before sending it.</span>
          </span>
          <span data-ttu-id="afd82-693">
            <b>False</b> envoie la télécopie sans afficher le message de télécopie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-693">
              <b>False</b> sends the fax without displaying the fax message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-694">Envoie une feuille de calcul sous forme de télécopie aux destinataires spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-694">Sends a worksheet as a fax to the specified recipients.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-695">
            <para>L’utilisation de la méthode <b>SendFaxOverInternet</b> nécessite que le service de télécopie est activé sur l’ordinateur d’un utilisateur.</para>
            <para>Le format utilisé pour spécifier des numéros de télécopie dans le <paramref name="Recipients" /> paramètre est soit <paramref name="recipientsfaxnumber@usersfaxprovider" /> ou <paramref name="recipientsname@recipientsfaxnumber" />. Pour obtenir des informations de fournisseur de télécopie de l’utilisateur à l’aide de l’emplacement de Registre suivant :</para>
            <para>HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</para>
            <para>Utilisez la valeur de la clé FaxAddress au niveau de ce chemin d’accès du Registre pour déterminer le format à utiliser pour un destinataire.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-695">
              <para>Using the <b>SendFaxOverInternet</b> method requires that the fax service is enabled on a user's computer.</para>
              <para>The format used for specifying fax numbers in the <paramref name="Recipients" /> parameter is either <paramref name="recipientsfaxnumber@usersfaxprovider" /> or <paramref name="recipientsname@recipientsfaxnumber" />. You can access the user's fax provider information using the following registry path:</para>
              <para>HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</para>
              <para>Use the value of the FaxAddress key at this registry path to determine the format to use for a recipient.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendForReview">
      <MemberSignature Language="C#" Value="public void SendForReview (object Recipients, object Subject, object ShowMessage, object IncludeAttachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendForReview([in]object Recipients, [in]object Subject, [in]object ShowMessage, [in]object IncludeAttachment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendForReview (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object, Optional IncludeAttachment As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
        <Parameter Name="IncludeAttachment" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="afd82-696">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-696">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-697">Chaîne qui répertorie les personnes auxquelles envoyer le message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-697">A string that lists the people to whom to send the message.</span>
          </span>
          <span data-ttu-id="afd82-698">Il peut s'agir d'alias dans un annuaire électronique ou adresse de messagerie complète et noms non résolus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-698">These can be unresolved names and aliases in an e-mail phone book or full e-mail addresses.</span>
          </span>
          <span data-ttu-id="afd82-699">Séparez les destinataires par un point-virgule (;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-699">Separate multiple recipients with a semicolon (;).</span>
          </span>
          <span data-ttu-id="afd82-700">Si vide et <paramref name="ShowMessage" /> a la <b>valeur False</b>, vous recevrez un message d’erreur et le message ne sera pas être envoyé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-700">If left blank and <paramref name="ShowMessage" /> is <b>False</b>, you will receive an error message, and the message will not be sent.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="afd82-701">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-701">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-702">Chaîne contenant l'objet du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-702">A string for the subject of the message.</span>
          </span>
          <span data-ttu-id="afd82-703">Si vide, l’objet sera :, consultez «<paramref name="filename" />».</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-703">If left blank, the subject will be: Please review "<paramref name="filename" />".</span>
          </span>
        </param>
        <param name="ShowMessage">
          <span data-ttu-id="afd82-704">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-704">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-705">Une valeur de <b>type Boolean</b> qui indique si le message doit être affiché lorsque la méthode est exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-705">A <b>Boolean</b> value that indicates whether the message should be displayed when the method is executed.</span>
          </span>
          <span data-ttu-id="afd82-706">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-706">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="afd82-707">Si vous définissez sur <b>False</b>, le message est automatiquement envoyé aux destinataires sans montrer au préalable le message à l'expéditeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-707">If set to <b>False</b>, the message is automatically sent to the recipients without first showing the message to the sender.</span>
          </span>
        </param>
        <param name="IncludeAttachment">
          <span data-ttu-id="afd82-708">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-708">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-709">Une valeur de <b>type Boolean</b> qui indique si le message doit inclure une pièce jointe ou un lien vers un emplacement du serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-709">A <b>Boolean</b> value that indicates whether the message should include an attachment or a link to a server location.</span>
          </span>
          <span data-ttu-id="afd82-710">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-710">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="afd82-711">Si défini sur <b>False</b>, le document doit être stocké sur un emplacement partagé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-711">If set to <b>False</b>, the document must be stored at a shared location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-712">Envoie un message électronique contenant un classeur à réviser aux destinataires spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-712">Sends a workbook in an e-mail message for review to the specified recipients.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-713">
            <para>La méthode <b>SendForReview</b> commence un cycle de révision collaborative. Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" /> méthode à la fin d’un cycle de révision.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-713">
              <para>The <b>SendForReview</b> method starts a collaborative review cycle. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" /> method to end a review cycle.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMail">
      <MemberSignature Language="C#" Value="public void SendMail (object Recipients, object Subject, object ReturnReceipt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMail([in]object Recipients, [in]object Subject, [in]object ReturnReceipt) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMail(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMail (Recipients As Object, Optional Subject As Object, Optional ReturnReceipt As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ReturnReceipt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="afd82-714">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-714">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-715">Spécifie le nom du destinataire sous forme de texte ou sous la forme d’un tableau de chaînes de texte s’il y a plusieurs destinataires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-715">Specifies the name of the recipient as text, or as an array of text strings if there are multiple recipients.</span>
          </span>
          <span data-ttu-id="afd82-716">Au moins un destinataire doit être spécifié, et tous les destinataires sont ajoutés comme destinataires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-716">At least one recipient must be specified, and all recipients are added as To recipients.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="afd82-717">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-717">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-718">Spécifie l’objet du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-718">Specifies the subject of the message.</span>
          </span>
          <span data-ttu-id="afd82-719">Si cet argument est omis, c’est le nom du document qui est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-719">If this argument is omitted, the document name is used.</span>
          </span>
        </param>
        <param name="ReturnReceipt">
          <span data-ttu-id="afd82-720">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-720">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-721">
            <b>True</b> pour demander un accusé de réception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-721">
              <b>True</b> to request a return receipt.</span>
          </span>
          <span data-ttu-id="afd82-722">
            <b>False</b> pour ne pas demander un accusé de réception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-722">
              <b>False</b> not to request a return receipt.</span>
          </span>
          <span data-ttu-id="afd82-723">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-723">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-724">Cette méthode envoie le classeur en utilisant le système de messagerie installé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-724">Sends the workbook by using the installed mail system.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMailer">
      <MemberSignature Language="C#" Value="public void SendMailer (object FileFormat, Microsoft.Office.Interop.Excel.XlPriority Priority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMailer([in]object FileFormat, [in]valuetype Microsoft.Office.Interop.Excel.XlPriority Priority) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMailer (Optional FileFormat As Object, Optional Priority As XlPriority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(980)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Priority" Type="Microsoft.Office.Interop.Excel.XlPriority" />
      </Parameters>
      <Docs>
        <param name="FileFormat">
          <span data-ttu-id="afd82-725">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-725">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Priority">
          <span data-ttu-id="afd82-726">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-726">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-p290">Vous avez demandé de l’aide sur un mot clé Visual Basic utilisé uniquement pour les Macintosh. Pour plus d’informations sur ce mot clé, consultez l’Aide fournie avec l’édition de Microsoft Office pour Macintosh</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p290">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ServerPolicy ServerPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ServerPolicy ServerPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerPolicy As ServerPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ServerPolicy ^ ServerPolicy { Microsoft::Office::Core::ServerPolicy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ServerPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-729">Renvoie un <see cref="T:Microsoft.Office.Core.ServerPolicy" /> objet qui représente une stratégie spécifiée pour un classeur stocké sur un serveur exécutant 2nd_OSS_NoVersion 2007.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-729">Returns a <see cref="T:Microsoft.Office.Core.ServerPolicy" /> object that represents a policy specified for a workbook stored on a server running 2nd_OSS_NoVersion 2007.</span>
          </span>
          <span data-ttu-id="afd82-730">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-730">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-731">
            <b>ServerPolicy</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-731">
              <b>ServerPolicy</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerViewableItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerViewableItems As ServerViewableItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ServerViewableItems ^ ServerViewableItems { Microsoft::Office::Interop::Excel::ServerViewableItems ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ServerViewableItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p292">Permet à un développeur d’interagir avec la liste des objets publiés du classeur, qui sont affichés sur le serveur. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p292">Allows a developer to interact with the list of published objects in the workbook that are shown on the server. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
        </value>
        <remarks>
          <span data-ttu-id="afd82-734">
            <para>Cette propriété renvoie une collection d’éléments qui peuvent être publiés dans Excel Services.  Il peut inclure des tableaux, tableaux croisés dynamiques, des plages nommées et des graphiques.  Il peut également contenir des feuilles dans la mesure où il n’est pas un mélange de feuilles et de la liste précédente.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-734">
              <para>This property returns a collection of the items that could be published to Excel Services.  It can include Tables, PivotTables, Named Ranges, and Charts.  It can also contain Sheets as long as it is not a mixture of Sheets and the before mentioned list.  </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinkOnData">
      <MemberSignature Language="C#" Value="public void SetLinkOnData (string Name, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLinkOnData([in]string Name, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetLinkOnData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLinkOnData (Name As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="afd82-735">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-735">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-736">Le nom du lien DDE/OLE renvoyé à partir de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-736">The name of the DDE/OLE link as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="afd82-737">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-737">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-738">Le nom de la procédure à exécuter lorsque le lien est mis à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-738">The name of the procedure to be run when the link is updated.</span>
          </span>
          <span data-ttu-id="afd82-739">Il peut s’agir d’une macro Microsoft Excel 4.0 ou une procédure Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-739">This can be either a Microsoft Excel 4.0 macro or a Visual Basic procedure.</span>
          </span>
          <span data-ttu-id="afd82-740">Définissez cet argument sur une chaîne vide (« ») pour indiquer qu’aucune procédure ne s’exécute lorsque le lien est mis à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-740">Set this argument to an empty string ("") to indicate that no procedure should run when the link is updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-741">Définit le nom d’une procédure exécutée à chaque mise à jour d’un lien DDE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-741">Sets the name of a procedure that runs whenever a DDE link is updated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPasswordEncryptionOptions">
      <MemberSignature Language="C#" Value="public void SetPasswordEncryptionOptions (object PasswordEncryptionProvider, object PasswordEncryptionAlgorithm, object PasswordEncryptionKeyLength, object PasswordEncryptionFileProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordEncryptionOptions([in]object PasswordEncryptionProvider, [in]object PasswordEncryptionAlgorithm, [in]object PasswordEncryptionKeyLength, [in]object PasswordEncryptionFileProperties) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPasswordEncryptionOptions (Optional PasswordEncryptionProvider As Object, Optional PasswordEncryptionAlgorithm As Object, Optional PasswordEncryptionKeyLength As Object, Optional PasswordEncryptionFileProperties As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2062)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PasswordEncryptionProvider" Type="System.Object" />
        <Parameter Name="PasswordEncryptionAlgorithm" Type="System.Object" />
        <Parameter Name="PasswordEncryptionKeyLength" Type="System.Object" />
        <Parameter Name="PasswordEncryptionFileProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PasswordEncryptionProvider">
          <span data-ttu-id="afd82-742">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-742">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-743">Chaîne qui respecte la casse et qui correspond au fournisseur de chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-743">A case sensitive string of the encryption provider.</span>
          </span>
        </param>
        <param name="PasswordEncryptionAlgorithm">
          <span data-ttu-id="afd82-744">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-744">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-745">Chaîne qui respecte la casse et qui correspond au nom court algorithmique (c'est-à-dire « RC4 »).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-745">A case sensitive string of the algorithmic short name (i.e. "RC4").</span>
          </span>
        </param>
        <param name="PasswordEncryptionKeyLength">
          <span data-ttu-id="afd82-746">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-746">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-747">Longueur de la clé de chiffrement qui est un multiple de 8 (40 ou plus).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-747">The encryption key length which is a multiple of 8 (40 or greater).</span>
          </span>
        </param>
        <param name="PasswordEncryptionFileProperties">
          <span data-ttu-id="afd82-748">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-748">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-749">Affectez à cet argument la valeur <b>True</b> (par défaut) pour chiffrer des propriétés de fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-749">
              <b>True</b> (default) to encrypt file properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-750">Définit les options de chiffrement des classeurs à l’aide de mots de passe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-750">Sets the options for encrypting workbooks using passwords.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-751">
            <para>Le <paramref name="PasswordEncryptionProvider" />, <paramref name="PasswordEncryptionAlgorithm" />, et <paramref name="PasswordEncryptionKeyLength" /> arguments ne sont pas indépendants. Un fournisseur de chiffrement sélectionné limite le jeu d’algorithmes et la longueur de clé qui peut être choisie.</para>
            <para>Pour la <paramref name="PasswordEncryptionKeyLength" /> argument il n’existe aucune limite inhérente sur la plage de la longueur de clé. La plage est déterminée par le fournisseur de services de chiffrement qui détermine également l’algorithme de chiffrement.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-751">
              <para>The <paramref name="PasswordEncryptionProvider" />, <paramref name="PasswordEncryptionAlgorithm" />, and <paramref name="PasswordEncryptionKeyLength" /> arguments are not independent of each other. A selected encryption provider limits the set of algorithms and key length that can be chosen.</para>
              <para>For the <paramref name="PasswordEncryptionKeyLength" /> argument there is no inherent limit on the range of the key length. The range is determined by the Cryptographic Service Provider which also determines the cryptographic algorithm.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedWorkspace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SharedWorkspace SharedWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SharedWorkspace SharedWorkspace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SharedWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SharedWorkspace As SharedWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SharedWorkspace ^ SharedWorkspace { Microsoft::Office::Core::SharedWorkspace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SharedWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-752">Renvoie un <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> object qui représente l’espace de travail de Document dans lequel se trouve le document spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-752">Returns a <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> object that represents the Document Workspace in which a specified document is located.</span>
          </span>
          <span data-ttu-id="afd82-753">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-753">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-754">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles du classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-754">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-755">Objet <b>Sheets</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-755">Read-only <b>Sheets</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowConflictHistory">
      <MemberSignature Language="C#" Value="public bool ShowConflictHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowConflictHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowConflictHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowConflictHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowConflictHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p301">
            <b>True</b> si la feuille de calcul Historique des conflits est visible dans le classeur ouvert en tant que liste partagée. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p301">
              <b>True</b> if the Conflict History worksheet is visible in the workbook that's open as a shared list. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-758">
            <para>Si le classeur spécifié n’est pas ouvert en tant que liste partagée, cette propriété échoue. Pour déterminer si un classeur est ouvert en tant que liste partagée, utilisez la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> propriété.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-758">
              <para>If the specified workbook isn't open as a shared list, this property fails. To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotChartActiveFields">
      <MemberSignature Language="C#" Value="public bool ShowPivotChartActiveFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotChartActiveFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotChartActiveFields" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotChartActiveFields As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotChartActiveFields { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-759">Cette propriété contrôle la visibilité du volet filtre de graphique croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-759">This property controls the visibility of the PivotChart Filter Pane.</span>
          </span>
          <span data-ttu-id="afd82-760">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-760">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-761">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-761">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="afd82-762">
            <para>Cette propriété contrôle la visibilité du volet filtre de graphique croisé dynamique (fait passer l’état activé/désactivé).  Afin qu’il soit visible, un objet de <b>graphique croisé dynamique</b> doit être activée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-762">
              <para>This property controls the visibility of the PivotChart Filter Pane (toggles it on/off).  In order for it to be visible, a <b>PivotChart</b> object must be selected. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotTableFieldList">
      <MemberSignature Language="C#" Value="public bool ShowPivotTableFieldList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotTableFieldList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotTableFieldList" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotTableFieldList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotTableFieldList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p303">
            <b>True</b> (par défaut) si la liste de champs de tableau croisé dynamique peut être affichée. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p303">
              <b>True</b> (default) if the PivotTable field list can be shown. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SignatureSet Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SignatureSet Signatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As SignatureSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SignatureSet ^ Signatures { Microsoft::Office::Core::SignatureSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SignatureSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p304">Renvoie les signatures numériques pour un classeur. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p304">Returns the digital signatures for a workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.SignatureSet" />
        </value>
        <remarks>
          <span data-ttu-id="afd82-767">
            <para>Pour signer les classeurs Excel2007 numériquement et vérifier les autres signatures, vous devez Microsoft CryptoAPI et un certificat de signature numérique unique. CryptoAPI est installé avec Microsoft Internet Explorer 4.01 ou version ultérieure. Vous pouvez obtenir un certificat de signature numérique à partir d’une autorité de certification.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-767">
              <para>To digitally sign Excel2007 workbooks and verify other signatures in them, you will need the Microsoft CryptoAPI and a unique digital signature certificate. The CryptoAPI is installed with Microsoft Internet Explorer 4.01 or later. You can obtain a digital signature certificate from a certification authority. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlicerCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SlicerCaches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SlicerCaches As SlicerCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SlicerCaches ^ SlicerCaches { Microsoft::Office::Interop::Excel::SlicerCaches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SlicerCaches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-768">Obtient le <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> objet associée au classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-768">Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="afd82-769">Le <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> objet associée au classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-769">The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="afd82-770">
            <para>En lecture-écriture.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-770">
              <para>Read/write.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartDocument SmartDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartDocument SmartDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartDocument As SmartDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartDocument ^ SmartDocument { Microsoft::Office::Core::SmartDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-771">Renvoie un <see cref="T:Microsoft.Office.Core.SmartDocument" /> objet qui représente les paramètres pour une solution de document dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-771">Returns a <see cref="T:Microsoft.Office.Core.SmartDocument" /> object that represents the settings for a smart document solution.</span>
          </span>
          <span data-ttu-id="afd82-772">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-772">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartTagOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagOptions As SmartTagOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagOptions ^ SmartTagOptions { Microsoft::Office::Interop::Excel::SmartTagOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-773">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> objet représentant les options qui peuvent être effectuées avec une balise active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-773">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> object representing the options that can be performed with a smart tag.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Styles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Styles Styles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Styles Styles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Styles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Styles As Styles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Styles ^ Styles { Microsoft::Office::Interop::Excel::Styles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Styles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-774">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection qui représente tous les styles du classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-774">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection that represents all the styles in the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-775">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-775">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-776">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-776">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Sync Sync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Sync Sync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sync As Sync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Sync ^ Sync { Microsoft::Office::Core::Sync ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Sync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-777">Renvoie un <see cref="T:Microsoft.Office.Core.Sync" /> objet qui donne accès aux méthodes et propriétés pour les documents qui font partie d’un espace de travail de Document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-777">Returns a <see cref="T:Microsoft.Office.Core.Sync" /> object that provides access to the methods and properties for documents that are part of a Document Workspace.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TableStyles TableStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TableStyles TableStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TableStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableStyles As TableStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TableStyles ^ TableStyles { Microsoft::Office::Interop::Excel::TableStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TableStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-778">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> objet de collection pour le classeur actif qui fait référence aux styles utilisés dans le classeur actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-778">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection object for the current workbook that refers to the styles used in the current workbook.</span>
          </span>
          <span data-ttu-id="afd82-779">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-779">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />
        </value>
        <remarks>
          <span data-ttu-id="afd82-780">
            <para>Vous pouvez manipuler les styles de tableau renvoyés par la propriété.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-780">
              <para>You can manipulate the table styles returned by the property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateRemoveExtData">
      <MemberSignature Language="C#" Value="public bool TemplateRemoveExtData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TemplateRemoveExtData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TemplateRemoveExtData" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateRemoveExtData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TemplateRemoveExtData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p308">
            <b>True</b> si les références aux données externes sont supprimées quand le classeur est enregistré en tant que modèle. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p308">
              <b>True</b> if external data references are removed when the workbook is saved as a template. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.OfficeTheme Theme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.OfficeTheme Theme" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Theme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Theme As OfficeTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::OfficeTheme ^ Theme { Microsoft::Office::Core::OfficeTheme ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.OfficeTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p309">Renvoie le thème appliqué au classeur actif. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p309">Returns the theme applied to the current workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.OfficeTheme" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-785">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-785">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleFormsDesign">
      <MemberSignature Language="C#" Value="public void ToggleFormsDesign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleFormsDesign() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ToggleFormsDesign" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleFormsDesign ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleFormsDesign();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-786">Active ou désactive le mode Création de formulaire activé ou désactivé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-786">Toggles form design mode on or off.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-787">
            <para>Lorsque Excel est en mode Création, la barre d’outils Boîte à outils contrôles s’affiche. Vous pouvez utiliser cette barre d’outils pour insérer des contrôles ActiveX tels que des boutons de commande, des barres de défilement et des cases d’option. En mode Création, procédures événementielles ne s’exécutent, et lorsque vous cliquez sur un contrôle incorporé, les poignées de redimensionnement du contrôle s’affichent.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-787">
              <para>When Excel is in form design mode, the Control Toolbox toolbar is displayed. You can use this toolbar to insert ActiveX controls such as command buttons, scroll bars, and option buttons. In form design mode, event procedures don't run, and when you click an embedded control, the control's sizing handles appear.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="afd82-788">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-788">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-789">Chaîne qui indique le mot de passe qui respecte la casse à utiliser pour ôter la protection de la feuille ou du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-789">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="afd82-790">Si la feuille ou du classeur n’est pas protégé par un mot de passe, cet argument est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-790">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="afd82-791">Si vous omettez cet argument pour une feuille est protégée par un mot de passe, vous devrez le mot de passe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-791">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="afd82-792">Si vous omettez cet argument pour un classeur est protégé par un mot de passe, la méthode échoue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-792">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-p311">Cette méthode supprime la protection d'une feuille ou d'un classeur. Elle est sans effet si la feuille ou le classeur n'est pas protégé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p311">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-795">
            <para>Si vous oubliez le mot de passe, vous ne pouvez pas ôter la protection de la feuille ou du classeur. Il est conseillé de conserver une liste de vos mots de passe et les noms de documents correspondants dans un endroit sûr.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-795">
              <para>If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnprotectSharing">
      <MemberSignature Language="C#" Value="public void UnprotectSharing (object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnprotectSharing([in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UnprotectSharing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnprotectSharing (Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1455)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SharingPassword">
          <span data-ttu-id="afd82-796">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-796">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-797">Mot de passe du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-797">The workbook password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-798">Désactive la protection contre le partage et enregistre le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-798">Turns off protection for sharing and saves the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-799">
            <para>Utilisez des mots de passe forts combinant des majuscules et minuscules, nombres et des symboles. Mots de passe faibles ne combinent pas ces éléments. Mot de passe fort : Y6dh ! et5. Mot de passe faible : House27. Utilisez un mot de passe fort dont vous pouvez vous souvenir afin que vous n’êtes pas obligé d’écrire.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-799">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFromFile">
      <MemberSignature Language="C#" Value="public void UpdateFromFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateFromFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateFromFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateFromFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateFromFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p313">Met à jour un classeur en lecture seule à partir de la version du classeur enregistrée sur disque, si cette version est plus récente que la copie du classeur chargée en mémoire. Si la copie du disque n’a pas été modifiée depuis que le classeur a été chargé en mémoire, la copie du classeur résidant en mémoire n’est pas rechargée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p313">Updates a read-only workbook from the saved disk version of the workbook if the disk version is more recent than the copy of the workbook that is loaded in memory. If the disk copy hasn't changed since the workbook was loaded, the in-memory copy of the workbook isn't reloaded.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-802">
            <para>Cette méthode est utile lorsqu’un classeur est ouvert en lecture seule par un utilisateur A et ouvert en lecture/écriture par un utilisateur B. Si l’utilisateur B enregistre une version plus récente du classeur sur le disque pendant que l’utilisateur A a toujours le classeur ouvert, l’utilisateur Qu'a ne peut pas obtenir la copie de la mise à jour sans fermer puis rouvrir le classeur paramètres d’affichage. La méthode <b>UpdateFromFile</b> met à jour la copie en mémoire du classeur à partir du fichier disque.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-802">
              <para>This method is useful when a workbook is opened as read-only by user A and opened as read/write by user B. If user B saves a newer version of the workbook to disk while user A still has the workbook open, user A cannot get the updated copy without closing and reopening the workbook and losing view settings. The <b>UpdateFromFile</b> method updates the in-memory copy of the workbook from the disk file.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLink">
      <MemberSignature Language="C#" Value="public void UpdateLink (object Name, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateLink([in]object Name, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateLink(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLink (Optional Name As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="afd82-803">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-803">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="afd82-804">Le nom de la liaison Microsoft Excel ou DDE/OLE à mettre à jour, tel que retourné par le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-804">The name of the Microsoft Excel or DDE/OLE link to be updated, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="afd82-805">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-805">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-806">Cette méthode met à jour une ou plusieurs liaisons Microsoft Excel, DDE ou OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-806">Updates a Microsoft Excel, DDE, or OLE link (or links).</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="afd82-807">
            <para>Lorsque la méthode <b>UpdateLink</b> est appelée sans aucun paramètre, Excel par défaut pour la mise à jour tous les liens de feuille de calcul.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-807">
              <para>When the <b>UpdateLink</b> method is called without any parameters, Excel defaults to updating all worksheet links.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateLinks As XlUpdateLinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlUpdateLinks UpdateLinks { Microsoft::Office::Interop::Excel::XlUpdateLinks get(); void set(Microsoft::Office::Interop::Excel::XlUpdateLinks value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlUpdateLinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-808">Cette propriété renvoie ou définit une <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> des liaisons OLE incorporées de constante indiquant un paramètre de classeur pour mettre à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-808">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> constant indicating a workbook's setting for updating embedded OLE links.</span>
          </span>
          <span data-ttu-id="afd82-809">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-809">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRemoteReferences">
      <MemberSignature Language="C#" Value="public bool UpdateRemoteReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateRemoteReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateRemoteReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateRemoteReferences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateRemoteReferences { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p316">
            <b>True</b> si Microsoft Excel met à jour les références hors programme dans le classeur. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p316">
              <b>True</b> if Microsoft Excel updates remote references in the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-812">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-812">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserStatus">
      <MemberSignature Language="C#" Value="public object UserStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserStatus As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserStatus { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-813">Renvoie un tableau basé sur 1, à deux dimensions qui fournit des informations sur chaque utilisateur dont le classeur est ouvert en tant que liste partagée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-813">Returns a 1-based, two-dimensional array that provides information about each user who has the workbook open as a shared list.</span>
          </span>
          <span data-ttu-id="afd82-814">Le premier élément de la seconde dimension correspond au nom de l'utilisateur, le deuxième élément correspond à la date et à l'heure de la dernière ouverture du classeur par l'utilisateur, et le troisième élément est un nombre indiquant le type de liste (1 pour un accès exclusif et 2 pour un accès partagé).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-814">The first element of the second dimension is the name of the user, the second element is the date and time when the user last opened the workbook, and the third element is a number indicating the type of list (1 indicates exclusive, and 2 indicates shared).</span>
          </span>
          <span data-ttu-id="afd82-815">En lecture seule <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-815">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-816">
            <para>La propriété <b>UserStatus</b> ne renvoie aucune information sur les utilisateurs qui ont ouvert en lecture seule du classeur spécifié.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-816">
              <para>The <b>UserStatus</b> property doesn't return information about users who have the specified workbook open as read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWholeCellCriteria">
      <MemberSignature Language="C#" Value="public bool UseWholeCellCriteria { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWholeCellCriteria" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWholeCellCriteria" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWholeCellCriteria As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWholeCellCriteria { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-817">
            <b>La valeur true</b> si le classeur utilise les modèles de recherche qui correspondent à tout le contenu d’une cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-817">
              <b>True</b> if the workbook uses search patterns that match the entire content of a cell.</span>
          </span>
          <span data-ttu-id="afd82-818">En lecture seule <b>Boolean</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-818">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWildcards">
      <MemberSignature Language="C#" Value="public bool UseWildcards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWildcards" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWildcards" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWildcards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWildcards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-819">
            <b>La valeur true</b> si le classeur permet de caractères génériques pour les comparaisons de chaînes de caractères et de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-819">
              <b>True</b> if the workbook enables wildcards for character string comparisons and searching.</span>
          </span>
          <span data-ttu-id="afd82-820">En lecture seule <b>Boolean</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-820">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBASigned">
      <MemberSignature Language="C#" Value="public bool VBASigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBASigned" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBASigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBASigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBASigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p320">
            <b>True</b> si le projet Visual Basic pour Applications du classeur spécifié a été signé numériquement. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p320">
              <b>True</b> if the Visual Basic for Applications project for the specified workbook has been digitally signed. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBProject">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBProject VBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBProject VBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBProject As VBProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBProject ^ VBProject { Microsoft::Vbe::Interop::VBProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p321">Renvoie un objet <b>VBProject</b> qui représente le projet Visual Basic dans le classeur spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p321">Returns a <b>VBProject</b> object that represents the Visual Basic project in the specified workbook. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WebOptions WebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WebOptions WebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebOptions As WebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WebOptions ^ WebOptions { Microsoft::Office::Interop::Excel::WebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-825">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> collection qui contient les attributs de niveau classeur utilisés par Microsoft Excel lorsque vous enregistrez un document sous forme de page Web ou que vous ouvrez une page Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-825">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> collection, which contains workbook-level attributes used by Microsoft Excel when you save a document as a Web page or open a Web page.</span>
          </span>
          <span data-ttu-id="afd82-826">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-826">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPagePreview">
      <MemberSignature Language="C#" Value="public void WebPagePreview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WebPagePreview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.WebPagePreview" />
      <MemberSignature Language="VB.NET" Value="Public Sub WebPagePreview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WebPagePreview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1818)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="afd82-827">Affiche un aperçu du classeur spécifié, tel qu’il s’afficherait s’il était enregistré sous la forme d’une page Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-827">Displays a preview of the specified workbook as it would look if saved as a Web page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-828">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection qui représente toutes les fenêtres du classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-828">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-829">Objet <b>Windows</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-829">Read-only <b>Windows</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-830">
            <para>Cette propriété renvoie une collection de fenêtres visibles et masquées.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-830">
              <para>This property returns a collection of both visible and hidden windows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-831">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles de calcul du classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-831">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-832">Objet <b>Sheets</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-832">Read-only <b>Sheets</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-833">
            <para>à l’aide de cette propriété sans qualificateur d’objet renvoie toutes les feuilles de calcul du classeur actif.</para>
            <para>Cette propriété ne renvoie pas les feuilles de macro, utilisez la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" /> propriété ou la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" /> propriété permet de renvoyer ces feuilles.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-833">
              <para>Using this property without an object qualifier returns all the worksheets in the active workbook.</para>
              <para>This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" /> property to return those sheets.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePassword">
      <MemberSignature Language="C#" Value="public string WritePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WritePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WritePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property WritePassword As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WritePassword { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p325">Renvoie ou définit une valeur de type <b>String</b> pour le mot de passe en écriture d’un classeur. En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p325">Returns or sets a <b>String</b> for the write password of a workbook. Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReserved">
      <MemberSignature Language="C#" Value="public bool WriteReserved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteReserved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReserved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReserved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteReserved { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p326">
            <b>True</b> si le classeur est protégé contre l’écriture. Type de données <b>Boolean</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p326">
              <b>True</b> if the workbook is write-reserved. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-838">
            <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> pour définir cette propriété.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-838">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to set this property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReservedBy">
      <MemberSignature Language="C#" Value="public string WriteReservedBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WriteReservedBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReservedBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReservedBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WriteReservedBy { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-p327">Renvoie le nom de l’utilisateur possédant actuellement un accès en écriture sur le classeur. Type de données <b>String</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-p327">Returns the name of the user who currently has write permission for the workbook. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImport">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport (string Url, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport([in]string Url, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImport (Url As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2270)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">
          <span data-ttu-id="afd82-841">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-841">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-842">Une (URL) uniform resource locator ou un chemin UNC (convention) d’affectation de noms uniforme dans un fichier de données XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-842">A uniform resource locator (URL) or a uniform naming convention (UNC) path to a XML data file.</span>
          </span>
        </param>
        <param name="ImportMap">
          <span data-ttu-id="afd82-843">Requis <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-843">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="afd82-844">Mappage de schéma à appliquer lors de l'importation du fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-844">The schema map to apply when importing the file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="afd82-845">
            <b>Boolean</b> facultatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-845">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="afd82-846">Si une valeur n’est pas spécifiée pour le <paramref name="Destination" /> paramètre, ce paramètre spécifie s’il faut remplacer les données qui ont été mappées au mappage de schéma spécifié dans le <paramref name="ImportMap" /> paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-846">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span>
          </span>
          <span data-ttu-id="afd82-847">Valeur <b>True</b> pour remplacer les données ou la <b>valeur False</b> pour ajouter les nouvelles données aux données existantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-847">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span>
          </span>
          <span data-ttu-id="afd82-848">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-848">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="afd82-849">Si une valeur est spécifiée pour le <paramref name="Destination" /> paramètre, ce paramètre spécifie s’il faut remplacer les données existantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-849">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span>
          </span>
          <span data-ttu-id="afd82-850">Définissez sur <b>True</b> pour remplacer les données existantes ou <b>False</b> pour annuler l’importation si les données étaient remplacées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-850">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span>
          </span>
          <span data-ttu-id="afd82-851">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-851">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="afd82-852">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-852">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="afd82-853">Les données seront importées dans une nouvelle liste XML à la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-853">The data will be imported into a new XML list at the range specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-854">Importe un fichier de données XML dans le classeur actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-854">Imports an XML data file into the current workbook.</span>
          </span>
          <span data-ttu-id="afd82-855">Cette propriété renvoie <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-855">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="afd82-856">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para>Ne spécifiez aucune valeur pour le <paramref name="Destination" /> paramètre si vous souhaitez importer des données dans un mappage existant.</para>
            <para>Les conditions suivantes entraîne la méthode <b>XMLImport</b> génère des erreurs d’exécution :</para>
            <list type="bullet">
              <item>
                <description>Les données XML spécifiées contient des erreurs de syntaxe.</description>
              </item>
              <item>
                <description>Le processus d’importation a été annulé parce que les données spécifiées ne rentrent pas dans la feuille de calcul.</description>
              </item>
            </list>
            <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> méthode de la <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objet pour importer des données XML précédemment chargées dans la mémoire.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-856">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</para>
              <para>The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</para>
              <list type="bullet">
                <item>
                  <description>The specified XML data contains syntax errors.</description>
                </item>
                <item>
                  <description>The import process was cancelled because the specified data cannot fit into the worksheet.</description>
                </item>
              </list>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import XML data that has been previously loaded into memory.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml (string Data, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml([in]string Data, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImportXml (Data As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data">
          <span data-ttu-id="afd82-857">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-857">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="afd82-858">Données à importer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-858">The data to import.</span>
          </span>
        </param>
        <param name="ImportMap">
          <span data-ttu-id="afd82-859">Requis <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-859">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="afd82-860">Mappage de schéma à appliquer lors de l'importation du fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-860">The schema map to apply when importing the file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="afd82-861">
            <b>Boolean</b> facultatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-861">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="afd82-862">Si une valeur n’est pas spécifiée pour le <paramref name="Destination" /> paramètre, ce paramètre spécifie s’il faut remplacer les données qui ont été mappées au mappage de schéma spécifié dans le <paramref name="ImportMap" /> paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-862">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span>
          </span>
          <span data-ttu-id="afd82-863">Valeur <b>True</b> pour remplacer les données ou la <b>valeur False</b> pour ajouter les nouvelles données aux données existantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-863">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span>
          </span>
          <span data-ttu-id="afd82-864">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-864">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="afd82-865">Si une valeur est spécifiée pour le <paramref name="Destination" /> paramètre, ce paramètre spécifie s’il faut remplacer les données existantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-865">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span>
          </span>
          <span data-ttu-id="afd82-866">Définissez sur <b>True</b> pour remplacer les données existantes ou <b>False</b> pour annuler l’importation si les données étaient remplacées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-866">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span>
          </span>
          <span data-ttu-id="afd82-867">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-867">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="afd82-868">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-868">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="afd82-869">Les données seront importées dans une nouvelle liste XML dans la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-869">The data will be imported into a new XML list in the range specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afd82-870">Importe un flux de données XML précédemment chargé dans la mémoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-870">Imports an XML data stream that has been previously loaded into memory.</span>
          </span>
          <span data-ttu-id="afd82-871">Cette propriété renvoie <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-871">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="afd82-872">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para>Ne spécifiez aucune valeur pour le <paramref name="Destination" /> paramètre si vous souhaitez importer des données dans un mappage existant.</para>
            <para>Les conditions suivantes entraîne la méthode <b>XMLImport</b> génère des erreurs d’exécution :</para>
            <list type="bullet">
              <item>
                <description>Les données XML spécifiées contient des erreurs de syntaxe.</description>
              </item>
              <item>
                <description>Le processus d’importation a été annulé parce que les données spécifiées ne rentrent pas dans la feuille de calcul.</description>
              </item>
            </list>
            <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> méthode de la <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objet pour importer un fichier de données XML dans le classeur actif.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-872">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</para>
              <para>The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</para>
              <list type="bullet">
                <item>
                  <description>The specified XML data contains syntax errors.</description>
                </item>
                <item>
                  <description>The import process was cancelled because the specified data cannot fit into the worksheet.</description>
                </item>
              </list>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import an XML data file into the current workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMaps">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlMaps XmlMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlMaps XmlMaps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlMaps As XmlMaps" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlMaps ^ XmlMaps { Microsoft::Office::Interop::Excel::XmlMaps ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlMaps</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-873">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection qui représente les mappages de schéma qui ont été ajoutés au classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-873">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection that represents the schema maps that have been added to the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-874">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-874">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-875">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-875">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaces">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespaces As XmlNamespaces" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespaces ^ XmlNamespaces { Microsoft::Office::Interop::Excel::XmlNamespaces ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespaces</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="afd82-876">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> collection qui représente les espaces de noms XML contenus dans le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-876">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> collection that represents the XML namespaces contained in the specified workbook.</span>
          </span>
          <span data-ttu-id="afd82-877">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-877">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="afd82-878">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="afd82-878">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>