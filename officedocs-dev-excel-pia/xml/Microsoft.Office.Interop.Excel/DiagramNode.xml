<Type Name="DiagramNode" FullName="Microsoft.Office.Interop.Excel.DiagramNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86e622fca7f83a44ee8326d13178a7a41108a865" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20576145" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface DiagramNode : Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract DiagramNode implements class Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.DiagramNode" />
  <TypeSignature Language="VB.NET" Value="Public Interface DiagramNode&#xA;Implements _IMsoDispObj" />
  <TypeSignature Language="C++ CLI" Value="public interface class DiagramNode : Microsoft::Office::Core::_IMsoDispObj" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C0370-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4304)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6502e-101">Représente un nœud dans un diagramme.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6502e-101">Represents a node in a diagram.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="6502e-102">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" /> méthode pour ajouter un nœud à un diagramme ou à un nœud de diagramme.</span>
        <span class="sxs-lookup">
          <span data-stu-id="6502e-102">Use the <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" /> method to add a node to a diagram or to a diagram node.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="6502e-103">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.Delete" /> méthode pour supprimer un nœud d’un diagramme ou un nœud de diagramme.</span>
        <span class="sxs-lookup">
          <span data-stu-id="6502e-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.Delete" /> method to remove a node from a diagram or diagram node.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="6502e-104">Pour renvoyer un objet <b>DiagramNode</b> , utilisez une des options suivantes :</span>
        <span class="sxs-lookup">
          <span data-stu-id="6502e-104">To return a <b>DiagramNode</b> object, use one of the following:</span>
        </span>
      </para>
      <list type="bullet">
        <item>
          <description>
            <span data-ttu-id="6502e-105">L’objet <b>DiagramNode</b><see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" />, <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.CloneNode(System.Boolean,Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)" />, <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.NextNode" />, ou <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.PrevNode" /> méthodes ou son <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Root" /> propriété</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-105">The <b>DiagramNode</b> object's <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" />, <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.CloneNode(System.Boolean,Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)" />, <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.NextNode" />, or <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.PrevNode" /> methods or its <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Root" /> property</span>
            </span>
          </description>
        </item>
        <item>
          <description>
            <span data-ttu-id="6502e-106">Le <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren" /> la collection <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.AddNode(System.Object,Microsoft.Office.Core.MsoDiagramNodeType)" /> ou <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.Item(System.Object)" /> méthodes ou <see cref="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.FirstChild" /> ou <see cref="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.LastChild" /> propriétés</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-106">The <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren" /> collection's <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.AddNode(System.Object,Microsoft.Office.Core.MsoDiagramNodeType)" /> or <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.Item(System.Object)" /> methods or <see cref="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.FirstChild" /> or <see cref="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.LastChild" /> properties</span>
            </span>
          </description>
        </item>
        <item>
          <description>
            <span data-ttu-id="6502e-107">Le <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodes" /> la collection <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodes.Item(System.Object)" /> méthode</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-107">The <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodes" /> collection's <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodes.Item(System.Object)" /> method</span>
            </span>
          </description>
        </item>
        <item>
          <description>
            <span data-ttu-id="6502e-108">Le <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> l’objet ou <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> propriété <b>DiagramNode</b> de la collection</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-108">The <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object's or <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection's <b>DiagramNode</b> property</span>
            </span>
          </description>
        </item>
      </list>
      <para>
        <span data-ttu-id="6502e-109">Un nœud de diagramme peut terminer, ou elle peut contenir d’autres diagrammes enfants, nœuds de diagramme enfants ou formes enfants.</span>
        <span class="sxs-lookup">
          <span data-stu-id="6502e-109">A diagram node can terminate, or it can contain other child diagrams, child diagram nodes, or child shapes.</span>
        </span>
        <span data-ttu-id="6502e-110">Reportez-vous à ces avec les éléments suivants :</span>
        <span class="sxs-lookup">
          <span data-stu-id="6502e-110">Refer to these with the following:</span>
        </span>
      </para>
      <list type="bullet">
        <item>
          <description>
            <span data-ttu-id="6502e-111">Pour faire référence à un diagramme enfant, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Diagram" /> propriété.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-111">To refer to a child diagram, use the <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Diagram" /> property.</span>
            </span>
          </description>
        </item>
        <item>
          <description>
            <span data-ttu-id="6502e-112">Pour faire référence à un nœud de diagramme enfant individuel, utilisez <b>AddNode</b>, méthodes <b>CloneNode</b>, <b>NextNode</b> ou <b>PrevNode</b> ou la propriété <b>Root</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-112">To refer to an individual child diagram node, use the <b>AddNode</b>, <b>CloneNode</b>, <b>NextNode</b> or <b>PrevNode</b> methods or the <b>Root</b> property.</span>
            </span>
          </description>
        </item>
        <item>
          <description>
            <span data-ttu-id="6502e-113">Pour faire référence à une collection de nœuds de diagramme enfants, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Children" /> propriété.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-113">To refer to a collection of child diagram nodes, use the <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Children" /> property.</span>
            </span>
          </description>
        </item>
        <item>
          <description>
            <span data-ttu-id="6502e-114">Pour faire référence à une forme, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Shape" /> ou <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.TextShape" /> propriétés.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-114">To refer to a shape, use the <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Shape" /> or <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.TextShape" /> properties.</span>
            </span>
          </description>
        </item>
      </list>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode AddNode (Microsoft.Office.Core.MsoRelativeNodePosition pos = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode, Microsoft.Office.Core.MsoDiagramNodeType nodeType = Microsoft.Office.Core.MsoDiagramNodeType.msoDiagramNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode AddNode([in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition pos, [in]valuetype Microsoft.Office.Core.MsoDiagramNodeType nodeType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNode (Optional pos As MsoRelativeNodePosition = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode, Optional nodeType As MsoDiagramNodeType = Microsoft.Office.Core.MsoDiagramNodeType.msoDiagramNode) As DiagramNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
        <Parameter Name="nodeType" Type="Microsoft.Office.Core.MsoDiagramNodeType" />
      </Parameters>
      <Docs>
        <param name="pos">
          <span data-ttu-id="6502e-115">Facultatif <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-115">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />.</span>
          </span>
          <span data-ttu-id="6502e-116">Où le nœud va être ajouté par rapport à un autre nœud. <b>MsoRelativeNodePosition</b> peut être une de ces constantes :<b>msoAfterLastSibling</b><b>msoAfterNode </b>par défaut<b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-116">Where the node will be added, relative to another node.<b>MsoRelativeNodePosition</b> can be one of these constants:<b>msoAfterLastSibling</b><b>msoAfterNode </b>Default<b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></span>
          </span>
        </param>
        <param name="nodeType">
          <span data-ttu-id="6502e-117">Facultatif <see cref="T:Microsoft.Office.Interop.Office.MsoDiagramNodeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-117">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoDiagramNodeType" />.</span>
          </span>
          <span data-ttu-id="6502e-118">Le type de nœud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-118">The type of node.</span>
          </span>
          <span data-ttu-id="6502e-119">Peut être une de ces constantes <b>MsoDiagramNodeType</b> :<b>msoDiagramAssistant</b><b>msoDiagramNode</b> par défaut</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-119">Can be one of these <b>MsoDiagramNodeType</b> constants:<b>msoDiagramAssistant</b><b>msoDiagramNode</b> Default</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6502e-120">Crée un nœud de diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-120">Creates a diagram node.</span>
          </span>
          <span data-ttu-id="6502e-121">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object qui représente le nouveau nœud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-121">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents the new node.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6502e-122">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-122">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNodeChildren Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNodeChildren Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As DiagramNodeChildren" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNodeChildren ^ Children { Microsoft::Office::Interop::Excel::DiagramNodeChildren ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNodeChildren</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6502e-123">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren" /> représentant la collection de nœuds enfants d’un nœud particulier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-123">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren" /> object, representing the collection of child nodes of a particular node.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode CloneNode (bool copyChildren, Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, Microsoft.Office.Core.MsoRelativeNodePosition pos = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode CloneNode([in]bool copyChildren, [in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, [in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition pos) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.CloneNode(System.Boolean,Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneNode (copyChildren As Boolean, pTargetNode As DiagramNode, Optional pos As MsoRelativeNodePosition = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode) As DiagramNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyChildren" Type="System.Boolean" />
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
        <Parameter Name="pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
      </Parameters>
      <Docs>
        <param name="copyChildren">
          <span data-ttu-id="6502e-124">
            <b>Boolean</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-124">Required <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="6502e-125">
            <b>La valeur true</b> pour cloner également les enfants du noeud de diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-125">
              <b>True</b> to clone the diagram node's children as well.</span>
          </span>
        </param>
        <param name="pTargetNode">
          <span data-ttu-id="6502e-126">Objet <b>DiagramNode</b> obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-126">Required <b>DiagramNode</b> object.</span>
          </span>
          <span data-ttu-id="6502e-127">Expression qui renvoie un objet <b>DiagramNode</b> qui représente le nœud où le nouveau nœud sera placé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-127">An expression that returns a <b>DiagramNode</b> object that represents the node where the new node will be placed.</span>
          </span>
        </param>
        <param name="pos">
          <span data-ttu-id="6502e-128">Facultatif <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-128">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />.</span>
          </span>
          <span data-ttu-id="6502e-129">Si <paramref name="pTargetNode" /> est spécifié, indique où le nœud sera ajouté relative à <paramref name="pTargetNode" />. <b>MsoRelativeNodePosition</b> peut être une de ces constantes :<b>msoAfterLastSibling</b><b>msoAfterNode </b>par défaut<b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-129">If <paramref name="pTargetNode" /> is specified, indicates where the node will be added relative to <paramref name="pTargetNode" />.<b>MsoRelativeNodePosition</b> can be one of these constants:<b>msoAfterLastSibling</b><b>msoAfterNode </b>Default<b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6502e-130">Clone un nœud de diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-130">Clones a diagram node.</span>
          </span>
          <span data-ttu-id="6502e-131">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> représentant le nœud cloné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-131">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object representing the cloned node.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6502e-132">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-132">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="6502e-133">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-133">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="6502e-134">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-134">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="6502e-135">Par exemple, Microsoft Excel possède le code créateur XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-135">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6502e-136">Supprime l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-136">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IMsoDiagram Diagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IMsoDiagram Diagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Diagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Diagram As IMsoDiagram" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IMsoDiagram ^ Diagram { Microsoft::Office::Core::IMsoDiagram ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IMsoDiagram</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6502e-137">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> objet représentant un diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-137">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> object representing a diagram.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoOrgChartLayoutType Layout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoOrgChartLayoutType Layout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Layout" />
      <MemberSignature Language="VB.NET" Value="Public Property Layout As MsoOrgChartLayoutType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoOrgChartLayoutType Layout { Microsoft::Office::Core::MsoOrgChartLayoutType get(); void set(Microsoft::Office::Core::MsoOrgChartLayoutType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoOrgChartLayoutType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6502e-138">Cette propriété renvoie ou définit une constante pour indiquer la mise en forme des nœuds enfants d’un organigramme hiérarchique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-138">Returns or sets a constant to indicate the formatting of the child nodes of an organization chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="6502e-139">
              <b>MsoOrgChartLayoutType</b> peut être une de ces constantes <b>MsoOrgChartLayoutType</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-139">
                <b>MsoOrgChartLayoutType</b> can be one of these <b>MsoOrgChartLayoutType</b> constants.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="6502e-140">
              <b>msoOrgChartLayoutAssistant</b> Dispose les nœuds enfant comme des assistants.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-140">
                <b>msoOrgChartLayoutAssistant</b> Places child nodes as assistants.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="6502e-141">
              <b>msoOrgChartLayoutBothHanging</b> Place les nœuds enfant verticalement à partir du nœud parent à gauche et droite.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-141">
                <b>msoOrgChartLayoutBothHanging</b> Places child nodes vertically from the parent node on both the left and the right side.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="6502e-142">
              <b>msoOrgChartLayoutLeftHanging</b> Dispose les nœuds enfant verticalement à partir du nœud parent sur le côté gauche.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-142">
                <b>msoOrgChartLayoutLeftHanging</b> Places child nodes vertically from the parent node on the left side.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="6502e-143">
              <b>msoOrgChartLayoutMixed renvoie une</b> Valeur renvoyée pour un nœud parent ayant des enfants mis en forme avec plusieurs <b>MsoOrgChartLayoutType</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-143">
                <b>msoOrgChartLayoutMixed</b> Return value for a parent node that has children formatted using more than one <b>MsoOrgChartLayoutType</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="6502e-144">
              <b>msoOrgChartLayoutRightHanging</b> Dispose les nœuds enfant verticalement à partir du nœud parent sur le côté droit.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-144">
                <b>msoOrgChartLayoutRightHanging</b> Places child nodes vertically from the parent node on the right side.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="6502e-145">
              <b>msoOrgChartLayoutStandard</b> Dispose les nœuds enfant horizontalement en dessous du nœud parent.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-145">
                <b>msoOrgChartLayoutStandard</b> Places child nodes horizontally below the parent node.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNode">
      <MemberSignature Language="C#" Value="public void MoveNode (Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, Microsoft.Office.Core.MsoRelativeNodePosition pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveNode([in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, [in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition pos) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.MoveNode(Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveNode (pTargetNode As DiagramNode, pos As MsoRelativeNodePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveNode(Microsoft::Office::Interop::Excel::DiagramNode ^ pTargetNode, Microsoft::Office::Core::MsoRelativeNodePosition pos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
        <Parameter Name="pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
      </Parameters>
      <Docs>
        <param name="pTargetNode">
          <span data-ttu-id="6502e-146">Requis <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-146">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object.</span>
          </span>
          <span data-ttu-id="6502e-147">Le nœud de diagramme où le nœud spécifié est déplacé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-147">The diagram node where the specified node will be moved.</span>
          </span>
        </param>
        <param name="pos">
          <span data-ttu-id="6502e-148">Requis <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-148">Required <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />.</span>
          </span>
          <span data-ttu-id="6502e-149">Déplacer le nœud, relative à la position <paramref name="TargetNode" />. <b>MsoRelativeNodePosition</b> peut être une de ces constantes :<b>msoAfterLastSibling</b><b>msoAfterNode</b><b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-149">The position to move the node, relative to <paramref name="TargetNode" />.<b>MsoRelativeNodePosition</b> can be one of these constants:<b>msoAfterLastSibling</b><b>msoAfterNode</b><b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6502e-150">Déplace un nœud et ses nœuds enfants au sein d’un diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-150">Moves a diagram node and any of its child nodes within a diagram.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode NextNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode NextNode() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.NextNode" />
      <MemberSignature Language="VB.NET" Value="Public Function NextNode () As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::DiagramNode ^ NextNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6502e-151">Sélectionne le nœud de diagramme suivant dans une série de nœuds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-151">Selects the next diagram node in a series of nodes.</span>
          </span>
          <span data-ttu-id="6502e-152">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> représentant le nœud nouvellement sélectionné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-152">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object representing the newly-selected node.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6502e-153">Renvoie l'objet parent de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-153">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode PrevNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode PrevNode() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.PrevNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PrevNode () As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::DiagramNode ^ PrevNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6502e-154">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object qui représente le nœud de diagramme précédent dans une collection de nœuds de diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-154">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents the previous diagram node in a collection of diagram nodes.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceNode">
      <MemberSignature Language="C#" Value="public void ReplaceNode (Microsoft.Office.Interop.Excel.DiagramNode pTargetNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceNode([in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.ReplaceNode(Microsoft.Office.Interop.Excel.DiagramNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceNode (pTargetNode As DiagramNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceNode(Microsoft::Office::Interop::Excel::DiagramNode ^ pTargetNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
      </Parameters>
      <Docs>
        <param name="pTargetNode">
          <span data-ttu-id="6502e-155">Requis <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-155">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object.</span>
          </span>
          <span data-ttu-id="6502e-156">Le nœud de diagramme cible à remplacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-156">The target diagram node to be replaced.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6502e-157">Remplace un nœud de diagramme cible par le nœud de diagramme source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-157">Replaces a target diagram node with the source diagram node.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="6502e-158">Le nœud de diagramme cible est supprimé et le nœud de diagramme source, y compris tous ses nœuds enfants, sont déplacés vers où était le nœud de diagramme cible.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6502e-158">The target diagram node is deleted, and the source diagram node, including any of its child nodes, are moved to where the target diagram node was.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNode Root" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNode ^ Root { Microsoft::Office::Interop::Excel::DiagramNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6502e-159">Renvoie la racine <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objet auquel appartient le nœud de diagramme racine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-159">Returns the root <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object which the root diagram node belongs.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Shape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape Shape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Shape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ Shape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6502e-160">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet qui représente la forme attachée au nœud de diagramme spécifié</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-160">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape attached to the specified diagram node</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SwapNode">
      <MemberSignature Language="C#" Value="public void SwapNode (Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, bool swapChildren = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SwapNode([in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, [in]bool swapChildren) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.SwapNode(Microsoft.Office.Interop.Excel.DiagramNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SwapNode (pTargetNode As DiagramNode, Optional swapChildren As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
        <Parameter Name="swapChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pTargetNode">
          <span data-ttu-id="6502e-161">Requis <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-161">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object.</span>
          </span>
          <span data-ttu-id="6502e-162">Le nœud de diagramme cible à remplacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-162">The target diagram node to be replaced.</span>
          </span>
        </param>
        <param name="swapChildren">
          <span data-ttu-id="6502e-163">
            <b>Boolean</b> facultatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-163">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="6502e-164">Nœuds enfants des nœuds cibles et sources permutés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-164">The child nodes of the target and source nodes being swapped.</span>
          </span>
          <span data-ttu-id="6502e-165">Les nœuds de diagramme enfants sont déplacés avec leurs noeuds racine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-165">Any child diagram nodes are moved along with their corresponding root nodes.</span>
          </span>
          <span data-ttu-id="6502e-166">Valeur par défaut est <b>True</b>, qui permute les nœuds enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-166">Default is <b>True</b>, which swaps the child nodes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6502e-167">Permute le nœud de diagramme source avec un nœud de diagramme cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-167">Swaps the source diagram node with a target diagram node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape TextShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape TextShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.TextShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ TextShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6502e-168">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet représentant la forme de la zone de texte associée à un nœud de diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-168">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object representing the shape of the text box associated with a diagram node.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferChildren">
      <MemberSignature Language="C#" Value="public void TransferChildren (Microsoft.Office.Interop.Excel.DiagramNode pReceivingNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferChildren([in]class Microsoft.Office.Interop.Excel.DiagramNode pReceivingNode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.TransferChildren(Microsoft.Office.Interop.Excel.DiagramNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferChildren (pReceivingNode As DiagramNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferChildren(Microsoft::Office::Interop::Excel::DiagramNode ^ pReceivingNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pReceivingNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
      </Parameters>
      <Docs>
        <param name="pReceivingNode">
          <span data-ttu-id="6502e-169">Requis <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-169">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object.</span>
          </span>
          <span data-ttu-id="6502e-170">Le nœud du diagramme recevant les nœuds enfants transférés à partir du nœud spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-170">The diagram node receiving the child nodes being transferred from the specified node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6502e-171">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet représentant la forme de la zone de texte associée à un nœud de diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6502e-171">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object representing the shape of the text box associated with a diagram node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>