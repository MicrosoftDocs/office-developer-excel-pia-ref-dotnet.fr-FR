<Type Name="Validation" FullName="Microsoft.Office.Interop.Excel.Validation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64490ccfa07c156fb946aaf6fbcab62bd0310122" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009351" /></Metadata><TypeSignature Language="C#" Value="public interface Validation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Validation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Validation" />
  <TypeSignature Language="VB.NET" Value="Public Interface Validation" />
  <TypeSignature Language="C++ CLI" Value="public interface class Validation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002442F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9261e-101">Cet objet représente la validation de données appliquée à une plage dans une feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="9261e-101">Represents data validation for a worksheet range.</span></span></summary>
    <remarks><para><span data-ttu-id="9261e-102">Utilisez la <see cref="P:Microsoft.Office.Interop.Excel.Range.Validation" /> propriété pour renvoyer <b>l’objet Validation.</b></span><span class="sxs-lookup"><span data-stu-id="9261e-102">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Validation" /> property to return the <b>Validation</b> object.</span></span></para>
      <para><span data-ttu-id="9261e-103">Utilisez la <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> méthode pour ajouter la validation des données à une plage et créer un objet <b>Validation.</b></span><span class="sxs-lookup"><span data-stu-id="9261e-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> method to add data validation to a range and create a new <b>Validation</b> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.Office.Interop.Excel.XlDVType Type, object AlertStyle, object Operator, object Formula1, object Formula2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add([in]valuetype Microsoft.Office.Interop.Excel.XlDVType Type, [in]object AlertStyle, [in]object Operator, [in]object Formula1, [in]object Formula2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (Type As XlDVType, Optional AlertStyle As Object, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDVType" />
        <Parameter Name="AlertStyle" Type="System.Object" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="9261e-104">Obligatoire <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" /> .</span><span class="sxs-lookup"><span data-stu-id="9261e-104">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span> <span data-ttu-id="9261e-105">Type de validation.</span><span class="sxs-lookup"><span data-stu-id="9261e-105">The validation type.</span></span></param>
        <param name="AlertStyle"><span data-ttu-id="9261e-106">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="9261e-106">Optional <b>Object</b>.</span></span> <span data-ttu-id="9261e-107">Style d'alerte de validation.</span><span class="sxs-lookup"><span data-stu-id="9261e-107">The validation alert style.</span></span> <span data-ttu-id="9261e-108">Peut être l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> constantes suivantes : <b>xlValidAlertInformation</b>, <b>xlValidAlertStop</b>ou <b>xlValidAlertWarning</b>.</span><span class="sxs-lookup"><span data-stu-id="9261e-108">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> constants: <b>xlValidAlertInformation</b>, <b>xlValidAlertStop</b>, or <b>xlValidAlertWarning</b>.</span></span></param>
        <param name="Operator"><span data-ttu-id="9261e-109">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="9261e-109">Optional <b>Object</b>.</span></span> <span data-ttu-id="9261e-110">Opérateur de validation des données.</span><span class="sxs-lookup"><span data-stu-id="9261e-110">The data validation operator.</span></span> <span data-ttu-id="9261e-111">Peut être l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> constantes suivantes : <b>xlBetween</b>, <b>xlEqual</b>, <b>xlGreater</b>, <b>xlGreaterEqual</b>, <b>xlLess</b>, <b>xlLessEqual</b>, <b>xlNotBetween</b>ou <b>xlNotEqual</b>.</span><span class="sxs-lookup"><span data-stu-id="9261e-111">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> constants: <b>xlBetween</b>, <b>xlEqual</b>, <b>xlGreater</b>, <b>xlGreaterEqual</b>, <b>xlLess</b>, <b>xlLessEqual</b>, <b>xlNotBetween</b>, or <b>xlNotEqual</b>.</span></span></param>
        <param name="Formula1"><span data-ttu-id="9261e-112">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="9261e-112">Optional <b>Object</b>.</span></span> <span data-ttu-id="9261e-113">La première partie de l'équation de validation des données.</span><span class="sxs-lookup"><span data-stu-id="9261e-113">The first part of the data validation equation.</span></span></param>
        <param name="Formula2"><span data-ttu-id="9261e-114">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="9261e-114">Optional <b>Object</b>.</span></span> <span data-ttu-id="9261e-115">La deuxième partie de la validation des données est <paramref name="Operator" /> <b>xlBetween</b> ou <b>xlNotBetween</b> (sinon, cet argument est ignoré).</span><span class="sxs-lookup"><span data-stu-id="9261e-115">The second part of the data validation when <paramref name="Operator" /> is <b>xlBetween</b> or <b>xlNotBetween</b> (otherwise, this argument is ignored).</span></span></param>
        <summary><span data-ttu-id="9261e-116">Cette méthode ajoute la validation de données à la plage spécifiée.</span><span class="sxs-lookup"><span data-stu-id="9261e-116">Adds data validation to the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="9261e-117">La méthode Add nécessite différents arguments, selon le type de validation, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="9261e-117">The Add method requires different arguments, depending on the validation type, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="9261e-118">
                <b>xlValidateCustom</b>
              </span><span class="sxs-lookup"><span data-stu-id="9261e-118">
                <b>xlValidateCustom</b>
              </span></span></term>
              <description><span data-ttu-id="9261e-119">
                <paramref name="Formula1" /> est obligatoire ; <paramref name="Formula2" /> est ignoré.</span><span class="sxs-lookup"><span data-stu-id="9261e-119">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="9261e-120"><paramref name="Formula1" /> doit contenir une expression qui est évaluée à <b>True</b> lorsque l’entrée de données est valide et <b>False</b> lorsque l’entrée de données n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="9261e-120"><paramref name="Formula1" /> must contain an expression that evaluates to <b>True</b> when data entry is valid and <b>False</b> when data entry is invalid.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="9261e-121">
                <b>xlInputOnly</b>
              </span><span class="sxs-lookup"><span data-stu-id="9261e-121">
                <b>xlInputOnly</b>
              </span></span></term>
              <description><span data-ttu-id="9261e-122">
                <paramref name="AlertStyle" />, <paramref name="Formula1" /> ou <paramref name="Formula2" /> sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="9261e-122">
                <paramref name="AlertStyle" />, <paramref name="Formula1" />, or <paramref name="Formula2" /> are used.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="9261e-123">
                <b>xlValidateList</b>
              </span><span class="sxs-lookup"><span data-stu-id="9261e-123">
                <b>xlValidateList</b>
              </span></span></term>
              <description><span data-ttu-id="9261e-124">
                <paramref name="Formula1" /> est obligatoire ; <paramref name="Formula2" /> est ignoré.</span><span class="sxs-lookup"><span data-stu-id="9261e-124">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="9261e-125"><paramref name="Formula1" /> doit contenir une liste de valeurs délimitées par des virgules ou une référence de feuille de calcul à cette liste.</span><span class="sxs-lookup"><span data-stu-id="9261e-125"><paramref name="Formula1" /> must contain either a comma-delimited list of values or a worksheet reference to this list.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="9261e-126">
                <b>XlValidateWholeNumbe</b>r, <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, ou <b>xlValidateTime</b></span><span class="sxs-lookup"><span data-stu-id="9261e-126">
                <b>xlValidateWholeNumber</b>, <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, or <b>xlValidateTime</b></span></span></term>
              <description><span data-ttu-id="9261e-127">L’une <paramref name="Formula1" /> ou l’autre doit être <paramref name="Formula2" /> spécifiée, ou les deux peuvent être spécifiées.</span><span class="sxs-lookup"><span data-stu-id="9261e-127">One of either <paramref name="Formula1" /> or <paramref name="Formula2" /> must be specified, or both may be specified.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertStyle">
      <MemberSignature Language="C#" Value="public int AlertStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlertStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.AlertStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlertStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlertStyle { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1605)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1605)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-128">Renvoie le style d'alerte de validation.</span><span class="sxs-lookup"><span data-stu-id="9261e-128">Returns the validation alert style.</span></span> <span data-ttu-id="9261e-129">En lecture <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> seule.</span><span class="sxs-lookup"><span data-stu-id="9261e-129">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="9261e-130">Utilisez la <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> méthode pour définir le style d’alerte d’une plage.</span><span class="sxs-lookup"><span data-stu-id="9261e-130">Use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> method to set the alert style for a range.</span></span> <span data-ttu-id="9261e-131">Si la plage possède déjà une validation des données, utilisez <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> la méthode pour modifier le style d’alerte.</span><span class="sxs-lookup"><span data-stu-id="9261e-131">If the range already has data validation, use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to change the alert style.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-132">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objet qui représente l’application Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="9261e-132">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-133">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span><span class="sxs-lookup"><span data-stu-id="9261e-133">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="9261e-134">Si l'objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, qui équivaut au nombre hexadécimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="9261e-134">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="9261e-135">En lecture <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> seule.</span><span class="sxs-lookup"><span data-stu-id="9261e-135">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="9261e-136">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, dans lequel chaque application possède un code de créateur à quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="9261e-136">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="9261e-137">Par exemple, Microsoft Excel possède le code de créateur XCEL.</span><span class="sxs-lookup"><span data-stu-id="9261e-137">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9261e-138">Supprime l'objet.</span><span class="sxs-lookup"><span data-stu-id="9261e-138">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMessage">
      <MemberSignature Language="C#" Value="public string ErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-139">Cette propriété renvoie ou définit le message d'erreur de validation de données.</span><span class="sxs-lookup"><span data-stu-id="9261e-139">Returns or sets the data validation error message.</span></span> <span data-ttu-id="9261e-140"><b>String</b> en lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="9261e-140">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorTitle">
      <MemberSignature Language="C#" Value="public string ErrorTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ErrorTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-141">Renvoie ou définit le titre de la boîte de dialogue d’erreur de validation de données.</span><span class="sxs-lookup"><span data-stu-id="9261e-141">Returns or sets the title of the data-validation error dialog box.</span></span> <span data-ttu-id="9261e-142"><b>String</b> en lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="9261e-142">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula1">
      <MemberSignature Language="C#" Value="public string Formula1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Formula1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula1 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-p114">Renvoie la valeur ou l’expression associée au format conditionnel ou à la validation des données. Il peut s’agir d’une valeur constante, d’une valeur de chaîne, d’une référence de cellule ou d’une formule. Type de données <b>String</b> en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="9261e-p114">Returns the value or expression associated with the conditional format or data validation. Can be a constant value, a string value, a cell reference, or a formula. Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula2">
      <MemberSignature Language="C#" Value="public string Formula2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Formula2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula2 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula2 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-146">Cette propriété renvoie la valeur ou l'expression associée au second élément d'un format conditionnel ou d'une validation de données.</span><span class="sxs-lookup"><span data-stu-id="9261e-146">Returns the value or expression associated with the second part of a conditional format or data validation.</span></span> <span data-ttu-id="9261e-147"><b>String</b> en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="9261e-147">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="9261e-148">Cette propriété est utilisée uniquement lorsque la propriété de mise en forme conditionnelle de validation des données est <see cref="P:Microsoft.Office.Interop.Excel.Validation.Operator" /> <b>xlBetween</b> ou <b>xlNotBetween</b>.</span><span class="sxs-lookup"><span data-stu-id="9261e-148">This property is used only when the data validation conditional format <see cref="P:Microsoft.Office.Interop.Excel.Validation.Operator" /> property is <b>xlBetween</b> or <b>xlNotBetween</b>.</span></span> <span data-ttu-id="9261e-149">Il peut s’agit d’une valeur constante, d’une valeur de chaîne, d’une référence de cellule ou d’une formule.</span><span class="sxs-lookup"><span data-stu-id="9261e-149">It can be a constant value, a string value, a cell reference, or a formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreBlank">
      <MemberSignature Language="C#" Value="public bool IgnoreBlank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreBlank" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.IgnoreBlank" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreBlank As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreBlank { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-150">Cette propriété a la valeur <b>True</b> si des valeurs nulles sont autorisées par la validation de données de la plage.</span><span class="sxs-lookup"><span data-stu-id="9261e-150"><b>True</b> if blank values are permitted by the range data validation.</span></span> <span data-ttu-id="9261e-151"><b>Boolean</b> (en lecture/écriture).</span><span class="sxs-lookup"><span data-stu-id="9261e-151">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="9261e-152">Si la <b>propriété IgnoreBlank</b> a la valeur <b>True,</b>les données de cellule sont considérées comme valides si la cellule est vide ou si une cellule référencé par la ou la propriété <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MinNumber" /> est <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxNumber" /> vide.</span><span class="sxs-lookup"><span data-stu-id="9261e-152">If the <b>IgnoreBlank</b> property is <b>True</b>, cell data is considered valid if the cell is blank, or if a cell referenced by either the <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MinNumber" /> or <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxNumber" /> property is blank.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IMEMode">
      <MemberSignature Language="C#" Value="public int IMEMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IMEMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.IMEMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IMEMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IMEMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-153">Renvoie ou définit la description des règles de saisie du japonais.</span><span class="sxs-lookup"><span data-stu-id="9261e-153">Returns or sets the description of the Japanese input rules.</span></span> <span data-ttu-id="9261e-154">Il peut s’y trouver <see cref="T:Microsoft.Office.Interop.Excel.XlIMEMode" /> l’une des constantes.</span><span class="sxs-lookup"><span data-stu-id="9261e-154">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlIMEMode" /> constants.</span></span> <span data-ttu-id="9261e-155"><b>Entier</b> en lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="9261e-155">Read/write <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="9261e-156">Notez que cette propriété ne peut être définie que lorsque la langue japonaise a été installée et sélectionnée.</span><span class="sxs-lookup"><span data-stu-id="9261e-156">Note that this property can be set only when Japanese language support has been installed and selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InCellDropdown">
      <MemberSignature Language="C#" Value="public bool InCellDropdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InCellDropdown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InCellDropdown" />
      <MemberSignature Language="VB.NET" Value="Public Property InCellDropdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InCellDropdown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-157"><b>True</b> si la validation de données affiche une liste déroulante qui contient les valeurs autorisées.</span><span class="sxs-lookup"><span data-stu-id="9261e-157"><b>True</b> if data validation displays a drop-down list that contains acceptable values.</span></span> <span data-ttu-id="9261e-158"><b>Boolean</b> (en lecture/écriture).</span><span class="sxs-lookup"><span data-stu-id="9261e-158">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="9261e-159">Cette propriété est ignorée si le type de validation n'est pas <b>xlValidateList</b>.</span><span class="sxs-lookup"><span data-stu-id="9261e-159">This property is ignored if the validation type isn’t <b>xlValidateList</b>.</span></span></para>
          <para><span data-ttu-id="9261e-160">Utilisez <paramref name="Minimum" /> l’argument ou <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> la méthode de l’objet pour <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> spécifier la plage qui contient des données valides.</span><span class="sxs-lookup"><span data-stu-id="9261e-160">Use the <paramref name="Minimum" /> argument of the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> or <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object to specify the range that contains valid data.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InputMessage">
      <MemberSignature Language="C#" Value="public string InputMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InputMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property InputMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-161">Cette propriété renvoie ou définit le message d'entrée de validation de données.</span><span class="sxs-lookup"><span data-stu-id="9261e-161">Returns or sets the data validation input message.</span></span> <span data-ttu-id="9261e-162"><b>String</b> en lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="9261e-162">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTitle">
      <MemberSignature Language="C#" Value="public string InputTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InputTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property InputTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-163">Renvoie ou définit le titre de la boîte de dialogue d’entrée de validation de données.</span><span class="sxs-lookup"><span data-stu-id="9261e-163">Returns or sets the title of the data-validation input dialog box.</span></span> <span data-ttu-id="9261e-164"><b>String</b> en lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="9261e-164">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modify">
      <MemberSignature Language="C#" Value="public void Modify (object Type, object AlertStyle, object Operator, object Formula1, object Formula2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Modify([in]object Type, [in]object AlertStyle, [in]object Operator, [in]object Formula1, [in]object Formula2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Modify (Optional Type As Object, Optional AlertStyle As Object, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="AlertStyle" Type="System.Object" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="9261e-165">Obligatoire <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" /> .</span><span class="sxs-lookup"><span data-stu-id="9261e-165">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span> <span data-ttu-id="9261e-166">Type de validation.</span><span class="sxs-lookup"><span data-stu-id="9261e-166">The validation type.</span></span></param>
        <param name="AlertStyle"><span data-ttu-id="9261e-167">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="9261e-167">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />.</span></span> <span data-ttu-id="9261e-168">Style d'alerte de validation.</span><span class="sxs-lookup"><span data-stu-id="9261e-168">The validation alert style.</span></span></param>
        <param name="Operator"><span data-ttu-id="9261e-169">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> .</span><span class="sxs-lookup"><span data-stu-id="9261e-169">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" />.</span></span> <span data-ttu-id="9261e-170">Opérateur de validation des données.</span><span class="sxs-lookup"><span data-stu-id="9261e-170">The data validation operator.</span></span></param>
        <param name="Formula1"><span data-ttu-id="9261e-171">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="9261e-171">Optional <b>Object</b>.</span></span> <span data-ttu-id="9261e-172">La première partie de l'équation de validation des données.</span><span class="sxs-lookup"><span data-stu-id="9261e-172">The first part of the data validation equation.</span></span></param>
        <param name="Formula2"><span data-ttu-id="9261e-173">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="9261e-173">Optional <b>Object</b>.</span></span> <span data-ttu-id="9261e-174">La deuxième partie de la validation des données est <paramref name="Operator" /> <b>xlBetween</b> ou <b>xlNotBetween</b> (sinon, cet argument est ignoré).</span><span class="sxs-lookup"><span data-stu-id="9261e-174">The second part of the data validation when <paramref name="Operator" /> is <b>xlBetween</b> or <b>xlNotBetween</b> (otherwise, this argument is ignored).</span></span></param>
        <summary><span data-ttu-id="9261e-175">Cette méthode modifie la validation de données pour une plage.</span><span class="sxs-lookup"><span data-stu-id="9261e-175">Modifies data validation for a range.</span></span></summary>
        <remarks><para><span data-ttu-id="9261e-176">La méthode <b>Modify</b> requiert différents arguments, selon le type de validation, comme le montre le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="9261e-176">The <b>Modify</b> method requires different arguments, depending on the validation type, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="9261e-177">
                <b>xlInputOnly</b>
              </span><span class="sxs-lookup"><span data-stu-id="9261e-177">
                <b>xlInputOnly</b>
              </span></span></term>
              <description><span data-ttu-id="9261e-178">
                <paramref name="AlertStyle" />, <paramref name="Formula1" /> et ne sont pas <paramref name="Formula2" /> utilisés.</span><span class="sxs-lookup"><span data-stu-id="9261e-178">
                <paramref name="AlertStyle" />, <paramref name="Formula1" />, and <paramref name="Formula2" /> are not used.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="9261e-179">
                <b>xlValidateCustom</b>
              </span><span class="sxs-lookup"><span data-stu-id="9261e-179">
                <b>xlValidateCustom</b>
              </span></span></term>
              <description><span data-ttu-id="9261e-180">
                <paramref name="Formula1" /> est obligatoire ; <paramref name="Formula2" /> est ignoré.</span><span class="sxs-lookup"><span data-stu-id="9261e-180">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="9261e-181"><paramref name="Formula1" /> doit contenir une expression qui est évaluée à <b>True</b> lorsque l’entrée de données est valide et <b>False</b> lorsque l’entrée de données n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="9261e-181"><paramref name="Formula1" /> must contain an expression that evaluates to <b>True</b> when data entry is valid and <b>False</b> when data entry is invalid.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="9261e-182">
                <b>xlValidateList</b>
              </span><span class="sxs-lookup"><span data-stu-id="9261e-182">
                <b>xlValidateList</b>
              </span></span></term>
              <description><span data-ttu-id="9261e-183">
                <paramref name="Formula1" /> est obligatoire ; <paramref name="Formula2" /> est ignoré.</span><span class="sxs-lookup"><span data-stu-id="9261e-183">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="9261e-184"><paramref name="Formula1" /> doit contenir une liste de valeurs délimitée par des virgules ou une référence de feuille de calcul à la liste.</span><span class="sxs-lookup"><span data-stu-id="9261e-184"><paramref name="Formula1" /> must contain either a comma-delimited list of values or a worksheet reference to the list.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="9261e-185">
                <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, <b>xlValidateTime</b> ou <b>xlValidateWholeNumber</b></span><span class="sxs-lookup"><span data-stu-id="9261e-185">
                <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, <b>xlValidateTime</b>, or <b>xlValidateWholeNumber</b></span></span></term>
              <description><span data-ttu-id="9261e-186">
                <paramref name="Formula1" /> ou <paramref name="Formula2" /> les deux, doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="9261e-186">
                <paramref name="Formula1" /> or <paramref name="Formula2" />, or both, must be specified.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public int Operator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Operator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Operator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-187">Renvoie l’opérateur de la mise en forme conditionnelle ou de la validation des données.</span><span class="sxs-lookup"><span data-stu-id="9261e-187">Returns the operator for the conditional format or data validation.</span></span> <span data-ttu-id="9261e-188"><b>Entier</b> en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="9261e-188">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-189">Renvoie l’objet parent pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="9261e-189">Returns the parent object for the specified object.</span></span> <span data-ttu-id="9261e-190">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="9261e-190">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowError">
      <MemberSignature Language="C#" Value="public bool ShowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ShowError" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-191"><b>True</b> si le message d’erreur de validation de données s’affiche lorsque l’utilisateur entre des données non valides.</span><span class="sxs-lookup"><span data-stu-id="9261e-191"><b>True</b> if the data validation error message will be displayed whenever the user enters invalid data.</span></span> <span data-ttu-id="9261e-192"><b>Boolean</b> (en lecture/écriture).</span><span class="sxs-lookup"><span data-stu-id="9261e-192">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInput">
      <MemberSignature Language="C#" Value="public bool ShowInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInput" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ShowInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-193">Cette propriété a la valeur <b>True</b> si le message d'entrée de validation des données s'affiche lorsque l'utilisateur sélectionne une cellule se trouvant dans la plage de validation des données.</span><span class="sxs-lookup"><span data-stu-id="9261e-193"><b>True</b> if the data validation input message will be displayed whenever the user selects a cell in the data validation range.</span></span> <span data-ttu-id="9261e-194"><b>Boolean</b> (en lecture/écriture).</span><span class="sxs-lookup"><span data-stu-id="9261e-194">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-195">Renvoie la validation du type de données pour une plage.</span><span class="sxs-lookup"><span data-stu-id="9261e-195">Returns data type validation for a range.</span></span> <span data-ttu-id="9261e-196">En lecture seule <b>integer</b> qui peut être l’une des constantes de <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" /> .</span><span class="sxs-lookup"><span data-stu-id="9261e-196">Read-only <b>Integer</b> that can be one of the constants of <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public bool Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Value { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9261e-197"><b>True</b> si tous les critères de validation sont satisfaits (autrement dit, si la plage contient des données valides).</span><span class="sxs-lookup"><span data-stu-id="9261e-197"><b>True</b> if all the validation criteria are met (that is, if the range contains valid data).</span></span> <span data-ttu-id="9261e-198"><b>Boolean</b> (en lecture seule).</span><span class="sxs-lookup"><span data-stu-id="9261e-198">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>