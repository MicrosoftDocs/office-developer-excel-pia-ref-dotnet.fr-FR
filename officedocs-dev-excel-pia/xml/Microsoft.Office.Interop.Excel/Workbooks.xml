<Type Name="Workbooks" FullName="Microsoft.Office.Interop.Excel.Workbooks">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b12eeb1525d59a72dc56c31e86d541cd2b6125d0" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20574934" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Workbooks : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbooks implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbooks" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbooks&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbooks : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="22f99-101">Collection de tous les <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> les objets qui sont actuellement ouverts dans l’application Microsoft Excel.</span>
      <span class="sxs-lookup">
        <span data-stu-id="22f99-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objects that are currently open in the Microsoft Excel application.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="22f99-102">
        <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> propriété permet de renvoyer la collection <b>Workbooks</b> .</para>
        <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> méthode pour créer un nouveau classeur vide et l’ajouter à la collection.</para>
        <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode afin d’ouvrir un fichier.</para>
        <para>Pour plus d’informations sur l’utilisation d’un objet <b>Workbook</b> , voir la <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objet.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="22f99-102">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property to return the <b>Workbooks</b> collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> method to create a new, empty workbook and add it to the collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to open a file.</para>
          <para>For more information about using a single <b>Workbook</b> object, see the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="__OpenText">
      <MemberSignature Language="C#" Value="public void __OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void __OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub __OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(683)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="22f99-103">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-103">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="22f99-104">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-104">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(682)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="UpdateLinks">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="IgnoreReadOnlyRecommended">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="Delimiter">To be added.</param>
        <param name="Editable">To be added.</param>
        <param name="Notify">To be added.</param>
        <param name="Converter">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <summary>
          <span data-ttu-id="22f99-105">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-105">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenText">
      <MemberSignature Language="C#" Value="public void _OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <param name="DecimalSeparator">To be added.</param>
        <param name="ThousandsSeparator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _OpenXML (string Filename, object Stylesheets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _OpenXML([in]string Filename, [in]object Stylesheets) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _OpenXML (Filename As String, Optional Stylesheets As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2071)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Stylesheets">To be added.</param>
        <summary>
          <span data-ttu-id="22f99-106">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-106">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Add (object Template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Add([in]object Template) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Template As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Template">
          <span data-ttu-id="22f99-107">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-107">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-108">Détermine la façon dont le nouveau classeur est créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-108">Determines how the new workbook is created.</span>
          </span>
          <span data-ttu-id="22f99-109">Si cet argument est une chaîne spécifiant le nom d’un fichier Microsoft Excel existant, le nouveau classeur est créé avec le fichier spécifié en tant que modèle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-109">If this argument is a string specifying the name of an existing Microsoft Excel file, the new workbook is created with the specified file as a template.</span>
          </span>
          <span data-ttu-id="22f99-110">Si cet argument est une constante, le nouveau classeur contient une seule feuille du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-110">If this argument is a constant, the new workbook contains a single sheet of the specified type.</span>
          </span>
          <span data-ttu-id="22f99-111">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constantes : <b>xlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>ou <b>xlWBATWorksheet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-111">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constants: <b>xlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>, or <b>xlWBATWorksheet</b>.</span>
          </span>
          <span data-ttu-id="22f99-112">Si cet argument est omis, Microsoft Excel crée un nouveau classeur avec un certain nombre de feuilles vierges (le nombre de feuilles est défini par la propriété <b>SheetsInNewWorkbook</b> ).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-112">If this argument is omitted, Microsoft Excel creates a new workbook with a number of blank sheets (the number of sheets is set by the <b>SheetsInNewWorkbook</b> property).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22f99-113">Crée un nouveau classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-113">Creates a new workbook.</span>
          </span>
          <span data-ttu-id="22f99-114">Le nouveau classeur devient le classeur actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-114">The new workbook becomes the active workbook.</span>
          </span>
          <span data-ttu-id="22f99-115">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-115">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="22f99-116">
            <para>Si le <paramref name="Template" /> argument spécifie un fichier, le nom de fichier peut inclure un chemin d’accès.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-116">
              <para>If the <paramref name="Template" /> argument specifies a file, the file name can include a path.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22f99-117">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-117">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="22f99-118">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-118">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2070)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="22f99-119">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-119">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="22f99-120">Représente le nom du fichier à extraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-120">The name of the file to check out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22f99-p105">
            <b>True</b> si Microsoft Excel peut extraire un classeur spécifié se trouvant sur un serveur. Type de données <b>Boolean</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-p105">
              <b>True</b> if Microsoft Excel can check out a specified workbook from a server. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="22f99-123">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-123">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="22f99-124">Représente le nom du fichier à extraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-124">The name of the file to check out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22f99-125">Copie du classeur spécifié à partir d’un serveur sur un ordinateur local pour modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-125">Copies the specified workbook from a server to a local computer for editing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22f99-126">Ferme l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-126">Closes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="22f99-127">
            <para>Fermeture d’un classeur à l’aide de la méthode <b>Close</b> n’exécute aucune macro Auto_Close du classeur. Utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> méthode pour l’exécuter.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-127">
              <para>Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22f99-128">Renvoie le nombre d'objets dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-128">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="22f99-129">Valeur <b>Integer</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-129">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22f99-130">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-130">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="22f99-131">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-131">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="22f99-132">En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-132">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="22f99-133">
            <para>La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Excel possède le code créateur XCEL.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-133">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="22f99-134">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-134">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-135">Nom ou numéro d'index de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-135">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22f99-136">Renvoie un seul objet d'une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-136">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru, object Local, object CorruptLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru, [in]object Local, [in]object CorruptLoad) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object, Optional Local As Object, Optional CorruptLoad As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
        <Parameter Name="CorruptLoad" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="22f99-137">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-137">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="22f99-138">Nom de fichier du classeur à ouvrir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-138">The file name of the workbook to be opened.</span>
          </span>
        </param>
        <param name="UpdateLinks">
          <span data-ttu-id="22f99-139">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-139">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-140">Spécifie que les façon dont les liens dans le fichier sont mis à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-140">Specifies the way links in the file are updated.</span>
          </span>
          <span data-ttu-id="22f99-141">Si cet argument est omis, l’utilisateur est invité à spécifier la mise à jour des liens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-141">If this argument is omitted, the user is prompted to specify how links will be updated.</span>
          </span>
          <span data-ttu-id="22f99-142">Sinon, cet argument est une des valeurs répertoriées dans le tableau suivant. Si Microsoft Excel ouvre un fichier dans WKS, WK1 ou WK3 mettre en forme et la <paramref name="UpdateLinks" /> argument est 2, Microsoft Excel génère des graphiques à partir des diagrammes associés au fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-142">Otherwise, this argument is one of the values listed in the following table.If Microsoft Excel is opening a file in the WKS, WK1, or WK3 format and the <paramref name="UpdateLinks" /> argument is 2, Microsoft Excel generates charts from the graphs attached to the file.</span>
          </span>
          <span data-ttu-id="22f99-143">Si l’argument est 0, aucun graphique n’est créés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-143">If the argument is 0, no charts are created.</span>
          </span>
        </param>
        <param name="ReadOnly">
          <span data-ttu-id="22f99-144">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-144">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-145">True pour ouvrir le classeur en mode lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-145">True to open the workbook in read-only mode.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="22f99-146">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-146">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-147">Si Microsoft Excel ouvre un fichier texte, cet argument spécifie le caractère séparateur, comme illustré dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-147">If Microsoft Excel is opening a text file, this argument specifies the delimiter character, as shown in the following table.</span>
          </span>
          <span data-ttu-id="22f99-148">Si cet argument est omis, le séparateur actuel est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-148">If this argument is omitted, the current delimiter is used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="22f99-149">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-149">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-150">Chaîne qui contient le mot de passe requis pour ouvrir un classeur protégé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-150">A string that contains the password required to open a protected workbook.</span>
          </span>
          <span data-ttu-id="22f99-151">Si cet argument est omis et que le classeur requiert un mot de passe, l’utilisateur soit invité à entrer le mot de passe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-151">If this argument is omitted and the workbook requires a password, the user is prompted for the password.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="22f99-152">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-152">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-153">Chaîne qui contient le mot de passe requis pour écrire dans un classeur protégé en écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-153">A string that contains the password required to write to a write-reserved workbook.</span>
          </span>
          <span data-ttu-id="22f99-154">Si cet argument est omis et que le classeur requiert un mot de passe, l’utilisateur sera invité pour le mot de passe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-154">If this argument is omitted and the workbook requires a password, the user will be prompted for the password.</span>
          </span>
        </param>
        <param name="IgnoreReadOnlyRecommended">
          <span data-ttu-id="22f99-155">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-155">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-156">
            <b>True</b> pour que Microsoft Excel n'affiche pas le message en lecture seule recommandée (si le classeur a été enregistré avec l'option <b>Lecture seule recommandée</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-156">
              <b>True</b> to have Microsoft Excel not display the read-only recommended message (if the workbook was saved with the <b>Read-Only Recommended</b> option).</span>
          </span>
        </param>
        <param name="Origin">
          <span data-ttu-id="22f99-157">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-157">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-158">Si le fichier est un fichier texte, cet argument indique sa provenance (afin que les pages de code et chariot retour/saut de ligne (CR/LF) puissent être mappés correctement).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-158">If the file is a text file, this argument indicates where it originated (so that code pages and Carriage Return/Line Feed (CR/LF) can be mapped correctly).</span>
          </span>
          <span data-ttu-id="22f99-159">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constantes : <b>xlMacintosh</b>, <b>xlWindows</b>ou <b>xlMSDOS</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-159">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span>
          </span>
          <span data-ttu-id="22f99-160">Si cet argument est omis, le système d’exploitation actuel est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-160">If this argument is omitted, the current operating system is used.</span>
          </span>
        </param>
        <param name="Delimiter">
          <span data-ttu-id="22f99-161">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-161">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-162">Si le fichier est un fichier texte et l’argument <b>Format</b> est 6, cet argument est une chaîne qui spécifie le caractère à utiliser comme séparateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-162">If the file is a text file and the <b>Format</b> argument is 6, this argument is a string that specifies the character to be used as the delimiter.</span>
          </span>
          <span data-ttu-id="22f99-163">Par exemple, utilisez Chr (9) pour les tabulations, «, » pour les virgules, « ; » pour points-virgules ou un caractère personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-163">For example, use Chr(9) for tabs, use "," for commas, use ";" for semicolons, or use a custom character.</span>
          </span>
          <span data-ttu-id="22f99-164">Seul le premier caractère de la chaîne est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-164">Only the first character of the string is used.</span>
          </span>
        </param>
        <param name="Editable">
          <span data-ttu-id="22f99-165">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-165">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-166">Si le fichier est un complément Microsoft Excel 4.0, cet argument a <b>la valeur True</b> pour ouvrir le complément afin qu’il soit une fenêtre visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-166">If the file is a Microsoft Excel 4.0 add-in, this argument is <b>True</b> to open the add-in so that it’s a visible window.</span>
          </span>
          <span data-ttu-id="22f99-167">Si cet argument a la <b>valeur False</b> ou omis, le complément est ouvert mais masqué et il ne peut pas être affichée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-167">If this argument is <b>False</b> or omitted, the add-in is opened as hidden, and it cannot be unhidden.</span>
          </span>
          <span data-ttu-id="22f99-168">Cette option ne s’applique pas aux compléments créés dans Microsoft Excel 5.0 ou version ultérieure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-168">This option doesn't apply to add-ins created in Microsoft Excel 5.0 or later.</span>
          </span>
          <span data-ttu-id="22f99-169">Si le fichier est un modèle Excel, utilisez <b>la valeur True</b> pour ouvrir le modèle spécifié pour modification ou <b>False</b> pour ouvrir un nouveau classeur basé sur le modèle spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-169">If the file is an Excel template, use <b>True</b> to open the specified template for editing or <b>False</b> to open a new workbook based on the specified template.</span>
          </span>
          <span data-ttu-id="22f99-170">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-170">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Notify">
          <span data-ttu-id="22f99-171">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-171">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-172">Si le fichier ne peut pas être ouvert en mode lecture/écriture, cet argument est <b>la valeur True</b> pour ajouter le fichier à la liste de notifications de fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-172">If the file cannot be opened in read/write mode, this argument is <b>True</b> to add the file to the file notification list.</span>
          </span>
          <span data-ttu-id="22f99-173">Microsoft Excel sera ouvrir le fichier en lecture seule, interroge la liste de notification de fichier et avertit l’utilisateur lorsque le fichier est disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-173">Microsoft Excel will open the file as read-only, poll the file notification list, and then notify the user when the file becomes available.</span>
          </span>
          <span data-ttu-id="22f99-174">Si cet argument a la <b>valeur False</b> ou est omis, aucune notification n’est demandée et toute tentative d’ouvrir un fichier non disponible échoue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-174">If this argument is <b>False</b> or omitted, no notification is requested, and any attempts to open an unavailable file will fail.</span>
          </span>
        </param>
        <param name="Converter">
          <span data-ttu-id="22f99-175">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-175">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-176">L’index du premier convertisseur de fichier à essayer lors de l’ouverture du fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-176">The index of the first file converter to try when opening the file.</span>
          </span>
          <span data-ttu-id="22f99-177">Le convertisseur de fichier spécifié est essayé en premier ; Si ce convertisseur ne reconnaît pas le fichier, tous les autres convertisseurs sont testés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-177">The specified file converter is tried first; if this converter doesn’t recognize the file, all other converters are tried.</span>
          </span>
          <span data-ttu-id="22f99-178">L’index du convertisseur se compose des numéros de ligne des convertisseurs renvoyés par la <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-178">The converter index consists of the row numbers of the converters returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> property.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="22f99-179">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-179">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-180">
            <b>True</b> pour ajouter ce classeur à la liste des derniers fichiers utilisés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-180">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="22f99-181">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-181">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="22f99-182">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-182">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-183">
            <b>True</b> enregistre les fichiers en fonction de la langue de Microsoft Excel (y compris les paramètres du Panneau de configuration).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-183">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="22f99-184">
            <b>False</b> (valeur par défaut) enregistre les fichiers par rapport à la langue de Visual Basic pour Applications (VBA) (qui est généralement l’anglais (États-Unis), sauf si le projet VBA où Workbooks.Open est exécuté est un ancien projet VBA XL5/95).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-184">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <param name="CorruptLoad">
          <span data-ttu-id="22f99-185">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-185">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-186">Peut être une des constantes suivantes : <b>xlNormalLoad</b>, <b>xlRepairFile</b>et <b>xlExtractData</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-186">Can be one of the following constants: <b>xlNormalLoad</b>, <b>xlRepairFile</b>, and <b>xlExtractData</b>.</span>
          </span>
          <span data-ttu-id="22f99-187">Le comportement par défaut si aucune valeur n’est spécifiée est habituellement normal, mais peut être approuvée récupération de données ou de chargement si Excel a déjà tenté d’ouvrir le fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-187">The default behavior if no value is specified is usually normal, but may be safe load or data recovery if Excel has already attempted to open the file.</span>
          </span>
          <span data-ttu-id="22f99-188">La première tentative est normale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-188">The first attempt is normal.</span>
          </span>
          <span data-ttu-id="22f99-189">Si Excel cesse de fonctionner lors de l’ouverture du fichier, la deuxième tentative est charge fiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-189">If Excel stops operating while opening the file, the second attempt is safe load.</span>
          </span>
          <span data-ttu-id="22f99-190">Si Excel s’arrête à nouveau d’exploitation, la tentative suivante est la récupération des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-190">If Excel again stops operating, the next attempt is data recovery.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22f99-191">Ouvre un classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-191">Opens a workbook.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="22f99-192">
            <para>Par défaut, les macros sont activées lors de l’ouverture de fichiers par programme. Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> propriété à définir le mode de sécurité de macro utilisé lors de l’ouverture des fichiers par programme.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-192">
              <para>By default, macros are enabled when opening files programmatically. Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> property to set the macro security mode used when opening files programmatically.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenDatabase (string Filename, object CommandText, object CommandType, object BackgroundQuery, object ImportDataAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenDatabase([in]string Filename, [in]object CommandText, [in]object CommandType, [in]object BackgroundQuery, [in]object ImportDataAs) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenDatabase (Filename As String, Optional CommandText As Object, Optional CommandType As Object, Optional BackgroundQuery As Object, Optional ImportDataAs As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="CommandType" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="ImportDataAs" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="22f99-193">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-193">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="22f99-194">Chaîne de connexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-194">The connection string.</span>
          </span>
        </param>
        <param name="CommandText">
          <span data-ttu-id="22f99-195">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-195">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-196">Texte de commande de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-196">The command text of the query.</span>
          </span>
        </param>
        <param name="CommandType">
          <span data-ttu-id="22f99-197">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-197">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-198">Le type de commande de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-198">The command type of the query.</span>
          </span>
          <span data-ttu-id="22f99-199">Les types de commande suivants sont disponibles : Default, SQL et Table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-199">The following command types are available: Default, SQL, and Table.</span>
          </span>
        </param>
        <param name="BackgroundQuery">
          <span data-ttu-id="22f99-200">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-200">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-201">Arrière-plan de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-201">The background of the query.</span>
          </span>
        </param>
        <param name="ImportDataAs">
          <span data-ttu-id="22f99-202">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-202">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-203">Détermine le format de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-203">Determines the format of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22f99-204">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> représentant une base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-204">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object representing a database.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public void OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="22f99-205">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-205">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="22f99-206">Spécifie le nom du fichier texte à ouvrir et analyser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-206">Specifies the file name of the text file to be opened and parsed.</span>
          </span>
        </param>
        <param name="Origin">
          <span data-ttu-id="22f99-207">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-207">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-208">Spécifie l’origine du fichier texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-208">Specifies the origin of the text file.</span>
          </span>
          <span data-ttu-id="22f99-209">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constantes : <b>xlMacintosh</b>, <b>xlWindows</b>ou <b>xlMSDOS</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-209">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span>
          </span>
          <span data-ttu-id="22f99-210">En outre, il peut être un entier représentant le numéro de page de code de la page de code de votre choix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-210">Additionally, this could be an integer representing the code page number of the desired code page.</span>
          </span>
          <span data-ttu-id="22f99-211">Par exemple, « 1256 » Spécifie que le codage du fichier texte source est arabe (Windows).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-211">For example, "1256" would specify that the encoding of the source text file is Arabic (Windows).</span>
          </span>
          <span data-ttu-id="22f99-212">Si cet argument est omis, la méthode utilise le paramètre actuel de l’option origine du fichier dans l' <b>Assistant Importation de texte</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-212">If this argument is omitted, the method uses the current setting of the File Origin option in the <b>Text Import Wizard</b>.</span>
          </span>
        </param>
        <param name="StartRow">
          <span data-ttu-id="22f99-213">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-213">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-214">Numéro de ligne à partir duquel commencer l’analyse de texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-214">The row number at which to start parsing text.</span>
          </span>
          <span data-ttu-id="22f99-215">La valeur par défaut est 1 (un).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-215">The default value is 1.</span>
          </span>
        </param>
        <param name="DataType">
          <span data-ttu-id="22f99-216">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-216">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-217">Spécifie le format de colonne des données dans le fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-217">Specifies the column format of the data in the file.</span>
          </span>
          <span data-ttu-id="22f99-218">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constantes : <b>xlDelimited</b> ou <b>xlFixedWidth</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-218">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constants: <b>xlDelimited</b> or <b>xlFixedWidth</b>.</span>
          </span>
          <span data-ttu-id="22f99-219">Si cet argument n’est pas spécifié, Microsoft Excel tente de déterminer le format de colonne lors de l’ouverture du fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-219">If this argument is not specified, Microsoft Excel attempts to determine the column format when it opens the file.</span>
          </span>
        </param>
        <param name="TextQualifier">
          <span data-ttu-id="22f99-220">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-220">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          </span>
          <span data-ttu-id="22f99-221">Spécifie l'identificateur de texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-221">Specifies the text qualifier.</span>
          </span>
          <span data-ttu-id="22f99-222">Peut être une de ces <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constantes. <b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-222">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constants.<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          </span>
        </param>
        <param name="ConsecutiveDelimiter">
          <span data-ttu-id="22f99-223">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-223">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-224">
            <b>True</b> pour que les séparateurs consécutifs considéré comme un seul séparateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-224">
              <b>True</b> to have consecutive delimiters considered one delimiter.</span>
          </span>
          <span data-ttu-id="22f99-225">La valeur par défaut est <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-225">The default is <b>False</b>.</span>
          </span>
        </param>
        <param name="Tab">
          <span data-ttu-id="22f99-226">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-226">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-227">True pour que le caractère de tabulation soit le séparateur (<paramref name="DataType" /> doit avoir la <b>valeur xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-227">True to have the tab character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="22f99-228">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-228">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Semicolon">
          <span data-ttu-id="22f99-229">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-229">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-230">
            <b>True</b> pour que le point-virgule comme caractère séparateur (<paramref name="DataType" /> doit avoir la <b>valeur xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-230">
              <b>True</b> to have the semicolon character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="22f99-231">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-231">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Comma">
          <span data-ttu-id="22f99-232">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-232">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-233">
            <b>True</b> pour que la virgule soit le séparateur (<paramref name="DataType" /> doit avoir la <b>valeur xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-233">
              <b>True</b> to have the comma character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="22f99-234">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-234">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Space">
          <span data-ttu-id="22f99-235">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-235">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-236">
            <b>True</b> pour que le caractère d’espacement comme caractère séparateur (<paramref name="DataType" /> doit avoir la <b>valeur xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-236">
              <b>True</b> to have the space character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="22f99-237">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-237">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Other">
          <span data-ttu-id="22f99-238">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-238">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-239">
            <b>True</b> pour que le caractère spécifié par le <paramref name="OtherChar" /> argument soit le séparateur (<paramref name="DataType" /> doit avoir la <b>valeur xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-239">
              <b>True</b> to have the character specified by the <paramref name="OtherChar" /> argument be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="22f99-240">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-240">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OtherChar">
          <span data-ttu-id="22f99-241">
            <b>Objet</b> de type facultatif (obligatoire si <paramref name="Other" /> a la <b>valeur True</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-241">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span>
          </span>
          <span data-ttu-id="22f99-242">Spécifie le séparateur de caractères quand <paramref name="Other" /> a la <b>valeur True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-242">Specifies the delimiter character when <paramref name="Other" /> is <b>True</b>.</span>
          </span>
          <span data-ttu-id="22f99-243">Si plus d’un caractère est spécifié, que seul le premier caractère de la chaîne est utilisé ; les caractères restants sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-243">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span>
          </span>
        </param>
        <param name="FieldInfo">
          <span data-ttu-id="22f99-244">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-244">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />.</span>
          </span>
          <span data-ttu-id="22f99-245">Tableau contenant des informations redistribuées pour des colonnes de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-245">An array containing parse information for individual columns of data.</span>
          </span>
          <span data-ttu-id="22f99-246">L’interprétation dépend de la valeur de <paramref name="DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-246">The interpretation depends on the value of <paramref name="DataType" />.</span>
          </span>
          <span data-ttu-id="22f99-247">Lorsque les données sont délimitées, cet argument est un tableau de tableaux à deux éléments, avec chaque tableau à deux éléments spécifiant les options de conversion d’une colonne particulière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-247">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span>
          </span>
          <span data-ttu-id="22f99-248">Le premier élément est le numéro de colonne (base 1) et le deuxième élément est une des constantes<b>XlColumnDataType</b> indiquant comment la colonne est analysée. <b>xlGeneralFormat</b> Général<b>xlTextFormat</b> texte<b>xlMDYFormat</b> MJA date<b>xlDMYFormat</b> JMA date<b>xlYMDFormat</b> AMJ date<b>xlMYDFormat</b> MAJ. date<b>xlDYMFormat</b> Jam date<b>xlYDMFormat</b> format date<b>xlEMDFormat</b> EMD <b>xlSkipColumn</b> Skip ColumnYou peut utiliser la constante <b>xlEMDFormat</b> uniquement si vous avez installé et sélectionné la prise en charge linguistique taïwanais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-248">The first element is the column number (1-based), and the second element is one of the<b>XlColumnDataType</b> constants specifying how the column is parsed.<b>xlGeneralFormat</b> General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlMYDFormat</b> MYD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip ColumnYou can use <b>xlEMDFormat</b> only if you have installed and selected Taiwanese language support.</span>
          </span>
          <span data-ttu-id="22f99-249">La constante <b>xlEMDFormat</b> Spécifie que les dates sont utilisés. Spécificateurs de colonne peuvent être dans n’importe quel ordre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-249">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span>
          </span>
          <span data-ttu-id="22f99-250">S’il n’existe aucun spécificateur de colonne pour une colonne particulière dans les données d’entrée, la colonne est analysée avec le paramètre général. <b>Notes</b> Si vous spécifiez qu’une colonne doit être ignorée, vous devez indiquer explicitement le type de toutes les colonnes restantes ou les données ne seront pas redistribuées correctement. S’il existe une valeur de date dans les données, la cellule sera affichée sous une date dans la feuille de calcul même si la valeur de la colonne est général.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-250">If there's no column specifier for a particular column in the input data, the column is parsed with the General setting.<b>Notes</b>If you specify that a column is to be skipped, you must explicitly state the type for all remaining columns or the data will not parse correctly.If there is a recognizable date in the data, the cell will be formatted as a date in the worksheet even if the setting for the column is General.</span>
          </span>
          <span data-ttu-id="22f99-251">En outre, si vous spécifiez un des formats de date ci-dessus pour une colonne et les données ne contient pas une date reconnue, le format des cellules dans la feuille de calcul est alors General.If la source de données a des colonnes de largeur fixe, le premier élément de chaque tableau à deux éléments Spécifie la position du premier caractère dans la colonne (sous forme d’entier ; le caractère 0 (zéro) est le premier caractère).</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-251">Additionally, if you specify one of the above date formats for a column and the data does not contain a recognized date, then the cell format in the worksheet will be General.If the source data has fixed-width columns, the first element in each two-element array specifies the position of the starting character in the column (as an integer; character 0 (zero) is the first character).</span>
          </span>
          <span data-ttu-id="22f99-252">Le deuxième élément dans le tableau à deux éléments spécifie l’option de redistribution pour la colonne en tant que nombre compris entre 0 et 9, comme indiqué dans le tableau précédent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-252">The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="22f99-253">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-253">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-254">Mise en page visuelle du texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-254">The visual layout of the text.</span>
          </span>
        </param>
        <param name="DecimalSeparator">
          <span data-ttu-id="22f99-255">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-255">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-256">Séparateur décimal utilisé par Microsoft Excel lors de la reconnaissance des nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-256">The decimal separator that Microsoft Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="22f99-257">Le paramètre par défaut est le paramètre système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-257">The default setting is the system setting.</span>
          </span>
        </param>
        <param name="ThousandsSeparator">
          <span data-ttu-id="22f99-258">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-258">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-259">Les milliers séparateur Excel utilise pour la reconnaissance des nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-259">The thousands separator that Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="22f99-260">Le paramètre par défaut est le paramètre système. Le tableau suivant indique les résultats de l’importation de texte dans Excel pour divers paramètres d’importation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-260">The default setting is the system setting.The following table shows the results of importing text into Excel for various import settings.</span>
          </span>
          <span data-ttu-id="22f99-261">Les résultats numériques sont affichés dans la colonne la plus à droite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-261">Numeric results are displayed in the rightmost column.</span>
          </span>
        </param>
        <param name="TrailingMinusNumbers">
          <span data-ttu-id="22f99-262">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-262">Optional <b>Object</b>.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="22f99-263">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-263">Optional <b>Object</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22f99-264">Charge et analyse un fichier texte comme un nouveau classeur d'une seule feuille contenant des données d'un fichier texte analysé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-264">Loads and parses a text file as a new workbook with a single sheet that contains the parsed text-file data.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenXML (string Filename, object Stylesheets, object LoadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenXML([in]string Filename, [in]object Stylesheets, [in]object LoadOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenXML (Filename As String, Optional Stylesheets As Object, Optional LoadOption As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
        <Parameter Name="LoadOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="22f99-265">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-265">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="22f99-266">Nom du fichier à ouvrir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-266">The name of the file to open.</span>
          </span>
        </param>
        <param name="Stylesheets">
          <span data-ttu-id="22f99-267">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-267">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-268">Une valeur unique ou un tableau de valeurs indiquant quelles instructions de traitement de feuille de style XSLT (XSL Transformation) à appliquer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-268">Either a single value or an array of values that specify which XSL Transformation (XSLT) style sheet processing instructions to apply.</span>
          </span>
        </param>
        <param name="LoadOption">
          <span data-ttu-id="22f99-269">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-269">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="22f99-270">Cette énumération spécifie la façon dont Excel ouvre le fichier de données XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-270">Specifies how Excel opens the XML data file.</span>
          </span>
          <span data-ttu-id="22f99-271">Peut être une de ces <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constantes :<b>xlXmlLoadImportToList</b> place le contenu du fichier de données XML dans une liste XML. <b>xlXmlLoadMapXml</b> Affiche le schéma du fichier de données XML dans le volet Office <b>Structure XML</b> . <b>xlXmlLoadOpenXml</b> Ouvre le fichier de données XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-271">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constants:<b>xlXmlLoadImportToList</b> Places the contents of the XML data file in an XML list.<b>xlXmlLoadMapXml</b> Displays the schema of the XML data file in the <b>XML Structure</b> task pane.<b>xlXmlLoadOpenXml</b> Opens the XML data file.</span>
          </span>
          <span data-ttu-id="22f99-272">Le contenu du fichier sera aplati. <b>xlXmlLoadPromptUser</b> Invite l’utilisateur à choisir comment ouvrir le fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-272">The contents of the file will be flattened.<b>xlXmlLoadPromptUser</b> Prompts the user to choose how to open the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22f99-273">Ouvre un fichier de données XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-273">Opens an XML data file.</span>
          </span>
          <span data-ttu-id="22f99-274">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-274">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="22f99-275">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-275">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22f99-p150">Renvoie l’objet parent de l’objet spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22f99-p150">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>