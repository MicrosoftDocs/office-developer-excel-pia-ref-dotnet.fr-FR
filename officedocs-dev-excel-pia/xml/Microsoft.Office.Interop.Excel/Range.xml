<Type Name="Range" FullName="Microsoft.Office.Interop.Excel.Range">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e87541caefc40cd684f69da1a8301eb9348e7fbc" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20584965" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Range : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Range implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Range" />
  <TypeSignature Language="VB.NET" Value="Public Interface Range&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Range : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020846-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eb640-101">Cette collection représente une cellule, une ligne, une colonne ou une sélection de cellules contenant un ou plusieurs blocs contigus de cellules ou une plage 3D.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb640-101">Represents a cell, a row, a column, a selection of cells containing one or more contiguous blocks of cells, or a 3-D range.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range._Default(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default(Optional RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex">To be added.</param>
        <param name="ColumnIndex">To be added.</param>
        <summary>
          <span data-ttu-id="eb640-102">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-102">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public object _PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste">To be added.</param>
        <param name="Operation">To be added.</param>
        <param name="SkipBlanks">To be added.</param>
        <param name="Transpose">To be added.</param>
        <summary>
          <span data-ttu-id="eb640-103">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-103">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public object _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="eb640-104">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-104">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-105">Active une seule cellule, qui doit être à l’intérieur de la sélection actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-105">Activates a single cell, which must be inside the current selection.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-106">
            <para>Pour sélectionner une plage de cellules, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.Range.Select" /> méthode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-106">
              <para>To select a range of cells, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Select" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddComment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment AddComment (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Comment AddComment([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AddComment(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddComment (Optional Text As Object) As Comment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="eb640-107">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-107">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-108">Texte du commentaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-108">The comment text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-109">Ajoute un commentaire à la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-109">Adds a comment to the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-110">Détermine si le texte est automatiquement mis en retrait lorsque l’alignement du texte dans une cellule est défini sur une distribution égale horizontalement ou verticalement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-110">Determines if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-111">
            <para>Cette propriété renvoie <b>la valeur True</b> si le texte est automatiquement mis en retrait lorsque l’alignement du texte dans une cellule est défini sur une distribution égale horizontalement ou verticalement.</para>
            <para>Pour définir l’alignement du texte égale, vous pouvez définir la <see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" /> propriété <b>xlVAlignDistributed</b> lorsque la valeur de la <see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" /> propriété est <b>xlVertical</b>et vous pouvez définir la <see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" /><b>soit distribué de manière</b> lors de la valeur de la propriété Orientation est <b>xlHorizontal</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-111">
              <para>This property returns <b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</para>
              <para>To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the Orientation property is <b>xlHorizontal</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute">
          <span data-ttu-id="eb640-112">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-112">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-113">
            <b>La valeur true</b> pour renvoyer la partie de la ligne de la référence sous la forme d’une référence absolue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-113">
              <b>True</b> to return the row part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="eb640-114">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-114">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ColumnAbsolute">
          <span data-ttu-id="eb640-115">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-115">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-116">
            <b>La valeur true</b> pour renvoyer la partie colonne de la référence sous la forme d’une référence absolue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-116">
              <b>True</b> to return the column part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="eb640-117">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-117">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ReferenceStyle">
          <span data-ttu-id="eb640-118">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-118">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
        </param>
        <param name="External">
          <span data-ttu-id="eb640-119">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-119">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-120">
            <b>La valeur true</b> pour renvoyer une référence externe ; <b>False</b> pour renvoyer une référence locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-120">
              <b>True</b> to return an external reference; <b>False</b> to return a local reference.</span>
          </span>
          <span data-ttu-id="eb640-121">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-121">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="RelativeTo">
          <span data-ttu-id="eb640-122">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-122">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-123">Si <paramref name="RowAbsolute" /> et <paramref name="ColumnAbsolute" /> est <b>False</b>, et <paramref name="ReferenceStyle" /> est <b>xlR1C1</b>, vous devez inclure un point de départ pour la référence relative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-123">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are <b>False</b>, and <paramref name="ReferenceStyle" /> is <b>xlR1C1</b>, you must include a starting point for the relative reference.</span>
          </span>
          <span data-ttu-id="eb640-124">Cet argument est une <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui définit le point de départ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-124">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-125">Renvoie la référence de plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-125">Returns the range reference.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-126">
            <para>Si la référence contient plusieurs cellules, <paramref name="RowAbsolute" /> et <paramref name="ColumnAbsolute" /> s’appliquent à toutes les lignes et colonnes.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-126">
              <para>If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and columns.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressLocal">
      <MemberSignature Language="C#" Value="public string AddressLocal[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddressLocal(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddressLocal(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddressLocal[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute">
          <span data-ttu-id="eb640-127">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-127">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-128">
            <b>La valeur true</b> pour renvoyer la partie de la ligne de la référence sous la forme d’une référence absolue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-128">
              <b>True</b> to return the row part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="eb640-129">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-129">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ColumnAbsolute">
          <span data-ttu-id="eb640-130">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-130">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-131">
            <b>La valeur true</b> pour renvoyer la partie colonne de la référence sous la forme d’une référence absolue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-131">
              <b>True</b> to return the column part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="eb640-132">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-132">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ReferenceStyle">
          <span data-ttu-id="eb640-133">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-133">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
        </param>
        <param name="External">
          <span data-ttu-id="eb640-134">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-134">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-135">
            <b>La valeur true</b> pour renvoyer une référence externe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-135">
              <b>True</b> to return an external reference.</span>
          </span>
          <span data-ttu-id="eb640-136">
            <b>False</b> pour renvoyer une référence locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-136">
              <b>False</b> to return a local reference.</span>
          </span>
          <span data-ttu-id="eb640-137">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-137">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="RelativeTo">
          <span data-ttu-id="eb640-138">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-138">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-139">Si <paramref name="RowAbsolute" /> et <paramref name="ColumnAbsolute" /> sont toutes deux définies sur <b>False</b> et <paramref name="ReferenceStyle" /> est défini à <b>xlR1C1</b>, vous devez inclure un point de départ pour la référence relative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-139">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are both set to <b>False</b> and <paramref name="ReferenceStyle" /> is set to <b>xlR1C1</b>, you must include a starting point for the relative reference.</span>
          </span>
          <span data-ttu-id="eb640-140">Cet argument est une <see cref="T:Microsoft.Office.Interop.Excel.Range" /> qui définit le point de départ pour la référence d’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-140">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point for the reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-141">Renvoie la référence de la plage spécifiée dans la langue de l’utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-141">Returns the range reference for the specified range in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-142">
            <para>Si la référence contient plusieurs cellules, <paramref name="RowAbsolute" /> et <paramref name="ColumnAbsolute" /> s’appliquent à toutes les lignes et toutes les colonnes, respectivement.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-142">
              <para>If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and all columns, respectively.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedFilter">
      <MemberSignature Language="C#" Value="public object AdvancedFilter (Microsoft.Office.Interop.Excel.XlFilterAction Action, object CriteriaRange, object CopyToRange, object Unique);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AdvancedFilter([in]valuetype Microsoft.Office.Interop.Excel.XlFilterAction Action, [in]object CriteriaRange, [in]object CopyToRange, [in]object Unique) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancedFilter (Action As XlFilterAction, Optional CriteriaRange As Object, Optional CopyToRange As Object, Optional Unique As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Action" Type="Microsoft.Office.Interop.Excel.XlFilterAction" />
        <Parameter Name="CriteriaRange" Type="System.Object" />
        <Parameter Name="CopyToRange" Type="System.Object" />
        <Parameter Name="Unique" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Action">
          <span data-ttu-id="eb640-143">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-143">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" />.</span>
          </span>
          <span data-ttu-id="eb640-144">Peut être une des constantes de <b>XlFilterAction</b> suivantes :<b>valeur xlFilterCopy</b><b>xlFilterInPlace</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-144">Can be one of the following <b>XlFilterAction</b> constants:<b>xlFilterCopy</b><b>xlFilterInPlace</b></span>
          </span>
        </param>
        <param name="CriteriaRange">
          <span data-ttu-id="eb640-145">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-145">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-146">La plage de critères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-146">The criteria range.</span>
          </span>
          <span data-ttu-id="eb640-147">Si cet argument est omis, il n’existe aucun critère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-147">If this argument is omitted, there are no criteria.</span>
          </span>
        </param>
        <param name="CopyToRange">
          <span data-ttu-id="eb640-148">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-148">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-149">La plage de destination des lignes copiées si l’Action est <paramref name="xlFilterCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-149">The destination range for the copied rows if Action is <paramref name="xlFilterCopy" />.</span>
          </span>
          <span data-ttu-id="eb640-150">Sinon, cet argument est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-150">Otherwise, this argument is ignored.</span>
          </span>
        </param>
        <param name="Unique">
          <span data-ttu-id="eb640-151">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-151">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-152">
            <b>True</b> pour filtrer les enregistrements uniques uniquement ; <b>False</b> pour tous les enregistrements qui répondent aux critères de filtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-152">
              <b>True</b> to filter unique records only; <b>False</b> to filter all records that meet the criteria.</span>
          </span>
          <span data-ttu-id="eb640-153">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-153">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-154">Filtre ou copie des données à partir d’une liste basée sur une plage de critères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-154">Filters or copies data from a list based on a criteria range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-155">
            <para>Si la sélection initiale est une cellule unique, la zone en cours de cette cellule est utilisée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-155">
              <para>If the initial selection is a single cell, that cell's current region is used.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateChanges">
      <MemberSignature Language="C#" Value="public void AllocateChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllocateChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllocateChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-156">Effectue une opération d’écriture différée pour toutes les cellules modifiées dans une plage basée sur une source de données OLAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-156">Performs a writeback operation for all edited cells in a range based on an OLAP data source.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="eb640-157">
            <para>Le <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" /> méthode exécute une instruction UPDATE CUBE pour toutes les modifications apportées dans la plage depuis la dernière opération d’application des modifications. Cette méthode génère une erreur d’exécution si elle est exécutée sur une plage basée sur une source de données autre que OLAP.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-157">
              <para>The <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" /> method will execute an UPDATE CUBE statement for all changes made in the range since the last apply changes operation was committed. This method generates a run-time error if it is executed on a range based on a non-OLAP data source.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-158">Détermine si la plage peut être modifiée sur une feuille de calcul protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-158">Determines if the range can be edited on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-159">
            <para>Cette propriété renvoie <b>la valeur True</b> si la plage peut être modifiée sur une feuille de calcul protégée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-159">
              <para>This property returns <b>True</b> if the range can be edited on a protected worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-160">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-160">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNames">
      <MemberSignature Language="C#" Value="public object ApplyNames (object Names, object IgnoreRelativeAbsolute, object UseRowColumnNames, object OmitColumn, object OmitRow, Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, object AppendLast);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyNames([in]object Names, [in]object IgnoreRelativeAbsolute, [in]object UseRowColumnNames, [in]object OmitColumn, [in]object OmitRow, [in]valuetype Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order, [in]object AppendLast) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyNames (Optional Names As Object, Optional IgnoreRelativeAbsolute As Object, Optional UseRowColumnNames As Object, Optional OmitColumn As Object, Optional OmitRow As Object, Optional Order As XlApplyNamesOrder = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, Optional AppendLast As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Names" Type="System.Object" />
        <Parameter Name="IgnoreRelativeAbsolute" Type="System.Object" />
        <Parameter Name="UseRowColumnNames" Type="System.Object" />
        <Parameter Name="OmitColumn" Type="System.Object" />
        <Parameter Name="OmitRow" Type="System.Object" />
        <Parameter Name="Order" Type="Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />
        <Parameter Name="AppendLast" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Names">
          <span data-ttu-id="eb640-161">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-161">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-162">Tableau des noms à appliquer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-162">An array of the names to be applied.</span>
          </span>
          <span data-ttu-id="eb640-163">Si cet argument est omis, tous les noms de la feuille sont appliqués à la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-163">If this argument is omitted, all names on the sheet are applied to the range.</span>
          </span>
        </param>
        <param name="IgnoreRelativeAbsolute">
          <span data-ttu-id="eb640-164">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-164">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-165">
            <b>True</b> pour remplacer les références par des noms, quels que soient les types référence des noms ou des références ; <b>False</b> pour remplacer les références absolues uniquement par des noms absolus, les références relatives uniquement par des noms relatifs et les références mixtes uniquement par des noms mixtes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-165">
              <b>True</b> to replace references with names, regardless of the reference types of either the names or references; <b>False</b> to replace absolute references only with absolute names, relative references only with relative names, and mixed references only with mixed names.</span>
          </span>
          <span data-ttu-id="eb640-166">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-166">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="UseRowColumnNames">
          <span data-ttu-id="eb640-167">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-167">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-168">
            <b>True</b> pour utiliser les noms des plages de lignes et de colonnes qui contiennent la plage spécifiée si les noms de la plage est introuvable ; <b>False</b> pour ignorer la <paramref name="OmitColumn" /> et <paramref name="OmitRow" /> arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-168">
              <b>True</b> to use the names of row and column ranges that contain the specified range if names for the range cannot be found; <b>False</b> to ignore the <paramref name="OmitColumn" /> and <paramref name="OmitRow" /> arguments.</span>
          </span>
          <span data-ttu-id="eb640-169">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-169">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="OmitColumn">
          <span data-ttu-id="eb640-170">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-170">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-171">
            <b>True</b> pour remplacer la référence complète par le nom orienté ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-171">
              <b>True</b> to replace the entire reference with the row-oriented name.</span>
          </span>
          <span data-ttu-id="eb640-172">Le nom de colonne peut être omis uniquement si la cellule référencée dans la même colonne que la formule et se trouve dans une plage nommée orientée ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-172">The column-oriented name can be omitted only if the referenced cell is in the same column as the formula and is within a row-oriented named range.</span>
          </span>
          <span data-ttu-id="eb640-173">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-173">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="OmitRow">
          <span data-ttu-id="eb640-174">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-174">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-175">
            <b>True</b> pour remplacer la référence complète par le nom orienté colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-175">
              <b>True</b> to replace the entire reference with the column-oriented name.</span>
          </span>
          <span data-ttu-id="eb640-176">Le nom orienté ligne peut être omis uniquement si la cellule référencée se trouve dans la même ligne que la formule et se trouve dans une plage nommée orientée colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-176">The row-oriented name can be omitted only if the referenced cell is in the same row as the formula and is within a column-oriented named range.</span>
          </span>
          <span data-ttu-id="eb640-177">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-177">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Order">
          <span data-ttu-id="eb640-178">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-178">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />.</span>
          </span>
          <span data-ttu-id="eb640-179">Détermine quel nom de plage est répertorié en premier lorsqu'une référence de cellule est remplacée par un nom de plage orienté ligne et orienté colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-179">Determines which range name is listed first when a cell reference is replaced by a row-oriented and column-oriented range name.</span>
          </span>
          <span data-ttu-id="eb640-180">Peut être une de ces constantes <b>XlApplyNamesOrder</b> :<b>xlColumnThenRow</b><b>xlRowThenColumn</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-180">Can be one of these <b>XlApplyNamesOrder</b> constants:<b>xlColumnThenRow</b><b>xlRowThenColumn </b><paramref name="default" /></span>
          </span>
        </param>
        <param name="AppendLast">
          <span data-ttu-id="eb640-181">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-181">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-182">
            <b>True</b> pour remplacer les définitions des noms dans <paramref name="Names" /> et remplacer également les définitions des noms qui ont été définies ; <b>False</b> pour remplacer les définitions des noms dans <paramref name="Names" /> uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-182">
              <b>True</b> to replace the definitions of the names in <paramref name="Names" /> and also replace the definitions of the last names that were defined; <b>False</b> to replace the definitions of the names in <paramref name="Names" /> only.</span>
          </span>
          <span data-ttu-id="eb640-183">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-183">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-184">Attribue des noms aux cellules de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-184">Applies names to the cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-185">
            <para>Vous pouvez utiliser la fonction <b>Array</b> pour créer la liste des noms pour le <paramref name="Names" /> argument.</para>
            <para>Si vous souhaitez appliquer des noms à toute la feuille, utilisez Cells.ApplyNames.</para>
            <para>Vous ne pouvez pas « annuler » noms ; pour supprimer des noms, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" /> méthode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-185">
              <para>You can use the <b>Array</b> function to create the list of names for the <paramref name="Names" /> argument.</para>
              <para>If you want to apply names to the entire sheet, use Cells.ApplyNames.</para>
              <para>You cannot "unapply" names; to delete names, use the <see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOutlineStyles">
      <MemberSignature Language="C#" Value="public object ApplyOutlineStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyOutlineStyles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyOutlineStyles" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyOutlineStyles () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ApplyOutlineStyles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-186">Applique les styles du plan à la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-186">Applies outlining styles to the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Areas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Areas Areas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Areas Areas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Areas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Areas As Areas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Areas ^ Areas { Microsoft::Office::Interop::Excel::Areas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Areas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-187">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> collection qui représente toutes les plages dans une sélection multi-zones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-187">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> collection that represents all the ranges in a multiple-area selection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-188">
            <para>Pour une seule sélection, la propriété <b>Areas</b> renvoie une collection contenant un seul objet — l’original <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet lui-même. Pour une sélection de plusieurs zones, la propriété <b>Areas</b> renvoie une collection contenant un objet pour chaque zone sélectionnée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-188">
              <para>For a single selection, the <b>Areas</b> property returns a collection that contains one object — the original <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object itself. For a multiple-area selection, the <b>Areas</b> property returns a collection that contains one object for each selected area.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoComplete">
      <MemberSignature Language="C#" Value="public string AutoComplete (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AutoComplete([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoComplete(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AutoComplete(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1185)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="eb640-189">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-189">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="eb640-190">Chaîne à compléter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-190">The string to complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-191">Renvoie une correspondance de saisie semi-automatique dans la liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-191">Returns an AutoComplete match from the list.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-192">
            <para>Si aucune correspondance n’est saisie semi-automatique ou si plus d’une entrée dans la liste correspond à la chaîne à compléter, cette méthode renvoie une chaîne vide.</para>
            <para>Cette méthode fonctionne même si la fonctionnalité de saisie semi-automatique est désactivée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-192">
              <para>If there’s no AutoComplete match or if more than one entry in the list matches the string to complete, this method returns an empty string.</para>
              <para>This method works even if the AutoComplete feature is disabled.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFill">
      <MemberSignature Language="C#" Value="public object AutoFill (Microsoft.Office.Interop.Excel.Range Destination, Microsoft.Office.Interop.Excel.XlAutoFillType Type = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFill([in]class Microsoft.Office.Interop.Excel.Range Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFillType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFill (Destination As Range, Optional Type As XlAutoFillType = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlAutoFillType" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="eb640-193">Requis <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-193">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
          <span data-ttu-id="eb640-194">Les cellules à être rempli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-194">The cells to be filled.</span>
          </span>
          <span data-ttu-id="eb640-195">La destination doit inclure la plage source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-195">The destination must include the source range.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="eb640-196">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-196">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" />.</span>
          </span>
          <span data-ttu-id="eb640-197">Spécifie le type de remplissage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-197">Specifies the fill type.</span>
          </span>
          <span data-ttu-id="eb640-198">Peut être une de ces constantes <b>XlAutoFillType</b> :<b>xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b><paramref name="default" /><b>xlFillMonths </b><b>xlFillValues</b><b>xlFillYears</b><b>xlLinearTrend</b>si cet argument a la <b>valeur xlFillDefault</b> ou omis, Microsoft Excel sélectionne le type de remplissage le plus approprié, en fonction de la plage source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-198">Can be one of these <b>XlAutoFillType</b> constants:<b>xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b><paramref name="default" /><b>xlFillMonths</b><b>xlFillValues</b><b>xlFillYears</b><b>xlLinearTrend</b>If this argument is <b>xlFillDefault</b> or omitted, Microsoft Excel selects the most appropriate fill type, based on the source range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-199">Effectue une recopie incrémentée dans les cellules de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-199">Performs an autofill on the cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public object AutoFilter (object Field, object Criteria1, Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, object Criteria2, object VisibleDropDown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFilter([in]object Field, [in]object Criteria1, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator, [in]object Criteria2, [in]object VisibleDropDown) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFilter (Optional Field As Object, Optional Criteria1 As Object, Optional Operator As XlAutoFilterOperator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, Optional Criteria2 As Object, Optional VisibleDropDown As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Field" Type="System.Object" />
        <Parameter Name="Criteria1" Type="System.Object" />
        <Parameter Name="Operator" Type="Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />
        <Parameter Name="Criteria2" Type="System.Object" />
        <Parameter Name="VisibleDropDown" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Field">
          <span data-ttu-id="eb640-200">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-200">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-201">Offset d'entier du champ sur lequel vous voulez baser le filtre (à partir de la gauche de la liste ; le champ le plus à gauche est le champ un).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-201">The integer offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field one).</span>
          </span>
        </param>
        <param name="Criteria1">
          <span data-ttu-id="eb640-202">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-202">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-203">Les critères (une chaîne ; par exemple, « 101 »).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-203">The criteria (a string; for example, "101").</span>
          </span>
          <span data-ttu-id="eb640-204">Utilisez « = » pour rechercher des champs vides, ou utilisez «&lt;&gt;» pour rechercher les champs non vides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-204">Use "=" to find blank fields, or use "&lt;&gt;" to find nonblank fields.</span>
          </span>
          <span data-ttu-id="eb640-205">Si cet argument est omis, le critère est <b>tous</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-205">If this argument is omitted, the criteria is <b>All</b>.</span>
          </span>
          <span data-ttu-id="eb640-206">Si <paramref name="Operator" /> est <b>xlTop10Items</b>, <paramref name="Criteria1" /> Spécifie le nombre d’éléments (par exemple, « 10 »).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-206">If <paramref name="Operator" /> is <b>xlTop10Items</b>, <paramref name="Criteria1" /> specifies the number of items (for example, "10").</span>
          </span>
        </param>
        <param name="Operator">
          <span data-ttu-id="eb640-207">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-207">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />.</span>
          </span>
          <span data-ttu-id="eb640-208">Peut être une des constantes de <b>XlAutoFilterOperator</b> suivantes :<b>xlAnd</b><paramref name="default" /><b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr</b><b>xlTop10Items</b><b>xlTop10Percent</b>utilisez <b>xlAnd</b> et <b>xlOr</b> avec <paramref name="Criteria1" /> et <paramref name="Criteria2" /> pour construire des critères composés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-208">Can be one of the following <b>XlAutoFilterOperator</b> constants:<b>xlAnd</b><paramref name="default" /><b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr</b><b>xlTop10Items</b><b>xlTop10Percent</b>Use <b>xlAnd</b> and <b>xlOr</b> with <paramref name="Criteria1" /> and <paramref name="Criteria2" /> to construct compound criteria.</span>
          </span>
        </param>
        <param name="Criteria2">
          <span data-ttu-id="eb640-209">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-209">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-210">Le second critère (chaîne).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-210">The second criteria (a string).</span>
          </span>
          <span data-ttu-id="eb640-211">Utilisé avec Criteria1 et Operator pour élaborer des critères composés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-211">Used with Criteria1 and Operator to construct compound criteria.</span>
          </span>
        </param>
        <param name="VisibleDropDown">
          <span data-ttu-id="eb640-212">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-212">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-213">
            <b>True</b> pour afficher la liste déroulante Filtre automatique pour le champ filtré ; <b>False</b> pour masquer la flèche de la liste déroulante Filtre automatique pour le champ filtré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-213">
              <b>True</b> to display the AutoFilter drop-down arrow for the filtered field; <b>False</b> to hide the AutoFilter drop-down arrow for the filtered field.</span>
          </span>
          <span data-ttu-id="eb640-214">
            <b>La valeur true</b> par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-214">
              <b>True</b> by default.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-215">Filtre une liste à l’aide du filtre automatique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-215">Filters a list using the AutoFilter.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-216">
            <para>Appliquer le <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" /> propriété pour un <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objet à renvoyer un <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> objet.</para>
            <para>Si vous omettez tous les arguments, cette méthode active ou désactive simplement l’affichage des flèches déroulantes filtre automatique de la plage spécifiée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-216">
              <para>Apply the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" /> property to a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object.</para>
              <para>If you omit all the arguments, this method simply toggles the display of the AutoFilter drop-down arrows in the specified range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFit">
      <MemberSignature Language="C#" Value="public object AutoFit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFit () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoFit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(237)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-217">Modifie la largeur des colonnes de la plage ou la hauteur des lignes de la plage pour les ajuster au mieux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-217">Changes the width of the columns in the range or the height of the rows in the range to achieve the best fit.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-218">
            <para>L’expression doit être une ligne ou une plage de lignes, ou une colonne ou une plage de colonnes. Dans le cas contraire, cette méthode génère une erreur.</para>
            <para>Une unité de largeur de colonne est égale à la largeur d’un caractère du style Normal.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-218">
              <para>The expression must be a row or a range of rows, or a column or a range of columns. Otherwise, this method generates an error.</para>
              <para>One unit of column width is equal to the width of one character in the Normal style.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public object AutoFormat (Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, object Number, object Font, object Alignment, object Border, object Pattern, object Width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFormat([in]valuetype Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format, [in]object Number, [in]object Font, [in]object Alignment, [in]object Border, [in]object Pattern, [in]object Width) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFormat (Optional Format As XlRangeAutoFormat = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, Optional Number As Object, Optional Font As Object, Optional Alignment As Object, Optional Border As Object, Optional Pattern As Object, Optional Width As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />
        <Parameter Name="Number" Type="System.Object" />
        <Parameter Name="Font" Type="System.Object" />
        <Parameter Name="Alignment" Type="System.Object" />
        <Parameter Name="Border" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">
          <span data-ttu-id="eb640-219">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-219">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</span>
          </span>
          <span data-ttu-id="eb640-220">Le AutoFormat.Some spécifié de l’une des constantes <b>XlRangeAutoFormat</b> ne soient pas disponibles, en fonction de la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-220">The specified AutoFormat.Some of the <b>XlRangeAutoFormat</b> constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span>
          </span>
        </param>
        <param name="Number">
          <span data-ttu-id="eb640-221">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-221">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-222">Mettre en forme <b>la valeur true</b> pour inclure le numéro dans la mise en forme automatique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-222">
              <b>True</b> to include number formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="eb640-223">La valeur par défaut est <b>True.</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-223">The default value is <b>True.</b></span>
          </span>
        </param>
        <param name="Font">
          <span data-ttu-id="eb640-224">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-224">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-225">
            <b>True</b> pour inclure des formats de police dans le format prédéfini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-225">
              <b>True</b> to include font formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="eb640-226">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-226">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Alignment">
          <span data-ttu-id="eb640-227">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-227">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-228">
            <b>True</b> pour inclure l’alignement dans la mise en forme automatique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-228">
              <b>True</b> to include alignment in the AutoFormat.</span>
          </span>
          <span data-ttu-id="eb640-229">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-229">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Border">
          <span data-ttu-id="eb640-230">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-230">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-231">
            <b>True</b> pour inclure des formats de bordure dans la mise en forme automatique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-231">
              <b>True</b> to include border formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="eb640-232">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-232">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="eb640-233">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-233">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-234">
            <b>True</b> pour inclure des formats de modèle dans la mise en forme automatique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-234">
              <b>True</b> to include pattern formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="eb640-235">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-235">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Width">
          <span data-ttu-id="eb640-236">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-236">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-237">
            <b>True</b> pour inclure la hauteur de largeur et la ligne de colonne dans la mise en forme automatique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-237">
              <b>True</b> to include column width and row height in the AutoFormat.</span>
          </span>
          <span data-ttu-id="eb640-238">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-238">The default value is <b>True</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-239">Formate automatiquement la plage spécifiée, à l’aide d’un format prédéfini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-239">Automatically formats the specified range, using a predefined format.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-240">
            <para>Si la plage est une cellule unique, cette méthode met également la zone entourant la cellule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-240">
              <para>If the range is a single cell, this method also formats the active region surrounding the cell. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoOutline">
      <MemberSignature Language="C#" Value="public object AutoOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-241">Crée automatiquement un plan pour la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-241">Automatically creates an outline for the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-242">
            <para>Si la plage est une cellule unique, Microsoft Excel crée un plan pour la totalité de la feuille. Le nouveau plan remplace tout plan existant.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-242">
              <para>If the range is a single cell, Microsoft Excel creates an outline for the entire sheet. The new outline replaces any existing outline.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround">
      <MemberSignature Language="C#" Value="public object BorderAround (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1067)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle">
          <span data-ttu-id="eb640-243">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-243">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" />.</span>
          </span>
          <span data-ttu-id="eb640-244">Le style de trait pour la bordure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-244">The line style for the border.</span>
          </span>
          <span data-ttu-id="eb640-245">Peut être une des constantes <b>XlLineStyle</b> suivantes :<b>xlContinuous</b><paramref name="default" /><b>xlDash</b><b>xlDashDot</b><b>xlDashDotDot</b><b>xlDot</b><b>xlDouble</b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b> xlLineStlyeNone</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-245">Can be one of the following <b>XlLineStyle</b> constants:<b>xlContinuous</b><paramref name="default" /><b>xlDash</b><b>xlDashDot</b><b>xlDashDotDot</b><b>xlDot</b><b>xlDouble</b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b>xlLineStlyeNone</b></span>
          </span>
        </param>
        <param name="Weight">
          <span data-ttu-id="eb640-246">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-246">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" />.</span>
          </span>
          <span data-ttu-id="eb640-247">Épaisseur de la bordure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-247">The border weight.</span>
          </span>
          <span data-ttu-id="eb640-248">Peut être une des constantes <b>XlBorderWeight</b> suivantes :<b>xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-248">Can be one of the following <b>XlBorderWeight</b> constants:<b>xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></span>
          </span>
        </param>
        <param name="ColorIndex">
          <span data-ttu-id="eb640-249">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-249">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          </span>
          <span data-ttu-id="eb640-250">La couleur de bordure, sous forme d’index dans la palette de couleurs actuelle ou sous forme de constante <b>XlColorIndex</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-250">The border color, as an index into the current color palette or as an <b>XlColorIndex</b> constant.</span>
          </span>
          <span data-ttu-id="eb640-251">Peut être une des constantes <b>XlColorIndex</b> suivantes :<b>xlColorIndexAutomatic</b><paramref name="default" /><b>xlColorIndexNone</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-251">Can be one of the following <b>XlColorIndex</b> constants:<b>xlColorIndexAutomatic</b><paramref name="default" /><b>xlColorIndexNone</b></span>
          </span>
        </param>
        <param name="Color">
          <span data-ttu-id="eb640-252">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-252">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-253">Couleur de la bordure, sous forme de valeur RVB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-253">The border color, as an RGB value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-254">Ajouter une bordure à une plage et définit les <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, et <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> propriétés pour la nouvelle bordure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-254">Adds a border to a range and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> properties for the new border.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-255">
            <para>Vous devez spécifier soit <paramref name="ColorIndex" /> ou <paramref name="Color" />, mais pas les deux.</para>
            <para>, Vous pouvez spécifier <paramref name="LineStyle" /> ou <paramref name="Weight" />, mais pas les deux. Si vous ne spécifiez pas un argument, Microsoft Excel utilise le style de trait par défaut et le poids.</para>
            <para>Cette méthode présente l’intégralité de la plage sans la remplir. Pour définir la bordure de toutes les cellules, vous devez définir la <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" />, et <see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" /> propriétés de la collection Borders. Pour effacer la bordure, vous devez définir la propriété <b>LineStyle</b><b>xlLineStyleNone</b> pour toutes les cellules de la plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-255">
              <para>You must specify either <paramref name="ColorIndex" /> or <paramref name="Color" />, but not both.</para>
              <para>You can specify either <paramref name="LineStyle" /> or <paramref name="Weight" />, but not both. If you don't specify either argument, Microsoft Excel uses the default line style and weight.</para>
              <para>This method outlines the entire range without filling it in. To set the borders of all the cells, you must set the <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" /> properties for the Borders collection. To clear the border, you must set the <b>LineStyle</b> property to <b>xlLineStyleNone</b> for all the cells in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround2">
      <MemberSignature Language="C#" Value="public object BorderAround2 (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color, object ThemeColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround2([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color, [in]object ThemeColor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround2(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround2 (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object, Optional ThemeColor As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2771)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
        <Parameter Name="ThemeColor" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle">To be added.</param>
        <param name="Weight">To be added.</param>
        <param name="ColorIndex">To be added.</param>
        <param name="Color">To be added.</param>
        <param name="ThemeColor">To be added.</param>
        <summary>
          <span data-ttu-id="eb640-256">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-256">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb640-257">Cette propriété renvoie <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-257">Returns <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-258">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection qui représente les bordures d’un style ou d’une plage de cellules (y compris une plage définie dans le cadre d’un format conditionnel).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-258">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public object Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Function Calculate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-259">Calcule une plage de cellules dans une feuille de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-259">Calculates a specified range of cells on a worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateRowMajorOrder">
      <MemberSignature Language="C#" Value="public object CalculateRowMajorOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CalculateRowMajorOrder() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" />
      <MemberSignature Language="VB.NET" Value="Public Function CalculateRowMajorOrder () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CalculateRowMajorOrder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2364)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-260">Calcule une plage de cellules spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-260">Calculates a specfied range of cells.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb640-261">
            <b>Objet</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-261">
              <b>Object</b>
            </span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="eb640-262">
            <para>Le <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" /> méthode calcule la plage spécifiée plage cellule par cellule, à partir de son coin supérieur gauche à son vers le bas à droite dans l’ordre ligne-champ. Voici le même processus est utilisé par Excel 2000 et versions antérieures pour calculer une plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-262">
              <para>The <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" /> method calculates the specified range range cell-by-cell, from its top left corner to its to bottom right corner in row-major order. This is the same process that is used  by  Excel 2000 and earlier versions to calculate a range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-263">Renvoie un objet <b>Range</b> qui représente les cellules de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-263">Returns a <b>Range</b> object that represents the cells in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Characters Characters[object Start, object Length] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Characters Characters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Characters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters(Optional Start As Object, Optional Length As Object) As Characters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Characters ^ Characters[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Characters ^ get(System::Object ^ Start, System::Object ^ Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Characters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="eb640-264">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-264">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-265">Premier caractère à renvoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-265">The first character to be returned.</span>
          </span>
          <span data-ttu-id="eb640-266">Si vous ne spécifiez pas cet argument ou s'il a la valeur 1, cette propriété renvoie une plage de caractères débutant par le premier caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-266">If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="eb640-267">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-267">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-268">Nombre de caractères à renvoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-268">The number of characters to be returned.</span>
          </span>
          <span data-ttu-id="eb640-269">Si cet argument est omis, cette propriété renvoie le reste de la chaîne (tout ce qui suit le <paramref name="Start" /> caractères).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-269">If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-270">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> objet qui représente une plage de caractères dans le texte de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-270">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the object text.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-271">
            <para>Vous pouvez utiliser l’objet <b>Characters</b> au sein d’une chaîne de texte en caractères format.</para>
            <para>L’objet <b>Characters</b> n’est pas une collection.</para>
            <para>Pour la <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> objet, <see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" /> est une méthode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-271">
              <para>You can use the <b>Characters</b> object to format characters within a text string.</para>
              <para>The <b>Characters</b> object isn't a collection.</para>
              <para>For the <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object, <see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" /> is a method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public object CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="eb640-272">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-272">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-273">Chaîne qui indique le nom de fichier du dictionnaire personnalisé à examiner si le mot n’est pas trouvé dans le dictionnaire principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-273">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="eb640-274">Si cet argument est omis, le dictionnaire actuellement spécifié est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-274">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="eb640-275">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-275">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-276">
            <b>True</b> pour que Microsoft Excel ignore les mots en majuscules ; <b>False</b> pour que Microsoft Excel vérifie les mots en majuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-276">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase; <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="eb640-277">Si cet argument est omis, la valeur actuelle est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-277">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="eb640-278">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-278">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-279">
            <b>True</b> pour que Microsoft Excel affiche une liste d’orthographes lorsqu’une orthographe incorrecte est trouvée ; <b>False</b> pour que Microsoft Excel qu’il vous laisse entrer l’orthographe correcte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-279">
              <b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found; <b>False</b> to have Microsoft Excel pause while you input the correct spelling.</span>
          </span>
          <span data-ttu-id="eb640-280">Si cet argument est omis, la valeur actuelle est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-280">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="eb640-281">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-281">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-282">La langue du dictionnaire utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-282">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="eb640-283">Peut être une des valeurs <b>MsoLanguageID</b> utilisées par la <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-283">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-284">Vérifie l’orthographe d’un objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-284">Checks the spelling of an object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-285">
            <para>Cette méthode n’a aucune valeur de retour ; Microsoft Excel affiche la boîte de dialogue Orthographe.</para>
            <para>Pour vérifier les en-têtes, pieds de page et les objets sur une feuille de calcul, utilisez cette méthode sur un <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objet.</para>
            <para>Pour ne vérifier que les cellules et les annotations, utilisez cette méthode avec l’objet renvoyé par la <see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" /> propriété.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-285">
              <para>This method has no return value; Microsoft Excel displays the Spelling dialog box.</para>
              <para>To check headers, footers, and objects on a worksheet, use this method on a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object.</para>
              <para>To check only cells and notes, use this method with the object returned by the <see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public object Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-286">Supprime l'objet entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-286">Clears the entire object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearComments">
      <MemberSignature Language="C#" Value="public void ClearComments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearComments() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearComments" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearComments ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearComments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-287">Cette méthode supprime tous les commentaires de cellule de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-287">Clears all cell comments from the specified range.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContents">
      <MemberSignature Language="C#" Value="public object ClearContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearContents() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearContents" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearContents () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearContents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-288">Cette méthode efface les formules de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-288">Clears the formulas from the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-289">
            <para>Cette méthode efface les données d’un graphique mais conserve la mise en forme.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-289">
              <para>This method clears the data from a chart but leaves the formatting.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-290">Annule la mise en forme de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-290">Clears the formatting of the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearHyperlinks">
      <MemberSignature Language="C#" Value="public void ClearHyperlinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearHyperlinks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearHyperlinks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearHyperlinks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2854)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-291">Supprime tous les liens hypertexte de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-291">Removes all hyperlinks from the specified range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="eb640-292">
            <para>Appel de la <see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" /> méthode dans la plage spécifiée équivaut à l’aide de la commande Effacer les liens hypertexte de clair liste déroulante dans la section Modification de l’onglet Accueil. Seuls les liens hypertexte seront supprimés ; toutes les autres cellules le contenu, tel que le texte et la mise en forme ne sont pas affectés.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-292">
              <para>Calling the <see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" /> method on the specified range is equivalent to using the Clear Hyperlinks command from the Clear drop-down list in the Editing section of the Home tab. Only hyperlinks will be removed; all other cell content, such as text and formatting will be unaffected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNotes">
      <MemberSignature Language="C#" Value="public object ClearNotes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearNotes() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearNotes" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearNotes () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearNotes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(239)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-293">Efface les annotations écrites et sonores de toutes les cellules de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-293">Clears notes and sound notes from all the cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutline">
      <MemberSignature Language="C#" Value="public object ClearOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-294">Cette méthode efface le plan de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-294">Clears the outline for the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public int Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Column" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Column { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-295">Renvoie le nombre de la première colonne de la première zone de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-295">Returns the number of the first column in the first area in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-296">
            <para>Colonne A renvoie 1, colonne B renvoie 2 et ainsi de suite.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-296">
              <para>Column A returns 1, column B returns 2, and so on.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ColumnDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range ColumnDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ColumnDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ColumnDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ ColumnDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison">
          <span data-ttu-id="eb640-297">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-297">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-298">Cellule unique à comparer à la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-298">A single cell to compare to the specified range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-299">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les cellules dont le contenu est différent de la cellule de comparaison dans chaque colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-299">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from the comparison cell in each column.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-300">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente les colonnes de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-300">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the columns in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-301">
            <para>Lorsqu’elle est appliquée à un objet <b>Range</b> qui est une zone de sélection multiple, cette propriété renvoie les colonnes de la première zone de la plage uniquement. Par exemple, si l’objet <b>Range</b> comporte deux zones : a1 : B2 et C3 : D4 — le <see cref="P:Microsoft.Office.Interop.Excel.Range.Count" /> propriété renvoie la valeur 2, pas 4. Pour utiliser cette propriété sur une plage qui peut contenir une sélection de plusieurs zones, testez le <see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> objet pour déterminer si la plage contient plusieurs zones. Si c’est le cas, une boucle sur chaque zone de la plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-301">
              <para>When applied to a <b>Range</b> object that's a multiple-area selection, this property returns columns from only the first area of the range. For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — the <see cref="P:Microsoft.Office.Interop.Excel.Range.Count" /> property returns 2, not 4. To use this property on a range that may contain a multiple-area selection, test the <see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> object to determine whether the range contains more than one area. If it does, loop over each area in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public object ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ColumnWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-302">Cette propriété renvoie ou définit la largeur de toutes les colonnes de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-302">Returns or sets the width of all columns in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-303">
            <para>Une unité de largeur de colonne est égale à la largeur d’un caractère du style Normal. Pour les polices proportionnelles, la largeur du caractère 0 (zéro) est utilisée.</para>
            <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.Range.Width" /> propriété pour renvoyer la largeur d’une colonne en points.</para>
            <para>Si toutes les colonnes de la plage ont la même largeur, la propriété <b>ColumnWidth</b> renvoie la largeur. Si les colonnes de la plage sont de largeurs différentes, cette propriété renvoie <b>Null</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-303">
              <para>One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Width" /> property to return the width of a column in points.</para>
              <para>If all columns in the range have the same width, the <b>ColumnWidth</b> property returns the width. If columns in the range have different widths, this property returns <b>Null</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment Comment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comment Comment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Comment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comment As Comment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comment ^ Comment { Microsoft::Office::Interop::Excel::Comment ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-304">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object qui représente le commentaire associé à la cellule dans le coin supérieur gauche de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-304">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object that represents the comment associated with the cell in the upper-left corner of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consolidate">
      <MemberSignature Language="C#" Value="public object Consolidate (object Sources, object Function, object TopRow, object LeftColumn, object CreateLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Consolidate([in]object Sources, [in]object Function, [in]object TopRow, [in]object LeftColumn, [in]object CreateLinks) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Consolidate (Optional Sources As Object, Optional Function As Object, Optional TopRow As Object, Optional LeftColumn As Object, Optional CreateLinks As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sources" Type="System.Object" />
        <Parameter Name="Function" Type="System.Object" />
        <Parameter Name="TopRow" Type="System.Object" />
        <Parameter Name="LeftColumn" Type="System.Object" />
        <Parameter Name="CreateLinks" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sources">
          <span data-ttu-id="eb640-305">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-305">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-306">Les sources de la consolidation en tant que tableau de chaînes de référence de texte en notation de style R1C1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-306">The sources of the consolidation as an array of text reference strings in R1C1-style notation.</span>
          </span>
          <span data-ttu-id="eb640-307">Les références doivent inclure le chemin d’accès complet des feuilles à consolider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-307">The references must include the full path of sheets to be consolidated.</span>
          </span>
        </param>
        <param name="Function">
          <span data-ttu-id="eb640-308">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-308">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span>
          </span>
          <span data-ttu-id="eb640-309">Peut être une des constantes <b>XlConsilidationFunction</b> suivantes :<b>xlAverage</b><paramref name="default" /><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlVar</b><b>xlVarP</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-309">Can be one of the following <b>XlConsilidationFunction</b> constants:<b>xlAverage</b><paramref name="default" /><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlVar</b><b>xlVarP</b></span>
          </span>
        </param>
        <param name="TopRow">
          <span data-ttu-id="eb640-310">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-310">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-311">
            <b>True</b> pour consolider les données basées sur des titres de colonne dans la ligne supérieure des plages de consolidation ; <b>False</b> pour consolider les données par sa position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-311">
              <b>True</b> to consolidate data based on column titles in the top row of the consolidation ranges; <b>False</b> to consolidate data by position.</span>
          </span>
          <span data-ttu-id="eb640-312">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-312">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="LeftColumn">
          <span data-ttu-id="eb640-313">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-313">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-314">
            <b>True</b> pour consolider les données basées sur des titres de ligne dans la colonne gauche des plages de consolidation ; <b>False</b> pour consolider les données par sa position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-314">
              <b>True</b> to consolidate data based on row titles in the left column of the consolidation ranges; <b>False</b> to consolidate data by position.</span>
          </span>
          <span data-ttu-id="eb640-315">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-315">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="CreateLinks">
          <span data-ttu-id="eb640-316">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-316">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-317">
            <b>True</b> pour que les liens de feuille de calcul consolidation utiliser ; <b>False</b> pour que la consolidation copie les données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-317">
              <b>True</b> to have the consolidation use worksheet links; <b>False</b> to have the consolidation copy the data.</span>
          </span>
          <span data-ttu-id="eb640-318">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-318">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-319">Consolide les données de plusieurs plages de plusieurs feuilles de calcul dans une plage d’une feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-319">Consolidates data from multiple ranges on multiple worksheets into a single range on a single worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Copy(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="eb640-320">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-320">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-321">Spécifie la nouvelle plage à laquelle la plage spécifiée est copiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-321">Specifies the new range to which the specified range will be copied.</span>
          </span>
          <span data-ttu-id="eb640-322">Si cet argument est omis, Microsoft Excel copie la plage dans le Presse-papiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-322">If this argument is omitted, Microsoft Excel copies the range to the Clipboard.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-323">Cette méthode copie la plage vers la plage spécifiée ou dans le Presse-papiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-323">Copies the range to the specified range or to the Clipboard.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromRecordset">
      <MemberSignature Language="C#" Value="public int CopyFromRecordset (object Data, object MaxRows, object MaxColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CopyFromRecordset([in]object Data, [in]object MaxRows, [in]object MaxColumns) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyFromRecordset(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyFromRecordset (Data As Object, Optional MaxRows As Object, Optional MaxColumns As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.Object" />
        <Parameter Name="MaxRows" Type="System.Object" />
        <Parameter Name="MaxColumns" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data">
          <span data-ttu-id="eb640-324">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-324">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-325">L’objet <b>Recordset</b> à copier dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-325">The <b>Recordset</b> object to copy into the range.</span>
          </span>
        </param>
        <param name="MaxRows">
          <span data-ttu-id="eb640-326">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-326">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-327">Le nombre maximal d’enregistrements à copier dans la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-327">The maximum number of records to copy onto the worksheet.</span>
          </span>
          <span data-ttu-id="eb640-328">Si cet argument est omis, tous les enregistrements dans l’objet <b>Recordset</b> sont copiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-328">If this argument is omitted, all the records in the <b>Recordset</b> object are copied.</span>
          </span>
        </param>
        <param name="MaxColumns">
          <span data-ttu-id="eb640-329">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-329">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-330">Le nombre maximal de champs à copier dans la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-330">The maximum number of fields to copy onto the worksheet.</span>
          </span>
          <span data-ttu-id="eb640-331">Si cet argument est omis, tous les champs de l’objet <b>Recordset</b> sont copiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-331">If this argument is omitted, all the fields in the <b>Recordset</b> object are copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-332">Copie le contenu d’un objet DAO <b>Recordset</b> ADO ou sur une feuille de calcul, en commençant dans le coin supérieur gauche de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-332">Copies the contents of an ADO or DAO <b>Recordset</b> object onto a worksheet, beginning at the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-333">
            <para>Si l’objet <b>Recordset</b> contient des champs avec des objets OLE, cette méthode échoue.</para>
            <para>Copie commence à la ligne active de l’objet <b>Recordset</b> . Après la copie, la propriété <b>EOF</b> de l’objet <b>Recordset</b> a la <b>valeur True</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-333">
              <para>If the <b>Recordset</b> object contains fields with OLE objects in them, this method fails.</para>
              <para>Copying begins at the current row of the <b>Recordset</b> object. After copying is completed, the <b>EOF</b> property of the <b>Recordset</b> object is <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public object CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
      </Parameters>
      <Docs>
        <param name="Appearance">
          <span data-ttu-id="eb640-334">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-334">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="eb640-335">Spécifie la manière dont l’image doit être copiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-335">Specifies how the picture should be copied.</span>
          </span>
          <span data-ttu-id="eb640-336">Peut être une des constantes <b>XlCopyPictureFormat</b> suivantes :<b>xlBitmap</b><b>MarkerStyle</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-336">Can be one of the following <b>XlCopyPictureFormat</b> constants:<b>xlBitmap</b><b>xlPicture</b><paramref name="default" /></span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="eb640-337">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-337">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          </span>
          <span data-ttu-id="eb640-338">Le format de l’image.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-338">The format of the picture.</span>
          </span>
          <span data-ttu-id="eb640-339">Peut être une des constantes <b>XlPictureAppearance</b> suivantes :<b>xlPrinter</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-339">Can be one of the following <b>XlPictureAppearance</b> constants:<b>xlPrinter</b>.</span>
          </span>
          <span data-ttu-id="eb640-340">L’image est copiée telle qu’elle apparaît lors de son impression. <b>xlScreen</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-340">The picture is copied as it will look when it's printed.<b>xlScreen</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-341">L’image est copiée de façon à ressembler autant que possible à son affichage à l’écran.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-341">The picture is copied to resemble its display on the screen as closely as possible.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-342">Copie l'objet sélectionné dans le Presse-papiers, sous forme d'image.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-342">Copies the selected object to the Clipboard as a picture.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-343">Renvoie le nombre d'objets dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-343">Returns the number of objects in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountLarge">
      <MemberSignature Language="C#" Value="public object CountLarge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CountLarge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CountLarge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CountLarge As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CountLarge { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-344">Compte de la plus grande valeur dans une plage de valeurs donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-344">Counts the largest value in a given Range of values.</span>
          </span>
          <span data-ttu-id="eb640-345">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-345">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb640-346">
            <b>Objet</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-346">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNames">
      <MemberSignature Language="C#" Value="public object CreateNames (object Top, object Left, object Bottom, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateNames([in]object Top, [in]object Left, [in]object Bottom, [in]object Right) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreateNames(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNames (Optional Top As Object, Optional Left As Object, Optional Bottom As Object, Optional Right As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Bottom" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Top">
          <span data-ttu-id="eb640-347">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-347">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-348">
            <b>True</b> pour créer des noms à l’aide des étiquettes dans la première ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-348">
              <b>True</b> to create names by using labels in the top row.</span>
          </span>
          <span data-ttu-id="eb640-349">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-349">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Left">
          <span data-ttu-id="eb640-350">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-350">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-351">
            <b>True</b> pour créer des noms à l’aide des étiquettes dans la colonne de gauche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-351">
              <b>True</b> to create names by using labels in the left column.</span>
          </span>
          <span data-ttu-id="eb640-352">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-352">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Bottom">
          <span data-ttu-id="eb640-353">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-353">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-354">
            <b>True</b> pour créer des noms à l’aide des étiquettes dans la ligne du bas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-354">
              <b>True</b> to create names by using labels in the bottom row.</span>
          </span>
          <span data-ttu-id="eb640-355">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-355">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="eb640-356">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-356">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-357">
            <b>True</b> pour créer des noms à l’aide des étiquettes dans la colonne de droite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-357">
              <b>True</b> to create names by using labels in the right column.</span>
          </span>
          <span data-ttu-id="eb640-358">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-358">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-359">Crée des noms dans la plage spécifiée en fonction des étiquettes de texte de la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-359">Creates names in the specified range, based on text labels in the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-360">
            <para>Si vous ne spécifiez pas un des <paramref name="Top" />, <paramref name="Left" />, <paramref name="Bottom" />, ou <paramref name="Right" />, Microsoft Excel détermine l’emplacement des étiquettes de texte, en fonction de la forme de la plage spécifiée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-360">
              <para>If you don’t specify one of <paramref name="Top" />, <paramref name="Left" />, <paramref name="Bottom" />, or <paramref name="Right" />, Microsoft Excel guesses the location of the text labels, based on the shape of the specified range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public object CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreatePublisher([in]object Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]object ContainsPICT, [in]object ContainsBIFF, [in]object ContainsRTF, [in]object ContainsVALU) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePublisher (Optional Edition As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ContainsPICT As Object, Optional ContainsBIFF As Object, Optional ContainsRTF As Object, Optional ContainsVALU As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(458)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition">
          <span data-ttu-id="eb640-361">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-361">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Appearance">
          <span data-ttu-id="eb640-362">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-362">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsPICT">
          <span data-ttu-id="eb640-363">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-363">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsBIFF">
          <span data-ttu-id="eb640-364">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-364">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsRTF">
          <span data-ttu-id="eb640-365">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-365">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsVALU">
          <span data-ttu-id="eb640-366">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-366">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-367">Vous avez demandé de l’aide sur un mot-clé utilisé uniquement sur Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-367">You have requested Help for a keyword used only on the Macintosh.</span>
          </span>
          <span data-ttu-id="eb640-368">Pour plus d’informations sur ce mot clé, consultez l’aide incluse avec Microsoft Office Édition Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-368">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-369">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-369">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-370">
            <para>Si l’objet spécifié a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, ce qui équivaut à la c 5843454 nombre hexadécimal</para> Propriété 
          <para>le <b>créateur</b> est conçue pour être utilisé dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Excel possède le code créateur XCEL.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-370">
              <para>If the specified object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentArray">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentArray As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentArray { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-371">Si la cellule spécifiée fait partie d’un tableau, cette propriété renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente l’intégralité du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-371">If the specified cell is part of an array, returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire array.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentRegion">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentRegion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentRegion As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentRegion { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-372">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente la zone en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-372">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the current region.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-373">
            <para>La région actuelle est une plage délimitée par n’importe quelle combinaison de lignes et colonnes vides.</para>
            <para>Cette propriété est utile pour de nombreuses opérations qui étendent automatiquement la sélection pour inclure toute la zone en cours, telles que la <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode.</para>
            <para>Cette propriété ne peut pas être utilisée sur une feuille de calcul protégée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-373">
              <para>The current region is a range bounded by any combination of blank rows and blank columns.</para>
              <para>This property is useful for many operations that automatically expand the selection to include the entire current region, such as the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</para>
              <para>This property cannot be used on a protected worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public object Cut (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Cut([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Cut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="eb640-374">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-374">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-375">La plage dans laquelle l’objet doit être collé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-375">The range where the object should be pasted.</span>
          </span>
          <span data-ttu-id="eb640-376">Si cet argument est omis, l’objet est coupé dans le Presse-papiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-376">If this argument is omitted, the object is cut to the Clipboard.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-377">Cette méthode coupe l'objet et le place dans le Presse-papiers ou colle l'objet à l'emplacement spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-377">Cuts the object to the Clipboard or pastes it into a specified destination.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-378">
            <para>La plage coupée doit être constituée de cellules adjacentes.</para>
            <para>Pouvant couper que des graphiques incorporés.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-378">
              <para>The cut range must be made up of adjacent cells.</para>
              <para>Only embedded charts can be cut.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSeries">
      <MemberSignature Language="C#" Value="public object DataSeries (object Rowcol, Microsoft.Office.Interop.Excel.XlDataSeriesType Type = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Microsoft.Office.Interop.Excel.XlDataSeriesDate Date = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, object Step, object Stop, object Trend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DataSeries([in]object Rowcol, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesDate Date, [in]object Step, [in]object Stop, [in]object Trend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataSeries (Optional Rowcol As Object, Optional Type As XlDataSeriesType = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Optional Date As XlDataSeriesDate = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, Optional Step As Object, Optional Stop As Object, Optional Trend As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rowcol" Type="System.Object" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataSeriesType" />
        <Parameter Name="Date" Type="Microsoft.Office.Interop.Excel.XlDataSeriesDate" />
        <Parameter Name="Step" Type="System.Object" />
        <Parameter Name="Stop" Type="System.Object" />
        <Parameter Name="Trend" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Rowcol">
          <span data-ttu-id="eb640-379">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-379">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-380">Peut être le <b>xlRows</b> ou <b>xlColumns</b> constante pour que les séries de données entrées dans des lignes ou colonnes, respectivement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-380">Can be the <b>xlRows</b> or <b>xlColumns</b> constant to have the data series entered in rows or columns, respectively.</span>
          </span>
          <span data-ttu-id="eb640-381">Si cet argument est omis, la taille et la forme de la plage est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-381">If this argument is omitted, the size and shape of the range is used.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="eb640-382">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-382">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" />.</span>
          </span>
          <span data-ttu-id="eb640-383">Peut être une des constantes <b>XlDataSeriesType</b> suivantes :<b>xlAutoFill</b><b>xlDataSeriesLinear</b><paramref name="default" /><b>xlChronological</b><b>xlGrowth</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-383">Can be one of the following <b>XlDataSeriesType</b> constants:<b>xlAutoFill</b><b>xlDataSeriesLinear</b><paramref name="default" /><b>xlChronological</b><b>xlGrowth</b></span>
          </span>
        </param>
        <param name="Date">
          <span data-ttu-id="eb640-384">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-384">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" />.</span>
          </span>
          <span data-ttu-id="eb640-385">Si l’argument Type est <b>xlChronological</b>, l’argument <b>Date</b> indique l’unité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-385">If the Type argument is <b>xlChronological</b>, the <b>Date</b> argument indicates the step date unit.</span>
          </span>
          <span data-ttu-id="eb640-386">Peut être une des constantes <b>XlDataSeriesDate</b> suivantes :<b>xlDay</b><paramref name="default" /><b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-386">Can be one of the following <b>XlDataSeriesDate</b> constants:<b>xlDay</b><paramref name="default" /><b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></span>
          </span>
        </param>
        <param name="Step">
          <span data-ttu-id="eb640-387">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-387">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-388">La valeur de l’étape de la série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-388">The step value for the series.</span>
          </span>
          <span data-ttu-id="eb640-389">La valeur par défaut est 1 (un).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-389">The default value is 1.</span>
          </span>
        </param>
        <param name="Stop">
          <span data-ttu-id="eb640-390">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-390">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-391">La valeur d’arrêt de la série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-391">The stop value for the series.</span>
          </span>
          <span data-ttu-id="eb640-392">Si cet argument est omis, Microsoft Excel complète à la fin de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-392">If this argument is omitted, Microsoft Excel fills to the end of the range.</span>
          </span>
        </param>
        <param name="Trend">
          <span data-ttu-id="eb640-393">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-393">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-394">
            <b>True</b> pour créer une courbe de tendance linéaire ou géométrique ; <b>False</b> pour créer une série de données standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-394">
              <b>True</b> to create a linear trend or growth trend; <b>False</b> to create a standard data series.</span>
          </span>
          <span data-ttu-id="eb640-395">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-395">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-396">Crée une série de données dans la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-396">Creates a data series in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete (object Shift);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete([in]object Shift) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Delete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (Optional Shift As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift">
          <span data-ttu-id="eb640-397">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-397">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-398">Indique comment décaler les cellules afin de remplacer celles qui sont supprimées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-398">Specifies how to shift cells to replace deleted cells.</span>
          </span>
          <span data-ttu-id="eb640-399">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> constantes : <b>xlShiftToLeft</b> ou <b>xlShiftUp</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-399">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> constants: <b>xlShiftToLeft</b> or <b>xlShiftUp</b>.</span>
          </span>
          <span data-ttu-id="eb640-400">Si cet argument est omis, Microsoft Excel décide en fonction de la forme de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-400">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-401">Supprime l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-401">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Dependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Dependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Dependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Dependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-402">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente la plage contenant tous les dépendants d’une cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-402">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the dependents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-403">
            <para>Il peut s’agir d’une sélection multiple (union d’objets <b>Range</b> ) s’il existe plusieurs dépendants.</para>
            <para>La propriété <b>Dependents</b> fonctionne uniquement sur actif de la feuille et ne peut pas suivre les références distantes.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-403">
              <para>This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</para>
              <para>The <b>Dependents</b> property only works on the active sheet and can not trace remote references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogBox">
      <MemberSignature Language="C#" Value="public object DialogBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DialogBox() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DialogBox" />
      <MemberSignature Language="VB.NET" Value="Public Function DialogBox () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DialogBox();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(245)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-404">Affiche une boîte de dialogue définie par une table de définition de boîte de dialogue dans une feuille macro Microsoft Excel 4.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-404">Displays a dialog box defined by a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-405">
            <para>Cette méthode renvoie le numéro du contrôle choisi ou la valeur <b>False</b> si l’utilisateur clique sur le bouton Annuler.</para>
            <para>Retourné <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet doit faire référence à une table de définition de boîte de dialogue dans une feuille macro Microsoft Excel 4.0.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-405">
              <para>This method returns the number of the chosen control, or returns <b>False</b> if the user clicks the Cancel button.</para>
              <para>The returned <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object must refer to a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectDependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectDependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectDependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectDependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectDependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectDependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-406">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente la plage contenant tous les dépendants directs d’une cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-406">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct dependents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-407">
            <para>Il peut s’agir d’une sélection multiple (union d’objets <b>Range</b> ) s’il existe plusieurs dépendants.</para>
            <para>La propriété <b>Direct Dependents</b> fonctionne uniquement sur actif de la feuille et ne peut pas suivre les références distantes.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-407">
              <para>This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</para>
              <para>The <b>Direct Dependents</b> property only works on the active sheet and can not trace remote references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectPrecedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectPrecedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectPrecedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectPrecedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectPrecedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectPrecedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-408">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente la plage contenant tous les antécédents directs d’une cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-408">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct precedents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-409">
            <para>La propriété <b>DirectPrecedents</b> fonctionne uniquement sur actif de la feuille et ne peut pas suivre les références distantes.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-409">
              <para>The <b>DirectPrecedents</b> property only works on the active sheet and can not trace remote references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="public void Dirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dirty() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Dirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2014)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-410">Cette méthode désigne une plage qui doit être recalculée lorsque le recalcul suivant se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-410">Designates a range to be recalculated when the next recalculation occurs.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="eb640-411">
            <para>Le <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" /> méthode impose la plage spécifiée, qui doit être recalculée, pour les cellules que Microsoft Excel comme nécessitant un recalcul.</para>
            <para>Si l’application est en mode de calcul manuel, à l’aide de la <see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" /> méthode indique à Excel d’identifier la cellule spécifiée à recalculer. Si l’application est en mode de calcul automatique, à l’aide de la méthode <b>Dirty</b> indique à Excel qu’un recalcul.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-411">
              <para>The <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" /> method forces the specified range to be recalculated, for cells that Microsoft Excel understands as needing recalculation.</para>
              <para>If the application is in manual calculation mode, using the <see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" /> method instructs Excel to identify the specified cell to be recalculated. If the application is in automatic calculation mode, using the <b>Dirty</b> method instructs Excel to perform a recalculation.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardChanges">
      <MemberSignature Language="C#" Value="public void DiscardChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DiscardChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-412">Ignore toutes les modifications apportées dans les cellules modifiées de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-412">Discards all changes in the edited cells of the range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="eb640-413">
            <para>Pour une plage basée sur une source de données OLAP, cette méthode supprime toutes les valeurs et les formules entrées dans les cellules, puis exécute une opération de mise à jour pour récupérer les valeurs les plus récentes à partir de la source de données. Il définit la valeur de source de données à une référence null (Nothing dans Visual Basic) pour toutes les cellules de valeurs qui sont modifiés et exécute également une instruction ROLLBACK TRANSACTION sur le serveur OLAP. Pour les plages basées sur des sources de données non-OLAP, cette méthode efface simplement toutes les cellules modifiées.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-413">
              <para>For a range based on an OLAP data source, this method removes all values and formulas entered in the cells, and then runs an update operation to retrieve the latest values from the data source. It sets the data source value to a null reference (Nothing in Visual Basic) for all value cells that are edited, and also executes a ROLLBACK TRANSACTION statement against the OLAP server. For ranges based on non-OLAP data sources, this method simply clears all edited cells.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DisplayFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayFormat As DisplayFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DisplayFormat ^ DisplayFormat { Microsoft::Office::Interop::Excel::DisplayFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DisplayFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-414">Obtient un <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object qui représente les paramètres d’affichage pour la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-414">Gets a <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb640-415">A <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object qui représente les paramètres d’affichage pour la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-415">A <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="eb640-416">
            <para>En lecture seule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-416">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditionOptions">
      <MemberSignature Language="C#" Value="public object EditionOptions (Microsoft.Office.Interop.Excel.XlEditionType Type, Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, object Name, object Reference, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EditionOptions([in]valuetype Microsoft.Office.Interop.Excel.XlEditionType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, [in]object Name, [in]object Reference, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditionOptions (Type As XlEditionType, Option As XlEditionOptionsOption, Optional Name As Object, Optional Reference As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ChartSize As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1131)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlEditionType" />
        <Parameter Name="Option" Type="Microsoft.Office.Interop.Excel.XlEditionOptionsOption" />
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ChartSize" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="eb640-417">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-417">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Option">
          <span data-ttu-id="eb640-418">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-418">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="eb640-419">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-419">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Reference">
          <span data-ttu-id="eb640-420">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-420">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Appearance">
          <span data-ttu-id="eb640-421">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-421">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ChartSize">
          <span data-ttu-id="eb640-422">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-422">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="eb640-423">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-423">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-424">Vous avez demandé de l’aide sur un mot-clé utilisé uniquement sur Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-424">You have requested Help for a keyword used only on the Macintosh.</span>
          </span>
          <span data-ttu-id="eb640-425">Pour plus d’informations sur ce mot clé, consultez l’aide incluse avec Microsoft Office Édition Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-425">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range End[Microsoft.Office.Interop.Excel.XlDirection Direction] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range End(valuetype Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.End(Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End(Direction As XlDirection) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ End[Microsoft::Office::Interop::Excel::XlDirection] { Microsoft::Office::Interop::Excel::Range ^ get(Microsoft::Office::Interop::Excel::XlDirection Direction); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlDirection" />
      </Parameters>
      <Docs>
        <param name="Direction">
          <span data-ttu-id="eb640-426">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-426">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span>
          </span>
          <span data-ttu-id="eb640-427">Direction du déplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-427">The direction in which to move.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-428">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente la cellule à la fin de la région contenant la plage source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-428">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell at the end of the region that contains the source range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-429">
            <para>Équivaut à appuyer sur fin + haut, fin + bas, fin + gauche ou fin + droite.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-429">
              <para>Equivalent to pressing END+UP ARROW, END+DOWN ARROW, END+LEFT ARROW, or END+RIGHT ARROW. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireColumn">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireColumn As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireColumn { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-430">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente la colonne entière (ou colonnes) contenant la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-430">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire column (or columns) that contains the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireRow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireRow As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireRow { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-431">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente toute la ligne (ou lignes) contenant la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-431">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire row (or rows) that contains the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Errors Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Errors Errors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Errors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Errors ^ Errors { Microsoft::Office::Interop::Excel::Errors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Errors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-432">Permet à l’utilisateur accéder aux options de vérification des erreurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-432">Allows the user to access error checking options.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-433">
            <para>Référence du <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> objet pour afficher la liste des valeurs d’index associées aux options de vérification des erreurs.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-433">
              <para>Reference the <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object to view a list of index values associated with error checking options.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="eb640-434">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> le type de format de fichier à exporter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-434">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> The type of file format to export to.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="eb640-435">Facultatif <b>objet</b> le nom de fichier du fichier à enregistrer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-435">Optional <b>Object</b> The file name of the file to be saved.</span>
          </span>
          <span data-ttu-id="eb640-436">Vous pouvez inclure un chemin d’accès complet ou short_Excel2007 enregistre le fichier dans le dossier actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-436">You can include a full path, or short_Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="eb640-437">Facultatif <b>objet</b> généralement mis en forme comme un <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-437">Optional <b>Object</b> Typically formatted as a <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          </span>
          <span data-ttu-id="eb640-438">Spécifie la qualité du fichier publié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-438">Specifies the quality of the published file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="eb640-439">Facultatif <b>objet</b> la valeur <b>True</b> pour inclure les propriétés de document ; Sinon, <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-439">Optional <b>Object</b> set to <b>True</b> to include the document properties; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="eb640-440">Facultatif <b>objet</b> la valeur <b>True</b> pour ignorer les zones d’impression définies lors de la publication ; Sinon, <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-440">Optional <b>Object</b> set to <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="eb640-441">Facultatif <b>objet</b> le numéro de la page à laquelle commence la publication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-441">Optional <b>Object</b> The number of the page at which to start publishing.</span>
          </span>
          <span data-ttu-id="eb640-442">Si cet argument est omis, la publication commence au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-442">If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="eb640-443">Facultatif <b>objet</b> le numéro de la dernière page à publier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-443">Optional <b>Object</b> The number of the last page to publish.</span>
          </span>
          <span data-ttu-id="eb640-444">Si cet argument est omis, la publication se termine par la dernière page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-444">If this argument is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="eb640-445">Facultatif <b>objet</b> la valeur <b>True</b> pour afficher le fichier dans la visionneuse après sa publication ; Sinon, <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-445">Optional <b>Object</b> set to <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="eb640-446">Pointeur <b>d’objet</b> facultatif à la classe <b>FixedFormatExt</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-446">Optional <b>Object</b> Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-447">Réalise une exportation dans un fichier avec le format spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-447">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="eb640-448">
            <para>Cette méthode prend également en charge l’initialisation d’un complément pour exporter un fichier dans un fichier au format fixe. Par exemple, Excel effectue la conversion du format de fichier si les convertisseurs sont présents. La conversion est généralement lancée par l’utilisateur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-448">
              <para>This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillDown">
      <MemberSignature Language="C#" Value="public object FillDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillDown() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillDown" />
      <MemberSignature Language="VB.NET" Value="Public Function FillDown () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(248)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-449">Remplir à partir de la cellule supérieure ou les cellules de la plage spécifiée vers le bas de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-449">Fills down from the top cell or cells in the specified range to the bottom of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-450">
            <para>Le contenu et la mise en forme de la cellule ou les cellules de la ligne supérieure d’une plage sont copiés dans le reste des lignes de la plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-450">
              <para>The contents and formatting of the cell or cells in the top row of a range are copied into the rest of the rows in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillLeft">
      <MemberSignature Language="C#" Value="public object FillLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillLeft() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillLeft" />
      <MemberSignature Language="VB.NET" Value="Public Function FillLeft () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(249)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-451">Recopie à gauche de l’ou les cellules de la plage spécifiée à l’extrême droite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-451">Fills left from the rightmost cell or cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-452">
            <para>Le contenu et la mise en forme de l’ou les cellules dans la colonne la plus à droite d’une plage sont copiés dans le reste des colonnes de la plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-452">
              <para>The contents and formatting of the cell or cells in the rightmost column of a range are copied into the rest of the columns in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRight">
      <MemberSignature Language="C#" Value="public object FillRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillRight() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillRight" />
      <MemberSignature Language="VB.NET" Value="Public Function FillRight () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(250)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-453">Cette méthode remplit directement à partir de la plus à gauche ou les cellules de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-453">Fills right from the leftmost cell or cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-454">
            <para>Le contenu et la mise en forme de l’ou les cellules dans la colonne la plus à gauche d’une plage sont copiés dans le reste des colonnes de la plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-454">
              <para>The contents and formatting of the cell or cells in the leftmost column of a range are copied into the rest of the columns in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillUp">
      <MemberSignature Language="C#" Value="public object FillUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillUp" />
      <MemberSignature Language="VB.NET" Value="Public Function FillUp () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-455">Remplir à partir de l’ou les cellules de la plage spécifiée en bas en haut de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-455">Fills up from the bottom cell or cells in the specified range to the top of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-456">
            <para>Le contenu et la mise en forme de l’ou les cellules dans la ligne du bas d’une plage sont copiés dans le reste des lignes de la plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-456">
              <para>The contents and formatting of the cell or cells in the bottom row of a range are copied into the rest of the rows in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Find (object What, object After, object LookIn, object LookAt, object SearchOrder, Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, object MatchCase, object MatchByte, object SearchFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Find([in]object What, [in]object After, [in]object LookIn, [in]object LookAt, [in]object SearchOrder, [in]valuetype Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (What As Object, Optional After As Object, Optional LookIn As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional SearchDirection As XlSearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(398)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="LookIn" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="SearchDirection" Type="Microsoft.Office.Interop.Excel.XlSearchDirection" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What">
          <span data-ttu-id="eb640-457">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-457">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-458">Les données à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-458">The data to search for.</span>
          </span>
          <span data-ttu-id="eb640-459">Peut être une chaîne ou tout type de données Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-459">Can be a string or any Microsoft Excel data type.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="eb640-460">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-460">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-461">La cellule après laquelle vous souhaitez commencer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-461">The cell after which you want the search to begin.</span>
          </span>
          <span data-ttu-id="eb640-462">Cela correspond à la position de la cellule active lorsqu’une recherche est effectuée à partir de l’interface utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-462">This corresponds to the position of the active cell when a search is done from the user interface.</span>
          </span>
          <span data-ttu-id="eb640-463">Notez <b>qu’une fois que</b> doit correspondre à une seule cellule dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-463">Note that <b>After</b> must be a single cell in the range.</span>
          </span>
          <span data-ttu-id="eb640-464">N’oubliez pas que la recherche commence <paramref name="after" /> cette cellule ; la cellule spécifiée n’est pas recherchée jusqu'à ce que la méthode habille retour à cette cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-464">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span>
          </span>
          <span data-ttu-id="eb640-465">Si vous ne spécifiez pas cet argument, la recherche démarre après la cellule située dans le coin supérieur gauche de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-465">If you don’t specify this argument, the search starts after the cell in the upper-left corner of the range.</span>
          </span>
        </param>
        <param name="LookIn">
          <span data-ttu-id="eb640-466">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-466">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-467">Type d'informations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-467">The type of information.</span>
          </span>
        </param>
        <param name="LookAt">
          <span data-ttu-id="eb640-468">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-468">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-469">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constantes : <b>xlWhole</b> ou <b>xlPart</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-469">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span>
          </span>
        </param>
        <param name="SearchOrder">
          <span data-ttu-id="eb640-470">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-470">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-471">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constantes : <b>xlByRows</b> ou <b>xlByColumns</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-471">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span>
          </span>
        </param>
        <param name="SearchDirection">
          <span data-ttu-id="eb640-472">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-472">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" />.</span>
          </span>
          <span data-ttu-id="eb640-473">Sens de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-473">The search direction.</span>
          </span>
          <span data-ttu-id="eb640-474">Peut être une de ces constantes XlSearchDirection :<b>xlNext</b><paramref name="default" /><b>xlPrevious</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-474">Can be one of these XlSearchDirection constants:<b>xlNext</b><paramref name="default" /><b>xlPrevious</b></span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="eb640-475">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-475">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-476">
            <b>True</b> pour que la recherche respecte la casse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-476">
              <b>True</b> to make the search case sensitive.</span>
          </span>
          <span data-ttu-id="eb640-477">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-477">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="MatchByte">
          <span data-ttu-id="eb640-478">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-478">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-479">Utilisé uniquement si vous avez sélectionné ou installé la prise en charge linguistique sur deux octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-479">Used only if you’ve selected or installed double-byte language support.</span>
          </span>
          <span data-ttu-id="eb640-480">
            <b>True</b> pour que les caractères à double octet uniquement correspondance des caractères codés sur deux octets ; <b>False</b> pour que les caractères codés sur deux octets correspondent à leurs équivalents sur un octet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-480">
              <b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span>
          </span>
        </param>
        <param name="SearchFormat">
          <span data-ttu-id="eb640-481">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-481">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-482">Format de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-482">The search format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-483">Recherche des informations spécifiques dans une plage et renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente la première cellule où ces informations sont trouvées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-483">Finds specific information in a range and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the first cell where that information is found.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-484">
            <para>Cette méthode renvoie la <b>valeur Nothing</b> si aucune correspondance n’est trouvée.</para>
            <para>Cette méthode n’affecte pas la sélection ou la cellule active.</para>
            <para>Les paramètres de <paramref name="LookIn" />, <paramref name="LookAt" />, <paramref name="SearchOrder" />, et <paramref name="MatchByte" /> sont enregistrés chaque fois que vous utilisez cette méthode. Si vous ne spécifiez des valeurs pour ces arguments la prochaine fois que vous appelez la méthode, les valeurs enregistrées sont utilisées. La définition de ces arguments modifie les paramètres de la boîte de dialogue Rechercher et modifier les paramètres dans la boîte de dialogue Rechercher modifie les valeurs enregistrées qui sont utilisées si vous omettez les arguments. Pour éviter les problèmes, définissez explicitement ces arguments chaque fois que vous utilisez cette méthode.</para>
            <para>Que vous pouvez utiliser la <see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" /> et <see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" /> méthodes pour répéter la recherche.</para>
            <para>Lors de la recherche atteint la fin de la plage de recherche spécifiée, elle revient au début de la plage. Pour arrêter une recherche lorsqu’elle revient, enregistrez l’adresse de la première cellule trouvée, puis tester chaque adresse de cellule trouvé successive par rapport à cette adresse d’enregistrée.</para>
            <para>Pour rechercher les cellules qui correspondent à des modèles plus complexes, utilisez une <b>For Each... Suivant</b> instruction avec l’opérateur <b>Like</b> .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-484">
              <para>This method returns <b>Nothing</b> if no match is found.</para>
              <para>This method doesn’t affect the selection or the active cell.</para>
              <para>The settings for <paramref name="LookIn" />, <paramref name="LookAt" />, <paramref name="SearchOrder" />, and <paramref name="MatchByte" /> are saved each time you use this method. If you don’t specify values for these arguments the next time you call the method, the saved values are used. Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments. To avoid problems, set these arguments explicitly each time you use this method.</para>
              <para>You can use the <see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" /> methods to repeat the search.</para>
              <para>When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</para>
              <para>To find cells that match more complicated patterns, use a <b>For Each...Next</b> statement with the <b>Like</b> operator.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindNext (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindNext([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNext (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(399)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After">
          <span data-ttu-id="eb640-485">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-485">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-486">La cellule après laquelle vous souhaitez rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-486">The cell after which you want to search.</span>
          </span>
          <span data-ttu-id="eb640-487">Cela correspond à la position de la cellule active lorsqu’une recherche est effectuée à partir de l’interface utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-487">This corresponds to the position of the active cell when a search is done from the user interface.</span>
          </span>
          <span data-ttu-id="eb640-488">Notez que <paramref name="After" /> doit correspondre à une seule cellule dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-488">Note that <paramref name="After" /> must be a single cell in the range.</span>
          </span>
          <span data-ttu-id="eb640-489">N’oubliez pas que la recherche commence <paramref name="after" /> cette cellule ; la cellule spécifiée n’est pas recherchée jusqu'à ce que la méthode habille retour à cette cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-489">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span>
          </span>
          <span data-ttu-id="eb640-490">Si cet argument n’est pas spécifié, la recherche démarre après la cellule située dans le coin supérieur gauche de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-490">If this argument isn’t specified, the search starts after the cell in the upper-left corner of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-491">Poursuit une recherche a été lancée par le <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-491">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-492">
            <para>Elle recherche la cellule suivante qui correspond aux mêmes critères et renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui la représente.</para>
            <para>Cette méthode n’affecte pas la sélection ou la cellule active.</para>
            <para>Lors de la recherche atteint la fin de la plage de recherche spécifiée, elle revient au début de la plage. Pour arrêter une recherche lorsqu’elle revient, enregistrez l’adresse de la première cellule trouvée, puis tester chaque adresse de cellule trouvé successive par rapport à cette adresse d’enregistrée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-492">
              <para>Finds the next cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</para>
              <para>This method doesn’t affect the selection or the active cell.</para>
              <para>When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindPrevious (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindPrevious([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindPrevious (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After">
          <span data-ttu-id="eb640-493">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-493">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-494">La cellule avant laquelle vous souhaitez rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-494">The cell before which you want to search.</span>
          </span>
          <span data-ttu-id="eb640-495">Cela correspond à la position de la cellule active lorsqu’une recherche est effectuée à partir de l’interface utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-495">This corresponds to the position of the active cell when a search is done from the user interface.</span>
          </span>
          <span data-ttu-id="eb640-496">Notez que <paramref name="After" /> doit correspondre à une seule cellule dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-496">Note that <paramref name="After" /> must be a single cell in the range.</span>
          </span>
          <span data-ttu-id="eb640-497">N’oubliez pas que la recherche commence <paramref name="before" /> cette cellule ; la cellule spécifiée n’est pas recherchée jusqu'à ce que la méthode habille retour à cette cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-497">Remember that the search begins <paramref name="before" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span>
          </span>
          <span data-ttu-id="eb640-498">Si cet argument n’est pas spécifié, la recherche démarre avant la cellule supérieure gauche de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-498">If this argument isn’t specified, the search starts before the upper-left cell in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-499">Poursuit une recherche a été lancée par le <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-499">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-500">
            <para>Elle recherche la cellule précédente qui correspond aux mêmes critères et renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui la représente.</para>
            <para>Cette méthode n’affecte pas la sélection ou la cellule active.</para>
            <para>Lorsque la recherche atteint le début de la plage de recherche spécifiée, elle revient à la fin de la plage. Pour arrêter une recherche lorsqu’elle revient, enregistrez l’adresse de la première cellule trouvée, puis tester chaque adresse de cellule trouvé successive par rapport à cette adresse d’enregistrée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-500">
              <para>Finds the previous cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</para>
              <para>This method doesn’t affect the selection or the active cell.</para>
              <para>When the search reaches the beginning of the specified search range, it wraps around to the end of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public void FlashFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlashFill() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlashFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlashFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-501">La valeur TRUE indique que la fonctionnalité Excel Flash remplir a été activé et actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-501">TRUE indicates that the Excel Flash Fill feature has been enabled and active.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-502">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Font" /> objet qui représente la police de l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-502">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatConditions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FormatConditions FormatConditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FormatConditions FormatConditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormatConditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatConditions As FormatConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FormatConditions ^ FormatConditions { Microsoft::Office::Interop::Excel::FormatConditions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FormatConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-503">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection qui représente tous les formats conditionnels de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-503">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection that represents all the conditional formats for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public object Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Formula { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-504">Cette propriété renvoie ou définit la formule de l'objet dans une notation de style A1 et dans la langue de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-504">Returns or sets the object's formula in A1-style notation and in the language of the macro.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-505">
            <para>Cette propriété n’est pas disponible pour les sources de données OLAP.</para>
            <para>Si la cellule contient une constante, cette propriété renvoie la constante. Si la cellule est vide, cette propriété <b>Formula</b> renvoie une chaîne vide. Si la cellule contient une formule, la propriété <b>Formula</b> renvoie la formule sous forme de chaîne dans le même format qui s’affiche dans la formule de la barre (y compris le signe égal).</para>
            <para>Si vous affectez la valeur ou la formule d’une cellule à une date, Microsoft Excel vérifie si cette cellule est déjà mise en forme avec un des formats de nombre date ou heure. Si non, Microsoft Excel lui affecte le format pour le format de date courte par défaut.</para>
            <para>Si la plage est une plage d’une ou deux dimensions, vous pouvez définir la formule en tableau des dimensions sont identiques. De même, vous pouvez placer la formule dans un tableau de base.</para>
            <para>En définissant la formule pour une plage à cellules multiples remplit toutes les cellules de la plage de la formule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-505">
              <para>This property is not available for OLAP data sources.</para>
              <para>If the cell contains a constant, this property returns the constant. If the cell is empty, this <b>Formula</b> property returns an empty string. If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into a Basic array.</para>
              <para>Setting the formula for a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaArray">
      <MemberSignature Language="C#" Value="public object FormulaArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaArray" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaArray { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-506">Cette propriété renvoie ou définit la formule de tableau d’une plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-506">Returns or sets the array formula of a range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-507">
            <para>Cette propriété renvoie (ou peut être définie sur) une seule formule ou un tableau.</para>
            <para>Si la plage spécifiée ne contient une formule matricielle, cette propriété renvoie <b>Null</b>.</para>
            <para>Si vous utilisez cette propriété pour entrer une formule matricielle, la formule doit utiliser le style de référence L1C1, pas la référence A1 (consultez le second exemple) de style.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-507">
              <para>This property returns (or can be set to) a single formula or an array.</para>
              <para>If the specified range doesn't contain an array formula, this property returns <b>Null</b>.</para>
              <para>If you use this property to enter an array formula, the formula must use the R1C1 reference style, not the A1 reference style (see the second example).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-508">Détermine si la formule sera masquée lorsque la feuille de calcul est protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-508">Determines if the formula will be hidden when the worksheet is protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-509">
            <para>Cette propriété renvoie <b>la valeur True</b> si la formule sera masquée lorsque la feuille de calcul est protégée. Renvoie la <b>valeur Null</b> si la plage spécifiée contient certaines cellules avec <b>FormulaHidden</b> égale à <b>True</b> et d’autres cellules avec <b>FormulaHidden</b> égale à <b>False</b>.</para>
            <para>Ne confondez pas cette propriété avec la <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> propriété. La formule sera masquée pas si le classeur est protégé et n’est pas la feuille de calcul, mais uniquement si la feuille de calcul est protégée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-509">
              <para>This property returns <b>True</b> if the formula will be hidden when the worksheet is protected. It returns <b>Null</b> if the specified range contains some cells with <b>FormulaHidden</b> equal to <b>True</b> and some cells with <b>FormulaHidden</b> equal to <b>False</b>.</para>
              <para>Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property. The formula will not be hidden if the workbook is protected and the worksheet is not, but only if the worksheet is protected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLabel As XlFormulaLabel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFormulaLabel FormulaLabel { Microsoft::Office::Interop::Excel::XlFormulaLabel get(); void set(Microsoft::Office::Interop::Excel::XlFormulaLabel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFormulaLabel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-510">Cette propriété renvoie ou définit le type d’étiquette de formule pour la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-510">Returns or sets the formula label type for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-511">
            <para>La valeur de retour de cette propriété peut être <b>xlNone</b> si la plage ne contient pas d’étiquettes ou une des constantes <b>XlFormulaLabel</b> suivantes :</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlColumnLabels</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlMixedLabels</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlNoLabels</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlRowLabels</b>
                </description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-511">
              <para>The return value of this property can be <b>xlNone</b> if the range contains no labels, or one of the following <b>XlFormulaLabel</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlColumnLabels</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlMixedLabels</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlNoLabels</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlRowLabels</b>
                  </description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLocal">
      <MemberSignature Language="C#" Value="public object FormulaLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-512">Cette propriété renvoie ou définit la formule de l'objet, à l'aide de références de style A1 dans la langue de l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-512">Returns or sets the formula for the object, using A1-style references in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-513">
            <para>Si la cellule contient une constante, cette propriété renvoie cette constante. Si la cellule est vide, la propriété renvoie une chaîne vide. Si la cellule contient une formule, la propriété renvoie la formule sous forme de chaîne, dans le même format dans lequel il doit être affiché dans la formule de la barre (y compris le signe égal).</para>
            <para>Si vous affectez la valeur ou la formule d’une cellule à une date, Microsoft Excel vérifie si cette cellule est déjà mise en forme avec un des formats de nombre date ou heure. Si non, le format de nombre est remplacé par le format de date courte par défaut.</para>
            <para>Si la plage est une plage d’une ou deux dimensions, vous pouvez définir la formule en tableau des dimensions sont identiques. De même, vous pouvez placer la formule dans un tableau.</para>
            <para>En définissant la formule d’une plage à cellules multiples remplit toutes les cellules de la plage de la formule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-513">
              <para>If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into an array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1">
      <MemberSignature Language="C#" Value="public object FormulaR1C1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-514">Cette propriété renvoie ou définit la formule de l'objet, en utilisant la notation R1C1 dans la langue de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-514">Returns or sets the formula for the object, using R1C1-style notation in the language of the macro.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-515">
            <para>Si la cellule contient une constante, cette propriété renvoie la constante. Si la cellule est vide, la propriété renvoie une chaîne vide. Si la cellule contient une formule, la propriété renvoie la formule sous forme de chaîne, dans le même format dans lequel il doit être affiché dans la formule de la barre (y compris le signe égal).</para>
            <para>Si vous affectez la valeur ou la formule d’une cellule à une date, Microsoft Excel vérifie si cette cellule est déjà mise en forme avec un des formats de nombre date ou heure. Si non, le format de nombre est remplacé par le format de date courte par défaut.</para>
            <para>Si la plage est une plage d’une ou deux dimensions, vous pouvez définir la formule en tableau des dimensions sont identiques. De même, vous pouvez placer la formule dans un tableau.</para>
            <para>En définissant la formule d’une plage à cellules multiples remplit toutes les cellules de la plage de la formule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-515">
              <para>If the cell contains a constant, this property returns the constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into an array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1Local">
      <MemberSignature Language="C#" Value="public object FormulaR1C1Local { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1Local" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1Local" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1Local As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1Local { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-516">Cette propriété renvoie ou définit la formule de l'objet, en utilisant la notation R1C1 dans la langue de l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-516">Returns or sets the formula for the object, using R1C1-style notation in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-517">
            <para>Si la cellule contient une constante, cette propriété renvoie cette constante. Si la cellule est vide, la propriété renvoie une chaîne vide. Si la cellule contient une formule, la propriété renvoie la formule sous forme de chaîne, dans le même format dans lequel il doit être affiché dans la formule de la barre (y compris le signe égal).</para>
            <para>Si vous affectez la valeur ou la formule d’une cellule à une date, Microsoft Excel vérifie si cette cellule est déjà mise en forme avec un des formats de nombre date ou heure. Si non, le format de nombre est remplacé par le format de date courte par défaut.</para>
            <para>Si la plage est une plage d’une ou deux dimensions, vous pouvez définir la formule en tableau des dimensions sont identiques. De même, vous pouvez placer la formule dans un tableau.</para>
            <para>En définissant la formule d’une plage à cellules multiples remplit toutes les cellules de la plage de la formule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-517">
              <para>If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into an array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionWizard">
      <MemberSignature Language="C#" Value="public object FunctionWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FunctionWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FunctionWizard" />
      <MemberSignature Language="VB.NET" Value="Public Function FunctionWizard () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FunctionWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(571)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-518">Cette méthode démarre l'Assistant Fonction pour la cellule située dans le coin supérieur gauche de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-518">Starts the Function Wizard for the upper-left cell of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoalSeek">
      <MemberSignature Language="C#" Value="public bool GoalSeek (object Goal, Microsoft.Office.Interop.Excel.Range ChangingCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GoalSeek([in]object Goal, [in]class Microsoft.Office.Interop.Excel.Range ChangingCell) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoalSeek (Goal As Object, ChangingCell As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoalSeek(System::Object ^ Goal, Microsoft::Office::Interop::Excel::Range ^ ChangingCell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(472)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Goal" Type="System.Object" />
        <Parameter Name="ChangingCell" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Goal">
          <span data-ttu-id="eb640-519">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-519">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-520">Valeur qui doit être renvoyée dans cette cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-520">The value you want returned in this cell.</span>
          </span>
        </param>
        <param name="ChangingCell">
          <span data-ttu-id="eb640-521">Requis <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-521">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="eb640-522">Spécifie la cellule à modifier pour obtenir le résultat souhaité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-522">Specifies which cell should be changed to achieve the target value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-523">Calcule les valeurs nécessaires pour atteindre un objectif spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-523">Calculates the values necessary to achieve a specific goal.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-524">
            <para>Si celui-ci est un montant renvoyé par une formule, cette méthode calcule une valeur qui, lorsque fournie à votre formule, entraîne la formule renvoyer le numéro voulu.</para>
            <para>Cette méthode renvoie <b>la valeur True</b> si le résultat est atteint.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-524">
              <para>If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</para>
              <para>This method returns <b>True</b> if the goal seek is successful.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public object Group (object Start, object End, object By, object Periods);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Group([in]object Start, [in]object End, [in]object By, [in]object Periods) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Group(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Group (Optional Start As Object, Optional End As Object, Optional By As Object, Optional Periods As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(46)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="End" Type="System.Object" />
        <Parameter Name="By" Type="System.Object" />
        <Parameter Name="Periods" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="eb640-525">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-525">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-526">Première valeur à être groupée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-526">The first value to be grouped.</span>
          </span>
          <span data-ttu-id="eb640-527">Si cet argument est omis ou <b>la valeur True</b>, la première valeur dans le champ est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-527">If this argument is omitted or <b>True</b>, the first value in the field is used.</span>
          </span>
        </param>
        <param name="End">
          <span data-ttu-id="eb640-528">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-528">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-529">La dernière valeur à être groupée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-529">The last value to be grouped.</span>
          </span>
          <span data-ttu-id="eb640-530">Si cet argument est omis ou <b>la valeur True</b>, la dernière valeur du champ est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-530">If this argument is omitted or <b>True</b>, the last value in the field is used.</span>
          </span>
        </param>
        <param name="By">
          <span data-ttu-id="eb640-531">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-531">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-532">Si le champ est numérique, cet argument spécifie la taille de chaque groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-532">If the field is numeric, this argument specifies the size of each group.</span>
          </span>
          <span data-ttu-id="eb640-533">Si le champ est une date, cet argument spécifie le nombre de jours dans chaque groupe si l’élément 4 du <paramref name="Periods" /> tableau a la <b>valeur True</b> et tous les autres éléments ont la <b>valeur False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-533">If the field is a date, this argument specifies the number of days in each group if element 4 in the <paramref name="Periods" /> array is <b>True</b> and all the other elements are <b>False</b>.</span>
          </span>
          <span data-ttu-id="eb640-534">Sinon, cet argument est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-534">Otherwise, this argument is ignored.</span>
          </span>
          <span data-ttu-id="eb640-535">Si cet argument est omis, Microsoft Excel choisit automatiquement une taille de groupe par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-535">If this argument is omitted, Microsoft Excel automatically chooses a default group size.</span>
          </span>
        </param>
        <param name="Periods">
          <span data-ttu-id="eb640-536">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-536">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-537">Tableau de valeurs booléennes qui spécifient la période pour le groupe, comme indiqué dans le tableau suivant. Si un élément dans le tableau a la <b>valeur True</b>, un groupe est créé pour la période correspondante ; Si l’élément a la <b>valeur False</b>, aucun groupe est créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-537">An array of Boolean values that specify the period for the group, as shown in the following table.If an element in the array is <b>True</b>, a group is created for the corresponding time; if the element is <b>False</b>, no group is created.</span>
          </span>
          <span data-ttu-id="eb640-538">Si le champ n’est pas un champ de date, cet argument est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-538">If the field isn’t a date field, this argument is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-539">Lors de la <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet représente une seule cellule dans la plage de données d’un champ de tableau croisé dynamique, la méthode <b>Group</b> effectue un regroupement par chiffres ou dates dans ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-539">When the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object represents a single cell in a PivotTable field’s data range, the <b>Group</b> method performs numeric or date-based grouping in that field.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-540">
            <para>L’objet <b>Range</b> doit être une seule cellule dans la plage de données du champ de tableau croisé dynamique. Si vous tentez d’appliquer cette méthode à plusieurs cellules, elle échouera mais n’affichera pas un message d’erreur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-540">
              <para>The <b>Range</b> object must be a single cell in the PivotTable field’s data range. If you attempt to apply this method to more than one cell, it will fail but will not display an error message.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="C#" Value="public object HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasArray { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-541">Détermine si la cellule spécifiée fait partie d’une formule matricielle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-541">Determines if the specified cell is part of an array formula.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-542">
            <para>Cette propriété renvoie <b>la valeur True</b> si la cellule spécifiée fait partie d’une formule matricielle.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-542">
              <para>This property returns <b>True</b> if the specified cell is part of an array formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFormula">
      <MemberSignature Language="C#" Value="public object HasFormula { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasFormula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasFormula" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFormula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasFormula { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-543">Détermine si toutes les cellules de la plage contiennent des formules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-543">Determines if all cells in the range contain formulas.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-544">
            <para>Cette propriété renvoie <b>la valeur True</b> si toutes les cellules de la plage contiennent des formules, <b>False</b> si aucune des cellules de la plage contient une formule et <b>Null</b> dans le cas contraire.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-544">
              <para>This property returns <b>True</b> if all cells in the range contain formulas, <b>False</b> if none of the cells in the range contains a formula, and <b>Null</b> otherwise.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public object Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Height { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-545">La hauteur de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-545">The height of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public object Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Hidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hidden" />
      <MemberSignature Language="VB.NET" Value="Public Property Hidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Hidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-546">Détermine si les lignes ou les colonnes sont masquées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-546">Determines if the rows or columns are hidden.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-547">
            <para>Cette propriété renvoie <b>la valeur True</b> si les lignes ou les colonnes sont masquées. La plage spécifiée doit s’étendre sur une colonne ou ligne entière.</para>
            <para>Ne confondez pas cette propriété avec la <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" /> propriété.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-547">
              <para>This property returns <b>True</b> if the rows or columns are hidden. The specified range must span an entire column or row.</para>
              <para>Don't confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-548">Cette propriété renvoie ou définit l'alignement horizontal de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-548">Returns or sets the horizontal alignment for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-549">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection qui représente les liens hypertexte de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-549">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-550">Cette propriété renvoie ou définit l’étiquette d’identification de la cellule spécifiée lors de la page est enregistrée en tant que page Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-550">Returns or sets the identifying label for the specified cell when the page is saved as a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-551">
            <para>Vous pouvez utiliser une étiquette d’identification en tant que référence de lien hypertexte dans d’autres documents HTML ou sur la même page Web.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-551">
              <para>You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-552">Cette propriété renvoie ou définit le niveau de retrait pour la cellule ou la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-552">Returns or sets the indent level for the cell or range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-553">
            <para>Le niveau de retrait peut être un entier compris entre 0 et 15.</para>
            <para>à l’aide de cette propriété pour définir le niveau de retrait à un nombre inférieur à 0 (zéro) ou supérieure à 15 provoque une erreur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-553">
              <para>The indent level can be an integer from 0 to 15.</para>
              <para>Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public object Insert (object Shift, object CopyOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Insert([in]object Shift, [in]object CopyOrigin) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Insert(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (Optional Shift As Object, Optional CopyOrigin As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
        <Parameter Name="CopyOrigin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift">
          <span data-ttu-id="eb640-554">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-554">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-555">Indique comment décaler les cellules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-555">Specifies which way to shift the cells.</span>
          </span>
          <span data-ttu-id="eb640-556">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> constantes : <b>xlShiftToRight</b> ou <b>xlShiftDown</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-556">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> constants: <b>xlShiftToRight</b> or <b>xlShiftDown</b>.</span>
          </span>
          <span data-ttu-id="eb640-557">Si cet argument est omis, Microsoft Excel décide en fonction de la forme de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-557">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span>
          </span>
        </param>
        <param name="CopyOrigin">
          <span data-ttu-id="eb640-558">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-558">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-559">Origine de la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-559">The copy origin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-560">Cette méthode insère une cellule ou une plage de cellules dans la feuille de calcul ou la feuille de macro et elle déplace les autres cellules pour faire de la place.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-560">Inserts a cell or a range of cells into the worksheet or macro sheet and shifts other cells away to make space.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIndent">
      <MemberSignature Language="C#" Value="public void InsertIndent (int InsertAmount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertIndent([in]int32 InsertAmount) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.InsertIndent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertIndent (InsertAmount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertIndent(int InsertAmount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InsertAmount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="InsertAmount">
          <span data-ttu-id="eb640-561">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-561">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="eb640-562">Valeur à ajouter au retrait actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-562">The amount to be added to the current indent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-563">Ajoute un retrait dans les cellules de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-563">Adds an indent to the specified range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="eb640-564">
            <para>à l’aide de cette méthode pour définir le niveau de retrait à un nombre inférieur à 0 (zéro) ou supérieure à 15 provoque une erreur.</para>
            <para>Utiliser le<b /><see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" /> propriété pour renvoyer le niveau de retrait d’une plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-564">
              <para>Using this method to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</para>
              <para>Use the<b /><see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" /> property to return the indent level for a range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-565">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object qui représente l’intérieur de l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-565">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Item(RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex">
          <span data-ttu-id="eb640-566">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-566">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-567">Numéro d'index de la cellule à atteindre, de gauche à droite, puis vers le bas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-567">The index number of the cell you want to access, in order from left to right, then down.</span>
          </span>
          <span data-ttu-id="eb640-568">RangeItem (1) renvoie la cellule du coin supérieur gauche de la plage ; Range.Item (2) renvoie la cellule immédiatement à droite de la cellule du coin supérieur gauche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-568">Range.Item(1) returns the upper-left cell in the range; Range.Item(2) returns the cell immediately to the right of the upper-left cell.</span>
          </span>
        </param>
        <param name="ColumnIndex">
          <span data-ttu-id="eb640-569">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-569">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-570">Nombre ou chaîne qui indique le numéro de colonne de la cellule que vous voulez atteindre, en commençant par 1 ou « A » pour la première colonne dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-570">A number or string that indicates the column number of the cell you want to access, starting with either 1 or "A" for the first column in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-571">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente une plage décalée à la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-571">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range at an offset to the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-572">
            <para>Le <paramref name="RowIndex" /> et <paramref name="ColumnIndex" /> arguments sont des décalages relatifs. En d’autres termes, en spécifiant un <paramref name="RowIndex" /> de 1 renvoie les cellules de la première ligne de la plage, pas la première ligne de la feuille de calcul.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-572">
              <para>The <paramref name="RowIndex" /> and <paramref name="ColumnIndex" /> arguments are relative offsets. In other words, specifying a <paramref name="RowIndex" /> of 1 returns cells in the first row of the range, not the first row of the worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Justify">
      <MemberSignature Language="C#" Value="public object Justify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Justify() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Justify" />
      <MemberSignature Language="VB.NET" Value="Public Function Justify () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Justify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(495)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-573">Cette méthode réorganise le texte dans une plage de façon à ce qu'il la remplisse de manière uniforme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-573">Rearranges the text in a range so that it fills the range evenly.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-574">
            <para>Si la plage n’est pas suffisamment importante, Microsoft Excel affiche un message vous indiquant que le texte s’étendra au-dessous de la plage. Si vous cliquez sur le bouton OK, texte justifié remplace le contenu dans les cellules qui se prolongent au-delà de la plage sélectionnée. Pour empêcher l’affichage de ce message, définissez la <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> propriété la <b>valeur False</b>. Une fois que vous définissez cette propriété, texte remplace toujours le contenu des cellules situées sous la plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-574">
              <para>If the range isn’t large enough, Microsoft Excel displays a message telling you that text will extend below the range. If you click the OK button, justified text will replace the contents in cells that extend beyond the selected range. To prevent this message from appearing, set the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>. After you set this property, text will always replace the contents in cells below the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public object Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Left { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-575">La distance entre le bord gauche de la colonne A et le bord gauche de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-575">The distance from the left edge of column A to the left edge of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-576">
            <para>Si la plage est discontinue, la première zone est utilisée. Si la plage contient plusieurs colonnes de large, la colonne de gauche de la plage est utilisée.</para>
            <para>Si la fenêtre est agrandie, cette propriété renvoie un nombre négatif qui varie en fonction de la largeur de la bordure de la fenêtre. Définir cette propriété sur 0 (zéro) rend la fenêtre un petit peu plus petite qu’il serait si la fenêtre d’application avait été agrandie. En d’autres termes, si cette propriété est 0 (zéro), la bordure gauche de la fenêtre Microsoft Excel principale peine sera visible à l’écran.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-576">
              <para>If the range is discontinuous, the first area is used. If the range is more than one column wide, the leftmost column in the range is used.</para>
              <para>If the window is maximized, this property returns a negative number that varies based on the width of the window border. Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized. In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListHeaderRows">
      <MemberSignature Language="C#" Value="public int ListHeaderRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListHeaderRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListHeaderRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListHeaderRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListHeaderRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-577">Renvoie le nombre de lignes d’en-tête pour la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-577">Returns the number of header rows for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-578">
            <para>Avant d’utiliser cette propriété, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" /> propriété pour rechercher les limites de la plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-578">
              <para>Before you use this property, use the <see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" /> property to find the boundaries of the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNames">
      <MemberSignature Language="C#" Value="public object ListNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListNames() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ListNames" />
      <MemberSignature Language="VB.NET" Value="Public Function ListNames () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ListNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(253)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-579">Colle une liste de tous les noms affichés dans la feuille de calcul, en commençant par la première cellule de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-579">Pastes a list of all displayed names onto the worksheet, beginning with the first cell in the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-580">
            <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> propriété permet de renvoyer une collection de tous les noms dans une feuille de calcul.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-580">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> property to return a collection of all the names on a worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject ListObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject ListObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObject As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ ListObject { Microsoft::Office::Interop::Excel::ListObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-581">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objet pour le <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet ou <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-581">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object for the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object or <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationInTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.LocationInTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocationInTable As XlLocationInTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlLocationInTable LocationInTable { Microsoft::Office::Interop::Excel::XlLocationInTable get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlLocationInTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-582">Renvoie une constante qui décrit la partie de la <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> état contenant le coin supérieur gauche de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-582">Returns a constant that describes the part of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> report that contains the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-583">
            <para>
              <b>XlLocationInTable</b> peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> constantes :</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlRowHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlColumnHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlDataHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlRowItem</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlColumnItem</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageItem </b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlDataItem</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlTableBody</b>
                </description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-583">
              <para>
                <b>XlLocationInTable</b> can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlRowHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlColumnHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlDataHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlRowItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlColumnItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlDataItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlTableBody</b>
                  </description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-584">Détermine si l’objet est verrouillé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-584">Determines if the object is locked.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-585">
            <para>Cette propriété renvoie <b>la valeur True</b> si l’objet est verrouillé, <b>False</b> si l’objet peut être modifié lorsque la feuille est protégée et <b>Null</b> si la plage spécifiée contient des cellules verrouillées et déverrouillées.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-585">
              <para>This property returns <b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected, and <b>Null</b> if the specified range contains both locked and unlocked cells.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MDX">
      <MemberSignature Language="C#" Value="public string MDX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MDX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MDX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MDX As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MDX { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-586">Renvoie le nom MDX spécifié <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-586">Returns the MDX name for the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
          <span data-ttu-id="eb640-587">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-587">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb640-588">String</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-588">String</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (object Across);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Merge([in]object Across) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Merge(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (Optional Across As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Across" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Across">
          <span data-ttu-id="eb640-589">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-589">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-590">
            <b>True</b> pour fusionner les cellules de chaque ligne de la plage spécifiée en cellules fusionnées individuelles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-590">
              <b>True</b> to merge cells in each row of the specified range as separate merged cells.</span>
          </span>
          <span data-ttu-id="eb640-591">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-591">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-592">Crée une cellule fusionnée à partir du <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-592">Creates a merged cell from the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="eb640-593">
            <para>La valeur d’une plage fusionnée est spécifiée dans la cellule du coin supérieur gauche de la plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-593">
              <para>The value of a merged range is specified in the cell of the range's upper-left corner.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range MergeArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range MergeArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergeArea As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ MergeArea { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-594">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente la plage fusionnée contenant la cellule spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-594">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the merged range containing the specified cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-595">
            <para>Si la cellule spécifiée n’est pas dans une plage fusionnée, cette propriété renvoie la cellule spécifiée.</para>
            <para>La propriété <b>MergeArea</b> ne fonctionne que sur une plage à cellule unique.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-595">
              <para>If the specified cell isn’t in a merged range, this property returns the specified cell.</para>
              <para>The <b>MergeArea</b> property only works on a single-cell range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-596">Détermine si la plage ou le style contient des cellules fusionnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-596">Determines if the range or style contains merged cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-597">
            <para>Cette propriété renvoie <b>la valeur True</b> si la plage ou le style contient des cellules fusionnées.</para>
            <para>Lorsque vous sélectionnez une plage qui contient des cellules fusionnées, la sélection qui en résulte peut être différente de la sélection prévue. Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> pour vérifier l’adresse de la plage sélectionnée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-597">
              <para>This property returns <b>True</b> if the range or style contains merged cells.</para>
              <para>When you select a range that contains merged cells, the resulting selection may be different from the intended selection. Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public object Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Name { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-598">Cette propriété renvoie ou définit le nom de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-598">Returns or sets the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-599">
            <para>Le nom d’un objet <b>Range</b> est un <see cref="T:Microsoft.Office.Interop.Excel.Name" /> objet. Pour les autres types d’objet, le nom est une <b>chaîne</b>.</para>
            <para>Le tableau suivant indique les valeurs de l’exemple de la propriété <b>Name</b> et les propriétés associées en fonction d’une source de données OLAP dont le nom unique « [Europe]. [France]. [Paris] » et « Paris » du nom de source de données non-OLAP avec l’élément.</para>
            <list type="table">
              <item>
                <term>Légende</term>
                <description>Paris</description>
                <description>Paris</description>
              </item>
              <item>
                <term>nom</term>
                <description>[Europe]. [ France]. [Paris] (lecture seule)</description>
                <description>Paris</description>
              </item>
              <item>
                <term>SourceName</term>
                <description>[Europe]. [ France]. [Paris] (lecture seule)</description>
                <description>(Identique à la valeur de propriété SQL en lecture seule)</description>
              </item>
              <item>
                <term>Valeur</term>
                <description>[Europe]. [ France]. [Paris] (lecture seule)</description>
                <description>Paris</description>
              </item>
            </list>
            <para>Lors de la spécification d’index dans le <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, vous pouvez utiliser la syntaxe présentée dans le tableau suivant.</para> expression 
          <list type="table"><item><term>. PivotItems (« [Europe]. [ France]. [Paris] »)</term><description>expression. PivotItems("Paris")</description></item></list><para>lors de l’utilisation du <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> propriété pour référencer un membre spécifique d’une collection, vous pouvez utiliser le nom d’index de texte comme indiqué dans le tableau suivant.</para><list type="table"><item><term>[Europe]. [ France]. [Paris]</term><description>Paris</description></item></list><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-599">
              <para>The name of a <b>Range</b> object is a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object. For every other type of object, the name is a <b>String</b>.</para>
              <para>The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</para>
              <list type="table">
                <item>
                  <term>Caption</term>
                  <description>Paris</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>Name</term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>SourceName</term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>(Same as SQL property value, read-only)</description>
                </item>
                <item>
                  <term>Value</term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
              </list>
              <para>When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</para>
              <list type="table">
                <item>
                  <term>expression.PivotItems("[Europe].[France].[Paris]")</term>
                  <description>expression.PivotItems("Paris")</description>
                </item>
              </list>
              <para>When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>[Europe].[France].[Paris]</term>
                  <description>Paris</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateArrow">
      <MemberSignature Language="C#" Value="public object NavigateArrow (object TowardPrecedent, object ArrowNumber, object LinkNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object NavigateArrow([in]object TowardPrecedent, [in]object ArrowNumber, [in]object LinkNumber) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NavigateArrow(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NavigateArrow (Optional TowardPrecedent As Object, Optional ArrowNumber As Object, Optional LinkNumber As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TowardPrecedent" Type="System.Object" />
        <Parameter Name="ArrowNumber" Type="System.Object" />
        <Parameter Name="LinkNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="TowardPrecedent">
          <span data-ttu-id="eb640-600">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-600">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-601">Spécifie le sens à suivre : <b>True</b> pour accéder aux antécédents ; <b>False</b> pour dépendantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-601">Specifies the direction to navigate: <b>True</b> to navigate toward precedents; <b>False</b> to navigate toward dependent.</span>
          </span>
        </param>
        <param name="ArrowNumber">
          <span data-ttu-id="eb640-602">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-602">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-603">Spécifie le numéro de la flèche à suivre. Ce numéro correspond à la référence numérotée dans la formule de la cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-603">Specifies the arrow number to navigate; corresponds to the numbered reference in the cell's formula.</span>
          </span>
        </param>
        <param name="LinkNumber">
          <span data-ttu-id="eb640-604">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-604">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-605">Si la flèche est une flèche de référence externe, cet argument indique la référence externe à suivre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-605">If the arrow is an external reference arrow, this argument indicates which external reference to follow.</span>
          </span>
          <span data-ttu-id="eb640-606">Si cet argument est omis, la première référence externe est suivie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-606">If this argument is omitted, the first external reference is followed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-607">Déplace une flèche d’audit pour la plage spécifiée pour l’ou les cellules antécédentes, dépendante ou erreur à l’origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-607">Navigates a tracer arrow for the specified range to the precedent, dependent, or error-causing cell or cells.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-608">
            <para>Sélectionne les cellules antécédentes, dépendantes ou erreur et renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente la nouvelle sélection. Cette méthode provoque une erreur si elle est appliquée à une cellule sans flèches d’audit visibles.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-608">
              <para>Selects the precedent, dependent, or error cells and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the new selection. This method causes an error if it's applied to a cell without visible tracer arrows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Next { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-609">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente la cellule suivante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-609">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the next cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-610">
            <para>Cette propriété simule l’utilisation de la touche TAB, bien que la propriété renvoie la prochaine cellule sans la sélectionner it.</para>
            <para>Dans une feuille de calcul protégée, cette propriété renvoie la prochaine cellule non verrouillée. Dans une feuille non protégée, cette propriété renvoie toujours la cellule immédiatement à droite de la cellule spécifiée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-610">
              <para>This property emulates the TAB key, although the property returns the next cell without selecting it.</para>
              <para>On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteText">
      <MemberSignature Language="C#" Value="public string NoteText (object Text, object Start, object Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NoteText([in]object Text, [in]object Start, [in]object Length) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NoteText(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NoteText (Optional Text As Object, Optional Start As Object, Optional Length As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="eb640-611">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-611">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-612">Texte à ajouter à la Remarque (255 caractères maximum).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-612">The text to add to the note (up to 255 characters).</span>
          </span>
          <span data-ttu-id="eb640-613">Le texte est inséré à partir de position <paramref name="Start" />, en remplaçant <paramref name="Length" /> caractères de la note existante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-613">The text is inserted starting at position <paramref name="Start" />, replacing <paramref name="Length" /> characters of the existing note.</span>
          </span>
          <span data-ttu-id="eb640-614">Si cet argument est omis, cette méthode renvoie le texte de la note commençant à la position actuels <paramref name="Start" />, pour <paramref name="Length" /> caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-614">If this argument is omitted, this method returns the current text of the note starting at position <paramref name="Start" />, for <paramref name="Length" /> characters.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="eb640-615">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-615">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-616">La position de départ pour le texte qui est définie ou renvoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-616">The starting position for the text that’s set or returned.</span>
          </span>
          <span data-ttu-id="eb640-617">Si cet argument est omis, cette méthode commence au premier caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-617">If this argument is omitted, this method starts at the first character.</span>
          </span>
          <span data-ttu-id="eb640-618">Pour ajouter du texte à la Remarque, spécifiez un nombre supérieur au nombre de caractères dans la note existante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-618">To append text to the note, specify a number larger than the number of characters in the existing note.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="eb640-619">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-619">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-620">Le nombre de caractères à définir ou à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-620">The number of characters to be set or returned.</span>
          </span>
          <span data-ttu-id="eb640-621">Si cet argument est omis, Microsoft Excel définit ou renvoie les caractères à partir de la position de départ à la fin de la note (jusqu'à 255 caractères).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-621">If this argument is omitted, Microsoft Excel sets or returns characters from the starting position to the end of the note (up to 255 characters).</span>
          </span>
          <span data-ttu-id="eb640-622">S’il y a plus de 255 caractères à partir de <paramref name="Start" /> à la fin de la note, cette méthode retourne uniquement 255 caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-622">If there are more than 255 characters from <paramref name="Start" /> to the end of the note, this method returns only 255 characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-623">Cette propriété renvoie ou définit la Remarque de cellule associée à la cellule dans le coin supérieur gauche de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-623">Returns or sets the cell note associated with the cell in the upper-left corner of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-624">Notes de cellule <para>ont été remplacées par des commentaires de plage. Pour plus d’informations, voir la <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> objet.</para><para>Pour ajouter une note qui contient plus de 255 caractères, une fois cette méthode permet de spécifier les 255 premiers caractères et utilisez à nouveau pour ajouter le reste de la note (pas plus de 255 caractères à la fois).</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-624">
              <para>Cell notes have been replaced by range comments. For more information, see the <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object.</para>
              <para>To add a note that contains more than 255 characters, use this method once to specify the first 255 characters, and then use it again to append the remainder of the note (no more than 255 characters at a time).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-625">Cette propriété renvoie ou définit le code du format de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-625">Returns or sets the format code for the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-626">
            <para>Cette propriété renvoie la <b>valeur Null</b> si toutes les cellules de la plage spécifiée n’ont pas le même format de nombre.</para>
            <para>Le format de code est la même chaîne que l’option de Codes de Format dans la boîte de dialogue Format de cellule. La fonction <b>Format</b> utilise des chaînes de code de format différentes <b>NumberFormat</b> et <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> propriétés.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-626">
              <para>This property returns <b>Null</b> if all cells in the specified range don't have the same number format.</para>
              <para>The format code is the same string as the Format Codes option in the Format Cells dialog box. The <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-627">Cette propriété renvoie ou définit le code du format de l'objet sous forme de chaîne dans la langue de l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-627">Returns or sets the format code for the object as a string in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-628">
            <para>La fonction <b>Format</b> utilise des chaînes de code de format différentes que la <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> et propriétés <b>NumberFormatLocal</b> .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-628">
              <para>The <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Offset[object RowOffset, object ColumnOffset] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Offset(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Offset(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset(Optional RowOffset As Object, Optional ColumnOffset As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Offset[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowOffset, System::Object ^ ColumnOffset); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowOffset" Type="System.Object" />
        <Parameter Name="ColumnOffset" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowOffset">
          <span data-ttu-id="eb640-629">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-629">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-630">Le nombre de lignes (positif, négatif ou égal à 0 (zéro) à laquelle la plage doit être décalée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-630">The number of rows (positive, negative, or 0 (zero)) by which the range is to be offset.</span>
          </span>
          <span data-ttu-id="eb640-631">Les valeurs positives sont décalées vers le bas, et les valeurs négatives sont vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-631">Positive values are offset downward, and negative values are offset upward.</span>
          </span>
          <span data-ttu-id="eb640-632">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-632">The default value is 0.</span>
          </span>
        </param>
        <param name="ColumnOffset">
          <span data-ttu-id="eb640-633">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-633">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-634">Le nombre de colonnes (positif, négatif ou égal à 0 (zéro) à laquelle la plage doit être décalée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-634">The number of columns (positive, negative, or 0 (zero)) by which the range is to be offset.</span>
          </span>
          <span data-ttu-id="eb640-635">Les valeurs positives sont décalées vers la droite, et les valeurs négatives sont à gauche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-635">Positive values are offset to the right, and negative values are offset to the left.</span>
          </span>
          <span data-ttu-id="eb640-636">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-636">The default value is 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-637">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente une plage décalée par rapport à la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-637">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range that’s offset from the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-638">Retourne l’orientation du texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-638">Returns the text orientation.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-639">
            <para>Cette valeur retournée valeur orientation peut être une valeur entière comprise entre 90 et 90 degrés.</para> Sources de données 
          <para>pour OLAP, définissez cette propriété pour un champ dans une hiérarchie définit l’orientation pour les autres champs dans la même hiérarchie. Les champs de dimension peuvent uniquement être orientés dans la ligne, colonne et zones de champ de page du rapport de tableau croisé dynamique. Les champs de mesure peuvent uniquement être orientés dans la zone de données. Si un champ de hiérarchie ou données <b>xlHidden</b> supprime la hiérarchie ou un champ à partir du rapport de tableau croisé dynamique.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-639">
              <para>This returned orientation value can be an integer value from 90 to 90 degrees.</para>
              <para>For OLAP data sources, setting this property for one field in a hierarchy sets the orientation for the other fields in the same hierarchy. Dimension fields can only be oriented in the row, column, and page field areas of the PivotTable report. Measure fields can only be oriented in the data area. Setting a hierarchy or data field to <b>xlHidden</b> removes the hierarchy or field from the PivotTable report.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineLevel">
      <MemberSignature Language="C#" Value="public object OutlineLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OutlineLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.OutlineLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property OutlineLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OutlineLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-640">Cette propriété renvoie ou définit le niveau hiérarchique actuel de la ligne spécifiée ou une colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-640">Returns or sets the current outline level of the specified row or column.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-641">
            <para>Le niveau 1 est le niveau de synthèse extérieur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-641">
              <para>Level one is the outermost summary level.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBreak">
      <MemberSignature Language="C#" Value="public int PageBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageBreak" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property PageBreak As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageBreak { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-642">Cette propriété renvoie ou définit l’emplacement d’un saut de page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-642">Returns or sets the location of a page break.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-643">
            <para>La valeur de retour peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /><b />constantes :</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlPageBreakAutomatic</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageBreakManual</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageBreakNone</b>
                </description>
              </item>
            </list>
            <para>cette propriété peut renvoyer l’emplacement de page automatiques ou manuels sauts, mais elle ne peut définir l’emplacement des sauts de page manuels (il peut être uniquement définie <b>xlPageBreakManual</b> ou <b>xlPageBreakNone</b>).</para>
            <para>Pour supprimer tous les sauts de page manuels dans une feuille de calcul, définissez Cells.PageBreak sur <b>xlPageBreakNone</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-643">
              <para>The return value can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /><b />constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlPageBreakAutomatic</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageBreakManual</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageBreakNone</b>
                  </description>
                </item>
              </list>
              <para>This property can return the location of either automatic or manual page breaks, but it can only set the location of manual breaks (it can only be set to <b>xlPageBreakManual</b> or <b>xlPageBreakNone</b>).</para>
              <para>To remove all manual page breaks on a worksheet, set Cells.PageBreak to <b>xlPageBreakNone</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-644">Renvoie l'objet parent de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-644">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public object Parse (object ParseLine, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Parse([in]object ParseLine, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Parse(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (Optional ParseLine As Object, Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(477)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ParseLine" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ParseLine">
          <span data-ttu-id="eb640-645">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-645">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-646">Chaîne qui parenthèses gauche et droite indiquent où les cellules doivent être séparées. Par exemple, « [xxx] [xxx] » insère les trois premiers caractères dans la première colonne de la plage de destination, et il insère les trois caractères suivants dans la deuxième colonne. Si cet argument est omis, Microsoft Excel détermine où fractionner les colonnes en fonction de l’espacement de la cellule supérieure gauche de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-646">A string that contains left and right brackets to indicate where the cells should be split.For example, "[xxx][xxx]" would insert the first three characters into the first column of the destination range, and it would insert the next three characters into the second column.If this argument is omitted, Microsoft Excel guesses where to split the columns based on the spacing of the top left cell in the range.</span>
          </span>
          <span data-ttu-id="eb640-647">Si vous souhaitez utiliser une autre plage pour deviner la ligne de redistribution, utilisez un objet <b>Range</b> en tant que la <paramref name="ParseLine" /> argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-647">If you want to use a different range to guess the parse line, use a <b>Range</b> object as the <paramref name="ParseLine" /> argument.</span>
          </span>
          <span data-ttu-id="eb640-648">Cette plage doit être une des cellules en cours d’analyse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-648">That range must be one of the cells that's being parsed.</span>
          </span>
          <span data-ttu-id="eb640-649">Le <paramref name="ParseLine" /> argument ne peut pas dépasser 255 caractères, parenthèses et espaces compris.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-649">The <paramref name="ParseLine" /> argument cannot be longer than 255 characters, including the brackets and spaces.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="eb640-650">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-650">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-651">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente le coin supérieur gauche de la plage de destination des données analysées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-651">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the upper-left corner of the destination range for the parsed data.</span>
          </span>
          <span data-ttu-id="eb640-652">Si cet argument est omis, Microsoft Excel analyse en place.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-652">If this argument is omitted, Microsoft Excel parses in place.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-653">Analyse d’une plage de données et la divise en plusieurs cellules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-653">Parses a range of data and breaks it into multiple cells.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-654">
            <para>Distribue le contenu de la plage à remplir plusieurs colonnes adjacentes. La plage peut être pas plus d’une colonne à l’échelle.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-654">
              <para>Distributes the contents of the range to fill several adjacent columns. The range can be no more than one column wide.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public object PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste">
          <span data-ttu-id="eb640-655">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-655">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" />.</span>
          </span>
          <span data-ttu-id="eb640-656">La partie de la plage à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-656">The part of the range to be pasted.</span>
          </span>
          <span data-ttu-id="eb640-657">Peut être une des constantes <b>XlPasteType</b> suivantes :<b>xlPasteFormats</b><b>xlPasteAll par défaut</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormulas</b><b> xlPasteFormulasAndNumberFormats</b><b>xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumberFormats</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-657">Can be one of the following <b>XlPasteType</b> constants:<b>xlPasteAll default</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormats</b><b>xlPasteFormulas</b><b>xlPasteFormulasAndNumberFormats</b><b>xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumberFormats</b></span>
          </span>
        </param>
        <param name="Operation">
          <span data-ttu-id="eb640-658">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />.</span>
          </span>
          <span data-ttu-id="eb640-659">L’opération de collage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-659">The paste operation.</span>
          </span>
          <span data-ttu-id="eb640-660">Peut être une des constantes <b>XlPasteSpecialOperation</b> suivantes :<b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b><paramref name="default" /><b>xlPasteSpecialOperationSubtract</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-660">Can be one of the following <b>XlPasteSpecialOperation</b> constants:<b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b><paramref name="default" /><b>xlPasteSpecialOperationSubtract</b></span>
          </span>
        </param>
        <param name="SkipBlanks">
          <span data-ttu-id="eb640-661">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-661">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-662">
            <b>La valeur true</b> à ne pas avoir les cellules vides de la plage dans le Presse-papiers collée dans la plage de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-662">
              <b>True</b> to not have blank cells in the range on the Clipboard pasted into the destination range.</span>
          </span>
          <span data-ttu-id="eb640-663">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-663">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Transpose">
          <span data-ttu-id="eb640-664">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-664">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-665">
            <b>True</b> pour transposer les lignes et colonnes lorsque la plage est collée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-665">
              <b>True</b> to transpose rows and columns when the range is pasted.</span>
          </span>
          <span data-ttu-id="eb640-666">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-666">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-667">Cette méthode colle une <see cref="T:Microsoft.Office.Interop.Excel.Range" /> à partir du Presse-papiers dans la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-667">Pastes a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> from the Clipboard into the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetic">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetic Phonetic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetic Phonetic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetic As Phonetic" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetic ^ Phonetic { Microsoft::Office::Interop::Excel::Phonetic ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-668">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objet qui contient des informations sur une chaîne de texte phonétique spécifique dans une cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-668">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object which contains information about a specific phonetic text string in a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-669">
            <para>Cette propriété offre une compatibilité avec les versions antérieures de Microsoft Excel. Vous devez utiliser <b>Phonetics</b>(<paramref name="index" />), où index est le numéro d’index du texte phonétique, pour renvoyer un seul <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-669">
              <para>This property provides compatibility with earlier versions of Microsoft Excel. You should use <b>Phonetics</b>(<paramref name="index" />), where index is the index number of the phonetic text, to return a single <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetics">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetics Phonetics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetics Phonetics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetics As Phonetics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetics ^ Phonetics { Microsoft::Office::Interop::Excel::Phonetics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-670">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-670">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCell PivotCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotCell PivotCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotCell As PivotCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotCell ^ PivotCell { Microsoft::Office::Interop::Excel::PivotCell ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-671">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> objet qui représente une cellule dans un rapport de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-671">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> object that represents a cell in a PivotTable report.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField PivotField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotField PivotField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotField As PivotField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotField ^ PivotField { Microsoft::Office::Interop::Excel::PivotField ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-672">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object qui représente le champ de tableau croisé dynamique contenant le coin supérieur gauche de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-672">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents the PivotTable field containing the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotItem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotItem PivotItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotItem PivotItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotItem As PivotItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotItem ^ PivotItem { Microsoft::Office::Interop::Excel::PivotItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-673">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object qui représente l’élément de tableau croisé dynamique contenant le coin supérieur gauche de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-673">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object that represents the PivotTable item containing the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotTable PivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTable As PivotTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotTable ^ PivotTable { Microsoft::Office::Interop::Excel::PivotTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-674">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object qui représente le rapport de tableau croisé dynamique contenant le coin supérieur gauche de la plage spécifiée ou le rapport de tableau croisé dynamique associé au rapport de graphique croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-674">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object that represents the PivotTable report containing the upper-left corner of the specified range, or the PivotTable report associated with the PivotChart report.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Precedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Precedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Precedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Precedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Precedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-675">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente tous les antécédents d’une cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-675">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the precedents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-676">
            <para>Cela peut être une sélection multiple (union d’objets <b>Range</b> ) s’il existe plusieurs antécédents.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-676">
              <para>This can be a multiple selection (a union of <b>Range</b> objects) if there's more than one precedent.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixCharacter">
      <MemberSignature Language="C#" Value="public object PrefixCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PrefixCharacter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PrefixCharacter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrefixCharacter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PrefixCharacter { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-677">Renvoie le caractère préfixe de la cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-677">Returns the prefix character for the cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-678">
            <para>Si le <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /> propriété a la <b>valeur False</b>, ce caractère de préfixe est ' pour une étiquette ou une vide. Si la propriété <b>TransitionNavigKeys</b> a la <b>valeur True</b>, ce caractère est ' pour une étiquette alignée à gauche » pour une étiquette alignée à droite, ^ pour un centré étiquette, \ pour une étiquette répétée ou vide.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-678">
              <para>If the <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /> property is <b>False</b>, this prefix character will be ' for a text label or blank. If the <b>TransitionNavigKeys</b> property is <b>True</b>, this character will be ' for a left-justified label, " for a right-justified label, ^ for a centered label, \ for a repeated label, or blank.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Previous { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-679">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente la cellule précédente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-679">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the previous cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-680">
            <para>Si l’objet est une plage, cette propriété revient à appuyer sur MAJ + TAB, contrairement à la combinaison de touches, toutefois, la propriété renvoie la cellule précédente sans la sélectionner it.</para>
            <para>Dans une feuille de calcul protégée, cette propriété renvoie la cellule non verrouillée précédente. Dans une feuille non protégée, cette propriété renvoie toujours la cellule immédiatement à gauche de la cellule spécifiée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-680">
              <para>If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</para>
              <para>On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public object PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="eb640-681">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-681">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-682">Le numéro de la page à laquelle commence l’impression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-682">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="eb640-683">Si cet argument est omis, l’impression commence au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-683">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="eb640-684">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-684">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-685">Le numéro de la dernière page à imprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-685">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="eb640-686">Si cet argument est omis, l’impression se termine par la dernière page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-686">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="eb640-687">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-687">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-688">Le nombre de copies à imprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-688">The number of copies to print.</span>
          </span>
          <span data-ttu-id="eb640-689">Si cet argument est omis, une seule copie est imprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-689">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="eb640-690">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-690">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-691">
            <b>True</b> pour que Microsoft Excel affiche un aperçu avant impression de l’objet ; <b>False</b> (ou omis) pour imprimer l’objet immédiatement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-691">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object; <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="eb640-692">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-692">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-693">Définit le nom de l'imprimante active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-693">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="eb640-694">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-694">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-695">
            <b>True</b> pour imprimer dans un fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-695">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="eb640-696">Si <b>PrToFileName</b> n’est pas spécifié, Microsoft Excel invite l’utilisateur à entrer le nom du fichier de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-696">If <b>PrToFileName</b> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="eb640-697">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-697">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-698">
            <b>True</b> pour assembler plusieurs copies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-698">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="eb640-699">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-699">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-700">Si l'argument <b>ImprimerDansFichier</b> a la valeur <b>True</b>True, cet argument spécifie le nom du fichier vers lequel vous souhaitez effectuer l'impression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-700">If <b>PrintToFile</b> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-701">Imprime l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-701">Prints the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-702">
            <para>« Pages » dans les descriptions de <paramref name="From" /> et <paramref name="To" /> fait référence aux pages imprimées, pas aux pages globales de la feuille ou du classeur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-702">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public object PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>
          <span data-ttu-id="eb640-703">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-703">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb640-704">Cette propriété renvoie <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-704">Returns <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public object PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintPreview (Optional EnableChanges As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="eb640-705">
            <b>True</b> pour activer les modifications.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-705">
              <b>True</b> to enable changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-706">Cette méthode affiche un aperçu de l'objet tel qu'il apparaîtra une fois imprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-706">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTable QueryTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTable QueryTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.QueryTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTable As QueryTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTable ^ QueryTable { Microsoft::Office::Interop::Excel::QueryTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-707">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> qui représente la table de requête qui coupe l’objet <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-707">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object that represents the query table that intersects the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Range(System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <span data-ttu-id="eb640-708">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-708">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-709">Nom de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-709">The name of the range.</span>
          </span>
          <span data-ttu-id="eb640-710">Ce doit être une référence de style A1 dans la langue de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-710">This must be an A1-style reference in the language of the macro.</span>
          </span>
          <span data-ttu-id="eb640-711">Il peut inclure l’opérateur de plage (le signe deux-points), l’opérateur d’intersection (un espace) ou l’opérateur union (une virgule).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-711">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
          </span>
          <span data-ttu-id="eb640-712">Il peut également inclure des signes dollar, mais ils sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-712">It can also include dollar signs, but they’re ignored.</span>
          </span>
          <span data-ttu-id="eb640-713">Vous pouvez utiliser un nom local défini dans n’importe quelle partie de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-713">You can use a local defined name in any part of the range.</span>
          </span>
          <span data-ttu-id="eb640-714">Si vous utilisez un nom, le nom est supposé pour être dans la langue de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-714">If you use a name, the name is assumed to be in the language of the macro.</span>
          </span>
        </param>
        <param name="Cell2">
          <span data-ttu-id="eb640-715">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-715">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-716">La cellule dans le coin supérieur gauche et inférieur droit de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-716">The cell in the upper-left and lower-right corner of the range.</span>
          </span>
          <span data-ttu-id="eb640-717">Peut être un objet <b>Range</b> qui contient une seule cellule, une colonne entière ou une ligne entière, ou il peut être une chaîne qui nomme une seule cellule dans la langue de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-717">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-718">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente une cellule ou une plage de cellules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-718">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-719">
            <para>Cette propriété est par rapport à l’objet <b>Range</b> . Par exemple, si la sélection est la cellule C3, puis Selection.Range("B1") renvoie la cellule D3, car elle est liée à l’objet <b>Range</b> renvoyé par la <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> propriété. En revanche, ActiveSheet.Range("B1") renvoie toujours la cellule B1.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-719">
              <para>This property is relative to the <b>Range</b> object. For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property. On the other hand, ActiveSheet.Range("B1") always returns cell B1.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-720">Cette propriété renvoie ou définit le sens de lecture de l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-720">Returns or sets the reading order for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-721">
            <para>La valeur renvoyée peut être une des constantes suivantes : <b>xlRTL</b> (de droite à gauche), <b>xlLTR</b> (de gauche à droite) ou <b>xlContext</b>.</para>
            <para>Certaines de ces constantes ne soient pas disponibles, en fonction de la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-721">
              <para>The return value can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</para>
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDuplicates">
      <MemberSignature Language="C#" Value="public void RemoveDuplicates (object Columns, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDuplicates([in]object Columns, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveDuplicates(System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDuplicates (Optional Columns As Object, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2492)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Columns" Type="System.Object" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
      </Parameters>
      <Docs>
        <param name="Columns">
          <span data-ttu-id="eb640-722">Tableau <b>d’objets</b> facultatif des index des colonnes qui contiennent des informations en double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-722">Optional <b>Object</b> Array of indexes of the columns that contain the duplicate information.</span>
          </span>
          <span data-ttu-id="eb640-723">Si rien n’est passé, il suppose que toutes les colonnes contiennent des informations en double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-723">If nothing is passed then it assumes all columns contain duplicate information.</span>
          </span>
        </param>
        <param name="Header">
          <span data-ttu-id="eb640-724">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> Spécifie si la première ligne contient des informations d’en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-724">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> Specifies whether the first row contains header information.</span>
          </span>
          <span data-ttu-id="eb640-725">
            <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" />est la valeur par défaut ; Spécifiez <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> si vous souhaitez que Microsoft Excel pour essayer de déterminer l’en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-725">
              <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> is the default value; specify <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> if you want Excel to attempt to determine the header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-726">Supprime les doublons dans une plage de valeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-726">Removes duplicate values from a range of values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSubtotal">
      <MemberSignature Language="C#" Value="public object RemoveSubtotal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RemoveSubtotal() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveSubtotal" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveSubtotal () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RemoveSubtotal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-727">Cette méthode supprime les sous-totaux d'une liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-727">Removes subtotals from a list.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (object What, object Replacement, object LookAt, object SearchOrder, object MatchCase, object MatchByte, object SearchFormat, object ReplaceFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Replace([in]object What, [in]object Replacement, [in]object LookAt, [in]object SearchOrder, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat, [in]object ReplaceFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (What As Object, Replacement As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object, Optional ReplaceFormat As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(226)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="Replacement" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
        <Parameter Name="ReplaceFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What">
          <span data-ttu-id="eb640-728">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-728">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-729">Chaîne à rechercher par Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-729">The string you want Microsoft Excel to search for.</span>
          </span>
        </param>
        <param name="Replacement">
          <span data-ttu-id="eb640-730">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-730">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-731">Chaîne de remplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-731">The replacement string.</span>
          </span>
        </param>
        <param name="LookAt">
          <span data-ttu-id="eb640-732">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-732">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-733">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constantes : <b>xlWhole</b> ou <b>xlPart</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-733">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span>
          </span>
        </param>
        <param name="SearchOrder">
          <span data-ttu-id="eb640-734">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-734">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-735">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constantes : <b>xlByRows</b> ou <b>xlByColumns</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-735">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="eb640-736">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-736">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-737">
            <b>True</b> pour que la recherche respecte la casse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-737">
              <b>True</b> to make the search case sensitive.</span>
          </span>
        </param>
        <param name="MatchByte">
          <span data-ttu-id="eb640-738">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-738">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-739">Vous pouvez utiliser cet argument uniquement si vous avez sélectionné ou installé la prise en charge linguistique sur deux octets dans Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-739">You can use this argument only if you’ve selected or installed double-byte language support in Microsoft Excel.</span>
          </span>
          <span data-ttu-id="eb640-740">
            <b>True</b> pour que les caractères à double octet uniquement correspondance des caractères codés sur deux octets ; <b>False</b> pour que les caractères codés sur deux octets correspondent à leurs équivalents sur un octet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-740">
              <b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span>
          </span>
        </param>
        <param name="SearchFormat">
          <span data-ttu-id="eb640-741">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-741">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-742">Format de la recherche pour la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-742">The search format for the method.</span>
          </span>
        </param>
        <param name="ReplaceFormat">
          <span data-ttu-id="eb640-743">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-743">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-744">Format de remplacement pour la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-744">The replace format for the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-745">Renvoie un <b>type Boolean</b> indiquant caractères dans les cellules de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-745">Returns a <b>Boolean</b> indicating characters in cells within the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-746">
            <para>à l’aide de cette méthode ne modifie pas la sélection ou la cellule active.</para>
            <para>Les paramètres de <paramref name="LookAt" />, <paramref name="SearchOrder" />, <paramref name="MatchCase" />, et <paramref name="MatchByte" /> sont enregistrés chaque fois que vous utilisez cette méthode. Si vous ne spécifiez des valeurs pour ces arguments la prochaine fois que vous appelez la méthode, les valeurs enregistrées sont utilisées. La définition de ces arguments modifie les paramètres de la boîte de dialogue Rechercher et modifier les paramètres dans la boîte de dialogue Rechercher modifie les valeurs enregistrées qui sont utilisées si vous omettez les arguments. Pour éviter les problèmes, définissez explicitement ces arguments chaque fois que vous utilisez cette méthode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-746">
              <para>Using this method doesn’t change either the selection or the active cell.</para>
              <para>The settings for <paramref name="LookAt" />, <paramref name="SearchOrder" />, <paramref name="MatchCase" />, and <paramref name="MatchByte" /> are saved each time you use this method. If you don’t specify values for these arguments the next time you call the method, the saved values are used. Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments. To avoid problems, set these arguments explicitly each time you use this method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Resize[object RowSize, object ColumnSize] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Resize(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Resize(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resize(Optional RowSize As Object, Optional ColumnSize As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Resize[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowSize, System::Object ^ ColumnSize); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowSize" Type="System.Object" />
        <Parameter Name="ColumnSize" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowSize">
          <span data-ttu-id="eb640-747">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-747">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-748">Le nombre de lignes dans la nouvelle plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-748">The number of rows in the new range.</span>
          </span>
          <span data-ttu-id="eb640-749">Si cet argument est omis, le nombre de lignes de la plage reste identique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-749">If this argument is omitted, the number of rows in the range remains the same.</span>
          </span>
        </param>
        <param name="ColumnSize">
          <span data-ttu-id="eb640-750">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-750">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-751">Le nombre de colonnes de la nouvelle plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-751">The number of columns in the new range.</span>
          </span>
          <span data-ttu-id="eb640-752">Si cet argument est omis, le nombre de colonnes de la plage reste identique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-752">If this argument is omitted, the number of columns in the range remains the same.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-753">Redimensionne la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-753">Resizes the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public int Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Row" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Row" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Row As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Row { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-754">Renvoie le nombre de la première ligne de la première zone de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-754">Returns the number of the first row of the first area in the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RowDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range RowDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RowDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ RowDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison">
          <span data-ttu-id="eb640-755">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-755">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-756">Cellule à comparer à la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-756">A single cell to compare with the specified range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-757">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les cellules dont le contenu est différent de celui de la cellule de comparaison dans chaque ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-757">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from those of the comparison cell in each row.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeight">
      <MemberSignature Language="C#" Value="public object RowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RowHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.RowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RowHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-758">Renvoie la hauteur de toutes les lignes de la plage spécifiée, exprimée en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-758">Returns the height of all the rows in the range specified, measured in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-759">
            <para>Cette propriété renvoie <b>Null</b> si les lignes de la plage spécifiée ne sont pas tous de la même hauteur.</para>
            <para>Pour une seule ligne, la valeur de la <see cref="P:Microsoft.Office.Interop.Excel.Range.Height" /> propriété est égale à la valeur de la propriété <b>RowHeight</b> . Toutefois, vous pouvez également utiliser la propriété <b>Height</b> pour renvoyer la hauteur totale d’une plage de cellules.</para>
            <para>Autres différences entre les <b>Propriétés RowHeight</b> et <b>Height</b> sont les suivants :</para>
            <list type="bullet">
              <item>
                <description>
                  <b>Height</b> est en lecture seule.</description>
              </item>
              <item>
                <description>Si vous retournez la propriété <b>RowHeight</b> de plusieurs lignes, vous obtenez soit la hauteur de ligne de chaque ligne (si toutes les lignes ont la même hauteur) ou <b>Null</b> (si elles sont des hauteurs différentes). Si vous revenez à la propriété <b>Height</b> de plusieurs lignes, vous obtiendrez la hauteur totale de toutes les lignes.</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-759">
              <para>This property returns <b>Null</b> if the rows in the specified range aren’t all the same height.</para>
              <para>For a single row, the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Height" /> property is equal to the value of the <b>RowHeight</b> property. However, you can also use the <b>Height</b> property to return the total height of a range of cells.</para>
              <para>Other differences between <b>RowHeight</b> and <b>Height</b> include the following:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>Height</b> is read-only.</description>
                </item>
                <item>
                  <description>If you return the <b>RowHeight</b> property of several rows, you will either get the row height of each of the rows (if all the rows are the same height) or <b>Null</b> (if they’re different heights). If you return the <b>Height</b> property of several rows, you will get the total height of all the rows.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-760">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente les lignes de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-760">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rows in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-761">
            <para>Lorsqu’elle est appliquée à un objet <b>Range</b> qui est une sélection multiple, cette propriété renvoie des lignes à partir de la première zone de la plage uniquement.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-761">
              <para>When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">
          <span data-ttu-id="eb640-762">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-762">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-763">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-763">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="eb640-764">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-764">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-765">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-765">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="eb640-766">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-766">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-767">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-767">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="eb640-768">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-768">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-769">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-769">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="eb640-770">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-770">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-771">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-771">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="eb640-772">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-772">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-773">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-773">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="eb640-774">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-774">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-775">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-775">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="eb640-776">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-776">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-777">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-777">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="eb640-778">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-778">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-779">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-779">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="eb640-780">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-780">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-781">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-781">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="eb640-782">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-782">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-783">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-783">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="eb640-784">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-784">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-785">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-785">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="eb640-786">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-786">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-787">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-787">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="eb640-788">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-788">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-789">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-789">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="eb640-790">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-790">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-791">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-791">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="eb640-792">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-792">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-793">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-793">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="eb640-794">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-794">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-795">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-795">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="eb640-796">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-796">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-797">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-797">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="eb640-798">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-798">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-799">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-799">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="eb640-800">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-800">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-801">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-801">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="eb640-802">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-802">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-803">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-803">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="eb640-804">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-804">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-805">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-805">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="eb640-806">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-806">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-807">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-807">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="eb640-808">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-808">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-809">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-809">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="eb640-810">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-810">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-811">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-811">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="eb640-812">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-812">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-813">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-813">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="eb640-814">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-814">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-815">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-815">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="eb640-816">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-816">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-817">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-817">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="eb640-818">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-818">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-819">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-819">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="eb640-820">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-820">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-821">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-821">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-822">Exécute la macro Microsoft Excel à cet emplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-822">Runs the Microsoft Excel macro at this location.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-823">
            <para>La plage doit se trouver sur une feuille macro.</para>
            <para>Vous ne pouvez pas utiliser les arguments nommés avec cette méthode. Les arguments doivent être passés par sa position.</para>
            <para>La méthode <b>Run</b> renvoie ce que la macro appelée renvoie.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-823">
              <para>The range must be on a macro sheet.</para>
              <para>You cannot use named arguments with this method. Arguments must be passed by position.</para>
              <para>The <b>Run</b> method returns whatever the called macro returns.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-824">Sélectionne l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-824">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-825">
            <para>Pour sélectionner une cellule ou une plage de cellules, utilisez la méthode Select. Pour activer une cellule de la cellule active, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" /> méthode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-825">
              <para>To select a cell or a range of cells, use the Select method. To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerActions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Actions ServerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Actions ServerActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ServerActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerActions As Actions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Actions ^ ServerActions { Microsoft::Office::Interop::Excel::Actions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Actions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-826">Spécifie les actions qui peuvent être effectuées sur le serveur SharePoint pour un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-826">Specifies the actions that can be performed on the SharePoint server for a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Actions" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPhonetic">
      <MemberSignature Language="C#" Value="public void SetPhonetic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPhonetic() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SetPhonetic" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPhonetic ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPhonetic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1812)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-827">Crée <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objets pour toutes les cellules de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-827">Creates <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objects for all the cells in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="eb640-828">
            <para>Tous les objets <b>Phonetic</b> existants dans la plage spécifiée sont automatiquement remplacés (supprimés) par les nouveaux objets que vous ajoutez à l’aide de cette méthode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-828">
              <para>Any existing <b>Phonetic</b> objects in the specified range are automatically overwritten (deleted) by the new objects you add using this method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public object Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Show() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Show" />
      <MemberSignature Language="VB.NET" Value="Public Function Show () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Show();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(496)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-829">Fait défiler le contenu de la fenêtre active pour afficher la plage à l’écran.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-829">Scrolls through the contents of the active window to move the range into view.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-830">
            <para>La plage doit être constituée d’une seule cellule dans le document actif.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-830">
              <para>The range must consist of a single cell in the active document.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDependents">
      <MemberSignature Language="C#" Value="public object ShowDependents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowDependents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowDependents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDependents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove">
          <span data-ttu-id="eb640-831">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-831">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-832">
            <b>True</b> pour supprimer un niveau de flèches d’audit signalant les dépendants directs ; <b>False</b> pour développer un niveau de flèches d’audit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-832">
              <b>True</b> to remove one level of tracer arrows to direct dependents; <b>False</b> to expand one level of tracer arrows.</span>
          </span>
          <span data-ttu-id="eb640-833">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-833">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-834">Cette méthode affiche les flèches d'audit signalant les dépendants directs de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-834">Draws tracer arrows to the direct dependents of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDetail">
      <MemberSignature Language="C#" Value="public object ShowDetail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShowDetail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShowDetail" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDetail As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShowDetail { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-835">Renvoie <b>la valeur True</b> si le plan est développé pour la plage spécifiée (de sorte que les détails de la ligne ou colonne soient visible).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-835">Returns <b>True</b> if the outline is expanded for the specified range (so that the detail of the column or row is visible).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-836">
            <para>La plage spécifiée doit être une seule colonne de synthèse ou une ligne dans un plan.</para>
            <para>Si la plage se trouve dans un rapport de tableau croisé dynamique, cette propriété est définie sur <b>True</b> si l’élément affiche les détails.</para>
            <para>Si la plage spécifiée n’est pas dans un rapport de tableau croisé dynamique, les instructions suivantes sont vraies :</para>
            <list type="bullet">
              <item>
                <description>La plage doit être dans une seule ligne de synthèse ou une colonne.</description>
              </item>
              <item>
                <description>Cette propriété renvoie la <b>valeur False</b> si aucun des enfants de la ligne ou de colonne sont masquées.</description>
              </item>
              <item>
                <description>La définition de cette propriété sur <b>True</b> équivaut à afficher tous les enfants de la ligne de synthèse ou de la colonne.</description>
              </item>
              <item>
                <description>Définir cette propriété sur <b>False</b> équivaut à masquer tous les enfants de la ligne de synthèse ou de la colonne.</description>
              </item>
              <item>
                <description>Si la plage spécifiée se trouve dans un rapport de tableau croisé dynamique, il est possible de définir cette propriété pour plusieurs cellules à la fois si la plage est contiguë. Cette propriété peut être renvoyée uniquement si la plage est une cellule unique.</description>
              </item>
            </list>
            <para>Cette propriété n’est pas disponible pour les sources de données OLAP.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-836">
              <para>The specified range must be a single summary column or row in an outline.</para>
              <para>If the range is in a PivotTable report, this property is set to <b>True</b> if the item is showing detail.</para>
              <para>If the specified range isn’t in a PivotTable report, the following statements are true:</para>
              <list type="bullet">
                <item>
                  <description>The range must be in a single summary row or column.</description>
                </item>
                <item>
                  <description>This property returns <b>False</b> if any of the children of the row or column are hidden.</description>
                </item>
                <item>
                  <description>Setting this property to <b>True</b> is equivalent to showing all the children of the summary row or column.</description>
                </item>
                <item>
                  <description>Setting this property to <b>False</b> is equivalent to hiding all the children of the summary row or column.</description>
                </item>
                <item>
                  <description>If the specified range is in a PivotTable report, it’s possible to set this property for more than one cell at a time if the range is contiguous. This property can be returned only if the range is a single cell.</description>
                </item>
              </list>
              <para>This property isn’t available for OLAP data sources.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowErrors">
      <MemberSignature Language="C#" Value="public object ShowErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowErrors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowErrors () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ShowErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-837">Affiche les flèches par les antécédents de la cellule qui est la source de l’erreur et renvoie la plage contenant cette cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-837">Draws tracer arrows through the precedents tree to the cell that’s the source of the error and returns the range that contains that cell.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPrecedents">
      <MemberSignature Language="C#" Value="public object ShowPrecedents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowPrecedents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowPrecedents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowPrecedents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove">
          <span data-ttu-id="eb640-838">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-838">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-839">
            <b>True</b> pour supprimer un niveau de flèches d’audit signalant les antécédents directs ; <b>False</b> pour développer un niveau de flèches d’audit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-839">
              <b>True</b> to remove one level of tracer arrows to direct precedents; <b>False</b> to expand one level of tracer arrows.</span>
          </span>
          <span data-ttu-id="eb640-840">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-840">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-841">Affiche les flèches d’audit signalant les antécédents directs de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-841">Draws tracer arrows to the direct precedents of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-842">Détermine si le texte s’ajuste automatiquement à la largeur de colonne disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-842">Determines if text automatically shrinks to fit in the available column width.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-843">
            <para>Cette propriété renvoie <b>la valeur True</b> si le texte est automatiquement réduit pour s’adapter à la largeur de colonne disponible et la <b>valeur Null</b> si cette propriété n’est pas définie sur la même valeur pour toutes les cellules de la plage spécifiée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-843">
              <para>This property returns <b>True</b> if text automatically shrinks to fit in the available column width and <b>Null</b> if this property isn’t set to the same value for all cells in the specified range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-844">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> objet qui représente l’identificateur de la cellule spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-844">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public object Sort (object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key2, object Type, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Sort([in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Key2, [in]object Type, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key2 As Object, Optional Type As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="Key1">
          <span data-ttu-id="eb640-845">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-845">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-846">Le premier champ de tri, comme du texte (un nom champ ou la plage de tableau croisé dynamique) ou une <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet (« Dept » ou Cells (1, 1), par exemple).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-846">The first sort field, as either text (a PivotTable field or range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object ("Dept" or Cells(1, 1), for example).</span>
          </span>
        </param>
        <param name="Order1">
          <span data-ttu-id="eb640-847">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-847">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="eb640-848">L’ordre de tri pour le champ ou la plage spécifiée dans <paramref name="Key1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-848">The sort order for the field or range specified in <paramref name="Key1" />.</span>
          </span>
          <span data-ttu-id="eb640-849">Peut être une des constantes <b>XlSortOrder</b> suivantes :<b>xlDescending</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-849">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="eb640-850">Trie <paramref name="Key1" /> dans l’ordre décroissant. <b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-850">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-851">Trie <paramref name="Key1" /> dans l’ordre croissant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-851">Sorts <paramref name="Key1" /> in ascending order.</span>
          </span>
        </param>
        <param name="Key2">
          <span data-ttu-id="eb640-852">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-852">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-853">Deuxième champ de tri, sous forme de texte (un nom champ ou la plage de tableau croisé dynamique) ou un objet <b>Range</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-853">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="eb640-854">Si vous omettez cet argument, il n’existe aucune deuxième champ de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-854">If you omit this argument, there’s no second sort field.</span>
          </span>
          <span data-ttu-id="eb640-855">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-855">Cannot be used when sorting Pivot Table reports.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="eb640-856">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-856">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-857">Indique les éléments à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-857">Specifies which elements are to be sorted.</span>
          </span>
          <span data-ttu-id="eb640-858">Utilisez cet argument uniquement lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-858">Use this argument only when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-859">Peut être une des constantes <b>XlSortType</b> suivantes :<b>xlSortLabels</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-859">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span>
          </span>
          <span data-ttu-id="eb640-860">Trie le rapport de tableau croisé dynamique par étiquettes. <b>xlSortValues</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-860">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span>
          </span>
          <span data-ttu-id="eb640-861">Trie le rapport de tableau croisé dynamique par valeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-861">Sorts the PivotTable report by values.</span>
          </span>
        </param>
        <param name="Order2">
          <span data-ttu-id="eb640-862">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-862">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="eb640-863">L’ordre de tri pour le champ ou la plage spécifiée dans <paramref name="Key2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-863">The sort order for the field or range specified in <paramref name="Key2" />.</span>
          </span>
          <span data-ttu-id="eb640-864">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-864">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-865">Peut être une des constantes <b>XlSortOrder</b> suivantes :<b>xlDescending</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-865">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="eb640-866">Trie <paramref name="Key2" /> dans l’ordre décroissant. <b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-866">Sorts <paramref name="Key2" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-867">Trie <paramref name="Key2" /> dans l’ordre croissant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-867">Sorts <paramref name="Key2" /> in ascending order.</span>
          </span>
        </param>
        <param name="Key3">
          <span data-ttu-id="eb640-868">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-868">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-869">Troisième champ de tri, sous forme de texte (un nom de plage) ou un objet <b>Range</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-869">The third sort field, as either text (a range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="eb640-870">Si vous omettez cet argument, il n’est pas troisième champ de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-870">If you omit this argument, there’s no third sort field.</span>
          </span>
          <span data-ttu-id="eb640-871">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-871">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Order3">
          <span data-ttu-id="eb640-872">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-872">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="eb640-873">L’ordre de tri pour le champ ou la plage spécifiée dans <paramref name="Key3" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-873">The sort order for the field or range specified in <paramref name="Key3" />.</span>
          </span>
          <span data-ttu-id="eb640-874">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-874">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-875">Peut être une des constantes <b>XlSortOrder</b> suivantes :<b>xlDescending</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-875">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="eb640-876">Trie <paramref name="Key3" /> dans l’ordre décroissant. <b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-876">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-877">Trie <paramref name="Key3" /> dans l’ordre croissant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-877">Sorts <paramref name="Key3" /> in ascending order.</span>
          </span>
        </param>
        <param name="Header">
          <span data-ttu-id="eb640-878">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-878">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span>
          </span>
          <span data-ttu-id="eb640-879">Spécifie si la première ligne contient des en-têtes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-879">Specifies whether or not the first row contains headers.</span>
          </span>
          <span data-ttu-id="eb640-880">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-880">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-881">Peut être une des constantes <b>XlYesNoGuess</b> suivantes :<b>xlGuess</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-881">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span>
          </span>
          <span data-ttu-id="eb640-882">Laisser Microsoft Excel déterminer s’il existe un en-tête et où il se trouve le cas échéant. <b>xlNo</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-882">Let Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-883">(Toute la plage doit être triée). <b>xlYes</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-883">(The entire range should be sorted).<b>xlYes</b>.</span>
          </span>
          <span data-ttu-id="eb640-884">(La plage entière ne doit pas être triée.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-884">(The entire range should not be sorted).</span>
          </span>
        </param>
        <param name="OrderCustom">
          <span data-ttu-id="eb640-885">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-885">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-886">Cet argument est un offset d’entier basé sur un à la liste des ordres de tri personnalisés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-886">This argument is a one-based integer offset to the list of custom sort orders.</span>
          </span>
          <span data-ttu-id="eb640-887">Si vous omettez <paramref name="OrderCustom" />, un tri normal est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-887">If you omit <paramref name="OrderCustom" />, a normal sort is used.</span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="eb640-888">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-888">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-889">
            <b>True</b> pour effectuer un tri qui respecte la casse ; <b>False</b> pour effectuer un tri qui ne respecte pas la casse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-889">
              <b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span>
          </span>
          <span data-ttu-id="eb640-890">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-890">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Orientation">
          <span data-ttu-id="eb640-891">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-891">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span>
          </span>
          <span data-ttu-id="eb640-892">Orientation du tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-892">The sort orientation.</span>
          </span>
          <span data-ttu-id="eb640-893">Peut être une des constantes <b>XlSortOrientation</b> suivantes :<b>xlSortRows</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-893">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-894">Trie par ligne. <b>xlSortColumns</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-894">Sorts by row.<b>xlSortColumns</b>.</span>
          </span>
          <span data-ttu-id="eb640-895">Trie par colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-895">Sorts by column.</span>
          </span>
        </param>
        <param name="SortMethod">
          <span data-ttu-id="eb640-896">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-896">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span>
          </span>
          <span data-ttu-id="eb640-897">Le type de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-897">The type of sort.</span>
          </span>
          <span data-ttu-id="eb640-898">Certaines de ces constantes ne seront peut-être pas disponibles, en fonction de la langue sélectionnée ou installée (par exemple, le français).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-898">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span>
          </span>
          <span data-ttu-id="eb640-899">Peut être une des constantes <b>XlSortMethod</b> suivantes :<b>xlStroke</b> tri en fonction de la quantité de traits dans chaque caractère. <b>xlPinYin</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-899">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b> Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-900">Ordre des caractères de tri phonétique chinois.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-900">Phonetic Chinese sort order for characters.</span>
          </span>
        </param>
        <param name="DataOption1">
          <span data-ttu-id="eb640-901">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-901">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="eb640-902">Spécifie comment trier le texte de <paramref name="Key 1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-902">Specifies how to sort text in <paramref name="Key 1" />.</span>
          </span>
          <span data-ttu-id="eb640-903">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-903">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-904">Peut être une des constantes <b>XlSortDataOption</b> suivantes :<b>xlSortTextAsNumbers</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-904">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="eb640-905">Traite le texte comme données numériques pour le tri. <b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-905">Treat text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-906">Trie les données numériques et textuelles séparément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-906">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption2">
          <span data-ttu-id="eb640-907">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-907">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="eb640-908">Spécifie comment trier le texte de <paramref name="Key 2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-908">Specifies how to sort text in <paramref name="Key 2" />.</span>
          </span>
          <span data-ttu-id="eb640-909">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-909">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-910">Peut être une des constantes <b>XlSortDataOption</b> suivantes :<b>xlSortTextAsNumbers</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-910">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="eb640-911">Traite le texte comme données numériques pour le tri. <b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-911">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-912">Trie les données numériques et textuelles séparément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-912">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption3">
          <span data-ttu-id="eb640-913">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-913">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="eb640-914">Spécifie comment trier le texte de la touche 3.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-914">Specifies how to sort text in key 3.</span>
          </span>
          <span data-ttu-id="eb640-915">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-915">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-916">Peut être une des constantes <b>XlSortDataOption</b> suivantes :<b>xlSortTextAsNumbers</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-916">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="eb640-917">Traite le texte comme données numériques pour le tri. <b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-917">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-918">Trie les données numériques et textuelles séparément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-918">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-919">Trie un rapport de tableau croisé dynamique, une plage ou la région active si la plage spécifiée ne contient qu’une seule cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-919">Sorts a PivotTable report, a range, or the active region if the specified range contains only one cell.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-920">
            <para>Les paramètres de <paramref name="Header" />, <paramref name="Order1" />, <paramref name="Order2" />, <paramref name="Order3" />, <paramref name="OrderCustom" />, et <paramref name="Orientation" /> sont enregistrés, pour la feuille de calcul particulière, chaque fois que vous utilisez cette méthode. Si vous ne spécifiez des valeurs pour ces arguments la prochaine fois que vous appelez la méthode, les valeurs enregistrées sont utilisées. Définissez explicitement ces arguments chaque fois que vous utilisez la méthode <b>Sort</b> si vous choisissez de ne pas utiliser les valeurs enregistrées.</para>
            <para>Des chaînes de texte qui ne sont pas convertibles en données numériques sont triées normalement.</para>
            <para>Si aucun argument n’est défini avec la méthode <b>Sort</b> , Microsoft Excel trie la sélection par ordre croissant.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-920">
              <para>The settings for <paramref name="Header" />, <paramref name="Order1" />, <paramref name="Order2" />, <paramref name="Order3" />, <paramref name="OrderCustom" />, and <paramref name="Orientation" /> are saved, for the particular worksheet, each time you use this method. If you don’t specify values for these arguments the next time you call the method, the saved values are used. Set these arguments explicitly each time you use <b>Sort</b> method if you choose not to use the saved values.</para>
              <para>Text strings which are not convertible to numeric data are sorted normally.</para>
              <para>If no arguments are defined with the <b>Sort</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortSpecial">
      <MemberSignature Language="C#" Value="public object SortSpecial (Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Type, object Key2, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SortSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Type, [in]object Key2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SortSpecial (Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Type As Object, Optional Key2 As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="SortMethod">
          <span data-ttu-id="eb640-921">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-921">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span>
          </span>
          <span data-ttu-id="eb640-922">Le type de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-922">The type of sort.</span>
          </span>
          <span data-ttu-id="eb640-923">Certaines de ces constantes ne seront peut-être pas disponibles, en fonction de la langue sélectionnée ou installée (par exemple, le français).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-923">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span>
          </span>
          <span data-ttu-id="eb640-924">Peut être une des constantes <b>XlSortMethod</b> suivantes :<b>xlStroke</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-924">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b>.</span>
          </span>
          <span data-ttu-id="eb640-925">Tri par la quantité de traits dans chaque caractère. <b>xlPinYin</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-925">Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-926">Ordre des caractères de tri phonétique chinois.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-926">Phonetic Chinese sort order for characters.</span>
          </span>
        </param>
        <param name="Key1">
          <span data-ttu-id="eb640-927">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-927">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-928">Premier champ de tri, sous forme de texte (un champ de tableau croisé dynamique ou un nom de plage) ou d'objet <b>Range</b> ("Dept" ou Cells(1, 1), par exemple).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-928">The first sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object ("Dept" or Cells(1, 1), for example).</span>
          </span>
        </param>
        <param name="Order1">
          <span data-ttu-id="eb640-929">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-929">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="eb640-930">L’ordre de tri pour le champ ou la plage spécifiée dans le <paramref name="Key1" /> argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-930">The sort order for the field or range specified in the <paramref name="Key1" /> argument.</span>
          </span>
          <span data-ttu-id="eb640-931">Peut être une des constantes <b>XlSortOrder</b> suivantes :<b>xlDescending</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-931">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="eb640-932">Trie <paramref name="Key1" /> dans l’ordre décroissant. <b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-932">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-933">Trie <paramref name="Key1" /> dans l’ordre croissant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-933">Sorts <paramref name="Key1" /> in ascending order.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="eb640-934">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-934">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-935">Indique les éléments à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-935">Specifies which elements are to be sorted.</span>
          </span>
          <span data-ttu-id="eb640-936">Utilisez cet argument uniquement lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-936">Use this argument only when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Key2">
          <span data-ttu-id="eb640-937">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-937">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-938">Deuxième champ de tri, sous forme de texte (un nom champ ou la plage de tableau croisé dynamique) ou un objet <b>Range</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-938">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="eb640-939">Si vous omettez cet argument, il n’existe aucune deuxième champ de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-939">If you omit this argument, there’s no second sort field.</span>
          </span>
          <span data-ttu-id="eb640-940">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-940">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-941">Peut être une des constantes <b>XlSortType</b> suivantes :<b>xlSortLabels</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-941">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span>
          </span>
          <span data-ttu-id="eb640-942">Trie le rapport de tableau croisé dynamique par étiquettes. <b>xlSortValues</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-942">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span>
          </span>
          <span data-ttu-id="eb640-943">Trie le rapport de tableau croisé dynamique par valeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-943">Sorts the PivotTable report by values.</span>
          </span>
        </param>
        <param name="Order2">
          <span data-ttu-id="eb640-944">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-944">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="eb640-945">L’ordre de tri pour le champ ou la plage spécifiée dans le <paramref name="Key2" /> argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-945">The sort order for the field or range specified in the <paramref name="Key2" /> argument.</span>
          </span>
          <span data-ttu-id="eb640-946">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-946">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-947">Peut être une des constantes <b>XlSortOrder</b> suivantes :<b>xlDescending</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-947">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="eb640-948">Trie <paramref name="Key2" /> décroissant ordre <b>xlAscending</b> par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-948">Sorts <paramref name="Key2" /> in descending order <b>xlAscending</b> default.</span>
          </span>
          <span data-ttu-id="eb640-949">Trie <paramref name="Key2" /> dans l’ordre croissant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-949">Sorts <paramref name="Key2" /> in ascending order.</span>
          </span>
        </param>
        <param name="Key3">
          <span data-ttu-id="eb640-950">Facultatif <b>object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-950">Optional <b>object</b>.</span>
          </span>
          <span data-ttu-id="eb640-951">Troisième champ de tri, sous forme de texte (un nom de plage) ou un objet <b>Range</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-951">The third sort field, as either text (a range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="eb640-952">Si vous omettez cet argument, il n’est pas troisième champ de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-952">If you omit this argument, there’s no third sort field.</span>
          </span>
          <span data-ttu-id="eb640-953">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-953">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Order3">
          <span data-ttu-id="eb640-954">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-954">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="eb640-955">L’ordre de tri pour le champ ou la plage spécifiée dans le <paramref name="Key3" /> argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-955">The sort order for the field or range specified in the <paramref name="Key3" /> argument.</span>
          </span>
          <span data-ttu-id="eb640-956">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-956">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-957">Peut être une des constantes <b>XlSortOrder</b> suivantes : <b>xlDescending</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-957">Can be one of the following <b>XlSortOrder</b> constants: <b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="eb640-958">Trie <paramref name="Key3" /> dans l’ordre décroissant. <b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-958">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-959">Trie <paramref name="Key3" /> dans l’ordre croissant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-959">Sorts <paramref name="Key3" /> in ascending order.</span>
          </span>
        </param>
        <param name="Header">
          <span data-ttu-id="eb640-960">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-960">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span>
          </span>
          <span data-ttu-id="eb640-961">Spécifie si la première ligne contient des en-têtes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-961">Specifies whether or not the first row contains headers.</span>
          </span>
          <span data-ttu-id="eb640-962">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-962">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-963">Peut être une des constantes <b>XlYesNoGuess</b> suivantes :<b>xlGuess</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-963">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span>
          </span>
          <span data-ttu-id="eb640-964">Microsoft Excel vous permet de déterminer s’il existe un en-tête et où il se trouve le cas échéant. <b>xlNo</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-964">Lets Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-965">Toute la plage doit être triée. <b>xlYes</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-965">The entire range should be sorted.<b>xlYes</b>.</span>
          </span>
          <span data-ttu-id="eb640-966">La plage entière ne doit pas être triée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-966">The entire range should not be sorted.</span>
          </span>
        </param>
        <param name="OrderCustom">
          <span data-ttu-id="eb640-967">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-967">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-968">Cet argument est un offset d’entier basé sur un à la liste des ordres de tri personnalisés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-968">This argument is a one-based integer offset to the list of custom sort orders.</span>
          </span>
          <span data-ttu-id="eb640-969">Si vous omettez <paramref name="OrderCustom" />, (ordre de tri normal) est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-969">If you omit <paramref name="OrderCustom" />, (normal sort order) is used.</span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="eb640-970">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-970">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-971">
            <b>True</b> pour effectuer un tri qui respecte la casse ; <b>False</b> pour effectuer un tri qui ne respecte pas la casse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-971">
              <b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span>
          </span>
          <span data-ttu-id="eb640-972">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-972">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Orientation">
          <span data-ttu-id="eb640-973">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-973">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span>
          </span>
          <span data-ttu-id="eb640-974">Orientation du tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-974">The sort orientation.</span>
          </span>
          <span data-ttu-id="eb640-975">Peut être une des constantes <b>XlSortOrientation</b> suivantes :<b>xlSortRows</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-975">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-976">Le tri est effectué par ligne. <b>xlSortColumns</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-976">The sort is done by row.<b>xlSortColumns</b>.</span>
          </span>
          <span data-ttu-id="eb640-977">Trie par colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-977">The sort is done by column.</span>
          </span>
        </param>
        <param name="DataOption1">
          <span data-ttu-id="eb640-978">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-978">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="eb640-979">Spécifie comment trier le texte de <paramref name="Key1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-979">Specifies how to sort text in <paramref name="Key1" />.</span>
          </span>
          <span data-ttu-id="eb640-980">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-980">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-981">Peut être une des constantes <b>XlSortDataOption</b> suivantes :<b>xlSortTextAsNumbers</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-981">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="eb640-982">Traite le texte comme données numériques pour le tri. <b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-982">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-983">Trie les données numériques et textuelles séparément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-983">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption2">
          <span data-ttu-id="eb640-984">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-984">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="eb640-985">Spécifie comment trier le texte de <paramref name="Key 2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-985">Specifies how to sort text in <paramref name="Key 2" />.</span>
          </span>
          <span data-ttu-id="eb640-986">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-986">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-987">Peut être une des constantes <b>XlSortDataOption</b> suivantes :<b>xlSortTextAsNumbers</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-987">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="eb640-988">Traite le texte comme données numériques pour le tri. <b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-988">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-989">Trie les données numériques et textuelles séparément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-989">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption3">
          <span data-ttu-id="eb640-990">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-990">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="eb640-991">Spécifie comment trier le texte de <paramref name="Key 3" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-991">Specifies how to sort text in <paramref name="Key 3" />.</span>
          </span>
          <span data-ttu-id="eb640-992">Ne peut pas être utilisé lors du tri de rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-992">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="eb640-993">Peut être une des constantes <b>XlSortDataOption</b> suivantes :<b>xlSortTextAsNumbers</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-993">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="eb640-994">Traite les données numériques de texte pour le tri. <b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-994">Treats text numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="eb640-995">Trie les données numériques et textuelles séparément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-995">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-996">Utilise les méthodes de tri d’Asie trier la plage ou un rapport de tableau croisé dynamique, ou la méthode pour la région active si la plage contient une seule cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-996">Uses East Asian sorting methods to sort the range or a PivotTable report, or uses the method for the active region if the range contains only one cell.</span>
          </span>
          <span data-ttu-id="eb640-997">Par exemple, le japonais trie dans l’ordre du syllabaire Kana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-997">For example, Japanese sorts in the order of the Kana syllabary.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-998">
            <para>Si aucun argument n’est défini avec la méthode <b>SortSpecial</b> , Microsoft Excel trie la sélection par ordre croissant.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-998">
              <para>If no arguments are defined with the <b>SortSpecial</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoundNote">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SoundNote SoundNote { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SoundNote SoundNote" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SoundNote" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoundNote As SoundNote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SoundNote ^ SoundNote { Microsoft::Office::Interop::Excel::SoundNote ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SoundNote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-p302">Cette propriété ne doit pas être utilisée. Les sons ont été supprimés de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-p302">This property should not be used. Sound notes have been removed from Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparklineGroups">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SparklineGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SparklineGroups As SparklineGroups" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SparklineGroups ^ SparklineGroups { Microsoft::Office::Interop::Excel::SparklineGroups ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SparklineGroups</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1001">Obtient un <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object qui représente un groupe existant de graphiques sparkline de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1001">Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb640-1002">A <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object qui représente un groupe existant de graphiques sparkline de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1002">A <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="eb640-1003">
            <para>En lecture seule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1003">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (object SpeakDirection, object SpeakFormulas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]object SpeakDirection, [in]object SpeakFormulas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Speak(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Optional SpeakDirection As Object, Optional SpeakFormulas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SpeakDirection" Type="System.Object" />
        <Parameter Name="SpeakFormulas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SpeakDirection">
          <span data-ttu-id="eb640-1004">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1004">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1005">Sens du discours, par lignes ou par colonnes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1005">The speak direction, by rows or columns.</span>
          </span>
        </param>
        <param name="SpeakFormulas">
          <span data-ttu-id="eb640-1006">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1006">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1007">
            <b>La valeur True</b> provoque formules soient envoyées au moteur de synthèse vocale (TTS) pour les cellules qui contiennent des formules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1007">
              <b>True</b> will cause formulas to be sent to the Text-To-Speech (TTS) engine for cells that have formulas.</span>
          </span>
          <span data-ttu-id="eb640-1008">La valeur est envoyée si les cellules n’ont pas de formules ; <b>False</b> (valeur par défaut) qui génère des valeurs soient toujours envoyées au moteur de synthèse vocale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1008">The value is sent if the cells do not have formulas; <b>False</b> (default) will cause values to always be sent to the TTS engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-1009">Permet de présenter oralement les cellules de la plage par ligne ou par colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1009">Causes the cells of the range to be spoken in row order or column order.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecialCells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range SpecialCells (Microsoft.Office.Interop.Excel.XlCellType Type, object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range SpecialCells([in]valuetype Microsoft.Office.Interop.Excel.XlCellType Type, [in]object Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpecialCells (Type As XlCellType, Optional Value As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlCellType" />
        <Parameter Name="Value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="eb640-1010">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1010">Required <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" />.</span>
          </span>
          <span data-ttu-id="eb640-1011">Cellules à inclure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1011">The cells to include.</span>
          </span>
          <span data-ttu-id="eb640-1012">Peut être une des constantes <b>XlCellType</b> suivantes :<b>xlCellTypeAllFormatConditions</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1012">Can be one of the following <b>XlCellType</b> constants:<b>xlCellTypeAllFormatConditions</b>.</span>
          </span>
          <span data-ttu-id="eb640-1013">Cellules de n’importe quel format. <b>xlCellTypeAllValidation</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1013">Cells of any format.<b>xlCellTypeAllValidation</b>.</span>
          </span>
          <span data-ttu-id="eb640-1014">Cellules présentant des critères de validation. <b>xlCellTypeBlanks</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1014">Cells having validation criteria.<b>xlCellTypeBlanks</b>.</span>
          </span>
          <span data-ttu-id="eb640-1015">Cellules vides. <b>xlCellTypeComments</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1015">Empty cells.<b>xlCellTypeComments</b>.</span>
          </span>
          <span data-ttu-id="eb640-1016">Cellules contenant des commentaires. <b>valeur xlCellTypeConstants</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1016">Cells containing notes.<b>xlCellTypeConstants</b>.</span>
          </span>
          <span data-ttu-id="eb640-1017">Cellules contenant des constantes. <b>xlCellTypeFormulas</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1017">Cells containing constants.<b>xlCellTypeFormulas</b>.</span>
          </span>
          <span data-ttu-id="eb640-1018">Cellules contenant des formules. <b>xlCellTypeLastCell</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1018">Cells containing formulas.<b>xlCellTypeLastCell</b>.</span>
          </span>
          <span data-ttu-id="eb640-1019">La dernière cellule de la plage utilisée. <b>xlCellTypeSameFormatConditions</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1019">The last cell in the used range.<b>xlCellTypeSameFormatConditions</b>.</span>
          </span>
          <span data-ttu-id="eb640-1020">Cellules présentant le même format. <b>xlCellTypeSameValidation</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1020">Cells having the same format.<b>xlCellTypeSameValidation</b>.</span>
          </span>
          <span data-ttu-id="eb640-1021">Cellules présentant les mêmes critères de validation. <b>xlCellTypeVisible</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1021">Cells having the same validation criteria.<b>xlCellTypeVisible</b>.</span>
          </span>
          <span data-ttu-id="eb640-1022">Toutes les cellules visibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1022">All visible cells.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="eb640-1023">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1023">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1024">Si <paramref name="Type" /> a la <b>valeur xlCellTypeConstants</b> ou <b>xlCellTypeFormulas</b>, cet argument est utilisé pour déterminer quels types de cellules à inclure dans le résultat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1024">If <paramref name="Type" /> is either <b>xlCellTypeConstants</b> or <b>xlCellTypeFormulas</b>, this argument is used to determine which types of cells to include in the result.</span>
          </span>
          <span data-ttu-id="eb640-1025">Ces valeurs peuvent être ajoutées ensemble pour renvoyer plusieurs types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1025">These values can be added together to return more than one type.</span>
          </span>
          <span data-ttu-id="eb640-1026">La valeur par défaut consiste à sélectionner toutes les constantes ou formules, quel que soit le type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1026">The default is to select all constants or formulas, no matter what the type.</span>
          </span>
          <span data-ttu-id="eb640-1027">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> constantes :<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1027">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> constants:<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-1028">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les cellules correspondant au type spécifié et la valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1028">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that match the specified type and value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1029">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Style" /> objet qui représente le style de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1029">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object that represents the style of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeTo">
      <MemberSignature Language="C#" Value="public object SubscribeTo (string Edition, Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SubscribeTo([in]string Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubscribeTo (Edition As String, Optional Format As XlSubscribeToFormat = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.String" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlSubscribeToFormat" />
      </Parameters>
      <Docs>
        <param name="Edition">
          <span data-ttu-id="eb640-1030">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1030">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="eb640-1031">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1031">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-1032">Vous avez demandé de l’aide sur un mot-clé utilisé uniquement sur Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1032">You have requested Help for a keyword used only on the Macintosh.</span>
          </span>
          <span data-ttu-id="eb640-1033">Pour plus d’informations sur ce mot clé, consultez l’aide incluse avec Microsoft Office Édition Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1033">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtotal">
      <MemberSignature Language="C#" Value="public object Subtotal (int GroupBy, Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, object TotalList, object Replace, object PageBreaks, Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Subtotal([in]int32 GroupBy, [in]valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, [in]object TotalList, [in]object Replace, [in]object PageBreaks, [in]valuetype Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtotal (GroupBy As Integer, Function As XlConsolidationFunction, TotalList As Object, Optional Replace As Object, Optional PageBreaks As Object, Optional SummaryBelowData As XlSummaryRow = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="GroupBy" Type="System.Int32" />
        <Parameter Name="Function" Type="Microsoft.Office.Interop.Excel.XlConsolidationFunction" />
        <Parameter Name="TotalList" Type="System.Object" />
        <Parameter Name="Replace" Type="System.Object" />
        <Parameter Name="PageBreaks" Type="System.Object" />
        <Parameter Name="SummaryBelowData" Type="Microsoft.Office.Interop.Excel.XlSummaryRow" />
      </Parameters>
      <Docs>
        <param name="GroupBy">
          <span data-ttu-id="eb640-1034">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1034">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="eb640-1035">Le champ par lequel regrouper, comme un décalage d’un entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1035">The field to group by, as a one-based integer offset.</span>
          </span>
          <span data-ttu-id="eb640-1036">Pour plus d'informations, voir l'exemple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1036">For more information, see the example.</span>
          </span>
        </param>
        <param name="Function">
          <span data-ttu-id="eb640-1037">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1037">Required <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span>
          </span>
          <span data-ttu-id="eb640-1038">La fonction de sous-total.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1038">The subtotal function.</span>
          </span>
          <span data-ttu-id="eb640-1039">Peut être une des constantes <b>XlConsolidationFunction</b> suivantes :<b>xlAverage</b><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlUnknown </b><b>xlVar</b><b>xlVarP</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1039">Can be one of the following <b>XlConsolidationFunction</b> constants:<b>xlAverage</b><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlUnknown</b><b>xlVar</b><b>xlVarP</b></span>
          </span>
        </param>
        <param name="TotalList">
          <span data-ttu-id="eb640-1040">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1040">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1041">Un tableau de base 1 de champ décale, indiquant les champs auxquels les sous-totaux sont ajoutés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1041">An array of 1-based field offsets, indicating the fields to which the subtotals are added.</span>
          </span>
          <span data-ttu-id="eb640-1042">Pour plus d'informations, voir l'exemple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1042">For more information, see the example.</span>
          </span>
        </param>
        <param name="Replace">
          <span data-ttu-id="eb640-1043">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1043">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1044">
            <b>True</b> pour remplacer des sous-totaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1044">
              <b>True</b> to replace existing subtotals.</span>
          </span>
          <span data-ttu-id="eb640-1045">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1045">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="PageBreaks">
          <span data-ttu-id="eb640-1046">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1046">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1047">
            <b>True</b> pour ajouter une page sauts après chaque groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1047">
              <b>True</b> to add page breaks after each group.</span>
          </span>
          <span data-ttu-id="eb640-1048">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1048">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="SummaryBelowData">
          <span data-ttu-id="eb640-1049">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1049">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" />.</span>
          </span>
          <span data-ttu-id="eb640-1050">Place les données de synthèse par rapport au sous-total.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1050">Places the summary data relative to the subtotal.</span>
          </span>
          <span data-ttu-id="eb640-1051">Peut être une des constantes <b>XlSummaryRow</b> suivantes :<b>xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1051">Can be one of the following <b>XlSummaryRow</b> constants:<b>xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-1052">Cette méthode crée les sous-totaux de la plage (ou de la zone active si la plage ne comporte qu'une seule cellule).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1052">Creates subtotals for the range (or the current region, if the range is a single cell).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public object Summary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Summary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Summary As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Summary { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1053">Détermine si la plage est une ligne récapitulative en mode plan ou la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1053">Determines if the range is an outlining summary row or column.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-1054">
            <para>Cette propriété renvoie <b>la valeur True</b> si la plage est une ligne récapitulative en mode plan ou une colonne.</para>
            <para>La plage doit être une ligne ou une colonne.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1054">
              <para>This property returns <b>True</b> if the range is an outlining summary row or column.</para>
              <para>The range should be a row or a column.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public object Table (object RowInput, object ColumnInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Table([in]object RowInput, [in]object ColumnInput) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Table(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Table (Optional RowInput As Object, Optional ColumnInput As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(497)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowInput" Type="System.Object" />
        <Parameter Name="ColumnInput" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowInput">
          <span data-ttu-id="eb640-1055">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1055">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1056">Une cellule unique à utiliser comme entrée en ligne pour votre table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1056">A single cell to use as the row input for your table.</span>
          </span>
        </param>
        <param name="ColumnInput">
          <span data-ttu-id="eb640-1057">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1057">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1058">Une cellule unique à utiliser comme entrée en colonne pour votre table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1058">A single cell to use as the column input for your table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-1059">Cette méthode crée une table de données à partir des valeurs d'entrée et des formules que vous définissez dans une feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1059">Creates a data table based on input values and formulas that you define on a worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-1060">
            <para>Utilisez des tables de données pour effectuer une analyse en modifiant certaines valeurs constantes dans votre feuille de calcul pour voir l’impact sur les valeurs d’autres cellules.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1060">
              <para>Use data tables to perform a what-if analysis by changing certain constant values on your worksheet to see how values in other cells are affected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public object Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Text { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1061">Cette propriété renvoie ou définit le texte de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1061">Returns or sets the text for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-1062">
            <para>Pour le <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objet, cette propriété renvoie ou définit son texte phonétique. Vous ne pouvez pas définir cette propriété sur <b>Null</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1062">
              <para>For the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object, this property returns or sets its phonetic text. You cannot set this property to <b>Null</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextToColumns">
      <MemberSignature Language="C#" Value="public object TextToColumns (object Destination, Microsoft.Office.Interop.Excel.XlTextParsingType DataType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextToColumns([in]object Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlTextParsingType DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextToColumns (Optional Destination As Object, Optional DataType As XlTextParsingType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="DataType" Type="Microsoft.Office.Interop.Excel.XlTextParsingType" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="eb640-1063">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1063">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1064">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui spécifie l’endroit où Microsoft Excel place les résultats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1064">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where Microsoft Excel will place the results.</span>
          </span>
          <span data-ttu-id="eb640-1065">Si la plage est supérieure à une seule cellule, la cellule supérieure gauche est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1065">If the range is larger than a single cell, the top left cell is used.</span>
          </span>
        </param>
        <param name="DataType">
          <span data-ttu-id="eb640-1066">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1066">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span>
          </span>
          <span data-ttu-id="eb640-1067">Format du texte à diviser en colonnes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1067">The format of the text to be split into columns.</span>
          </span>
          <span data-ttu-id="eb640-1068">Peut être une des constantes <b>XlTextParsingType</b> suivantes :<b>xlDelimited </b><paramref name="default" /><b>xlFixedWidth</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1068">Can be one of the following <b>XlTextParsingType</b> constants:<b>xlDelimited </b><paramref name="default" /><b>xlFixedWidth</b></span>
          </span>
        </param>
        <param name="TextQualifier">
          <span data-ttu-id="eb640-1069">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1069">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          </span>
          <span data-ttu-id="eb640-1070">Peut être une des constantes <b>XlTextQualifier</b> suivantes :<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1070">Can be one of the following <b>XlTextQualifier</b> constants:<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          </span>
        </param>
        <param name="ConsecutiveDelimiter">
          <span data-ttu-id="eb640-1071">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1071">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1072">
            <b>True</b> pour que Microsoft Excel considère des séparateurs consécutifs comme un seul séparateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1072">
              <b>True</b> to have Microsoft Excel consider consecutive delimiters as one delimiter.</span>
          </span>
          <span data-ttu-id="eb640-1073">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1073">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Tab">
          <span data-ttu-id="eb640-1074">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1074">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1075">
            <b>True</b> pour que <paramref name="DataType" /><b>xlDelimited</b> et pour que la tabulation soit le séparateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1075">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the tab character be a delimiter.</span>
          </span>
          <span data-ttu-id="eb640-1076">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1076">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Semicolon">
          <span data-ttu-id="eb640-1077">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1077">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1078">
            <b>True</b> pour que <paramref name="DataType" /> avoir la <b>valeur xlDelimited</b> et que le point-virgule soit le séparateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1078">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the semicolon be a delimiter.</span>
          </span>
          <span data-ttu-id="eb640-1079">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1079">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Comma">
          <span data-ttu-id="eb640-1080">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1080">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1081">
            <b>True</b> pour que <paramref name="DataType" /> avoir la <b>valeur xlDelimited</b> et que la virgule soit le séparateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1081">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the comma be a delimiter.</span>
          </span>
          <span data-ttu-id="eb640-1082">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1082">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Space">
          <span data-ttu-id="eb640-1083">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1083">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1084">
            <b>True</b> pour que <paramref name="DataType" /> avoir la <b>valeur xlDelimited</b> et que l’espace soit le séparateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1084">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the space character be a delimiter.</span>
          </span>
          <span data-ttu-id="eb640-1085">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1085">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Other">
          <span data-ttu-id="eb640-1086">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1086">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1087">
            <b>True</b> pour que <paramref name="DataType" /> avoir la <b>valeur xlDelimited</b> et que le caractère spécifié par le <paramref name="OtherChar" /> argument soit le séparateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1087">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the character specified by the <paramref name="OtherChar" /> argument be a delimiter.</span>
          </span>
          <span data-ttu-id="eb640-1088">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1088">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OtherChar">
          <span data-ttu-id="eb640-1089">
            <b>Objet</b> de type facultatif (obligatoire si <paramref name="Other" /> a la <b>valeur True</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1089">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span>
          </span>
          <span data-ttu-id="eb640-1090">Séparateur lorsque <paramref name="Other" /> a la <b>valeur True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1090">The delimiter character when <paramref name="Other" /> is <b>True</b>.</span>
          </span>
          <span data-ttu-id="eb640-1091">Si plus d’un caractère est spécifié, que seul le premier caractère de la chaîne est utilisé ; les caractères restants sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1091">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span>
          </span>
        </param>
        <param name="FieldInfo">
          <span data-ttu-id="eb640-1092">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1092">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1093">Tableau contenant des informations d’analyse pour les colonnes de données individuelles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1093">An array containing parse information for the individual columns of data.</span>
          </span>
          <span data-ttu-id="eb640-1094">L’interprétation dépend de la valeur de <paramref name="DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1094">The interpretation depends on the value of <paramref name="DataType" />.</span>
          </span>
          <span data-ttu-id="eb640-1095">Lorsque les données sont délimitées, cet argument est un tableau de tableaux à deux éléments, avec chaque tableau à deux éléments spécifiant les options de conversion d’une colonne particulière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1095">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span>
          </span>
          <span data-ttu-id="eb640-1096">Le premier élément est le numéro de colonne (base 1) et le deuxième élément est une de la <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> une des constantes spécifiant comment la colonne est analysée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1096">The first element is the column number (1-based), and the second element is one of the <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> constants specifying how the column is parsed.</span>
          </span>
          <span data-ttu-id="eb640-1097">Peut être une des constantes <b>XlColumnDataType</b> suivantes :<b>xlGeneralFormat</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1097">Can be one of the following <b>XlColumnDataType</b> constants:<b>xlGeneralFormat</b>.</span>
          </span>
          <span data-ttu-id="eb640-1098">Genres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1098">Genera.</span>
          </span>
          <span data-ttu-id="eb640-1099">
            <b>xlTextFormat</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1099">
              <b>xlTextFormat</b>.</span>
          </span>
          <span data-ttu-id="eb640-1100">Texte. <b>xlMDYFormat</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1100">Text.<b>xlMDYFormat</b>.</span>
          </span>
          <span data-ttu-id="eb640-1101">FORMAT de Date. <b>xlDMYFormat</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1101">MDY Date.<b>xlDMYFormat</b>.</span>
          </span>
          <span data-ttu-id="eb640-1102">FORMAT de Date. <b>xlYMDFormat</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1102">DMY Date.<b>xlYMDFormat</b>.</span>
          </span>
          <span data-ttu-id="eb640-1103">Date AMJ. <b>xlMYDFormat</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1103">YMD Date.<b>xlMYDFormat</b>.</span>
          </span>
          <span data-ttu-id="eb640-1104">Date MAJ.. <b>xlDYMFormat</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1104">MYD Date.<b>xlDYMFormat</b>.</span>
          </span>
          <span data-ttu-id="eb640-1105">FORMAT de Date. <b>xlYDMFormat</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1105">DYM Date.<b>xlYDMFormat</b>.</span>
          </span>
          <span data-ttu-id="eb640-1106">FORMAT de Date. <b>xlEMDFormat</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1106">YDM Date.<b>xlEMDFormat</b>.</span>
          </span>
          <span data-ttu-id="eb640-1107">Date EMD. <b>xlSkipColumn</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1107">EMD Date.<b>xlSkipColumn</b>.</span>
          </span>
          <span data-ttu-id="eb640-1108">Skip Column.You peut utiliser la constante <b>xlEMDFormat</b> uniquement si la prise en charge linguistique taïwanais est installée et sélectionnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1108">Skip Column.You can use <b>xlEMDFormat</b> only if Taiwanese language support is installed and selected.</span>
          </span>
          <span data-ttu-id="eb640-1109">La constante <b>xlEMDFormat</b> Spécifie que les dates sont utilisés. Spécificateurs de colonne peuvent être dans n’importe quel ordre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1109">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span>
          </span>
          <span data-ttu-id="eb640-1110">Si un spécificateur de colonne donné n’est pas présent pour une colonne particulière dans les données d’entrée, la colonne est analysée avec le paramètre <b>Général</b> . Si la source de données possède des colonnes de largeur fixe, le premier élément de chaque tableau à deux éléments spécifie la position du caractère de départ dans la colonne (sous forme d’entier ; 0 (zéro) est le premier caractère).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1110">If a given column specifier is not present for a particular column in the input data, the column is parsed with the <b>General</b> setting.If the source data has fixed-width columns, the first element of each two-element array specifies the starting character position in the column (as an integer; 0 (zero) is the first character).</span>
          </span>
          <span data-ttu-id="eb640-1111">Le deuxième élément du tableau de deux éléments spécifie l’option de redistribution pour la colonne en tant que nombre compris entre 1 et 9, comme indiqué ci-dessus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1111">The second element of the two-element array specifies the parse option for the column as a number from 1 through 9, as listed above.</span>
          </span>
        </param>
        <param name="DecimalSeparator">
          <span data-ttu-id="eb640-1112">Valeur <b>String</b> facultative. </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1112">Optional <b>String</b>.</span>
          </span>
          <span data-ttu-id="eb640-1113">Séparateur décimal utilisé par Microsoft Excel lors de la reconnaissance des nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1113">The decimal separator that Microsoft Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="eb640-1114">Le paramètre par défaut est le paramètre système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1114">The default setting is the system setting.</span>
          </span>
        </param>
        <param name="ThousandsSeparator">
          <span data-ttu-id="eb640-1115">Valeur <b>String</b> facultative. </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1115">Optional <b>String</b>.</span>
          </span>
          <span data-ttu-id="eb640-1116">Les milliers séparateur Excel utilise pour la reconnaissance des nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1116">The thousands separator that Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="eb640-1117">Le paramètre par défaut est le paramètre système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1117">The default setting is the system setting.</span>
          </span>
        </param>
        <param name="TrailingMinusNumbers">
          <span data-ttu-id="eb640-1118">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1119">Nombres qui commencent par un signe moins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1119">Numbers that begin with a minus character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-1120">Cette méthode redistribue sur plusieurs colonnes une colonne de cellules qui comportent du texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1120">Parses a column of cells that contain text into several columns.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-1121">
            <para>Le tableau suivant présente les résultats de l’importation de texte dans Excel pour divers paramètres d’importation. Les résultats numériques sont affichés dans la colonne la plus à droite.</para>
            <list type="table">
              <item>
                <term>Point</term>
                <description>virgule</description>
                <description>virgule</description>
                <description>période</description>
                <description>123.123,45</description>
                <description>123,123.45 (numérique)</description>
              </item>
              <item>
                <term>point</term>
                <description>virgule</description>
                <description>virgule</description>
                <description>virgule</description>
                <description>123.123,45</description>
                <description>123.123,45) texte)</description>
              </item>
              <item>
                <term>virgule</term>
                <description>point</description>
                <description>virgule</description>
                <description>période</description>
                <description>123,123.45</description>
                <description>123,123.45 (numérique)</description>
              </item>
              <item>
                <term>point</term>
                <description>virgule</description>
                <description>point</description>
                <description>virgule</description>
                <description>123 123,45</description>
                <description>123 123,45 (texte)</description>
              </item>
              <item>
                <term>point</term>
                <description>virgule</description>
                <description>période</description>
                <description>espace</description>
                <description>123 123,45</description>
                <description>123,123.45 (numérique)</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1121">
              <para>The following table shows the results of importing text into Excel for various import settings. Numeric results are displayed in the rightmost column.</para>
              <list type="table">
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>123.123,45</description>
                  <description>123,123.45 (numeric)</description>
                </item>
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Comma</description>
                  <description>Comma</description>
                  <description>123.123,45</description>
                  <description>123.123,45 (text)</description>
                </item>
                <item>
                  <term>Comma</term>
                  <description>Period</description>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>123,123.45</description>
                  <description>123,123.45 (numeric)</description>
                </item>
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>Comma</description>
                  <description>123 123.45</description>
                  <description>123 123.45 (text)</description>
                </item>
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>Space</description>
                  <description>123 123.45</description>
                  <description>123,123.45 (numeric)</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public object Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Top { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1122">Renvoie la distance, en points, entre le bord supérieur de la ligne 1 et le bord supérieur de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1122">Returns the distance, in points, from the top edge of row 1 to the top edge of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-1123">
            <para>Si la plage est non contigue, la première zone est utilisée. Si la plage contient plusieurs lignes de haut, la plus faible (numérotée) ligne supérieure de la plage est utilisée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1123">
              <para>If the range is noncontiguous, the first area is used. If the range is more than one row high, the top (lowest numbered) row in the range is used.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public object Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1124">Hausse une plage dans un plan (c'est-à-dire diminue son niveau hiérarchique).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1124">Promotes a range in an outline (that is, decreases its outline level).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="eb640-1125">
            <para>La plage spécifiée doit être une ligne, colonne ou une plage de lignes ou colonnes. Si la plage se trouve dans un rapport de tableau croisé dynamique, cette méthode dissocie les éléments contenus dans la plage.</para>
            <para>Si la cellule active se trouve dans un en-tête de champ parent, tous les groupes dans ce champ sont dissociés et le champ est supprimé du rapport de tableau croisé dynamique. Lorsque le dernier groupe d’un champ parent est dissocié, tout le champ est supprimé de l’état.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1125">
              <para>The specified range must be a row or column, or a range of rows or columns. If the range is in a PivotTable report, this method ungroups the items contained in the range.</para>
              <para>If the active cell is in a field header of a parent field, all the groups in that field are ungrouped and the field is removed from the PivotTable report. When the last group in a parent field is ungrouped, the entire field is removed from the report.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnMerge">
      <MemberSignature Language="C#" Value="public void UnMerge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnMerge() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.UnMerge" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnMerge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnMerge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1126">Cette méthode scinde une zone fusionnée en cellules individuelles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1126">Separates a merged area into individual cells.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardHeight">
      <MemberSignature Language="C#" Value="public object UseStandardHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1127">Détermine si la hauteur de la <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet est égale à la hauteur standard de la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1127">Determines if the row height of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard height of the sheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-1128">
            <para>Cette propriété renvoie <b>la valeur True</b> si la hauteur de ligne de l’objet <b>Range</b> est égale à la hauteur standard de la feuille et la <b>valeur Null</b> si la plage contient plusieurs lignes et les lignes ne sont pas tous de la même hauteur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1128">
              <para>This property returns <b>True</b> if the row height of the <b>Range</b> object equals the standard height of the sheet and <b>Null</b> if the range contains more than one row and the rows aren’t all the same height.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardWidth">
      <MemberSignature Language="C#" Value="public object UseStandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1129">Détermine si la largeur de colonne de la <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet est égale à la largeur standard de la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1129">Determines if the column width of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard width of the sheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-1130">
            <para>Cette propriété renvoie <b>la valeur True</b> si la largeur de colonne de l’objet <b>Range</b> est égale à la largeur standard de la feuille et la <b>valeur Null</b> si la plage contient plusieurs colonnes et les colonnes suivantes ne sont pas la même largeur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1130">
              <para>This property returns <b>True</b> if the column width of the <b>Range</b> object equals the standard width of the sheet and <b>Null</b> if the range contains more than one column and the columns aren’t all the same width.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Validation Validation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Validation Validation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Validation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validation As Validation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Validation ^ Validation { Microsoft::Office::Interop::Excel::Validation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Validation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1131">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object qui représente la validation des données pour la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1131">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object that represents data validation for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value[object RangeValueDataType] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Value(Optional RangeValueDataType As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value[System::Object ^] { System::Object ^ get(System::Object ^ RangeValueDataType); void set(System::Object ^ RangeValueDataType, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RangeValueDataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RangeValueDataType">
          <span data-ttu-id="eb640-1132">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1132">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="eb640-1133">Le type de données de valeur de plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1133">The range value data type.</span>
          </span>
          <span data-ttu-id="eb640-1134">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> constantes :<b>xlRangeValueDefault</b><paramref name="default" /> si spécifié <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet est vide, renvoie la valeur <b>Empty</b> (utilisez la fonction <b>IsEmpty</b> pour tester ce cas).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1134">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> constants:<b>xlRangeValueDefault</b><paramref name="default" /> If the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is empty, returns the value <b>Empty</b> (use the <b>IsEmpty</b> function to test for this case).</span>
          </span>
          <span data-ttu-id="eb640-1135">Si l’objet <b>Range</b> contient plusieurs cellules, cette propriété renvoie un tableau de valeurs (utilisez la fonction <b>IsArray</b> pour tester ce cas). <b>xlRangeValueMSPersistXML Cette propriété</b>    Renvoie la représentation du jeu d’enregistrements de l’objet <b>Range</b> spécifié au format XML. <b>xlRangeValueXMLSpreadsheet</b>    Renvoie les valeurs, la mise en forme, formules et noms de l’objet <b>Range</b> spécifié au format feuille de calcul XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1135">If the <b>Range</b> object contains more than one cell, returns an array of values (use the <b>IsArray</b> function to test for this case).<b>xlRangeValueMSPersistXML</b>    Returns the recordset representation of the specified <b>Range</b> object in an XML format.<b>xlRangeValueXMLSpreadsheet</b>    Returns the values, formatting, formulas, and names of the specified <b>Range</b> object in the XML Spreadsheet format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb640-1136">Cette propriété renvoie ou définit la valeur de la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1136">Returns or sets the value of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-1137">
            <para>Lors de la définition d’une plage de cellules avec le contenu d’un fichier de feuille de calcul XML, seules les valeurs de la première feuille du classeur sont utilisées. Vous ne pouvez pas définir ou obtenir une plage non contiguë de cellules dans le format de feuille de calcul XML.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1137">
              <para>When setting a range of cells with the contents of an XML spreadsheet file, only values of the first sheet in the workbook are used. You cannot set or get a noncontiguous range of cells in the XML spreadsheet format.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value2">
      <MemberSignature Language="C#" Value="public object Value2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value2" />
      <MemberSignature Language="VB.NET" Value="Public Property Value2 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value2 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1138">Cette propriété renvoie ou définit la valeur de cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1138">Returns or sets the cell value.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-1139">
            <para>La seule différence entre cette propriété et la propriété <b>Value</b> est que la propriété <b>Value2</b> n’utilise pas les types de données <b>Currency</b> et <b>Date</b> . Vous pouvez retourner les valeurs mises en forme avec ces types de données sous forme de nombres à virgule flottante en utilisant le type de données <b>Double</b> .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1139">
              <para>The only difference between this property and the <b>Value</b> property is that the <b>Value2</b> property doesn’t use the <b>Currency</b> and <b>Date</b> data types. You can return values formatted with these data types as floating-point numbers by using the <b>Double</b> data type.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1140">Cette propriété renvoie ou définit l'alignement vertical de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1140">Returns or sets the vertical alignment of the specified object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb640-1141">.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1141"></span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="eb640-1142">
            <para>Le spécificateur d’alignement vertical retourné peut être une des opérations suivantes en lecture/écriture de valeurs de <b>l’objet</b> :</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlDistributed</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlJustify</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlTop</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlBottom</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlCenter</b>
                </description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1142">
              <para>The returned vertical alignment specifier can be one of the following read/write <b>Object</b> values:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlBottom</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlCenter</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlDistributed</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlJustify</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlTop</b>
                  </description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public object Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Width { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1143">La largeur, en points, de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1143">The width, in points, of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheet">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Worksheet Worksheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Worksheet Worksheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Worksheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheet As Worksheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Worksheet ^ Worksheet { Microsoft::Office::Interop::Excel::Worksheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Worksheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1144">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object qui représente la feuille de calcul contenant la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1144">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the worksheet containing the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1145">Détermine si Microsoft Excel renvoie le texte à la ligne dans l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1145">Determines if Microsoft Excel wraps the text in the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-1146">
            <para>Cette propriété renvoie <b>la valeur True</b> si Microsoft Excel renvoie le texte à la ligne dans l’objet et la <b>valeur Null</b> si la plage spécifiée contient certaines cellules habiller avec du texte et d’autres cellules qui ne.</para>
            <para>Microsoft Excel modifie la hauteur de ligne de la plage, si nécessaire, pour prendre en charge le texte de la plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1146">
              <para>This property returns <b>True</b> if Microsoft Excel wraps the text in the object and <b>Null</b> if the specified range contains some cells that wrap text and other cells that don’t.</para>
              <para>Microsoft Excel will change the row height of the range, if necessary, to accommodate the text in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XPath XPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XPath XPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.XPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XPath As XPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XPath ^ XPath { Microsoft::Office::Interop::Excel::XPath ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb640-1147">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object qui représente l’objet Xpath de l’élément mappé spécifié <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1147">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object that represents the Xpath of the element mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eb640-1148">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb640-1148">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>