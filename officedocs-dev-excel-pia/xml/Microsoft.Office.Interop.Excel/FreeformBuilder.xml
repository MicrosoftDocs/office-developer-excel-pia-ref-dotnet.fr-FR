<Type Name="FreeformBuilder" FullName="Microsoft.Office.Interop.Excel.FreeformBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49bbc8d21ea36b32da44ca3a92e3697a77f26497" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20582648" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface FreeformBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract FreeformBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.FreeformBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface FreeformBuilder" />
  <TypeSignature Language="C++ CLI" Value="public interface class FreeformBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e51f3-101">Cet objet représente la géométrie d'une forme libre en cours de création.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e51f3-101">Represents the geometry of a freeform while it’s being built.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="e51f3-102">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> méthode pour renvoyer un objet <b>FreeformBuilder</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="e51f3-102">Use the <see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> method to return a <b>FreeformBuilder</b> object.</span>
        </span>
        <span data-ttu-id="e51f3-103">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> pour ajouter des nœuds à la forme libre.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e51f3-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> method to add nodes to the freefrom.</span>
        </span>
        <span data-ttu-id="e51f3-104">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> méthode pour créer la forme définie dans l’objet <b>FreeformBuilder</b> et l’ajouter à la <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e51f3-104">Use the <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> method to create the shape defined in the <b>FreeformBuilder</b> object and add it to the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNodes">
      <MemberSignature Language="C#" Value="public void AddNodes (Microsoft.Office.Core.MsoSegmentType SegmentType, Microsoft.Office.Core.MsoEditingType EditingType, float X1, float Y1, object X2, object Y2, object X3, object Y3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNodes([in]valuetype Microsoft.Office.Core.MsoSegmentType SegmentType, [in]valuetype Microsoft.Office.Core.MsoEditingType EditingType, [in]float32 X1, [in]float32 Y1, [in]object X2, [in]object Y2, [in]object X3, [in]object Y3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNodes (SegmentType As MsoSegmentType, EditingType As MsoEditingType, X1 As Single, Y1 As Single, Optional X2 As Object, Optional Y2 As Object, Optional X3 As Object, Optional Y3 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1762)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SegmentType" Type="Microsoft.Office.Core.MsoSegmentType" />
        <Parameter Name="EditingType" Type="Microsoft.Office.Core.MsoEditingType" />
        <Parameter Name="X1" Type="System.Single" />
        <Parameter Name="Y1" Type="System.Single" />
        <Parameter Name="X2" Type="System.Object" />
        <Parameter Name="Y2" Type="System.Object" />
        <Parameter Name="X3" Type="System.Object" />
        <Parameter Name="Y3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SegmentType">
          <span data-ttu-id="e51f3-105">Requis <see cref="T:Microsoft.Office.Interop.Office.MsoSegmentType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-105">Required <see cref="T:Microsoft.Office.Interop.Office.MsoSegmentType" />.</span>
          </span>
          <span data-ttu-id="e51f3-106">Le type de segment à ajouter. <b>MsoSegmentType</b> peut être une de ces constantes :<b>msoSegmentLine</b><b>msoSegmentCurve</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-106">The type of segment to be added.<b>MsoSegmentType</b> can be one of these constants:<b>msoSegmentLine</b><b>msoSegmentCurve</b></span>
          </span>
        </param>
        <param name="EditingType">
          <span data-ttu-id="e51f3-107">Requis <see cref="T:Microsoft.Office.Interop.Office.MsoEditingType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-107">Required <see cref="T:Microsoft.Office.Interop.Office.MsoEditingType" />.</span>
          </span>
          <span data-ttu-id="e51f3-108">La propriété d’édition du sommet. <b>MsoEditingType</b> peut être une de ces constantes :<b>msoEditingAuto</b>,<b>msoEditingCorner</b>ne peut pas être <b>msoEditingSmooth</b> ou <b>msoEditingSymmetric</b>. Si <paramref name="SegmentType" /> est <b>msoSegmentLine</b>, <paramref name="EditingType" /> doit être <b>msoEditingAuto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-108">The editing property of the vertex.<b>MsoEditingType</b> can be one of these constants:<b>msoEditingAuto</b><b>msoEditingCorner</b>Cannot be <b>msoEditingSmooth</b> or <b>msoEditingSymmetric</b>.If <paramref name="SegmentType" /> is <b>msoSegmentLine</b>, <paramref name="EditingType" /> must be <b>msoEditingAuto</b>.</span>
          </span>
        </param>
        <param name="X1">
          <span data-ttu-id="e51f3-109">
            <b>Single</b>obligatoire. Si la <paramref name="EditingType" /> du nouveau segment est <b>msoEditingAuto</b>, cet argument spécifie la distance horizontale (en points) à partir du coin supérieur gauche du document et le point de terminaison du nouveau segment. Si la <paramref name="EditingType" /> du nouveau nœud est <b>msoEditingCorner</b>, cet argument spécifie la distance horizontale (en points) entre le coin supérieur gauche du document et le premier point de contrôle pour le nouveau segment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-109">Required <b>Single</b>.If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the end point of the new segment.If the <paramref name="EditingType" /> of the new node is <b>msoEditingCorner</b>, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the first control point for the new segment.</span>
          </span>
        </param>
        <param name="Y1">
          <span data-ttu-id="e51f3-110">
            <b>Single</b>obligatoire. Si la <paramref name="EditingType" /> du nouveau segment est <b>msoEditingAuto</b>, cet argument spécifie la distance horizontale (en points) à partir du coin supérieur gauche du document et le point de terminaison du nouveau segment. Si la <paramref name="EditingType" /> du nouveau nœud est <b>msoEditingCorner</b>, cet argument spécifie la distance horizontale (en points) entre le coin supérieur gauche du document et le premier point de contrôle pour le nouveau segment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-110">Required <b>Single</b>.If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the end point of the new segment.If the <paramref name="EditingType" /> of the new node is <b>msoEditingCorner</b>, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the first control point for the new segment.</span>
          </span>
        </param>
        <param name="X2">
          <span data-ttu-id="e51f3-111">Facultatif <b>Object</b>. Si la <paramref name="EditingType" /> du nouveau segment est <b>msoEditingCorner</b>, cet argument spécifie la distance horizontale (en points) entre le coin supérieur gauche du document et le deuxième point de contrôle pour le nouveau segment. Si la <paramref name="EditingType" /> du nouveau segment est <b>msoEditingAuto</b>, ne spécifiez aucune valeur pour cet argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-111">Optional <b>Object</b>.If the <paramref name="EditingType" /> of the new segment is <b>msoEditingCorner</b>, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the second control point for the new segment.If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, don't specify a value for this argument.</span>
          </span>
        </param>
        <param name="Y2">
          <span data-ttu-id="e51f3-112">Facultatif <b>Object</b>. Si la <paramref name="EditingType" /> du nouveau segment est <b>msoEditingCorner</b>, cet argument spécifie la distance horizontale (en points) entre le coin supérieur gauche du document et le deuxième point de contrôle pour le nouveau segment. Si la <paramref name="EditingType" /> du nouveau segment est <b>msoEditingAuto</b>, ne spécifiez aucune valeur pour cet argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-112">Optional <b>Object</b>.If the <paramref name="EditingType" /> of the new segment is <b>msoEditingCorner</b>, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the second control point for the new segment.If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, don't specify a value for this argument.</span>
          </span>
        </param>
        <param name="X3">
          <span data-ttu-id="e51f3-113">Facultatif <b>Object</b>. Si la <paramref name="EditingType" /> du nouveau segment est <b>msoEditingCorner</b>, cet argument spécifie la distance horizontale (en points) à partir du coin supérieur gauche du document et le point de terminaison du nouveau segment. Si la <paramref name="EditingType" /> du nouveau segment est <b>msoEditingAuto</b>, ne spécifiez aucune valeur pour cet argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-113">Optional <b>Object</b>.If the <paramref name="EditingType" /> of the new segment is <b>msoEditingCorner</b>, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the end point of the new segment.If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, don't specify a value for this argument.</span>
          </span>
        </param>
        <param name="Y3">
          <span data-ttu-id="e51f3-114">Facultatif <b>Object</b>. Si la <paramref name="EditingType" /> du nouveau segment est <b>msoEditingCorner</b>, cet argument spécifie la distance verticale (en points) à partir du coin supérieur gauche du document et le point de terminaison du nouveau segment. Si la <paramref name="EditingType" /> du nouveau segment est <b>msoEditingAuto</b>, ne spécifiez aucune valeur pour cet argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-114">Optional <b>Object</b>.If the <paramref name="EditingType" /> of the new segment is <b>msoEditingCorner</b>, this argument specifies the vertical distance (in points) from the upper-left corner of the document to the end point of the new segment.If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, don't specify a value for this argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e51f3-115">Ajoute un nœud à une forme libre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-115">Adds a node to a freeform.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e51f3-116">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-116">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape ConvertToShape ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape ConvertToShape() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToShape () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ ConvertToShape();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1766)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e51f3-117">Crée une forme qui possède les caractéristiques géométriques de l’objet <see cref="T:Microsoft.Office.Interop.Excel.FreeformBuilder" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-117">Creates a shape that has the geometric characteristics of the specified <see cref="T:Microsoft.Office.Interop.Excel.FreeformBuilder" /> object.</span>
          </span>
          <span data-ttu-id="e51f3-118">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object qui représente la nouvelle forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-118">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the new shape.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="e51f3-119">
              <b>Remarque</b>   Vous devez appliquer le <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> objet de méthode pour un <b>FreeformBuilder</b> au moins une fois avant d’utiliser la méthode <b>ConvertToShape</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="e51f3-119">
                <b>Note</b>   You must apply the <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> method to a <b>FreeformBuilder</b> object at least once before you use the <b>ConvertToShape</b> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e51f3-120">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-120">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e51f3-121">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e51f3-121">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e51f3-122">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e51f3-122">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="e51f3-123">Par exemple, Microsoft Excel possède le code créateur XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e51f3-123">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e51f3-124">Cette propriété renvoie l'objet parent de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e51f3-124">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>