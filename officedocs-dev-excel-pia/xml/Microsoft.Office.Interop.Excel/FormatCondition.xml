<Type Name="FormatCondition" FullName="Microsoft.Office.Interop.Excel.FormatCondition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06db90663108615d83dc620b65e7671be2f3d791" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50003562" /></Metadata><TypeSignature Language="C#" Value="public interface FormatCondition" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract FormatCondition" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.FormatCondition" />
  <TypeSignature Language="VB.NET" Value="Public Interface FormatCondition" />
  <TypeSignature Language="C++ CLI" Value="public interface class FormatCondition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024425-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="76249-101">Cet objet représente une mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="76249-101">Represents a conditional format.</span></span></summary>
    <remarks><para><span data-ttu-id="76249-102"><b>L’objet FormatCondition</b> est membre de la <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span><span class="sxs-lookup"><span data-stu-id="76249-102">The <b>FormatCondition</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span></span> <span data-ttu-id="76249-103">La collection <b>FormatConditions</b> peut contenir jusqu’à trois formats conditionnels pour une plage donnée.</span><span class="sxs-lookup"><span data-stu-id="76249-103">The <b>FormatConditions</b> collection can contain up to three conditional formats for a given range.</span></span></para>
      <para><span data-ttu-id="76249-104">Utilisez <b>FormatConditions</b>( ), où index est le numéro d’index de la mise en forme conditionnelle, pour <paramref name="index" /> renvoyer un objet <b>FormatCondition.</b></span><span class="sxs-lookup"><span data-stu-id="76249-104">Use <b>FormatConditions</b>(<paramref name="index" />), where index is the index number of the conditional format, to return a <b>FormatCondition</b> object.</span></span></para>
      <para><span data-ttu-id="76249-105">Utilisez la <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)" /> méthode pour créer un nouveau format conditionnel.</span><span class="sxs-lookup"><span data-stu-id="76249-105">Use the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)" /> method to create a new conditional format.</span></span> <span data-ttu-id="76249-106">Si vous essayez de créer plus de trois formats conditionnels pour une plage unique, la <b>méthode Add</b> échoue.</span><span class="sxs-lookup"><span data-stu-id="76249-106">If you try to create more than three conditional formats for a single range, the <b>Add</b> method fails.</span></span> <span data-ttu-id="76249-107">Si une plage a trois formats, vous pouvez utiliser la méthode pour modifier l’un des formats, ou vous pouvez utiliser la méthode pour supprimer un format, puis utiliser la méthode Add pour créer un <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Modify(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)" /> <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Delete" /> nouveau format. <b></b></span><span class="sxs-lookup"><span data-stu-id="76249-107">If a range has three formats, you can use the <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Modify(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)" /> method to change one of the formats, or you can use the <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Delete" /> method to delete a format and then use the <b>Add</b> method to create a new format.</span></span></para>
      <para><span data-ttu-id="76249-108">Utilisez les <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.Font" /> <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.Borders" /> propriétés et les propriétés <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.Interior" /> de l’objet <b>FormatCondition</b> pour contrôler l’apparence des cellules formatées.</span><span class="sxs-lookup"><span data-stu-id="76249-108">Use the <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.Font" />, <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.Borders" />, and <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.Interior" /> properties of the <b>FormatCondition</b> object to control the appearance of formatted cells.</span></span> <span data-ttu-id="76249-109">Certaines propriétés de ces objets ne sont pas gérées par le modèle d'objet à la mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="76249-109">Some properties of these objects aren’t supported by the conditional format object model.</span></span> <span data-ttu-id="76249-110">Les propriétés qui peuvent être utilisées avec la mise en forme conditionnelle sont répertoriées dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="76249-110">The properties that can be used with conditional formatting are listed in the following table.</span></span></para>
      <list type="table">
        <item>
          <term><span data-ttu-id="76249-111">
            <b>Police</b>
          </span><span class="sxs-lookup"><span data-stu-id="76249-111">
            <b>Font</b>
          </span></span></term>
          <description><span data-ttu-id="76249-112">
            <b>Bold</b>
            <b>ColorIndex</b>
            <b>FontStyle</b>
            <b>Italic</b>
            <b>Strikethrough</b>
            <b>Underline</b>The accounting underline styles cannot be used.
            <b></b></span><span class="sxs-lookup"><span data-stu-id="76249-112">
            <b>Bold</b>
            <b>Color</b>
            <b>ColorIndex</b>
            <b>FontStyle</b>
            <b>Italic</b>
            <b>Strikethrough</b>
            <b>Underline</b>The accounting underline styles cannot be used.</span></span></description>
        </item>
        <item>
          <term><span data-ttu-id="76249-113">
            <b>Bordure</b>
          </span><span class="sxs-lookup"><span data-stu-id="76249-113">
            <b>Border</b>
          </span></span></term>
          <description><span data-ttu-id="76249-114">
            <b></b>
            <b></b>
            <b></b>
            <b></b>
            <b></b>Style De couleur inférieure gauche Les styles de bordure suivants peuvent être utilisés (tous les autres ne sont pas pris en charge) : <b>xlNone</b>, <b>xlSolid</b>, <b>xlDash</b>, <b>xlDot</b>, <b>xlDashDot</b>, <b>xlDashDotDot</b>, <b>xlGray50</b>, <b>xlGray75</b>et <b>xlGray25</b>. <b>Poids</b><b>supérieur</b>Les poids de bordure suivants peuvent être utilisés (tous les autres ne sont pas pris en charge) : <b>xlWeightHairline</b> et <b>xlWeightThin</b>.</span><span class="sxs-lookup"><span data-stu-id="76249-114">
            <b>Bottom</b>
            <b>Color</b>
            <b>Left</b>
            <b>Right</b>
            <b>Style</b>The following border styles can be used (all others aren’t supported): <b>xlNone</b>, <b>xlSolid</b>, <b>xlDash</b>, <b>xlDot</b>, <b>xlDashDot</b>, <b>xlDashDotDot</b>, <b>xlGray50</b>, <b>xlGray75</b>, and <b>xlGray25</b>.<b>Top</b><b>Weight</b>The following border weights can be used (all others aren’t supported): <b>xlWeightHairline</b> and <b>xlWeightThin</b>.</span></span></description>
        </item>
        <item>
          <term><span data-ttu-id="76249-115">
            <b>Interior</b>
          </span><span class="sxs-lookup"><span data-stu-id="76249-115">
            <b>Interior</b>
          </span></span></term>
          <description><span data-ttu-id="76249-116">
            <b>Color</b>
            <b>ColorIndex</b>
            <b>PatternColorIndex</b> 
            <b></b>
          </span><span class="sxs-lookup"><span data-stu-id="76249-116">
            <b>Color</b>
            <b>ColorIndex</b>
            <b>Pattern</b>
            <b>PatternColorIndex</b>
          </span></span></description>
        </item>
      </list>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-117">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objet qui représente l’application Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="76249-117">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range AppliesTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range AppliesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliesTo As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ AppliesTo { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-118">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet spécifiant la plage de cellules à laquelle la règle de mise en forme est appliquée.</span><span class="sxs-lookup"><span data-stu-id="76249-118">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Range" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-119">Renvoie une collection qui représente les bordures d’un style ou d’une plage de cellules (y compris une plage définie dans le cadre <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> d’un format conditionnel).</span><span class="sxs-lookup"><span data-stu-id="76249-119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-120">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span><span class="sxs-lookup"><span data-stu-id="76249-120">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="76249-121">Si l'objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, qui équivaut au nombre hexadécimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="76249-121">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="76249-122">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, dans lequel chaque application possède un code de créateur à quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="76249-122">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="76249-123">Par exemple, Microsoft Excel possède le code de créateur XCEL.</span><span class="sxs-lookup"><span data-stu-id="76249-123">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DateOperator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTimePeriods DateOperator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTimePeriods DateOperator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.DateOperator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateOperator As XlTimePeriods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTimePeriods DateOperator { Microsoft::Office::Interop::Excel::XlTimePeriods get(); void set(Microsoft::Office::Interop::Excel::XlTimePeriods value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2614)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTimePeriods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-124">Spécifie l’opérateur <see cref="T:Microsoft.Office.Interop.Excel.XlTimePeriods" /> Date utilisé dans la condition de format.</span><span class="sxs-lookup"><span data-stu-id="76249-124">Specifies the <see cref="T:Microsoft.Office.Interop.Excel.XlTimePeriods" /> Date operator used in the format condition.</span></span> <span data-ttu-id="76249-125">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="76249-125">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlTimePeriods" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatCondition.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76249-126">Supprime l'objet.</span><span class="sxs-lookup"><span data-stu-id="76249-126">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-127">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Font" /> objet qui représente la police de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="76249-127">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula1">
      <MemberSignature Language="C#" Value="public string Formula1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Formula1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula1 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-128">Renvoie la valeur ou l'expression associée au format conditionnel ou à la validation des données.</span><span class="sxs-lookup"><span data-stu-id="76249-128">Returns the value or expression associated with the conditional format or data validation.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="76249-129">La <b>propriété Formula1</b> peut être une valeur constante, une valeur de chaîne, une référence de cellule ou une formule.</span><span class="sxs-lookup"><span data-stu-id="76249-129">The <b>Formula1</b> property can be a constant value, a string value, a cell reference, or a formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula2">
      <MemberSignature Language="C#" Value="public string Formula2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Formula2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula2 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula2 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-130">Cette propriété renvoie la valeur ou l'expression associée au second élément d'un format conditionnel ou d'une validation de données.</span><span class="sxs-lookup"><span data-stu-id="76249-130">Returns the value or expression associated with the second part of a conditional format or data validation.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="76249-131">La <b>propriété Formula2</b> est utilisée uniquement lorsque la propriété de mise en forme conditionnelle de validation des données est <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.Operator" /> <b>xlBetween</b> ou <b>xlNotBetween</b>.</span><span class="sxs-lookup"><span data-stu-id="76249-131">The <b>Formula2</b> property is used only when the data validation conditional format <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.Operator" /> property is <b>xlBetween</b> or <b>xlNotBetween</b>.</span></span> <span data-ttu-id="76249-132">Il peut s'agir d'une valeur constante, d'une valeur de chaîne, d'une référence de cellule ou d'une formule.</span><span class="sxs-lookup"><span data-stu-id="76249-132">Can be a constant value, a string value, a cell reference, or a formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-133">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> objet qui représente l’intérieur de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="76249-133">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modify">
      <MemberSignature Language="C#" Value="public void Modify (Microsoft.Office.Interop.Excel.XlFormatConditionType Type, object Operator, object Formula1, object Formula2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Modify([in]valuetype Microsoft.Office.Interop.Excel.XlFormatConditionType Type, [in]object Operator, [in]object Formula1, [in]object Formula2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatCondition.Modify(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Modify (Type As XlFormatConditionType, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFormatConditionType" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="76249-134">Obligatoire <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> .</span><span class="sxs-lookup"><span data-stu-id="76249-134">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" />.</span></span> <span data-ttu-id="76249-135">Indique si le format conditionnel repose sur la valeur d'une cellule ou sur une expression.</span><span class="sxs-lookup"><span data-stu-id="76249-135">Specifies whether the conditional format is based on a cell value or an expression.</span></span> <span data-ttu-id="76249-136">Il peut s’y trouver l’une des <b>constantes XlFormatCondition</b> suivantes :<b>xlCellValue</b><b>xlExpression</b></span><span class="sxs-lookup"><span data-stu-id="76249-136">Can be one of the following <b>XlFormatCondition</b> constants:<b>xlCellValue</b><b>xlExpression</b></span></span></param>
        <param name="Operator"><span data-ttu-id="76249-137">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> .</span><span class="sxs-lookup"><span data-stu-id="76249-137">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" />.</span></span> <span data-ttu-id="76249-138">Opérateur du format conditionnel.</span><span class="sxs-lookup"><span data-stu-id="76249-138">The conditional format operator.</span></span> <span data-ttu-id="76249-139">Il peut s’agit de l’une des constantes <b>XlFormatConditionOperator</b> suivantes :<b>xlBetween</b><b>xlEqual</b><b>xlGreater</b><b>xlGreaterEqual</b><b>xlLess</b><b>xlLessEqua</b>l<b>xlNotBetween xlNotBetween</b><b>xlNotEqual</b>If , est <paramref name="Type" /> <b>xlExpression</b>, <paramref name="Operator" /> l’argument est ignoré.</span><span class="sxs-lookup"><span data-stu-id="76249-139">Can be one of the following <b>XlFormatConditionOperator</b> constants:<b>xlBetween</b><b>xlEqual</b><b>xlGreater</b><b>xlGreaterEqual</b><b>xlLess</b><b>xlLessEqua</b>l<b>xlNotBetween</b><b>xlNotEqual</b>If <paramref name="Type" />, is <b>xlExpression</b>, the <paramref name="Operator" /> argument is ignored.</span></span></param>
        <param name="Formula1"><span data-ttu-id="76249-140">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="76249-140">Optional <b>Object</b>.</span></span> <span data-ttu-id="76249-141">Valeur ou expression associée au format conditionnel.</span><span class="sxs-lookup"><span data-stu-id="76249-141">The value or expression associated with the conditional format.</span></span> <span data-ttu-id="76249-142">Il peut s'agir d'une constante, d'une chaîne, d'une référence de cellule ou d'une formule.</span><span class="sxs-lookup"><span data-stu-id="76249-142">Can be a constant value, a string value, a cell reference, or a formula.</span></span></param>
        <param name="Formula2"><span data-ttu-id="76249-143">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="76249-143">Optional <b>Object</b>.</span></span> <span data-ttu-id="76249-144">Valeur ou expression associée au format conditionnel.</span><span class="sxs-lookup"><span data-stu-id="76249-144">The value or expression associated with the conditional format.</span></span> <span data-ttu-id="76249-145">Il peut s'agir d'une constante, d'une chaîne, d'une référence de cellule ou d'une formule.</span><span class="sxs-lookup"><span data-stu-id="76249-145">Can be a constant value, a string value, a cell reference, or a formula.</span></span></param>
        <summary><span data-ttu-id="76249-146">Modifie un format conditionnel existant.</span><span class="sxs-lookup"><span data-stu-id="76249-146">Modifies an existing conditional format.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAppliesToRange">
      <MemberSignature Language="C#" Value="public void ModifyAppliesToRange (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyAppliesToRange([in]class Microsoft.Office.Interop.Excel.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatCondition.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyAppliesToRange(Microsoft::Office::Interop::Excel::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2627)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="76249-147">Plage à laquelle cette règle de mise en forme sera appliquée.</span><span class="sxs-lookup"><span data-stu-id="76249-147">The range to which this formatting rule will be applied.</span></span></param>
        <summary><span data-ttu-id="76249-148">Définit la plage de cellules à laquelle cette règle de mise en forme s’applique.</span><span class="sxs-lookup"><span data-stu-id="76249-148">Sets the cell range to which this formatting rule applies.</span></span></summary>
        <remarks><para><span data-ttu-id="76249-149">La plage doit être dans le style de référence A1 et être entièrement contenue dans la feuille qui est le parent de la <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span><span class="sxs-lookup"><span data-stu-id="76249-149">The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span></span> <span data-ttu-id="76249-150">Elle peut inclure l'opérateur de plage (le signe deux-points), l'opérateur d'intersection (un espace) ou l'opérateur de liaison (une virgule).</span><span class="sxs-lookup"><span data-stu-id="76249-150">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="76249-151">Les signes dollar peuvent également être utilisés, mais ils sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="76249-151">Dollar signs can also be used but they are ignored.</span></span></para>
          <para><span data-ttu-id="76249-152">Vous pouvez également utiliser un nom défini en local à n'importe quel endroit de la plage, mais le nom doit appartenir au langage de la macro.</span><span class="sxs-lookup"><span data-stu-id="76249-152">You can also use a local defined name in any part of the range, but the name must be in the language of the macro.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyEx">
      <MemberSignature Language="C#" Value="public void ModifyEx (Microsoft.Office.Interop.Excel.XlFormatConditionType Type, object Operator, object Formula1, object Formula2, object String, object Operator2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyEx([in]valuetype Microsoft.Office.Interop.Excel.XlFormatConditionType Type, [in]object Operator, [in]object Formula1, [in]object Formula2, [in]object String, [in]object Operator2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatCondition.ModifyEx(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ModifyEx (Type As XlFormatConditionType, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object, Optional String As Object, Optional Operator2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFormatConditionType" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
        <Parameter Name="String" Type="System.Object" />
        <Parameter Name="Operator2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="Operator">To be added.</param>
        <param name="Formula1">To be added.</param>
        <param name="Formula2">To be added.</param>
        <param name="String">To be added.</param>
        <param name="Operator2">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-153">Renvoie ou définit le format numérique appliqué à une cellule si la règle de mise en forme conditionnelle renvoie <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="76249-153">Returns or sets the number format applied to a cell if the conditional formatting rule evaluates to <b>True</b>.</span></span> <span data-ttu-id="76249-154"><b>Objet</b> en lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="76249-154">Read/write <b>Object</b>.</span></span></summary>
        <value><span data-ttu-id="76249-155"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="76249-155"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="76249-156">Le format numérique est spécifié à l'aide des mêmes codes de format que ceux affichés dans la boîte de dialogue Format de cellule, sous l'onglet Nombre.</span><span class="sxs-lookup"><span data-stu-id="76249-156">The number format is specified using the same format codes displayed on the Number tab of the Format Cells dialog box.</span></span> <span data-ttu-id="76249-157">Vous pouvez utiliser un format numérique intégré, par exemple "General" ou créer un format numérique personnalisé.</span><span class="sxs-lookup"><span data-stu-id="76249-157">You can use a built-in number format, for example "General", or create a custom number format.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public int Operator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Operator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Operator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-158">Renvoie l’opérateur pour la mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="76249-158">Returns the operator for the conditional format.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-159">Renvoie l’objet parent pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="76249-159">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-p114">Renvoie ou définit la valeur de priorité de la règle de mise en forme conditionnelle. La priorité détermine l’ordre d’évaluation lorsqu’une feuille de calcul contient plusieurs règles de mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="76249-p114">Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</span></span></summary>
        <value><span data-ttu-id="76249-162"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="76249-162"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="76249-p115">La valeur de priorité que vous définissez doit être un entier positif compris entre 1 et le nombre total de règles de mise en forme conditionnelle contenues dans la feuille de calcul. Dans la mesure où la valeur de priorité doit être unique pour toutes les règles de la feuille de calcul, le fait de modifier la priorité d'une règle de mise en forme conditionnelle donnée risque d'entraîner la modification de la valeur de priorité des autres règles de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="76249-p115">When setting the priority, the value must be a positive integer between 1 and the total number of conditional formatting rules on the worksheet. The priority must be a unique value for all rules on the worksheet, so changing the priority for the specified conditional formatting rule may cause the priority value of the other rules on the worksheet to be shifted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PTCondition">
      <MemberSignature Language="C#" Value="public bool PTCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PTCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.PTCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PTCondition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PTCondition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-165">Renvoie une valeur de type <b>Boolean</b> indiquant si le format conditionnel est appliqué à un graphique de tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="76249-165">Returns a <b>Boolean</b> value indicating if the conditional format is being applied to a PivotTable chart.</span></span> <span data-ttu-id="76249-166">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="76249-166">Read-only.</span></span></summary>
        <value><span data-ttu-id="76249-167"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="76249-167"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.ScopeType" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeType As XlPivotConditionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotConditionScope ScopeType { Microsoft::Office::Interop::Excel::XlPivotConditionScope get(); void set(Microsoft::Office::Interop::Excel::XlPivotConditionScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotConditionScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-168">Renvoie ou définit l’une des constantes de l’éumération, qui détermine l’étendue de la mise en forme conditionnelle lorsqu’elle est appliquée à un graphique de tableau <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="76249-168">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /></value>
        <remarks><para><span data-ttu-id="76249-169">La valeur par défaut <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" /> est , qui définit l’étendue à l’aide de la <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="76249-169">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, which sets the scope using the <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" />property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFirstPriority">
      <MemberSignature Language="C#" Value="public void SetFirstPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFirstPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatCondition.SetFirstPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFirstPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFirstPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2629)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76249-170">Attribue à la règle de mise en forme conditionnelle en question la valeur de priorité « 1 » de sorte qu’elle soit évaluée avant toutes les autres règles présentes dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="76249-170">Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="76249-171">Si la feuille de calcul contient plusieurs règles de mise en forme conditionnelle et que la règle n'était pas auparavant associée à la priorité « 1 », cette méthode augmente d'une unité la valeur de priorité de toutes les autres règles figurant dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="76249-171">When you have multiple conditional formatting rules  in a worksheet, if the rule was not previously set to priority "1", this method will cause the priority of all other existing rules on the worksheet to be increased by one.</span></span></para>
          <para><span data-ttu-id="76249-172">
            <b>Remarque</b>: les niveaux de priorité pour les règles de mise en forme conditionnelle sont appliqués au niveau de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="76249-172">
            <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastPriority">
      <MemberSignature Language="C#" Value="public void SetLastPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatCondition.SetLastPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76249-173">Définit l’ordre d’évaluation de la règle de mise en forme conditionnelle de sorte qu’elle soit évaluée après toutes les autres règles présentes dans la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="76249-173">Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="76249-p117">La valeur effective de la priorité est égale au nombre total de règles de mise en forme conditionnelle présentes dans la feuille de calcul. Si la feuille de calcul contient plusieurs règles de mise en forme conditionnelle, cette méthode augmente d'une unité la priorité des règles dont la valeur était supérieure à celle de la règle en question.</span><span class="sxs-lookup"><span data-stu-id="76249-p117">The actual vaule of the priority will be equal to the total number of conditional formatting rules on the worksheet. When you have multiple conditional formatting rules  in a worksheet, this method will cause the priority of rules that had a priority value greater than this rule to be increased by one.</span></span></para>
          <para><span data-ttu-id="76249-176">
            <b>Remarque</b>: les niveaux de priorité pour les règles de mise en forme conditionnelle sont appliqués au niveau de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="76249-176">
            <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StopIfTrue">
      <MemberSignature Language="C#" Value="public bool StopIfTrue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopIfTrue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.StopIfTrue" />
      <MemberSignature Language="VB.NET" Value="Public Property StopIfTrue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopIfTrue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-177">Renvoie ou définit une valeur de type <b>Boolean</b> qui détermine si les autres règles de mise en forme conditionnelle de la cellule doivent être évaluées lorsque la règle active renvoie la valeur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="76249-177">Returns or sets a <b>Boolean</b> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <b>True</b>.</span></span></summary>
        <value><span data-ttu-id="76249-178"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="76249-178"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="76249-179">Pour assurer une compatibilité en amont, la valeur par défaut de cette propriété est <b>True</b>, ce qui correspond au comportement contraire à celui d'une règle de mise en forme créée dans l'interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="76249-179">To support backward compatibility, the default value for this property is <b>True</b>, which is the opposite behavior of a formatting rule created in the user interface.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-180">Renvoie ou définit une valeur <b>de</b> chaîne spécifiant le texte utilisé par la règle de mise en forme conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="76249-180">Returns or sets a <b>String</b> value specifying the text used by the conditional formatting rule.</span></span></summary>
        <value><span data-ttu-id="76249-181"><b>String</b></span><span class="sxs-lookup"><span data-stu-id="76249-181"><b>String</b></span></span></value>
        <remarks><para><span data-ttu-id="76249-182">Cette propriété est ignorée si elle <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.Type" /> n’est pas définie sur <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlTextString" /> .</span><span class="sxs-lookup"><span data-stu-id="76249-182">This property is ignored if the <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.Type" /> property is not set to <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlTextString" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TextOperator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlContainsOperator TextOperator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlContainsOperator TextOperator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.TextOperator" />
      <MemberSignature Language="VB.NET" Value="Public Property TextOperator As XlContainsOperator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlContainsOperator TextOperator { Microsoft::Office::Interop::Excel::XlContainsOperator get(); void set(Microsoft::Office::Interop::Excel::XlContainsOperator value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2613)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlContainsOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-183">Renvoie ou définit l’une des constantes de l’éumération, en spécifiant la recherche de texte effectuée par la règle de mise en forme <see cref="T:Microsoft.Office.Interop.Excel.XlContainsOperator" /> conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="76249-183">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlContainsOperator" /> enumeration, specifying the text search performed by the conditional formatting rule.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlContainsOperator" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatCondition.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76249-184">Renvoie le type d’objet.</span><span class="sxs-lookup"><span data-stu-id="76249-184">Returns the object type.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="76249-185">Le type d’objet peut être l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> constantes suivantes :</span><span class="sxs-lookup"><span data-stu-id="76249-185">The object type can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> constants:</span></span></para>
          <para><span data-ttu-id="76249-186">
            <b>xlCellValue</b>
          </span><span class="sxs-lookup"><span data-stu-id="76249-186">
            <b>xlCellValue</b>
          </span></span></para>
          <para><span data-ttu-id="76249-187">
            <b>xlExpression</b>
          </span><span class="sxs-lookup"><span data-stu-id="76249-187">
            <b>xlExpression</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>