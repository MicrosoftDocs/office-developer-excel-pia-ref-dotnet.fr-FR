<Type Name="CellFormat" FullName="Microsoft.Office.Interop.Excel.CellFormat">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb607767f33cbf4ea76bfc37821ee59c522eeb21" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50006005" /></Metadata><TypeSignature Language="C#" Value="public interface CellFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CellFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.CellFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface CellFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class CellFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024450-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="38117-101">Cet objet représente les critères de recherche pour le format des cellules.</span><span class="sxs-lookup"><span data-stu-id="38117-101">Represents the search criteria for the cell format.</span></span></summary>
    <remarks><para><span data-ttu-id="38117-102">Utilisez les <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> propriétés de <see cref="P:Microsoft.Office.Interop.Excel._Application.Application" /> l’objet pour renvoyer un <b>objet CellFormat.</b></span><span class="sxs-lookup"><span data-stu-id="38117-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> or <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> properties of the <see cref="P:Microsoft.Office.Interop.Excel._Application.Application" /> object to return a <b>CellFormat</b> object.</span></span></para>
      <para><span data-ttu-id="38117-103">Vous pouvez utiliser la ou les propriétés de l’objet <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" /> <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Font" /> <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" /> <b>CellFormat</b> pour définir les critères de recherche pour le format de cellule.</span><span class="sxs-lookup"><span data-stu-id="38117-103">You can use the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" />, <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Font" />, or <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" /> properties of the <b>CellFormat</b> object to define the search criteria for the cell format.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-104"><b>True</b> si le texte est automatiquement mis en retrait lorsque l’alignement du texte dans une cellule est égal à la distribution horizontale ou verticale.</span><span class="sxs-lookup"><span data-stu-id="38117-104"><b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38117-105">Pour définir l’alignement du texte sur une distribution égale, vous pouvez définir la propriété sur <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" /> <b>xlVAlignDistributed</b> lorsque la valeur de la propriété est xlVertical et vous pouvez définir la propriété sur <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" /> <b>xlHAlignDistributed</b> <b></b> lorsque la valeur de la propriété Orientation est <b>xlHorizontal</b>.</span><span class="sxs-lookup"><span data-stu-id="38117-105">To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the <b>Orientation</b> property is <b>xlHorizontal</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-106">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objet qui représente l’application Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="38117-106">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" />
      <MemberSignature Language="VB.NET" Value="Public Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); void set(Microsoft::Office::Interop::Excel::Borders ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-107">Permet à l’utilisateur de définir ou de renvoyer les critères de recherche en fonction du format de bordure de la cellule.</span><span class="sxs-lookup"><span data-stu-id="38117-107">Allows the user to set or return the search criteria based on the cell's border format.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CellFormat.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38117-108">Cette propriété permet d’effacer les critères définis dans <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> les <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> propriétés.</span><span class="sxs-lookup"><span data-stu-id="38117-108">Clears the criteria set in the <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> and <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-109">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span><span class="sxs-lookup"><span data-stu-id="38117-109">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38117-110">Si l'objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, qui équivaut au nombre hexadécimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="38117-110">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="38117-111">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, dans lequel chaque application possède un code de créateur à quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="38117-111">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="38117-112">Par exemple, Microsoft Excel possède le code de créateur XCEL.</span><span class="sxs-lookup"><span data-stu-id="38117-112">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); void set(Microsoft::Office::Interop::Excel::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-113">Renvoie un objet, ce qui permet à l’utilisateur de définir ou de renvoyer les critères de recherche en fonction du format de police <see cref="T:Microsoft.Office.Interop.Excel.Font" /> de la cellule.</span><span class="sxs-lookup"><span data-stu-id="38117-113">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object, allowing the user to set or return the search criteria based on the cell's font format.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-114"><b>True</b> si la formule est masquée lorsque la feuille de calcul est protégée.</span><span class="sxs-lookup"><span data-stu-id="38117-114"><b>True</b> if the formula will be hidden when the worksheet is protected.</span></span> <span data-ttu-id="38117-115">Renvoie <b>Null</b> si la plage spécifiée contient certaines cellules dont <b>FormulaHidden</b> est égal à <b>True</b> et d’autres avec <b>FormulaHidden</b> égale à <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="38117-115">Returns <b>Null</b> if the specified range contains some cells with <b>FormulaHidden</b> equal to <b>True</b> and some cells with <b>FormulaHidden</b> equal to <b>False</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38117-116">Ne confondez pas cette propriété avec la <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="38117-116">Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property.</span></span> <span data-ttu-id="38117-117">La formule ne sera pas masquée si le manuel est protégé et que la feuille de calcul ne l’est pas ; Elle sera masquée uniquement si la feuille de calcul est protégée.</span><span class="sxs-lookup"><span data-stu-id="38117-117">The formula will not be hidden if the workbook is protected and the worksheet is not; it will be hidden only if the worksheet is protected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-118">Cette propriété renvoie ou définit l'alignement horizontal de l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="38117-118">Returns or sets the horizontal alignment for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38117-119">Les constantes suivantes peuvent être utilisées :</span><span class="sxs-lookup"><span data-stu-id="38117-119">The following constants can be used:</span></span></para>
          <para><span data-ttu-id="38117-120">
            <b>xlCenter</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-120">
            <b>xlCenter</b>
          </span></span></para>
          <para><span data-ttu-id="38117-121">
            <b>xlDistributed</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-121">
            <b>xlDistributed</b>
          </span></span></para>
          <para><span data-ttu-id="38117-122">
            <b>xlJustify</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-122">
            <b>xlJustify</b>
          </span></span></para>
          <para><span data-ttu-id="38117-123">
            <b>xlLeft</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-123">
            <b>xlLeft</b>
          </span></span></para>
          <para><span data-ttu-id="38117-124">
            <b>xlRight</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-124">
            <b>xlRight</b>
          </span></span></para>
          <para><span data-ttu-id="38117-125">Certaines de ces constantes ne seront peut-être pas disponibles, en fonction de la langue sélectionnée ou installée (par exemple, le français).</span><span class="sxs-lookup"><span data-stu-id="38117-125">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-126">Renvoie ou définit le niveau de retrait de la cellule ou de la plage.</span><span class="sxs-lookup"><span data-stu-id="38117-126">Returns or sets the indent level for the cell or range.</span></span> <span data-ttu-id="38117-127">Il peut s’agir d’un nombre entier compris entre 0 et 15.</span><span class="sxs-lookup"><span data-stu-id="38117-127">Can be an integer from 0 to 15.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38117-128">L'utilisation de cette propriété pour affecter une valeur inférieure à 0 (zéro) ou supérieure à 15 au niveau de retrait génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="38117-128">Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" />
      <MemberSignature Language="VB.NET" Value="Public Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); void set(Microsoft::Office::Interop::Excel::Interior ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-129">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> objet qui permet à l’utilisateur de définir ou de renvoyer les critères de recherche en fonction du format intérieur de la cellule.</span><span class="sxs-lookup"><span data-stu-id="38117-129">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object allowing the user to set or return the search criteria based on the cell's interior format.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-130"><b>True si</b> l’objet est verrouillé ; <b>False</b> si l’objet peut être modifié lorsque la feuille est protégée.</span><span class="sxs-lookup"><span data-stu-id="38117-130"><b>True</b> if the object is locked; <b>False</b> if the object can be modified when the sheet is protected.</span></span> <span data-ttu-id="38117-131">Renvoie <b>null si</b> la plage spécifiée contient des cellules verrouillées et déverrouillées.</span><span class="sxs-lookup"><span data-stu-id="38117-131">Returns <b>Null</b> if the specified range contains both locked and unlocked cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-132"><b>True</b> si la plage ou le style contient des cellules fusionnées.</span><span class="sxs-lookup"><span data-stu-id="38117-132"><b>True</b> if the range or style contains merged cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38117-133">Lorsque vous sélectionnez une plage contenant des cellules fusionnées, la sélection qui en résulte peut différer de la sélection prévue.</span><span class="sxs-lookup"><span data-stu-id="38117-133">When you select a range that contains merged cells, the resulting selection may be different from the intended selection.</span></span> <span data-ttu-id="38117-134">Utilisez la <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> propriété pour vérifier l’adresse de la plage sélectionnée.</span><span class="sxs-lookup"><span data-stu-id="38117-134">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-135">Cette propriété renvoie ou définit le code du format de l'objet.</span><span class="sxs-lookup"><span data-stu-id="38117-135">Returns or sets the format code for the object.</span></span> <span data-ttu-id="38117-136">Renvoie <b>null</b> si toutes les cellules de la plage spécifiée n’ont pas le même format de nombre.</span><span class="sxs-lookup"><span data-stu-id="38117-136">Returns <b>Null</b> if all cells in the specified range don't have the same number format.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38117-137">Le code de format est la même chaîne que l'option de Codes de Format dans la boîte de dialogue Format de cellule.</span><span class="sxs-lookup"><span data-stu-id="38117-137">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span></span> <span data-ttu-id="38117-138">La Visual Basic <b>Format utilise</b> des chaînes de code de format différentes de celles <b>de NumberFormat</b> et des <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> propriétés.</span><span class="sxs-lookup"><span data-stu-id="38117-138">The Visual Basic <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-139">Cette propriété renvoie ou définit le code du format de l'objet sous forme de chaîne dans la langue de l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="38117-139">Returns or sets the format code for the object as a string in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38117-140">La fonction Visual Basic <b>Format utilise</b> des chaînes de code de format différentes de celles des propriétés <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> <b>NumberFormatLocal et NumberFormatLocal.</b></span><span class="sxs-lookup"><span data-stu-id="38117-140">The Visual Basic <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-141">Orientation du texte.</span><span class="sxs-lookup"><span data-stu-id="38117-141">The text orientation.</span></span> <span data-ttu-id="38117-142">Il peut s’agit d’une valeur de -90 à 90 degrés.</span><span class="sxs-lookup"><span data-stu-id="38117-142">Can be an integer value from –90 to 90 degrees.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38117-143">La <b>propriété Orientation</b> peut être l’une des constantes suivantes :</span><span class="sxs-lookup"><span data-stu-id="38117-143">The <b>Orientation</b> property can be one of the following constants:</span></span></para>
          <para><span data-ttu-id="38117-144">
            <b>xlDownward</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-144">
            <b>xlDownward</b>
          </span></span></para>
          <para><span data-ttu-id="38117-145">
            <b>xlHorizontal</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-145">
            <b>xlHorizontal</b>
          </span></span></para>
          <para><span data-ttu-id="38117-146">
            <b>xlUpward</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-146">
            <b>xlUpward</b>
          </span></span></para>
          <para><span data-ttu-id="38117-147">
            <b>xlVertical</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-147">
            <b>xlVertical</b>
          </span></span></para>
          <para><span data-ttu-id="38117-p110">Dans le cas des sources de données OLAP, la définition de cette propriété pour un champ de la hiérarchie détermine l’orientation des autres champs de la même hiérarchie. Les champs de dimension ne peuvent être orientés que dans les zones de ligne, de colonne et de champs de page du rapport de tableau croisé dynamique. Les champs de mesure ne peuvent être orientés que dans la zone de données. L’affectation de la constante <b>xlHidden</b> à une hiérarchie ou un champ de données entraîne la suppression de cette hiérarchie ou de ce champ du rapport de tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="38117-p110">For OLAP data sources, setting this property for one field in a hierarchy sets the orientation for the other fields in the same hierarchy. Dimension fields can only be oriented in the row, column, and page field areas of the PivotTable report. Measure fields can only be oriented in the data area. Setting a hierarchy or data field to <b>xlHidden</b> removes the hierarchy or field from the PivotTable report.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-152">Renvoie l’objet parent pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="38117-152">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-153"><b>True</b> si le texte est automatiquement réduit pour tenir dans la largeur de colonne disponible.</span><span class="sxs-lookup"><span data-stu-id="38117-153"><b>True</b> if text automatically shrinks to fit in the available column width.</span></span> <span data-ttu-id="38117-154">Renvoie <b>null</b> si cette propriété n’est pas définie sur la même valeur pour toutes les cellules de la plage spécifiée.</span><span class="sxs-lookup"><span data-stu-id="38117-154">Returns <b>Null</b> if this property isn’t set to the same value for all cells in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-155">Cette propriété renvoie ou définit l'alignement vertical de l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="38117-155">Returns or sets the vertical alignment of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38117-156">La <b>propriété VerticalAlignment</b> peut être l’une des constantes suivantes :</span><span class="sxs-lookup"><span data-stu-id="38117-156">The <b>VerticalAlignment</b> property can be one of the following constants:</span></span></para>
          <para><span data-ttu-id="38117-157">
            <b>xlBottom</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-157">
            <b>xlBottom</b>
          </span></span></para>
          <para><span data-ttu-id="38117-158">
            <b>xlCenter</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-158">
            <b>xlCenter</b>
          </span></span></para>
          <para><span data-ttu-id="38117-159">
            <b>xlDistributed</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-159">
            <b>xlDistributed</b>
          </span></span></para>
          <para><span data-ttu-id="38117-160">
            <b>xlJustify</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-160">
            <b>xlJustify</b>
          </span></span></para>
          <para><span data-ttu-id="38117-161">
            <b>xlTop</b>
          </span><span class="sxs-lookup"><span data-stu-id="38117-161">
            <b>xlTop</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38117-162"><b>La</b> valeur true si Microsoft Excel encapsule le texte dans l’objet.</span><span class="sxs-lookup"><span data-stu-id="38117-162"><b>True</b> if Microsoft Excel wraps the text in the object.</span></span> <span data-ttu-id="38117-163">Renvoie <b>Null si</b> la plage spécifiée contient certaines cellules qui encapsulent le texte et d’autres cellules qui ne le sont pas.</span><span class="sxs-lookup"><span data-stu-id="38117-163">Returns <b>Null</b> if the specified range contains some cells that wrap text and other cells that don’t.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38117-164">Microsoft Excel modifie éventuellement la hauteur de ligne de la plage pour, le cas échéant, afficher le texte dans celle-ci.</span><span class="sxs-lookup"><span data-stu-id="38117-164">Microsoft Excel will change the row height of the range, if necessary, to accommodate the text in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>