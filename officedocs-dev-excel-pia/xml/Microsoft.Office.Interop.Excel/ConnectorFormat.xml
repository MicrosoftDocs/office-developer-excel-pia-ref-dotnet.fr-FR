<Type Name="ConnectorFormat" FullName="Microsoft.Office.Interop.Excel.ConnectorFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15dfc4a010303c9d647a7f5b002c66763a3fdc79" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20586113" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ConnectorFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ConnectorFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ConnectorFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface ConnectorFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class ConnectorFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443E-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="037bd-101">Cet objet contient les propriétés et méthodes qui s’appliquent aux connecteurs.</span>
      <span class="sxs-lookup">
        <span data-stu-id="037bd-101">Contains properties and methods that apply to connectors.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="037bd-102">
        <para>Un connecteur est une ligne reliant deux autres formes en des points de connexion. Si vous réorganisez des formes connectées, la géométrie du connecteur sera automatiquement ajustée afin que les formes restent connectées.</para> Utilisation de 
      <para>les <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" /> propriété pour renvoyer un objet <b>ConnectorFormat</b> . Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> et <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> méthodes pour attacher les extrémités du connecteur à d’autres formes du document. Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> méthode trouve automatiquement le chemin le plus court entre les deux formes connectées par le connecteur. Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.Shape.Connector" /> propriété pour voir si une forme est un connecteur.</para><para>Remarque affecter une taille et une position lorsque vous ajoutez un connecteur à la <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection, mais la taille et la position sont automatiquement ajustées lorsque vous attachez le début et la fin du connecteur à d’autres formes de la collection. Par conséquent, si vous souhaitez attacher un connecteur à d’autres formes, la taille initiale et la position que vous spécifiez sont sans effet. De même, vous spécifiez les points de connexion sur une forme pour attacher le connecteur lorsque vous attachez le connecteur, mais à l’aide de la méthode <b>RerouteConnections</b> après le connecteur est attaché peuvent modifier les points de connexion le connecteur s’attache, rendre votre premier choix de points de connexion non pertinents.</para><para>Connexion sont généralement numérotés selon les règles présentées dans le tableau suivant.</para><list type="table"><item><term>Les formes automatiques, WordArt, images et OLE objets</term><description>les sites de connexion sont numérotés en commençant par le haut et continuer dans le sens inverse.</description></item><item><term>Formes libres</term><description>la connexion sont les sommets et ils correspondent aux numéros de sommet.</description></item></list><para></para></span>
      <span class="sxs-lookup">
        <span data-stu-id="037bd-102">
          <para>A connector is a line that attaches two other shapes at points called connection sites. If you rearrange shapes that are connected, the geometry of the connector will be automatically adjusted so that the shapes remain connected.</para>
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" /> property to return a <b>ConnectorFormat</b> object. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> and <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> methods to attach the ends of the connector to other shapes in the document. Use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method to automatically find the shortest path between the two shapes connected by the connector. Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Connector" /> property to see whether a shape is a connector.</para>
          <para>Note that you assign a size and a position when you add a connector to the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection, but the size and position are automatically adjusted when you attach the beginning and end of the connector to other shapes in the collection. Therefore, if you intend to attach a connector to other shapes, the initial size and position you specify are irrelevant. Likewise, you specify which connection sites on a shape to attach the connector to when you attach the connector, but using the <b>RerouteConnections</b> method after the connector is attached may change which connection sites the connector attaches to, making your original choice of connection sites irrelevant.</para>
          <para>Connection sites are generally numbered according to the rules presented in the following table.</para>
          <list type="table">
            <item>
              <term>AutoShapes, WordArt, pictures, and OLE objects</term>
              <description>The connection sites are numbered starting at the top and proceeding counterclockwise.</description>
            </item>
            <item>
              <term>Freeforms</term>
              <description>The connection sites are the vertices, and they correspond to the vertex numbers.</description>
            </item>
          </list>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="037bd-103">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-103">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public void BeginConnect (Microsoft.Office.Interop.Excel.Shape ConnectedShape, int ConnectionSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginConnect([in]class Microsoft.Office.Interop.Excel.Shape ConnectedShape, [in]int32 ConnectionSite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginConnect (ConnectedShape As Shape, ConnectionSite As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginConnect(Microsoft::Office::Interop::Excel::Shape ^ ConnectedShape, int ConnectionSite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1750)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConnectedShape" Type="Microsoft.Office.Interop.Excel.Shape" />
        <Parameter Name="ConnectionSite" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ConnectedShape">
          <span data-ttu-id="037bd-104">Requis <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-104">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span>
          </span>
          <span data-ttu-id="037bd-105">Pour joindre le début du connecteur à la forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-105">The shape to attach the beginning of the connector to.</span>
          </span>
          <span data-ttu-id="037bd-106">L’objet <b>Shape</b> spécifié doit être dans la même <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection que le connecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-106">The specified <b>Shape</b> object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection as the connector.</span>
          </span>
        </param>
        <param name="ConnectionSite">
          <span data-ttu-id="037bd-107">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-107">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="037bd-108">Point de connexion sur la forme spécifiée par <paramref name="ConnectedShape" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-108">A connection site on the shape specified by <paramref name="ConnectedShape" />.</span>
          </span>
          <span data-ttu-id="037bd-109">Doit être un entier compris entre 1 et le nombre entier renvoyé par la <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> propriété de la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-109">Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> property of the specified shape.</span>
          </span>
          <span data-ttu-id="037bd-110">Si vous souhaitez que le connecteur trouve automatiquement le chemin le plus court entre les deux formes qu’il se connecte, spécifiez un nombre entier valid pour cet argument et ensuite utiliser la <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> méthode après que le connecteur est attaché aux formes aux deux extrémités.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-110">If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method after the connector is attached to shapes at both ends.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="037bd-111">Joint le début du connecteur spécifié à une forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-111">Attaches the beginning of the specified connector to a specified shape.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="037bd-112">
            <para>S’il existe déjà une connexion entre le début du connecteur et une autre forme, cette connexion est interrompue. Si le début du connecteur n’est pas déjà positionné sur le point de connexion spécifié, cette méthode déplace le début du connecteur vers le point de connexion et ajuste la taille et la position du connecteur. Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> méthode pour attacher la fin du connecteur à une forme.</para>
            <para>Lorsque vous attachez un connecteur à un objet, la taille et la position du connecteur sont automatiquement ajustées si nécessaire.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-112">
              <para>If there’s already a connection between the beginning of the connector and another shape, that connection is broken. If the beginning of the connector isn’t already positioned at the specified connecting site, this method moves the beginning of the connector to the connecting site and adjusts the size and position of the connector. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> method to attach the end of the connector to a shape.</para>
              <para>When you attach a connector to an object, the size and position of the connector are automatically adjusted if necessary.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnected">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState BeginConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState BeginConnected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnected As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState BeginConnected { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1756)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1756)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="037bd-113">
            <b>La valeur true</b> si le début du connecteur spécifié est connecté à une forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-113">
              <b>True</b> if the beginning of the specified connector is connected to a shape.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="037bd-114">
            <para>
              <see cref="T:Microsoft.Office.Core.MsoTriState" />peut être une des constantes <b>MsoTriState</b> suivantes :</para>
            <para>
              <b>msoCTrue</b>
            </para>
            <para>
              <b>msoFalse</b>
            </para>
            <para>
              <b>msoTriStateMixed</b>
            </para>
            <para>
              <b>msoTriStateToggle</b>
            </para>
            <para>
              <b>msoTrue</b> le début du connecteur spécifié est connecté à une forme.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-114">
              <para>
                <see cref="T:Microsoft.Office.Core.MsoTriState" /> can be one of the following <b>MsoTriState</b> constants:</para>
              <para>
                <b>msoCTrue</b>
              </para>
              <para>
                <b>msoFalse</b>
              </para>
              <para>
                <b>msoTriStateMixed</b>
              </para>
              <para>
                <b>msoTriStateToggle</b>
              </para>
              <para>
                <b>msoTrue</b> The beginning of the specified connector is connected to a shape.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnectedShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape BeginConnectedShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape BeginConnectedShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnectedShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ BeginConnectedShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1757)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1757)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="037bd-115">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet qui représente la forme à laquelle est relié le début du connecteur spécifié à.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-115">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape that the beginning of the specified connector is attached to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="037bd-116">
            <para>Si le début du connecteur spécifié n’est pas relié à une forme, cette propriété génère une erreur.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-116">
              <para>If the beginning of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnectionSite">
      <MemberSignature Language="C#" Value="public int BeginConnectionSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BeginConnectionSite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectionSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnectionSite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BeginConnectionSite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1758)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="037bd-117">Renvoie un entier qui spécifie le point de connexion auquel la fin d’un connecteur est connectée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-117">Returns an integer that specifies the connection site that the end of a connector is connected to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="037bd-118">
            <para>Si la fin du connecteur spécifié n’est pas reliée à une forme, cette propriété génère une erreur.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-118">
              <para>If the end of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDisconnect">
      <MemberSignature Language="C#" Value="public void BeginDisconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginDisconnect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginDisconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginDisconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1753)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="037bd-119">Détache le début du connecteur spécifié de la forme, qu'il est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-119">Detaches the beginning of the specified connector from the shape it’s attached to.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="037bd-120">Méthode <para>le <b>BeginDisconnect</b> ne modifie pas la taille ou la position du connecteur. Le début du connecteur reste positionné sur le point de connexion mais n’est plus connecté. Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" /> méthode pour détacher l’extrémité du connecteur d’une forme.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-120">
              <para>The <b>BeginDisconnect</b> method doesn’t alter the size or position of the connector. The beginning of the connector remains positioned at a connection site but is no longer connected. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" /> method to detach the end of the connector from a shape.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="037bd-121">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-121">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="037bd-122">
            <para>Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, ce qui équivaut à la c 5843454 nombre hexadécimal</para> Propriété 
          <para>le <b>créateur</b> est conçue pour être utilisé dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Excel possède le code créateur XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-122">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (Microsoft.Office.Interop.Excel.Shape ConnectedShape, int ConnectionSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndConnect([in]class Microsoft.Office.Interop.Excel.Shape ConnectedShape, [in]int32 ConnectionSite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (ConnectedShape As Shape, ConnectionSite As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(Microsoft::Office::Interop::Excel::Shape ^ ConnectedShape, int ConnectionSite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1754)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConnectedShape" Type="Microsoft.Office.Interop.Excel.Shape" />
        <Parameter Name="ConnectionSite" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ConnectedShape">
          <span data-ttu-id="037bd-123">Requis <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-123">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span>
          </span>
          <span data-ttu-id="037bd-124">Forme à laquelle la fin du connecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-124">The shape to attach the end of the connector to.</span>
          </span>
          <span data-ttu-id="037bd-125">L’objet <b>Shape</b> spécifié doit être dans la même <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection que le connecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-125">The specified <b>Shape</b> object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection as the connector.</span>
          </span>
        </param>
        <param name="ConnectionSite">
          <span data-ttu-id="037bd-126">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-126">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="037bd-127">Point de connexion sur la forme spécifiée par <paramref name="ConnectedShape" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-127">A connection site on the shape specified by <paramref name="ConnectedShape" />.</span>
          </span>
          <span data-ttu-id="037bd-128">Doit être un entier compris entre 1 et le nombre entier renvoyé par la <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> propriété de la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-128">Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> property of the specified shape.</span>
          </span>
          <span data-ttu-id="037bd-129">Si vous souhaitez que le connecteur trouve automatiquement le chemin le plus court entre les deux formes qu’il se connecte, spécifiez un nombre entier valid pour cet argument et ensuite utiliser la <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> méthode après que le connecteur est attaché aux formes aux deux extrémités.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-129">If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method after the connector is attached to shapes at both ends.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="037bd-130">Joint l'extrémité du connecteur spécifié à une forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-130">Attaches the end of the specified connector to a specified shape.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="037bd-131">
            <para>S’il existe déjà une connexion entre la fin du connecteur et une autre forme, cette connexion est interrompue. Si la fin du connecteur n’est pas déjà positionnée sur le point de connexion spécifié, cette méthode déplace la fin du connecteur vers le point de connexion et ajuste la taille et la position du connecteur. Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> méthode pour joindre le début du connecteur à une forme.</para>
            <para>Lorsque vous attachez un connecteur à un objet, la taille et la position du connecteur sont automatiquement ajustées si nécessaire.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-131">
              <para>If there’s already a connection between the end of the connector and another shape, that connection is broken. If the end of the connector isn’t already positioned at the specified connecting site, this method moves the end of the connector to the connecting site and adjusts the size and position of the connector. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> method to attach the beginning of the connector to a shape.</para>
              <para>When you attach a connector to an object, the size and position of the connector are automatically adjusted if necessary.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnected">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState EndConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState EndConnected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnected As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState EndConnected { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="037bd-132">
            <b>msoTrue</b> si la fin du connecteur spécifié est connectée à une forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-132">
              <b>msoTrue</b> if the end of the specified connector is connected to a shape.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="037bd-133">
            <para>
              <see cref="T:Microsoft.Office.Core.MsoTriState" />peut être une des constantes <b>MsoTriState</b> suivantes :</para>
            <para>
              <b>msoFalse</b> la fin du connecteur spécifié n’est pas connectée à une forme.</para>
            <para>la fin du connecteur spécifié est connectée à une forme de 
            <b>la valeur msoTrue</b> .</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-133">
              <para>
                <see cref="T:Microsoft.Office.Core.MsoTriState" /> can be one of the following <b>MsoTriState</b> constants:</para>
              <para>
                <b>msoFalse</b> The end of the specified connector is not connected to a shape.</para>
              <para>
                <b>msoTrue</b> The end of the specified connector is connected to a shape.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnectedShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape EndConnectedShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape EndConnectedShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnectedShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ EndConnectedShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1760)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="037bd-134">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet qui représente la forme à laquelle est reliée la fin du connecteur spécifié à.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-134">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape that the end of the specified connector is attached to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="037bd-135">
            <para>Si la fin du connecteur spécifié n’est pas reliée à une forme, cette propriété génère une erreur.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-135">
              <para>If the end of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnectionSite">
      <MemberSignature Language="C#" Value="public int EndConnectionSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EndConnectionSite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectionSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnectionSite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EndConnectionSite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="037bd-136">Renvoie un entier qui spécifie le point de connexion auquel la fin d’un connecteur est connectée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-136">Returns an integer that specifies the connection site that the end of a connector is connected to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="037bd-137">
            <para>Si la fin du connecteur spécifié n’est pas reliée à une forme, cette propriété génère une erreur.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-137">
              <para>If the end of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisconnect">
      <MemberSignature Language="C#" Value="public void EndDisconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisconnect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1755)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="037bd-138">Détache l’extrémité du connecteur spécifié de la forme, qu'il est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-138">Detaches the end of the specified connector from the shape it’s attached to.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="037bd-139">
            <para>Cette méthode ne modifie pas la taille ou la position du connecteur ; la fin du connecteur reste positionnée sur le point de connexion mais n’est plus connectée. Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" /> méthode pour détacher le début du connecteur d’une forme.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-139">
              <para>This method doesn’t alter the size or position of the connector; the end of the connector remains positioned at a connection site but is no longer connected. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" /> method to detach the beginning of the connector from a shape.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="037bd-140">Renvoie l'objet parent de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-140">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoConnectorType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoConnectorType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As MsoConnectorType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoConnectorType Type { Microsoft::Office::Core::MsoConnectorType get(); void set(Microsoft::Office::Core::MsoConnectorType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoConnectorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="037bd-141">Cette propriété renvoie ou définit le connecteur type de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-141">Returns or sets the connector format type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="037bd-142">
            <para>
              <see cref="T:Microsoft.Office.Core.MsoConnectorType" />peut être une des constantes <b>MsoConnectorType</b> suivantes :</para>
            <para>
              <b>msoConnectorCurve</b>
            </para>
            <para>
              <b>msoConnectorElbow</b>
            </para>
            <para>
              <b>msoConnectorStraight</b>
            </para>
            <para>
              <b>msoConnectorTypeMixed</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="037bd-142">
              <para>
                <see cref="T:Microsoft.Office.Core.MsoConnectorType" /> can be one of the following <b>MsoConnectorType</b> constants:</para>
              <para>
                <b>msoConnectorCurve</b>
              </para>
              <para>
                <b>msoConnectorElbow</b>
              </para>
              <para>
                <b>msoConnectorStraight</b>
              </para>
              <para>
                <b>msoConnectorTypeMixed</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>