<Type Name="ConnectorFormat" FullName="Microsoft.Office.Interop.Excel.ConnectorFormat">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e2dfed647b41c630904642100343ae25d044efb" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50003940" /></Metadata><TypeSignature Language="C#" Value="public interface ConnectorFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ConnectorFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ConnectorFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface ConnectorFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class ConnectorFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443E-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a98c6-101">Contient des propriétés et des méthodes qui s’appliquent aux connecteurs.</span><span class="sxs-lookup"><span data-stu-id="a98c6-101">Contains properties and methods that apply to connectors.</span></span></summary>
    <remarks><para><span data-ttu-id="a98c6-p101">Un connecteur est une ligne reliant deux formes par des points appelés points d'attache. Si vous réorganisez des formes connectées, la géométrie du connecteur sera automatiquement ajustée de telle sorte que les formes demeurent connectées.</span><span class="sxs-lookup"><span data-stu-id="a98c6-p101">A connector is a line that attaches two other shapes at points called connection sites. If you rearrange shapes that are connected, the geometry of the connector will be automatically adjusted so that the shapes remain connected.</span></span></para>
      <para><span data-ttu-id="a98c6-104">Utilisez la <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" /> propriété pour renvoyer un <b>objet ConnectorFormat.</b></span><span class="sxs-lookup"><span data-stu-id="a98c6-104">Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" /> property to return a <b>ConnectorFormat</b> object.</span></span> <span data-ttu-id="a98c6-105">Utilisez les méthodes et les méthodes pour attacher les extrémités du connecteur <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> à d’autres formes du document.</span><span class="sxs-lookup"><span data-stu-id="a98c6-105">Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> and <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> methods to attach the ends of the connector to other shapes in the document.</span></span> <span data-ttu-id="a98c6-106">Utilisez la méthode pour rechercher automatiquement le chemin le plus court <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> entre les deux formes connectées par le connecteur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-106">Use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method to automatically find the shortest path between the two shapes connected by the connector.</span></span> <span data-ttu-id="a98c6-107">Utilisez la <see cref="P:Microsoft.Office.Interop.Excel.Shape.Connector" /> propriété pour voir si une forme est un connecteur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-107">Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Connector" /> property to see whether a shape is a connector.</span></span></para>
      <para><span data-ttu-id="a98c6-108">Notez que vous affectez une taille et une position lorsque vous ajoutez un connecteur à la collection, mais la taille et la position sont automatiquement ajustées lorsque vous attachez le début et la fin du connecteur à d’autres formes de la <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span><span class="sxs-lookup"><span data-stu-id="a98c6-108">Note that you assign a size and a position when you add a connector to the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection, but the size and position are automatically adjusted when you attach the beginning and end of the connector to other shapes in the collection.</span></span> <span data-ttu-id="a98c6-109">Par conséquent, si vous avez l'intention d'attacher un connecteur à d'autres formes, la taille initiale et la position que vous indiquez ne sont pas appliquées.</span><span class="sxs-lookup"><span data-stu-id="a98c6-109">Therefore, if you intend to attach a connector to other shapes, the initial size and position you specify are irrelevant.</span></span> <span data-ttu-id="a98c6-110">De même, vous définissez les sites de connexion sur une forme et attache le connecteur lorsque vous l'attachez, mais à l'aide de la méthode <b>RerouteConnections</b> après l'attache du connecteur peut modifier les sites de connexion que le connecteur s'attache, de rendre votre premier choix de sites de connexion sans effet.</span><span class="sxs-lookup"><span data-stu-id="a98c6-110">Likewise, you specify which connection sites on a shape to attach the connector to when you attach the connector, but using the <b>RerouteConnections</b> method after the connector is attached may change which connection sites the connector attaches to, making your original choice of connection sites irrelevant.</span></span></para>
      <para><span data-ttu-id="a98c6-111">Généralement, les points d'attache sont numérotés conformément aux règles présentées dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="a98c6-111">Connection sites are generally numbered according to the rules presented in the following table.</span></span></para>
      <list type="table">
        <item>
          <term><span data-ttu-id="a98c6-112">Formes automatiques, objets WordArt, images et objets OLE</span><span class="sxs-lookup"><span data-stu-id="a98c6-112">AutoShapes, WordArt, pictures, and OLE objects</span></span></term>
          <description><span data-ttu-id="a98c6-113">Les points d'attache sont numérotés à partir du haut et en tournant dans le sens des aiguilles d'une montre.</span><span class="sxs-lookup"><span data-stu-id="a98c6-113">The connection sites are numbered starting at the top and proceeding counterclockwise.</span></span></description>
        </item>
        <item>
          <term><span data-ttu-id="a98c6-114">Formes libres</span><span class="sxs-lookup"><span data-stu-id="a98c6-114">Freeforms</span></span></term>
          <description><span data-ttu-id="a98c6-115">Les points d'attache sont les sommets de la forme libre et portent les mêmes numéros que ces sommets.</span><span class="sxs-lookup"><span data-stu-id="a98c6-115">The connection sites are the vertices, and they correspond to the vertex numbers.</span></span></description>
        </item>
      </list>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a98c6-116">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objet qui représente l’application Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="a98c6-116">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public void BeginConnect (Microsoft.Office.Interop.Excel.Shape ConnectedShape, int ConnectionSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginConnect([in]class Microsoft.Office.Interop.Excel.Shape ConnectedShape, [in]int32 ConnectionSite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginConnect (ConnectedShape As Shape, ConnectionSite As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginConnect(Microsoft::Office::Interop::Excel::Shape ^ ConnectedShape, int ConnectionSite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1750)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConnectedShape" Type="Microsoft.Office.Interop.Excel.Shape" />
        <Parameter Name="ConnectionSite" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ConnectedShape"><span data-ttu-id="a98c6-117">Objet <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="a98c6-117">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span></span> <span data-ttu-id="a98c6-118">Forme à laquelle le début du connecteur doit être attaché.</span><span class="sxs-lookup"><span data-stu-id="a98c6-118">The shape to attach the beginning of the connector to.</span></span> <span data-ttu-id="a98c6-119">L’objet <b>Shape</b> spécifié doit se trouver dans la <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> même collection que le connecteur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-119">The specified <b>Shape</b> object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection as the connector.</span></span></param>
        <param name="ConnectionSite"><span data-ttu-id="a98c6-120">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="a98c6-120">Required <b>Integer</b>.</span></span> <span data-ttu-id="a98c6-121">Un site de connexion sur la forme spécifiée par <paramref name="ConnectedShape" /> .</span><span class="sxs-lookup"><span data-stu-id="a98c6-121">A connection site on the shape specified by <paramref name="ConnectedShape" />.</span></span> <span data-ttu-id="a98c6-122">Doit être un nombre integer entre 1 et l’integer renvoyé par la <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> propriété de la forme spécifiée.</span><span class="sxs-lookup"><span data-stu-id="a98c6-122">Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> property of the specified shape.</span></span> <span data-ttu-id="a98c6-123">Si vous souhaitez que le connecteur trouve automatiquement le chemin le plus court entre les deux formes qu’il connecte, spécifiez un nombre d’nombres longs valide pour cet argument, puis utilisez la méthode une fois que le connecteur est attaché aux formes aux deux <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> extrémités.</span><span class="sxs-lookup"><span data-stu-id="a98c6-123">If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method after the connector is attached to shapes at both ends.</span></span></param>
        <summary><span data-ttu-id="a98c6-124">Cette méthode relie le début du connecteur spécifié à une forme spécifiée.</span><span class="sxs-lookup"><span data-stu-id="a98c6-124">Attaches the beginning of the specified connector to a specified shape.</span></span></summary>
        <remarks><para><span data-ttu-id="a98c6-125">S’il existe déjà une connexion entre le début du connecteur et une autre forme, cette connexion est rompue.</span><span class="sxs-lookup"><span data-stu-id="a98c6-125">If there’s already a connection between the beginning of the connector and another shape, that connection is broken.</span></span> <span data-ttu-id="a98c6-126">Si le début du connecteur n’est pas déjà positionné sur le point de connexion spécifié, cette méthode déplace le début du connecteur jusqu’au point de connexion et ajuste la taille et la position du connecteur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-126">If the beginning of the connector isn’t already positioned at the specified connecting site, this method moves the beginning of the connector to the connecting site and adjusts the size and position of the connector.</span></span> <span data-ttu-id="a98c6-127">Utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> méthode pour attacher l’extrémité du connecteur à une forme.</span><span class="sxs-lookup"><span data-stu-id="a98c6-127">Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> method to attach the end of the connector to a shape.</span></span></para>
          <para><span data-ttu-id="a98c6-128">Lorsque vous associez un connecteur à un objet, la taille et la position du connecteur s'ajustent automatiquement si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="a98c6-128">When you attach a connector to an object, the size and position of the connector are automatically adjusted if necessary.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnected">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState BeginConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState BeginConnected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnected As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState BeginConnected { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1756)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1756)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a98c6-129">Cette propriété a la valeur <b>True</b> si le début du connecteur spécifié est connecté à la forme.</span><span class="sxs-lookup"><span data-stu-id="a98c6-129"><b>True</b> if the beginning of the specified connector is connected to a shape.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a98c6-130">
            <see cref="T:Microsoft.Office.Core.MsoTriState" /> peut être l’une des <b>constantes MsoTriState</b> suivantes :</span><span class="sxs-lookup"><span data-stu-id="a98c6-130">
            <see cref="T:Microsoft.Office.Core.MsoTriState" /> can be one of the following <b>MsoTriState</b> constants:</span></span></para>
          <para><span data-ttu-id="a98c6-131">
            <b>msoCTrue</b>
          </span><span class="sxs-lookup"><span data-stu-id="a98c6-131">
            <b>msoCTrue</b>
          </span></span></para>
          <para><span data-ttu-id="a98c6-132">
            <b>msoFalse</b>
          </span><span class="sxs-lookup"><span data-stu-id="a98c6-132">
            <b>msoFalse</b>
          </span></span></para>
          <para><span data-ttu-id="a98c6-133">
            <b>msoTriStateMixed</b>
          </span><span class="sxs-lookup"><span data-stu-id="a98c6-133">
            <b>msoTriStateMixed</b>
          </span></span></para>
          <para><span data-ttu-id="a98c6-134">
            <b>msoTriStateToggle</b>
          </span><span class="sxs-lookup"><span data-stu-id="a98c6-134">
            <b>msoTriStateToggle</b>
          </span></span></para>
          <para><span data-ttu-id="a98c6-135">
            <b>msoTrue</b> Le début du connecteur spécifié est connecté à une forme.</span><span class="sxs-lookup"><span data-stu-id="a98c6-135">
            <b>msoTrue</b> The beginning of the specified connector is connected to a shape.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnectedShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape BeginConnectedShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape BeginConnectedShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnectedShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ BeginConnectedShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1757)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1757)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a98c6-136">Renvoie un objet qui représente la forme à qui le début du connecteur <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> spécifié est attaché.</span><span class="sxs-lookup"><span data-stu-id="a98c6-136">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape that the beginning of the specified connector is attached to.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a98c6-137">Si le début du connecteur spécifié n'est pas rattaché à une forme, cette propriété génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-137">If the beginning of the specified connector isn’t attached to a shape, this property generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnectionSite">
      <MemberSignature Language="C#" Value="public int BeginConnectionSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BeginConnectionSite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectionSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnectionSite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BeginConnectionSite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1758)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a98c6-138">Cette propriété renvoie un nombre entier qui spécifie le point d’attache auquel la fin d’un connecteur est connectée.</span><span class="sxs-lookup"><span data-stu-id="a98c6-138">Returns an integer that specifies the connection site that the end of a connector is connected to.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a98c6-139">Si la fin du connecteur spécifié n'est pas rattachée à une forme, cette propriété génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-139">If the end of the specified connector isn’t attached to a shape, this property generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDisconnect">
      <MemberSignature Language="C#" Value="public void BeginDisconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginDisconnect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginDisconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginDisconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1753)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a98c6-140">Détache le début du connecteur spécifié de la forme à laquelle il est attaché.</span><span class="sxs-lookup"><span data-stu-id="a98c6-140">Detaches the beginning of the specified connector from the shape it’s attached to.</span></span></summary>
        <remarks><para><span data-ttu-id="a98c6-141">La <b>méthode BeginDisconnect</b> ne modifie pas la taille ou la position du connecteur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-141">The <b>BeginDisconnect</b> method doesn’t alter the size or position of the connector.</span></span> <span data-ttu-id="a98c6-142">Le début du connecteur reste positionné sur un site de connexion mais n’est plus connecté.</span><span class="sxs-lookup"><span data-stu-id="a98c6-142">The beginning of the connector remains positioned at a connection site but is no longer connected.</span></span> <span data-ttu-id="a98c6-143">Utilisez la méthode pour détacher la fin du <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" /> connecteur d’une forme.</span><span class="sxs-lookup"><span data-stu-id="a98c6-143">Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" /> method to detach the end of the connector from a shape.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a98c6-144">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span><span class="sxs-lookup"><span data-stu-id="a98c6-144">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a98c6-145">Si l'objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, qui équivaut au nombre hexadécimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="a98c6-145">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="a98c6-146">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, dans lequel chaque application possède un code de créateur à quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="a98c6-146">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="a98c6-147">Par exemple, Microsoft Excel possède le code de créateur XCEL.</span><span class="sxs-lookup"><span data-stu-id="a98c6-147">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (Microsoft.Office.Interop.Excel.Shape ConnectedShape, int ConnectionSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndConnect([in]class Microsoft.Office.Interop.Excel.Shape ConnectedShape, [in]int32 ConnectionSite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (ConnectedShape As Shape, ConnectionSite As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(Microsoft::Office::Interop::Excel::Shape ^ ConnectedShape, int ConnectionSite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1754)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConnectedShape" Type="Microsoft.Office.Interop.Excel.Shape" />
        <Parameter Name="ConnectionSite" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ConnectedShape"><span data-ttu-id="a98c6-148">Objet <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="a98c6-148">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span></span> <span data-ttu-id="a98c6-149">Forme à laquelle la fin du connecteur est rattachée.</span><span class="sxs-lookup"><span data-stu-id="a98c6-149">The shape to attach the end of the connector to.</span></span> <span data-ttu-id="a98c6-150">L’objet <b>Shape</b> spécifié doit se trouver dans la <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> même collection que le connecteur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-150">The specified <b>Shape</b> object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection as the connector.</span></span></param>
        <param name="ConnectionSite"><span data-ttu-id="a98c6-151">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="a98c6-151">Required <b>Integer</b>.</span></span> <span data-ttu-id="a98c6-152">Un site de connexion sur la forme spécifiée par <paramref name="ConnectedShape" /> .</span><span class="sxs-lookup"><span data-stu-id="a98c6-152">A connection site on the shape specified by <paramref name="ConnectedShape" />.</span></span> <span data-ttu-id="a98c6-153">Doit être un nombre integer entre 1 et l’integer renvoyé par la <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> propriété de la forme spécifiée.</span><span class="sxs-lookup"><span data-stu-id="a98c6-153">Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> property of the specified shape.</span></span> <span data-ttu-id="a98c6-154">Si vous souhaitez que le connecteur trouve automatiquement le chemin le plus court entre les deux formes qu’il connecte, spécifiez un nombre d’nombres longs valide pour cet argument, puis utilisez la méthode une fois que le connecteur est attaché aux formes aux deux <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> extrémités.</span><span class="sxs-lookup"><span data-stu-id="a98c6-154">If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method after the connector is attached to shapes at both ends.</span></span></param>
        <summary><span data-ttu-id="a98c6-155">Cette méthode relie la fin du connecteur spécifié à une forme spécifiée.</span><span class="sxs-lookup"><span data-stu-id="a98c6-155">Attaches the end of the specified connector to a specified shape.</span></span></summary>
        <remarks><para><span data-ttu-id="a98c6-156">S'il existe déjà une connexion entre la fin du connecteur et une autre forme, cette connexion est rompue.</span><span class="sxs-lookup"><span data-stu-id="a98c6-156">If there’s already a connection between the end of the connector and another shape, that connection is broken.</span></span> <span data-ttu-id="a98c6-157">Si la fin du connecteur n'est pas déjà positionnée au point d'attache spécifié, cette méthode déplace la fin du connecteur au point d'attache et ajuste la taille et la position du connecteur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-157">If the end of the connector isn’t already positioned at the specified connecting site, this method moves the end of the connector to the connecting site and adjusts the size and position of the connector.</span></span> <span data-ttu-id="a98c6-158">Utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> méthode pour attacher le début du connecteur à une forme.</span><span class="sxs-lookup"><span data-stu-id="a98c6-158">Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> method to attach the beginning of the connector to a shape.</span></span></para>
          <para><span data-ttu-id="a98c6-159">Lorsque vous associez un connecteur à un objet, la taille et la position du connecteur s'ajustent automatiquement si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="a98c6-159">When you attach a connector to an object, the size and position of the connector are automatically adjusted if necessary.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnected">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState EndConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState EndConnected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnected As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState EndConnected { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a98c6-160">Cette propriété a la valeur 	<b>msoTrue</b> si la fin du connecteur spécifié est connecté à une forme.</span><span class="sxs-lookup"><span data-stu-id="a98c6-160"><b>msoTrue</b> if the end of the specified connector is connected to a shape.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a98c6-161">
            <see cref="T:Microsoft.Office.Core.MsoTriState" /> peut être l’une des <b>constantes MsoTriState</b> suivantes :</span><span class="sxs-lookup"><span data-stu-id="a98c6-161">
            <see cref="T:Microsoft.Office.Core.MsoTriState" /> can be one of the following <b>MsoTriState</b> constants:</span></span></para>
          <para><span data-ttu-id="a98c6-162">
            <b>msoFalse</b> La fin du connecteur spécifié n’est pas connectée à une forme.</span><span class="sxs-lookup"><span data-stu-id="a98c6-162">
            <b>msoFalse</b> The end of the specified connector is not connected to a shape.</span></span></para>
          <para><span data-ttu-id="a98c6-163">
            <b>msoTrue</b> La fin du connecteur spécifié est connectée à une forme.</span><span class="sxs-lookup"><span data-stu-id="a98c6-163">
            <b>msoTrue</b> The end of the specified connector is connected to a shape.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnectedShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape EndConnectedShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape EndConnectedShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnectedShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ EndConnectedShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1760)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a98c6-164">Renvoie un objet qui représente la forme à l’extrémité du connecteur <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="a98c6-164">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape that the end of the specified connector is attached to.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a98c6-165">Si la fin du connecteur spécifié n'est pas rattachée à une forme, cette propriété génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-165">If the end of the specified connector isn’t attached to a shape, this property generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnectionSite">
      <MemberSignature Language="C#" Value="public int EndConnectionSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EndConnectionSite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectionSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnectionSite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EndConnectionSite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a98c6-166">Cette propriété renvoie un nombre entier qui spécifie le point d’attache auquel la fin d’un connecteur est connectée.</span><span class="sxs-lookup"><span data-stu-id="a98c6-166">Returns an integer that specifies the connection site that the end of a connector is connected to.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a98c6-167">Si la fin du connecteur spécifié n'est pas rattachée à une forme, cette propriété génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-167">If the end of the specified connector isn’t attached to a shape, this property generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisconnect">
      <MemberSignature Language="C#" Value="public void EndDisconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisconnect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1755)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a98c6-168">Détache la fin du connecteur spécifié de la forme à laquelle il est attaché.</span><span class="sxs-lookup"><span data-stu-id="a98c6-168">Detaches the end of the specified connector from the shape it’s attached to.</span></span></summary>
        <remarks><para><span data-ttu-id="a98c6-169">Cette méthode ne modifie pas la taille ou la position du connecteur ; la fin du connecteur reste positionnée sur un site de connexion mais n’est plus connectée.</span><span class="sxs-lookup"><span data-stu-id="a98c6-169">This method doesn’t alter the size or position of the connector; the end of the connector remains positioned at a connection site but is no longer connected.</span></span> <span data-ttu-id="a98c6-170">Utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" /> méthode pour détacher le début du connecteur d’une forme.</span><span class="sxs-lookup"><span data-stu-id="a98c6-170">Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" /> method to detach the beginning of the connector from a shape.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a98c6-171">Renvoie l’objet parent pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="a98c6-171">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoConnectorType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoConnectorType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As MsoConnectorType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoConnectorType Type { Microsoft::Office::Core::MsoConnectorType get(); void set(Microsoft::Office::Core::MsoConnectorType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoConnectorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a98c6-172">Renvoie ou définit le type de format de connecteur.</span><span class="sxs-lookup"><span data-stu-id="a98c6-172">Returns or sets the connector format type.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a98c6-173">
            <see cref="T:Microsoft.Office.Core.MsoConnectorType" /> peut être l’une des <b>constantes MsoConnectorType</b> suivantes :</span><span class="sxs-lookup"><span data-stu-id="a98c6-173">
            <see cref="T:Microsoft.Office.Core.MsoConnectorType" /> can be one of the following <b>MsoConnectorType</b> constants:</span></span></para>
          <para><span data-ttu-id="a98c6-174">
            <b>msoConnectorCurve</b>
          </span><span class="sxs-lookup"><span data-stu-id="a98c6-174">
            <b>msoConnectorCurve</b>
          </span></span></para>
          <para><span data-ttu-id="a98c6-175">
            <b>msoConnectorElbow</b>
          </span><span class="sxs-lookup"><span data-stu-id="a98c6-175">
            <b>msoConnectorElbow</b>
          </span></span></para>
          <para><span data-ttu-id="a98c6-176">
            <b>msoConnectorStraight</b>
          </span><span class="sxs-lookup"><span data-stu-id="a98c6-176">
            <b>msoConnectorStraight</b>
          </span></span></para>
          <para><span data-ttu-id="a98c6-177">
            <b>msoConnectorTypeMixed</b>
          </span><span class="sxs-lookup"><span data-stu-id="a98c6-177">
            <b>msoConnectorTypeMixed</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>