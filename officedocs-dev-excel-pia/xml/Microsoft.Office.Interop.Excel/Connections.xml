<Type Name="Connections" FullName="Microsoft.Office.Interop.Excel.Connections">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cada82cdcb7c4652025c73234c573c6af9a8dbf" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50005711" /></Metadata><TypeSignature Language="C#" Value="public interface Connections : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Connections implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Connections" />
  <TypeSignature Language="VB.NET" Value="Public Interface Connections&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Connections : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024486-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="900f3-101">Collection d'objets Connection pour le classeur spécifié.</span><span class="sxs-lookup"><span data-stu-id="900f3-101">A collection of Connection objects for the specified workbook.</span></span></summary>
    <remarks>To be added.</remarks>
    <example><para><span data-ttu-id="900f3-102">L'exemple suivant montre comment ajouter une connexion à un classeur à partir d'un fichier existant.</span><span class="sxs-lookup"><span data-stu-id="900f3-102">The following example shows how to add a connection to a workbook from an existing file.</span></span></para></example>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorkbookConnection _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Connections._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorkbookConnection ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::WorkbookConnection ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection Add (string Name, string Description, object ConnectionString, object CommandText, object lCmdtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.WorkbookConnection Add([in]string Name, [in]string Description, [in]object ConnectionString, [in]object CommandText, [in]object lCmdtype) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Connections.Add(System.String,System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Name As String, Description As String, ConnectionString As Object, CommandText As Object, Optional lCmdtype As Object) As WorkbookConnection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Description" Type="System.String" />
        <Parameter Name="ConnectionString" Type="System.Object" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="lCmdtype" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <param name="Description">To be added.</param>
        <param name="ConnectionString">To be added.</param>
        <param name="CommandText">To be added.</param>
        <param name="lCmdtype">To be added.</param>
        <summary><span data-ttu-id="900f3-103">Cet objet, ce membre ou cette énumération est déconseillé et n’est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="900f3-103">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection Add2 (string Name, string Description, object ConnectionString, object CommandText, object lCmdtype, object CreateModelConnection, object ImportRelationships);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.WorkbookConnection Add2([in]string Name, [in]string Description, [in]object ConnectionString, [in]object CommandText, [in]object lCmdtype, [in]object CreateModelConnection, [in]object ImportRelationships) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Connections.Add2(System.String,System.String,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Name As String, Description As String, ConnectionString As Object, CommandText As Object, Optional lCmdtype As Object, Optional CreateModelConnection As Object, Optional ImportRelationships As Object) As WorkbookConnection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Description" Type="System.String" />
        <Parameter Name="ConnectionString" Type="System.Object" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="lCmdtype" Type="System.Object" />
        <Parameter Name="CreateModelConnection" Type="System.Object" />
        <Parameter Name="ImportRelationships" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="900f3-104">Nom de la connexion.</span><span class="sxs-lookup"><span data-stu-id="900f3-104">Name of the connection.</span></span></param>
        <param name="Description"><span data-ttu-id="900f3-105">Brève description de la connexion.</span><span class="sxs-lookup"><span data-stu-id="900f3-105">Brief description about the connection.</span></span></param>
        <param name="ConnectionString"><span data-ttu-id="900f3-106">Chaîne de connexion.</span><span class="sxs-lookup"><span data-stu-id="900f3-106">The connection string.</span></span></param>
        <param name="CommandText"><span data-ttu-id="900f3-107">Le texte de commande nécessaire pour créer la connexion.</span><span class="sxs-lookup"><span data-stu-id="900f3-107">The command text to create the connection.</span></span></param>
        <param name="lCmdtype"><span data-ttu-id="900f3-108">Type de commande.</span><span class="sxs-lookup"><span data-stu-id="900f3-108">Command type.</span></span></param>
        <param name="CreateModelConnection"><span data-ttu-id="900f3-109">Spécifie s’il faut créer une connexion au PowerPivot modèle.</span><span class="sxs-lookup"><span data-stu-id="900f3-109">Specifies whether to create a connection to the PowerPivot model.</span></span></param>
        <param name="ImportRelationships"><span data-ttu-id="900f3-110">Spécifie s’il faut importer des relations existantes.</span><span class="sxs-lookup"><span data-stu-id="900f3-110">Specifies whether to import any existing relationships.</span></span></param>
        <summary><span data-ttu-id="900f3-111">Ajoute une nouvelle connexion au workbook.</span><span class="sxs-lookup"><span data-stu-id="900f3-111">Adds a new connection to the workbook.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFromFile">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection AddFromFile (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.WorkbookConnection AddFromFile([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Connections.AddFromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFromFile (Filename As String) As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::WorkbookConnection ^ AddFromFile(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="900f3-112">Nom du fichier.</span><span class="sxs-lookup"><span data-stu-id="900f3-112">Name of the file.</span></span></param>
        <summary><span data-ttu-id="900f3-113">Ajoute une connexion à partir du fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="900f3-113">Adds a connection from the specified file.</span></span></summary>
        <returns><see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFromFile2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection AddFromFile2 (string Filename, object CreateModelConnection, object ImportRelationships);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.WorkbookConnection AddFromFile2([in]string Filename, [in]object CreateModelConnection, [in]object ImportRelationships) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Connections.AddFromFile2(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFromFile2 (Filename As String, Optional CreateModelConnection As Object, Optional ImportRelationships As Object) As WorkbookConnection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="CreateModelConnection" Type="System.Object" />
        <Parameter Name="ImportRelationships" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="900f3-114">Nom du fichier.</span><span class="sxs-lookup"><span data-stu-id="900f3-114">Name of the file.</span></span></param>
        <param name="CreateModelConnection"><span data-ttu-id="900f3-115">Spécifie s’il faut créer la connexion au modèle.</span><span class="sxs-lookup"><span data-stu-id="900f3-115">Specifies whether to create the connection to the model.</span></span></param>
        <param name="ImportRelationships"><span data-ttu-id="900f3-116">Spécifie s’il faut importer la relation de connexion.</span><span class="sxs-lookup"><span data-stu-id="900f3-116">Specifies whether to import the connection relationship.</span></span></param>
        <summary><span data-ttu-id="900f3-117">Ajoute une connexion à partir du fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="900f3-117">Adds a connection from the specified file.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Connections.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="900f3-118">Lorsqu’elle est utilisée sans qualificateur d’objet, cette propriété renvoie un objet qui représente  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> Microsoft Office’application Excel.</span><span class="sxs-lookup"><span data-stu-id="900f3-118">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="900f3-119">Lorsqu’elle est utilisée avec un qualificateur d’objet, elle renvoie un objet <b>Application</b> qui représente l’auteur de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="900f3-119">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="900f3-120">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="900f3-120">Read-only.</span></span></summary>
        <value><span data-ttu-id="900f3-121"><b>Application</b> (voir ci-dessus)</span><span class="sxs-lookup"><span data-stu-id="900f3-121"><b>Application</b> (see above)</span></span></value>
        <remarks><para><span data-ttu-id="900f3-122">Vous pouvez utiliser cette propriété avec un objet OLE Automation pour renvoyer l'application de cet objet.</span><span class="sxs-lookup"><span data-stu-id="900f3-122">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Connections.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="900f3-123">Renvoie le nombre d'objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="900f3-123">Returns the number of objects in the collection.</span></span> <span data-ttu-id="900f3-124"><b>Entier</b> en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="900f3-124">Read-only <b>Integer</b>.</span></span></summary>
        <value><span data-ttu-id="900f3-125"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="900f3-125"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Connections.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="900f3-126">Renvoie une constante dans <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> l’éumération qui indique l’application dans laquelle cet objet a été créé.</span><span class="sxs-lookup"><span data-stu-id="900f3-126">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span></span> <span data-ttu-id="900f3-127">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="900f3-127">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="900f3-128">Si l'objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, qui équivaut au nombre hexadécimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="900f3-128">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="900f3-129">La propriété est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code créateur <see cref="P:Microsoft.Office.Interop.Excel.Connections.Creator" /> à quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="900f3-129">The <see cref="P:Microsoft.Office.Interop.Excel.Connections.Creator" /> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="900f3-130">Par exemple, Microsoft Excel possède le code de créateur XCEL.</span><span class="sxs-lookup"><span data-stu-id="900f3-130">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Connections.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.WorkbookConnection Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Connections.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::WorkbookConnection ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="900f3-131">Valeur d'index de l'élément.</span><span class="sxs-lookup"><span data-stu-id="900f3-131">Index value of the item.</span></span></param>
        <summary><span data-ttu-id="900f3-132">Cette méthode crée un élément de connexion.</span><span class="sxs-lookup"><span data-stu-id="900f3-132">This method creates a connection item.</span></span></summary>
        <returns><see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Connections.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="900f3-133">Renvoie l’objet parent pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="900f3-133">Returns the parent object for the specified object.</span></span> <span data-ttu-id="900f3-134">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="900f3-134">Read-only.</span></span></summary>
        <value><span data-ttu-id="900f3-135"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="900f3-135"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>