<Type Name="Worksheets" FullName="Microsoft.Office.Interop.Excel.Worksheets">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62181a586d545e1a026f86bd8ec84b25d6e092ad" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20581500" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Worksheets : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Worksheets implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Worksheets" />
  <TypeSignature Language="VB.NET" Value="Public Interface Worksheets&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Worksheets : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208B1-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2d862-101">Collection de tous les <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objets dans le classeur actif ou spécifié.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d862-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objects in the specified or active workbook.</span>
      </span>
      <span data-ttu-id="2d862-102">Chaque objet <b>Worksheet</b> représente une feuille de calcul.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d862-102">Each <b>Worksheet</b> object represents a worksheet.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="2d862-103">
        <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.Worksheets" /> propriété pour renvoyer la collection de <b>feuilles de calcul</b> .</para>
        <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> méthode pour créer une nouvelle feuille de calcul et l’ajouter à la collection.</para>
        <para>Utilisation <b>des feuilles de calcul</b>(<paramref name="index" />), où <paramref name="index" /> est le numéro d’index de feuille de calcul ou le nom, pour renvoyer un seul objet <b>Worksheet</b> .</para> Objet 
      <para>la <b>feuille de calcul</b> est également un membre de la <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection. La collection <b>Sheets</b> contient toutes les feuilles du classeur (feuilles de calcul et les feuilles de graphique).</para><para></para></span>
      <span class="sxs-lookup">
        <span data-stu-id="2d862-103">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Worksheets" /> property to return the <b>Worksheets</b> collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to create a new worksheet and add it to the collection.</para>
          <para>Use <b>Worksheets</b>(<paramref name="index" />), where <paramref name="index" /> is the worksheet index number or name, to return a single <b>Worksheet</b> object.</para>
          <para>The <b>Worksheet</b> object is also a member of the <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection. The <b>Sheets</b> collection contains all the sheets in the workbook (both chart sheets and worksheets).</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="2d862-104">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-104">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="2d862-105">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-105">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (object Before, object After, object Count, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add([in]object Before, [in]object After, [in]object Count, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="2d862-106">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-106">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-107">Objet qui spécifie la feuille devant laquelle la nouvelle feuille est ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-107">An object that specifies the sheet before which the new sheet is added.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="2d862-108">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-108">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-109">Objet qui spécifie la feuille derrière laquelle la nouvelle feuille est ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-109">An object that specifies the sheet after which the new sheet is added.</span>
          </span>
        </param>
        <param name="Count">
          <span data-ttu-id="2d862-110">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-111">Le nombre de feuilles à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-111">The number of sheets to be added.</span>
          </span>
          <span data-ttu-id="2d862-112">La valeur par défaut est 1 (un).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-112">The default value is one.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="2d862-113">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-113">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-114">Spécifie le type de feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-114">Specifies the sheet type.</span>
          </span>
          <span data-ttu-id="2d862-115">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constantes : <b>xlWorksheet</b>, <b>xlChart</b>, <b>xlExcel4MacroSheet</b>ou <b>xlExcel4IntlMacroSheet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-115">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constants: <b>xlWorksheet</b>, <b>xlChart</b>, <b>xlExcel4MacroSheet</b>, or <b>xlExcel4IntlMacroSheet</b>.</span>
          </span>
          <span data-ttu-id="2d862-116">Si vous insérez une feuille basée sur un modèle existant, spécifiez le chemin d’accès au modèle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-116">If you are inserting a sheet based on an existing template, specify the path to the template.</span>
          </span>
          <span data-ttu-id="2d862-117">La valeur par défaut est <b>xlWorksheet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-117">The default value is <b>xlWorksheet</b>.</span>
          </span>
        </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="2d862-118">
            <para>Si <paramref name="Before" /> et <paramref name="After" /> sont tous deux omis, la nouvelle feuille est insérée avant la feuille active.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-118">
              <para>If <paramref name="Before" /> and <paramref name="After" /> are both omitted, the new sheet is inserted before the active sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public object Add2 (object Before, object After, object Count, object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add2([in]object Before, [in]object After, [in]object Count, [in]object NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Add2(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional NewLayout As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="NewLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="2d862-119">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-119">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-120">Objet qui spécifie la feuille devant laquelle la nouvelle feuille est ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-120">An object that specifies the sheet before which the new sheet is added.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="2d862-121">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-121">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-122">Objet qui spécifie la feuille derrière laquelle la nouvelle feuille est ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-122">An object that specifies the sheet after which the new sheet is added.</span>
          </span>
        </param>
        <param name="Count">
          <span data-ttu-id="2d862-123">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-123">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-124">Le nombre de feuilles à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-124">The number of sheets to be added.</span>
          </span>
          <span data-ttu-id="2d862-125">La valeur par défaut est 1</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-125">The default value is one</span>
          </span>
        </param>
        <param name="NewLayout">
          <span data-ttu-id="2d862-126">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-126">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-127">Objet qui spécifie la mise en page à utiliser pour la nouvelle feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-127">An object that specifies the layout to be used for the new worksheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d862-128">Cette méthode est implémentée uniquement pour l’objet de collection de <b>graphiques</b> et génère une erreur d’exécution est utilisée sur les objets <b>feuilles</b> et <b>feuilles de calcul</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-128">This method is only implemented for the <b>Charts</b> collection object and will produce a run time error if used on  the <b>Sheets</b> and <b>Worksheets</b> objects.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="2d862-129">
            <para>Si <paramref name="Before" /> et <paramref name="After" /> sont tous deux omis, la nouvelle feuille est insérée avant la feuille active.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-129">
              <para>If <paramref name="Before" /> and <paramref name="After" /> are both omitted, the new sheet is inserted before the active sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d862-130">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-130">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="2d862-131">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-131">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="2d862-132">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-132">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-133">La feuille avant laquelle la feuille copiée sera placée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-133">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="2d862-134">Vous ne pouvez pas spécifier <paramref name="Before" /> si vous spécifiez <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-134">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="2d862-135">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-135">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-136">La feuille après laquelle la feuille copiée sera placée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-136">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="2d862-137">Vous ne pouvez pas spécifier <paramref name="After" /> si vous spécifiez <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-137">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d862-138">Copie la feuille à un autre emplacement dans le classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-138">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="2d862-139">
            <para>Si vous ne spécifiez pas ces <paramref name="Before" /> ou <paramref name="After" />, Microsoft Excel crée un nouveau classeur contenant la feuille copiée.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-139">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d862-140">Renvoie le nombre d'objets dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-140">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="2d862-141">Valeur <b>Integer</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-141">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d862-142">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-142">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="2d862-143">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-143">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="2d862-144">En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-144">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d862-145">Propriété <para>le <b>créateur</b> est conçue pour être utilisé dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Excel possède le code créateur XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-145">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2d862-146">Supprime l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-146">Deletes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="2d862-147">
            <para>Lorsque vous supprimez un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> ou <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, cette méthode affiche une boîte de dialogue qui invite l’utilisateur à confirmer la suppression. Cette boîte de dialogue s’affiche par défaut. La méthode <b>Delete</b> renvoie une valeur de <b>type Boolean</b> qui a la <b>valeur False</b> si l’utilisateur a cliqué sur Annuler dans la boîte de dialogue ou <b>la valeur True</b> si l’utilisateur a cliqué sur Supprimer.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-147">
              <para>When you delete a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, this method displays a dialog box that prompts the user to confirm the deletion. This dialog box is displayed by default. The <b>Delete</b> method returns a <b>Boolean</b> value that is <b>False</b> if the user clicked Cancel on the dialog box or <b>True</b> if the user clicked Delete.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAcrossSheets">
      <MemberSignature Language="C#" Value="public void FillAcrossSheets (Microsoft.Office.Interop.Excel.Range Range, Microsoft.Office.Interop.Excel.XlFillWith Type = Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FillAcrossSheets([in]class Microsoft.Office.Interop.Excel.Range Range, [in]valuetype Microsoft.Office.Interop.Excel.XlFillWith Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFillWith" />
      </Parameters>
      <Docs>
        <param name="Range">
          <span data-ttu-id="2d862-148">Requis <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-148">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
          <span data-ttu-id="2d862-149">La plage de remplissage de toutes les feuilles de calcul de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-149">The range to fill on all the worksheets in the collection.</span>
          </span>
          <span data-ttu-id="2d862-150">La plage doit être à partir d’une feuille de calcul au sein de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-150">The range must be from a worksheet within the collection.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="2d862-151">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-151">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />.</span>
          </span>
          <span data-ttu-id="2d862-152">Indique comment copier la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-152">Specifies how to copy the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d862-153">Cette méthode copie une plage dans la même zone de toutes les autres feuilles de calcul d'une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-153">Copies a range to the same area on all other worksheets in a collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d862-154">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> sauts de collection qui représente la page horizontale sur la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-154">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="2d862-155">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-155">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="2d862-156">
            <para>Est une limite de 1026 sauts de page horizontaux par feuille.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-156">
              <para>There is a limit of 1,026 horizontal page breaks per sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="2d862-157">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-157">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-158">Nom ou numéro d'index de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-158">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d862-159">Renvoie un seul objet d'une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-159">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="2d862-160">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-160">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-161">La feuille avant laquelle la feuille déplacée sera placée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-161">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="2d862-162">Vous ne pouvez pas spécifier <paramref name="Before" /> si vous spécifiez <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-162">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="2d862-163">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-163">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-164">La feuille après laquelle la feuille déplacée sera placée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-164">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="2d862-165">Vous ne pouvez pas spécifier <paramref name="After" /> si vous spécifiez <b>avant</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-165">You cannot specify <paramref name="After" /> if you specify <b>Before</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d862-166">Cette méthode déplace la feuille à un autre endroit du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-166">Moves the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="2d862-167">
            <para>Si vous ne spécifiez pas ces <paramref name="Before" /> ou <paramref name="After" />, Microsoft Excel crée un nouveau classeur contenant la feuille déplacée.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-167">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d862-p121">Renvoie l'objet parent de l'objet spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-p121">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="2d862-170">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-170">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-171">Le numéro de la page à laquelle commence l’impression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-171">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="2d862-172">Si cet argument est omis, l’impression commence au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-172">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="2d862-173">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-173">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-174">Le numéro de la dernière page à imprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-174">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="2d862-175">Si cet argument est omis, l’impression se termine par la dernière page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-175">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="2d862-176">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-176">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-177">Le nombre de copies à imprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-177">The number of copies to print.</span>
          </span>
          <span data-ttu-id="2d862-178">Si cet argument est omis, une seule copie est imprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-178">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="2d862-179">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-179">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-180">
            <b>True</b> pour que Microsoft Excel affiche un aperçu avant impression de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-180">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="2d862-181">
            <b>False</b> (ou omis) pour imprimer l’objet immédiatement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-181">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="2d862-182">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-182">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-183">Définit le nom de l'imprimante active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-183">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="2d862-184">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-184">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-185">
            <b>True</b> pour imprimer dans un fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-185">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="2d862-186">Si <paramref name="PrToFileName" /> n’est pas spécifié, Microsoft Excel invite l’utilisateur à entrer le nom du fichier de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-186">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="2d862-187">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-187">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-188">
            <b>True</b> pour assembler plusieurs copies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-188">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="2d862-189">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-189">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="2d862-190">Si <paramref name="PrintToFile" /> est définie sur <b>True</b>, cet argument spécifie le nom du fichier que vous souhaitez effectuer l’impression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-190">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d862-191">Imprime l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-191">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="2d862-192">
            <para>« Pages » dans les descriptions de <paramref name="From" /> et <paramref name="To" /> fait référence aux pages imprimées, pas aux pages globales de la feuille ou du classeur.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-192">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="2d862-193">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-193">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="2d862-194">Permet la modification de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-194">Enables changes to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d862-195">Cette méthode affiche un aperçu de l'objet tel qu'il apparaîtra une fois imprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-195">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="2d862-196">
            <b>Objet</b> facultatif (utilisé uniquement avec les feuilles).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-196">Optional <b>Object</b> (used only with sheets).</span>
          </span>
          <span data-ttu-id="2d862-197">
            <b>True</b> pour remplacer la sélection en cours avec l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-197">
              <b>True</b> to replace the current selection with the specified object.</span>
          </span>
          <span data-ttu-id="2d862-198">
            <b>False</b> pour étendre la sélection actuelle afin d'inclure tous précédemment objets sélectionnés et l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-198">
              <b>False</b> to extend the current selection to include any previously selected objects and the specified object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d862-199">Sélectionne l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-199">Selects the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="2d862-200">
            <para>Pour sélectionner une cellule ou une plage de cellules, utilisez la méthode <b>Select</b> . Pour activer une cellule de la cellule active, utilisez la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Activate" /> méthode.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-200">
              <para>To select a cell or a range of cells, use the <b>Select</b> method. To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Activate" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public object Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Visible { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d862-201">Détermine si l’objet est visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-201">Determines whether the object is visible.</span>
          </span>
          <span data-ttu-id="2d862-202">
            <b>Objet</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-202">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d862-203">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection qui représente la page verticale sauts sur la feuille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-203">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="2d862-204">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d862-204">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>