<Type Name="Gridlines" FullName="Microsoft.Office.Interop.Excel.Gridlines">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0eedebe1673c91747036dcee52774783edd7c982" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20578749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Gridlines" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Gridlines" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Gridlines" />
  <TypeSignature Language="VB.NET" Value="Public Interface Gridlines" />
  <TypeSignature Language="C++ CLI" Value="public interface class Gridlines" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208C3-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="37063-101">Représente un quadrillage principal ou secondaire sur un axe de graphique.</span>
      <span class="sxs-lookup">
        <span data-stu-id="37063-101">Represents major or minor gridlines on a chart axis.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="37063-p101">Le quadrillage prolonge les marques de graduation d'un axe de graphique afin de faciliter la lecture des valeurs associées aux indicateurs de données. Cet objet n'est pas une collection. Il n'existe aucun objet représentant un seul quadrillage. Le quadrillage est soit activé soit désactivé.</span>
        <span class="sxs-lookup">
          <span data-stu-id="37063-p101">Gridlines extend the tick marks on a chart axis to make it easier to see the values associated with the data markers. This object isn’t a collection. There’s no object that represents a single gridline; you either have all gridlines for an axis turned on or all of them turned off.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="37063-105">Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.Axis.MajorGridlines" /> propriété permet de renvoyer l’objet <b>GridLines</b> représentant le quadrillage principal de l’axe.</span>
        <span class="sxs-lookup">
          <span data-stu-id="37063-105">Use the <see cref="P:Microsoft.Office.Interop.Excel.Axis.MajorGridlines" /> property to return the <b>GridLines</b> object that represents the major gridlines for the axis.</span>
        </span>
        <span data-ttu-id="37063-106">Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.Axis.MinorGridlines" /> propriété permet de renvoyer l’objet <b>GridLines</b> qui représente le quadrillage secondaire.</span>
        <span class="sxs-lookup">
          <span data-stu-id="37063-106">Use the <see cref="P:Microsoft.Office.Interop.Excel.Axis.MinorGridlines" /> property to return the <b>GridLines</b> object that represents the minor gridlines.</span>
        </span>
        <span data-ttu-id="37063-107">Il est possible de revenir à la fois de quadrillage en même temps.</span>
        <span class="sxs-lookup">
          <span data-stu-id="37063-107">It’s possible to return both major and minor gridlines at the same time.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Gridlines.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37063-108">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37063-108">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Gridlines.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37063-109">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Border" /> objet qui représente la bordure de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37063-109">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Gridlines.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37063-110">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37063-110">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="37063-111">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
            <span class="sxs-lookup">
              <span data-stu-id="37063-111">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="37063-112">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères.</span>
            <span class="sxs-lookup">
              <span data-stu-id="37063-112">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="37063-113">Par exemple, Microsoft Excel possède le code créateur XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="37063-113">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Gridlines.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37063-114">Supprime l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37063-114">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFormat Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Gridlines.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As ChartFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFormat ^ Format { Microsoft::Office::Interop::Excel::ChartFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37063-115">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37063-115">Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object.</span>
          </span>
          <span data-ttu-id="37063-116">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37063-116">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Gridlines.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37063-117">Renvoie le nom de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37063-117">Returns the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="37063-118">Le tableau suivant indique les valeurs de l’exemple de la propriété <b>Name</b> et les propriétés associées en fonction d’un <a href="mk:@MSITStore:C:\Program%20Files\Microsoft%20Office\OFFICE11\1033\VBAXL10.CHM::/html/xlproName1.htm">OLAP</a></span>
            <span class="sxs-lookup">
              <span data-stu-id="37063-118">The following table shows example values of the <b>Name</b> property and related properties given an <a href="mk:@MSITStore:C:\Program%20Files\Microsoft%20Office\OFFICE11\1033\VBAXL10.CHM::/html/xlproName1.htm">OLAP</a></span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="37063-119">
                  <b>Légende</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-119">
                    <b>Caption</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="37063-120">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-120">Paris</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="37063-121">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-121">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="37063-122">
                  <b>Nom</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-122">
                    <b>Name</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="37063-123">[Europe].[France].[Paris] (en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-123">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="37063-124">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-124">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="37063-125">
                  <b>SourceName</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-125">
                    <b>SourceName</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="37063-126">[Europe].[France].[Paris] (en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-126">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="37063-127">(Valeur identique à celle de la propriété SQL ; en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-127">(Same as SQL property value, read-only)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="37063-128">
                  <b>Valeur</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-128">
                    <b>Value</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="37063-129">[Europe].[France].[Paris] (en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-129">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="37063-130">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-130">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="37063-131">Lorsque vous spécifiez un index dans la <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, vous pouvez utiliser la syntaxe présentée dans le tableau suivant.</span>
            <span class="sxs-lookup">
              <span data-stu-id="37063-131">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="37063-132">expression. PivotItems (« [Europe]. [ France]. [Paris] »)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-132">expression.PivotItems("[Europe].[France].[Paris]")</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="37063-133">expression. PivotItems("Paris")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="37063-133">expression.PivotItems("Paris")</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Gridlines.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37063-134">Renvoie l'objet parent de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37063-134">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Gridlines.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37063-135">Sélectionne l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37063-135">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>