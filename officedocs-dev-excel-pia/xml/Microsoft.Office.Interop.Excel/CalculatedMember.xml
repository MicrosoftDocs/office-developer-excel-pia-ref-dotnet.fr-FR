<Type Name="CalculatedMember" FullName="Microsoft.Office.Interop.Excel.CalculatedMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b21af6737ba0963f5684b7823b01d8e7626b56bb" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20576789" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface CalculatedMember" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CalculatedMember" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.CalculatedMember" />
  <TypeSignature Language="VB.NET" Value="Public Interface CalculatedMember" />
  <TypeSignature Language="C++ CLI" Value="public interface class CalculatedMember" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024455-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6c69e-101">Cet objet représente les champs calculés et les éléments calculés pour les tableaux croisés dynamiques dotés de source de données OLAP (Online Analytical Processing).</span>
      <span class="sxs-lookup">
        <span data-stu-id="6c69e-101">Represents the calculated fields and calculated items for PivotTables with Online Analytical Processing (OLAP) data sources.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="6c69e-102">
        <para>Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add(System.String,System.String,System.Object,System.Object)" /> méthode ou <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> collection pour renvoyer un objet <b>CalculatedMember</b> .</para>
        <para>Avec un objet <b>CalculatedMember</b> , vous pouvez vérifier la validité d’un champ calculé ou un élément dans un tableau croisé dynamique à l’aide de la <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid" /> propriété.</para>
        <para>
          <b>Remarque</b> la propriété <b>IsValid</b> renvoie <b>la valeur True</b> si le tableau croisé dynamique n’est pas actuellement connecté à la source de données. Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.PivotCache.MakeConnection" /> méthode avant de tester la propriété <b>IsValid</b> .</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="6c69e-102">
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add(System.String,System.String,System.Object,System.Object)" /> method or the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> collection to return a <b>CalculatedMember</b> object.</para>
          <para>With a <b>CalculatedMember</b> object you can check the validity of a calculated field or item in a PivotTable using the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid" /> property.</para>
          <para>
            <b>Note</b>  The <b>IsValid</b> property will return <b>True</b> if the PivotTable is not currently connected to the data source. Use the <see cref="M:Microsoft.Office.Interop.Excel.PivotCache.MakeConnection" /> method before testing the <b>IsValid</b> property.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-103">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-103">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-104">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-104">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-105">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-105">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="6c69e-106">
            <para>Si l’objet a été créé dans Excel, cette propriété renvoie la chaîne XCEL, ce qui équivaut à la c 5843454 nombre hexadécimal</para> Propriété 
          <para>le <b>créateur</b> est conçue pour être utilisée dans Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Excel a le code créateur XCEL.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-106">
              <para>If the object was created in Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Excel for the Macintosh, where each application has a four-character creator code. For example, Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMember.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-107">Supprime l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-107">Deletes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="6c69e-108">
            <para>Vous pouvez supprimer des champs de cube uniquement si vous avez créé le champs de cube vous-même à l’aide de la méthode <b>CalculatedMember.Add</b> avec la <paramref name="xlCalculatedSet" /> argument.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-108">
              <para>You can delete cube fields only if you have created the cube fields yourself by using the <b>CalculatedMember.Add</b> method with the <paramref name="xlCalculatedSet" /> argument.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFolder">
      <MemberSignature Language="C#" Value="public string DisplayFolder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayFolder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayFolder { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2927)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-109">Obtient le nom de dossier d’affichage pour un jeu nommé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-109">Gets the display folder name for a named set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6c69e-110">Le nom de dossier complet pour un jeu nommé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-110">The display folder name for a named set.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="6c69e-111">
            <para>En lecture seule.</para>
            <para>La valeur de cette propriété correspond à la valeur facultative qui peut être entrée dans la zone de texte dossier de la boîte de dialogue nouveau/modifier la valeur lorsqu’un jeu nommé est créé ou modifié. Pour créer un nouveau jeu de données dans un tableau croisé dynamique basé sur une source de données OLAP nommé, cliquez sur le tableau croisé dynamique, cliquez sur un champ, d’éléments, &amp; définit les options d’outils de tableau croisé dynamique d’onglet sur le ruban, cliquez sur Gérer les ensembles de, cliquez sur Nouveau dans la boîte de dialogue Gestionnaire de jeux, puis cliquez sur Se créer t à l’aide de MDX. La boîte de dialogue Nouveau jeu qui contient la zone de texte dossier s’affiche. De même, si vous sélectionnez un jeu nommé existant dans la boîte de dialogue Gestionnaire de jeux, puis cliquez sur Modifier, la boîte de dialogue Modifier la valeur s’affiche.</para>
            <para>Cette propriété avec la <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> et <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> propriétés des jeux nommés ne peuvent être lus (qui sont représenté par <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objets où le <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> est égal à propriété <paramref name="xlCalculatedSet" />). Impossible de lire ces propriétés pour des mesures des membres calculés (qui sont représenté par <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objets où le <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> est égal à propriété <paramref name="xlCalculatedMember" />). Si vous essayez de lire ces propriétés pour des membres calculés ou des mesures, une erreur d’exécution est générée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-111">
              <para>Read-only.</para>
              <para>The value of this property corresponds to the optional value that can be entered in the Display folder text box of the New/Modify Set dialog box when a named set is created or edited. To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX. This will display the New Set dialog box, which contains the Display folder text box. Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</para>
              <para>This property along with the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> and <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> properties can only be read for named sets (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedSet" />). These properties for cannot be read for calculated members or measures (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedMember" />). If you attempt to read these properties for calculated members or measures, a run-time error is raised.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public bool Dynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dynamic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dynamic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-112">Indique si le jeu nommé spécifié est recalculé à chaque mise à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-112">Gets whether the specified named set is recalculated with every update.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6c69e-113">
            <b>la valeur true</b> si le jeu nommé spécifié est recalculé à chaque mise à jour ; Sinon, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-113">
              <b>true</b> if the specified named set is recalculated with every update; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="6c69e-114">
            <para>En lecture seule.</para>
            <para>
              <b>la valeur true</b> si le jeu nommé est recalculé à chaque mise à jour, sinon <b>false</b>.</para>
            <para>La valeur de cette propriété correspond à la valeur de la recalculer défini avec chaque case à cocher de mise à jour dans la boîte de dialogue nouveau/modifier la valeur qui est disponible quand un jeu nommé est créé ou modifié. Pour créer un nouveau jeu de données dans un tableau croisé dynamique basé sur une source de données OLAP nommé, cliquez sur le tableau croisé dynamique, cliquez sur un champ, d’éléments, &amp; définit les options d’outils de tableau croisé dynamique d’onglet sur le ruban, cliquez sur Gérer les ensembles de, cliquez sur Nouveau dans la boîte de dialogue Gestionnaire de jeux, puis cliquez sur Se créer t à l’aide de MDX. La boîte de dialogue Nouveau jeu qui contient le recalculer défini avec chaque case à cocher de mise à jour s’affiche. De même, si vous sélectionnez un jeu nommé existant dans la boîte de dialogue Gestionnaire de jeux, puis cliquez sur Modifier, la boîte de dialogue Modifier la valeur s’affiche.</para>
            <para>Cette propriété avec la <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> et <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> propriétés des jeux nommés ne peuvent être lus (qui sont représenté par <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objets où le <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> est égal à propriété <paramref name="xlCalculatedSet" />). Impossible de lire ces propriétés pour des mesures des membres calculés (qui sont représenté par <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objets où le <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> est égal à propriété <paramref name="xlCalculatedMember" />). Si vous essayez de lire ces propriétés pour des membres calculés ou des mesures, une erreur d’exécution est générée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-114">
              <para>Read-only.</para>
              <para>
                <b>true</b> if the named set is recalculated with every update; otherwise <b>false</b>.</para>
              <para>The value of this property corresponds to the setting of the Recalculate set with every update check box in the New/Modify Set dialog box that is available when a named set is created or edited. To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX. This will display the New Set dialog box, which contains the Recalculate set with every update check box. Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</para>
              <para>This property along with the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> and <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> properties can only be read for named sets (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedSet" />). These properties for cannot be read for calculated members or measures (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedMember" />). If you attempt to read these properties for calculated members or measures, a run-time error is raised.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlattenHierarchies">
      <MemberSignature Language="C#" Value="public bool FlattenHierarchies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlattenHierarchies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.FlattenHierarchies" />
      <MemberSignature Language="VB.NET" Value="Public Property FlattenHierarchies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlattenHierarchies { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-115">Obtient ou définit si les éléments de tous les niveaux de la hiérarchie du jeu nommé spécifié sont affichées dans le même champ d’un rapport de tableau croisé dynamique basé sur un cube OLAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-115">Gets or sets whether items from all levels of the hierarchy of the specified named set are displayed in the same field of a PivotTable report based on an OLAP cube.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6c69e-116">
            <b>la valeur true</b> si les éléments de tous les niveaux de la hiérarchie du jeu nommé spécifié sont affichés dans le même champ d’un rapport de tableau croisé dynamique basé sur un cube OLAP ; Sinon, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-116">
              <b>true</b> if items from all levels of the hierarchy of the specified named set are displayed in the same field of a PivotTable report based on an OLAP cube; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="6c69e-117">
            <para>En lecture-écriture.</para>
            <para>
              <b>la valeur true</b> si les éléments de tous les niveaux de la hiérarchie du jeu nommé sont affichés dans le même champ ; sinon, <b>false</b>.</para>
            <para>La valeur de cette propriété correspond au paramètre de l’afficher les éléments à partir de différents niveaux dans des champs distincts case dans la boîte de dialogue nouveau/modifier la valeur lorsqu’un jeu nommé est créé ou modifié. Pour créer un nouveau jeu de données dans un tableau croisé dynamique basé sur une source de données OLAP nommé, cliquez sur le tableau croisé dynamique, cliquez sur un champ, d’éléments, &amp; définit les options d’outils de tableau croisé dynamique d’onglet sur le ruban, cliquez sur Gérer les ensembles de, cliquez sur Nouveau dans la boîte de dialogue Gestionnaire de jeux, puis cliquez sur Se créer t à l’aide de MDX. Cela affiche la boîte de dialogue Nouveau jeu qui contienne les éléments d’affichage à partir de différents niveaux dans la case à cocher des champs distincts. De même, si vous sélectionnez un jeu nommé existant dans la boîte de dialogue Gestionnaire de jeux, puis cliquez sur Modifier, la boîte de dialogue Modifier la valeur s’affiche.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-117">
              <para>Read/write.</para>
              <para>
                <b>true</b> if items from all levels of the hierarchy of the named set are displayed in the same field; otherwise <b>false</b>.</para>
              <para>The value of this property corresponds to the setting of the Display items from different levels in separate fields check box in the New/Modify Set dialog box when a named set is created or edited. To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX. This will display the New Set dialog box, which contains the Display items from different levels in separate fields check box. Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Formula" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-118">Renvoie la formule du membre dans les expressions multidimensionnelles syntaxe (MDX Multidimensional).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-118">Returns the member's formula in multidimensional expressions (MDX) syntax.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="6c69e-119">
            <para>Cette propriété n’est pas disponible pour les sources de données OLAP.</para>
            <para>Si la cellule contient une constante, cette propriété renvoie la constante. Si la cellule est vide, la propriété <b>Formula</b> renvoie une chaîne vide. Si la cellule contient une formule, la propriété <b>Formula</b> renvoie la formule sous forme de chaîne dans le même format qui s’affiche dans la formule de la barre (y compris le signe égal).</para>
            <para>Si vous affectez la valeur ou la formule d’une cellule à une date, Microsoft Excel vérifie si cette cellule est déjà mise en forme avec un des formats de nombre date ou heure. Si non, Microsoft Excel lui affecte le format pour le format de date courte par défaut.</para>
            <para>Si la plage est une plage d’une ou deux dimensions, vous pouvez définir la formule en tableau des dimensions sont identiques. De même, vous pouvez placer la formule dans un tableau.</para>
            <para>En définissant la formule pour une plage à cellules multiples remplit toutes les cellules de la plage de la formule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-119">
              <para>This property is not available for OLAP data sources.</para>
              <para>If the cell contains a constant, this property returns the constant. If the cell is empty, the <b>Formula</b> property returns an empty string. If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into an array.</para>
              <para>Setting the formula for a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HierarchizeDistinct">
      <MemberSignature Language="C#" Value="public bool HierarchizeDistinct { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HierarchizeDistinct" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" />
      <MemberSignature Language="VB.NET" Value="Public Property HierarchizeDistinct As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HierarchizeDistinct { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-120">Obtient ou définit si commander et supprimer les doublons lors de l’affichage de la hiérarchie du spécifié un jeu nommé dans un rapport de tableau croisé dynamique basé sur un cube OLAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-120">Gets or sets whether to order and remove duplicates when displaying the hierarchy of the specified named set in a PivotTable report based on an OLAP cube.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6c69e-121">
            <b>true</b> si les doublons doivent être triés et supprimés lors de l’affichage de la hiérarchie de l’objet nommé défini dans un rapport de tableau croisé dynamique basé sur un cube OLAP ; Sinon, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-121">
              <b>true</b> if duplicates should be ordered and removed when displaying the hierarchy of the specified named set in a PivotTable report based on an OLAP cube; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="6c69e-122">
            <para>En lecture-écriture.</para>
            <para>
              <b>la valeur true</b> si la hiérarchie du jeu nommé est affichée comme prévu avec les doublons supprimés ; sinon, <b>false</b>.</para>
            <para>La valeur de cette propriété correspond à la commande automatiquement et supprimer les doublons de la case à cocher Définir dans la boîte de dialogue nouveau/modifier la valeur lorsqu’un jeu nommé est créé ou modifié. Pour créer un nouveau jeu de données dans un tableau croisé dynamique basé sur une source de données OLAP nommé, cliquez sur le tableau croisé dynamique, cliquez sur un champ, d’éléments, &amp; définit les options d’outils de tableau croisé dynamique d’onglet sur le ruban, cliquez sur Gérer les ensembles de, cliquez sur Nouveau dans la boîte de dialogue Gestionnaire de jeux, puis cliquez sur Se créer t à l’aide de MDX. Cela affiche la boîte de dialogue Nouveau jeu qui contient la commande automatiquement et supprimer les doublons de la case à cocher set. De même, si vous sélectionnez un jeu nommé existant dans la boîte de dialogue Gestionnaire de jeux, puis cliquez sur Modifier, la boîte de dialogue Modifier la valeur s’affiche.</para>
            <para>Cette propriété avec la <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> et <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> propriétés des jeux nommés ne peuvent être lus (qui sont représenté par <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objets où le <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> est égal à propriété <paramref name="xlCalculatedSet" />). Impossible de lire ces propriétés pour des mesures des membres calculés (qui sont représenté par <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objets où le <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> est égal à propriété <paramref name="xlCalculatedMember" />). Si vous essayez de lire ces propriétés pour des membres calculés ou des mesures, une erreur d’exécution est générée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-122">
              <para>Read/write.</para>
              <para>
                <b>true</b> if the hierarchy of the named set is displayed as ordered with duplicates removed; otherwise <b>false</b>.</para>
              <para>The value of this property corresponds to the Automatically order and remove duplicates from the set check box in the New/Modify Set dialog box when a named set is created or edited. To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX. This will display the New Set dialog box, which contains the Automatically order and remove duplicates from the set check box. Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</para>
              <para>This property along with the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> and <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> properties can only be read for named sets (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedSet" />). These properties for cannot be read for calculated members or measures (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedMember" />). If you attempt to read these properties for calculated members or measures, a run-time error is raised.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2188)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-123">Renvoie un <b>type Boolean</b> qui indique si le membre calculé spécifié a été instancié avec succès le fournisseur OLAP lors de la session en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-123">Returns a <b>Boolean</b> that indicates whether the specified calculated member has been successfully instantiated with the OLAP provider during the current session.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="6c69e-124">
            <para>Cette propriété renvoie <b>la valeur True</b> , même si le tableau croisé dynamique n’est pas connecté à sa source de données. Assurez-vous que le tableau croisé dynamique est connecté avant de demander la valeur de la propriété <b>IsValid</b> .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-124">
              <para>This property returns <b>True</b> even if the PivotTable is not connected to its data source. Make sure that the PivotTable is connected before querying the value of the <b>IsValid</b> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureGroup">
      <MemberSignature Language="C#" Value="public string MeasureGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MeasureGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.MeasureGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MeasureGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MeasureGroup { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3092)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3092)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-125">Renvoie le groupe de mesures associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-125">Returns the associated measure group.</span>
          </span>
          <span data-ttu-id="6c69e-126">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-126">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-127">Renvoie le nom de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-127">Returns the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType NumberFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberFormat As XlCalcMemNumberFormatType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalcMemNumberFormatType NumberFormat { Microsoft::Office::Interop::Excel::XlCalcMemNumberFormatType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-128">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType" /> valeur qui représente le format de nombre du membre calculé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-128">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType" /> value that represents the number format of the calculated member.</span>
          </span>
          <span data-ttu-id="6c69e-129">La valeur par défaut est <b>xlNumberFormatTypeDefault</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-129">The default value is <b>xlNumberFormatTypeDefault</b>.</span>
          </span>
          <span data-ttu-id="6c69e-130">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-130">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-131">Renvoie l'objet parent de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-131">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentHierarchy">
      <MemberSignature Language="C#" Value="public string ParentHierarchy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParentHierarchy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.ParentHierarchy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentHierarchy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParentHierarchy { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3093)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3093)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-132">Renvoie le nom de la hiérarchie parent actuel à partir des hiérarchies disponibles dans le cube.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-132">Returns the name of the current parent hierarchy from the hierarchies that are available on the cube.</span>
          </span>
          <span data-ttu-id="6c69e-133">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-133">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentMember">
      <MemberSignature Language="C#" Value="public string ParentMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParentMember" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.ParentMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParentMember { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3094)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3094)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-134">Renvoie le nom du membre parent pour la hiérarchie parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-134">Returns the name of the parent member for the parent hierarchy.</span>
          </span>
          <span data-ttu-id="6c69e-135">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-135">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="6c69e-136">
            <para>Le membre parent par défaut est déterminée par tout ce qui a été défini par le Concepteur de cube ou Analysis Services comme le membre par défaut de la hiérarchie sélectionnée. Par exemple, si un membre « All » existe pour la hiérarchie sélectionnée, puis il s’agit généralement du membre parent par défaut sur le cube.</para>
            <para>Si la hiérarchie parent sélectionné n’est pas un « All » membre parent, un autre membre de parent par défaut est défini par le Concepteur de cube ou par programme par Analysis Services. (Si un membre par défaut n’est pas spécifié par le Concepteur de cube, le moteur Analysis Services définit automatiquement une.)</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-136">
              <para>The default parent member is determined by whatever has been defined by the cube designer or Analysis Services as the default member of the selected hierarchy. For example, if an “All” member exists for the selected hierarchy, then this is typically the default parent member on the cube.</para>
              <para>If the selected parent hierarchy does not have an “All” parent member, another default parent member is defined, either by the cube designer or programmatically by Analysis Services. (If a default member is not specified by the cube designer, the Analysis Services engine automatically defines one.)</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SolveOrder">
      <MemberSignature Language="C#" Value="public int SolveOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SolveOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.SolveOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SolveOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SolveOrder { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2187)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-137">Retourne un <b>entier</b> spécifiant la valeur du membre calculé résoudre ordre argument MDX (multidimensional expression).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-137">Returns an <b>Integer</b> specifying the value of the calculated member's solve order MDX (multidimensional expression) argument.</span>
          </span>
          <span data-ttu-id="6c69e-138">La valeur par défaut est égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-138">The default value is zero.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-139">Renvoie le nom de l’objet spécifié tel qu’il apparaît dans les données sources d’origine pour le rapport de tableau croisé dynamique spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-139">Returns the specified object’s name as it appears in the original source data for the specified PivotTable report.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="6c69e-140">
            <para>La propriété <b>SourceName</b> peut être différente du nom de l’élément actuel si l’utilisateur a renommé l’élément après la création du rapport de tableau croisé dynamique.</para>
            <para>Le tableau suivant indique les valeurs de l’exemple de la propriété <b>SourceName</b> et les propriétés associées, étant données un <a href="mk:@MSITStore:C:\Program%20Files\Microsoft%20Office\OFFICE11\1033\VBAXL10.CHM::/html/xlproSourceName1.htm">OLAP</a></para>
            <list type="table">
              <item>
                <term>
                  <b>Légende</b>
                </term>
                <description>Paris</description>
                <description>Paris</description>
              </item>
              <item>
                <term>
                  <b>nom</b>
                </term>
                <description>[Europe]. [ France]. [Paris] (lecture seule)</description>
                <description>Paris</description>
              </item>
              <item>
                <term>
                  <b>SourceName</b>
                </term>
                <description>[Europe]. [ France]. [Paris] (lecture seule)</description>
                <description>(identique à la valeur de propriété SQL en lecture seule)</description>
              </item>
              <item>
                <term>
                  <b>Valeur</b>
                </term>
                <description>[Europe]. [ France]. [Paris] (lecture seule)</description>
                <description>Paris</description>
              </item>
            </list>
            <para>Lors de la spécification d’index dans le <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, vous pouvez utiliser la syntaxe présentée dans le tableau suivant.</para> expression 
          <list type="table"><item><term>. PivotItems (« [Europe]. [ France]. [Paris] »)</term><description>expression. PivotItems("Paris")</description></item></list><para>lors de l’utilisation du <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> propriété pour référencer un membre spécifique d’une collection, vous pouvez utiliser les noms d’index de texte, comme indiqué dans le tableau suivant.</para><list type="table"><item><term>[Europe]. [ France]. [Paris]</term><description>Paris</description></item></list><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-140">
              <para>The <b>SourceName</b> property might be different from the current item name if the user renamed the item after creating the PivotTable report.</para>
              <para>The following table shows example values of the <b>SourceName</b> property and related properties, given an <a href="mk:@MSITStore:C:\Program%20Files\Microsoft%20Office\OFFICE11\1033\VBAXL10.CHM::/html/xlproSourceName1.htm">OLAP</a></para>
              <list type="table">
                <item>
                  <term>
                    <b>Caption</b>
                  </term>
                  <description>Paris</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>
                    <b>Name</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>
                    <b>SourceName</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>(same as SQL property value, read-only)</description>
                </item>
                <item>
                  <term>
                    <b>Value</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
              </list>
              <para>When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</para>
              <list type="table">
                <item>
                  <term>expression.PivotItems("[Europe].[France].[Paris]")</term>
                  <description>expression.PivotItems("Paris")</description>
                </item>
              </list>
              <para>When using the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index names, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>[Europe].[France].[Paris]</term>
                  <description>Paris</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculatedMemberType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculatedMemberType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlCalculatedMemberType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculatedMemberType Type { Microsoft::Office::Interop::Excel::XlCalculatedMemberType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculatedMemberType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c69e-141">Renvoie le type de membre calculé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-141">Returns the calculated member type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="6c69e-142">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlCalculatedMemberType" />peut être une de ces constantes <b>XlCalculatedMemberType</b> :</para>
            <para>
              <b>xlCalculatedMember</b>
            </para>
            <para>
              <b>xlCalculatedSet</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6c69e-142">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlCalculatedMemberType" /> can be one of these <b>XlCalculatedMemberType</b> constants:</para>
              <para>
                <b>xlCalculatedMember</b>
              </para>
              <para>
                <b>xlCalculatedSet</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>