<Type Name="_Application" FullName="Microsoft.Office.Interop.Excel._Application">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e1779c82659528041c775925bebd417907f8643" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20587786" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Application" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Application" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Application" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D5-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a4beb-101">Il s’agit d’une interface principale dans une coclasse COM qui est requis par le code managé pour l’interopérabilité avec l’objet COM correspondant.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4beb-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="a4beb-102">Utilisez cette interface principale uniquement lorsque la méthode que vous souhaitez utiliser partageant le même nom qu’un événement de l’objet COM ; Dans ce cas, effectuez un cast à cette interface pour appeler la méthode et dans l’interface d’événements le plus récent pour se connecter à l’événement.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4beb-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="a4beb-103">Sinon, utilisez l’interface .NET est dérivé de la coclasse COM pour accéder aux méthodes, propriétés et événements de l’objet COM.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4beb-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="a4beb-104">Pour plus d’informations sur l’objet COM, voir <see cref="T:Microsoft.Office.Interop.Excel.Application" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4beb-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Application" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-105">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-105">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-106">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-106">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_FindFile">
      <MemberSignature Language="C#" Value="public void _FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub _FindFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1068)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-107">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Run2">
      <MemberSignature Language="C#" Value="public object _Run2 (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Run2([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Run2 (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(31)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-108">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Wait">
      <MemberSignature Language="C#" Value="public void _Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Wait (Time As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-109">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-110">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-110">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateMicrosoftApp">
      <MemberSignature Language="C#" Value="public void ActivateMicrosoftApp (Microsoft.Office.Interop.Excel.XlMSApplication Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateMicrosoftApp([in]valuetype Microsoft.Office.Interop.Excel.XlMSApplication Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateMicrosoftApp (Index As XlMSApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateMicrosoftApp(Microsoft::Office::Interop::Excel::XlMSApplication Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1095)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="Microsoft.Office.Interop.Excel.XlMSApplication" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="a4beb-111">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-111">Required <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />.</span>
          </span>
          <span data-ttu-id="a4beb-112">Spécifie l’application Microsoft à activer. <b>XlMSApplication</b> peut être une de ces constantes <b>XlMSApplication</b> :<b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject </b><b>xlMicrosoftSchedulePlus</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-112">Specifies the Microsoft application to activate.<b>XlMSApplication</b> can be one of these <b>XlMSApplication</b> constants:<b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-p103">Active une application Microsoft. Si celle-ci est déjà en cours d'exécution, cette méthode l'active. Si tel n'est pas le cas, la méthode démarre une nouvelle instance de l'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p103">Activates a Microsoft application. If the application is already running, this method activates the running application. If the application isn't running, this method starts a new instance of the application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-116">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente la cellule active dans la fenêtre active (la fenêtre en haut) ou dans la fenêtre spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-116">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window.</span>
          </span>
          <span data-ttu-id="a4beb-117">Si la fenêtre n’est pas une feuille de calcul, cette propriété échoue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-117">If the window isn't displaying a worksheet, this property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-118">
            <para>Veillez à faire la distinction entre la cellule active et la sélection. La cellule active est une cellule unique à l’intérieur de la sélection actuelle. La sélection peut contenir plusieurs cellules, mais qu’un seul est la cellule active.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-118">
              <para>Be careful to distinguish between the active cell and the selection. The active cell is a single cell inside the current selection. The selection may contain more than one cell, but only one is the active cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-119">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object qui représente le graphique actif (un graphique incorporé ou une feuille de graphique).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span>
          </span>
          <span data-ttu-id="a4beb-120">Un graphique incorporé est considéré comme actif lorsqu’il est sélectionné ou activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-120">An embedded chart is considered active when it's either selected or activated.</span>
          </span>
          <span data-ttu-id="a4beb-121">Lorsqu’aucun graphique n’est actif, cette propriété renvoie la <b>valeur Nothing</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-121">When no chart is active, this property returns <b>Nothing</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveDialog As DialogSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DialogSheet ^ ActiveDialog { Microsoft::Office::Interop::Excel::DialogSheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DialogSheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-122">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-122">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEncryptionSession">
      <MemberSignature Language="C#" Value="public int ActiveEncryptionSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveEncryptionSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveEncryptionSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEncryptionSession As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ActiveEncryptionSession { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-123">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-123">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-124">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-124">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMenuBar">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveMenuBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMenuBar As MenuBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBar ^ ActiveMenuBar { Microsoft::Office::Interop::Excel::MenuBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-125">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-125">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePrinter">
      <MemberSignature Language="C#" Value="public string ActivePrinter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivePrinter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActivePrinter" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivePrinter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivePrinter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-126">Cette propriété renvoie ou définit le nom de l'imprimante active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-126">Returns or sets the name of the active printer.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveProtectedViewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveProtectedViewWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveProtectedViewWindow As ProtectedViewWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ ActiveProtectedViewWindow { Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-127">Obtient un <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object qui représente la fenêtre mode protégé active (la fenêtre en haut).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-127">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-128">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object qui représente la fenêtre mode protégé active (la fenêtre en haut).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-128">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-129">
            <para>Retourne une référence null (Nothing dans Visual Basic) s’il n’y a aucune fenêtre mode protégé ouverte. En lecture seule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-129">
              <para>Returns a null reference (Nothing in Visual Basic) if there are no Protected View windows open. Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-130">Renvoie un object qui représente la feuille active (feuille au premier plan) dans le classeur actif ou dans la fenêtre spécifiée ou du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-130">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook.</span>
          </span>
          <span data-ttu-id="a4beb-131">Renvoie la <b>valeur Nothing</b> si aucune feuille n’est active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-131">Returns <b>Nothing</b> if no sheet is active.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-132">
            <para>Si un classeur apparaît dans plusieurs fenêtres, la propriété <b>ActiveSheet</b> peut être différente dans différentes fenêtres.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-132">
              <para>If a workbook appears in more than one window, the <b>ActiveSheet</b> property may be different in different windows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window ActiveWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window ActiveWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ ActiveWindow { Microsoft::Office::Interop::Excel::Window ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-133">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object qui représente la fenêtre active (celle en haut).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-133">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object that represents the active window (the window on top).</span>
          </span>
          <span data-ttu-id="a4beb-134">Renvoie la <b>valeur Nothing</b> s’il n’y a aucune fenêtre ouverte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-134">Returns <b>Nothing</b> if there are no windows open.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ActiveWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-135">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objet qui représente le classeur dans la fenêtre active (la fenêtre en haut).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-135">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook in the active window (the window on top).</span>
          </span>
          <span data-ttu-id="a4beb-136">Renvoie <b>Nothing</b> s’il n’y a aucune fenêtre ouverte ou si la fenêtre d’information ou de la fenêtre du Presse-papiers est la fenêtre active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-136">Returns <b>Nothing</b> if there are no windows open or if either the Info window or the Clipboard window is the active window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChartAutoFormat">
      <MemberSignature Language="C#" Value="public void AddChartAutoFormat (object Chart, string Name, object Description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChartAutoFormat([in]object Chart, [in]string Name, [in]object Description) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddChartAutoFormat(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChartAutoFormat (Chart As Object, Name As String, Optional Description As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(216)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Chart" Type="System.Object" />
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Chart">
          <span data-ttu-id="a4beb-137">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-137">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-138">Un graphique qui contient le format qui est appliqué lors de la nouvelle mise en forme automatique graphique est appliqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-138">A chart that contains the format that will be applied when the new chart autoformat is applied.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="a4beb-139">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-139">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-140">Nom de la mise en forme automatique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-140">The name of the autoformat.</span>
          </span>
        </param>
        <param name="Description">
          <span data-ttu-id="a4beb-141">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-141">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-142">Description de la mise en forme automatique personnalisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-142">A description of the custom autoformat.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-143">Ajoute une mise en forme automatique de graphique personnalisée dans la liste des mises en forme automatiques de graphique disponibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-143">Adds a custom chart autoformat to the list of available chart autoformats.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomList">
      <MemberSignature Language="C#" Value="public void AddCustomList (object ListArray, object ByRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCustomList([in]object ListArray, [in]object ByRow) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddCustomList(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomList (ListArray As Object, Optional ByRow As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
        <Parameter Name="ByRow" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray">
          <span data-ttu-id="a4beb-144">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-144">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-145">Spécifie les données sources sous la forme d’un tableau de chaînes ou un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-145">Specifies the source data, as either an array of strings or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </param>
        <param name="ByRow">
          <span data-ttu-id="a4beb-146">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-146">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-147">Utilisé uniquement si <paramref name="ListArray" /> est un objet <b>Range</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-147">Only used if <paramref name="ListArray" /> is a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="a4beb-148">
            <b>True</b> pour créer une liste personnalisée à partir de chaque ligne de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-148">
              <b>True</b> to create a custom list from each row in the range.</span>
          </span>
          <span data-ttu-id="a4beb-149">
            <b>False</b> pour créer une liste personnalisée à partir de chaque colonne de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-149">
              <b>False</b> to create a custom list from each column in the range.</span>
          </span>
          <span data-ttu-id="a4beb-150">Si cet argument est omis, et il existe plus de lignes que les colonnes (ou un nombre égal de lignes et de colonnes) de la plage, Microsoft Excel crée une liste personnalisée à partir de chaque colonne de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-150">If this argument is omitted and there are more rows than columns (or an equal number of rows and columns) in the range, Microsoft Excel creates a custom list from each column in the range.</span>
          </span>
          <span data-ttu-id="a4beb-151">Si cet argument est omis, et il existe plus de colonnes que les lignes de la plage, Microsoft Excel crée une liste personnalisée à partir de chaque ligne de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-151">If this argument is omitted and there are more columns than rows in the range, Microsoft Excel creates a custom list from each row in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-152">Ajoute une liste personnalisée pour la recopie incrémentée et/ou le tri personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-152">Adds a custom list for custom autofill and/or custom sort.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-153">
            <para>Si la liste que vous tentez d’ajouter déjà existe, cette méthode est sans effet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-153">
              <para>If the list you're trying to add already exists, this method does nothing.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns AddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns AddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns As AddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns ^ AddIns { Microsoft::Office::Interop::Excel::AddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-154">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> collection qui représente tous les compléments répertoriés dans la boîte de dialogue Compléments (menu Outils).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-154">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> collection that represents all the add-ins listed in the Add-Ins dialog box (Tools menu).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns2 AddIns2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns2 AddIns2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns2 As AddIns2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns2 ^ AddIns2 { Microsoft::Office::Interop::Excel::AddIns2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-155">Obtient une collection de <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objets qui représentent tous les compléments qui sont actuellement disponibles ou ouvertes dans Excel, qu’elles soient installées ou non.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-155">Gets a collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel, regardless of whether they are installed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-156">Une collection de <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objets qui représentent tous les compléments qui sont actuellement disponibles ou ouvertes dans Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-156">A collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-157">
            <para>En lecture seule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-157">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertBeforeOverwriting">
      <MemberSignature Language="C#" Value="public bool AlertBeforeOverwriting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlertBeforeOverwriting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlertBeforeOverwriting" />
      <MemberSignature Language="VB.NET" Value="Public Property AlertBeforeOverwriting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlertBeforeOverwriting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-158">
            <b>La valeur true</b> si Microsoft Excel affiche un message avant de remplacer des cellules non vides pendant une opération glisser-déplacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-158">
              <b>True</b> if Microsoft Excel displays a message before overwriting nonblank cells during a drag-and-drop editing operation.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AltStartupPath">
      <MemberSignature Language="C#" Value="public string AltStartupPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AltStartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AltStartupPath" />
      <MemberSignature Language="VB.NET" Value="Public Property AltStartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AltStartupPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-159">Cette propriété renvoie ou définit le nom de l’autre dossier de démarrage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-159">Returns or sets the name of the alternate startup folder.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseClearType">
      <MemberSignature Language="C#" Value="public bool AlwaysUseClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseClearType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlwaysUseClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseClearType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-160">Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique s’il faut utiliser ClearType pour afficher les polices dans le menu, le ruban et le texte de la boîte de dialogue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-160">Returns or sets a <b>Boolean</b> that represents whether to use ClearType to display fonts in the menu, Ribbon, and dialog box text.</span>
          </span>
          <span data-ttu-id="a4beb-161">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-161">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-162">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-162">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-163">
            <para>Même si le paramètre Microsoft Windows pour ClearType est désactivé, la définition de cette propriété sur <b>True</b> remplace le paramètre Windows et utilise ClearType dans toutes les applications Microsoft Office.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-163">
              <para>Even if the Microsoft Windows setting for ClearType is turned off, setting this property to <b>True</b> overrides the Windows setting and uses ClearType in all Microsoft Office applications.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.AnswerWizard AnswerWizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.AnswerWizard AnswerWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AnswerWizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnswerWizard As AnswerWizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::AnswerWizard ^ AnswerWizard { Microsoft::Office::Core::AnswerWizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.AnswerWizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-164">Renvoie le <see cref="T:Microsoft.Office.Core.AnswerWizard" /> objet pour Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-164">Returns the <see cref="T:Microsoft.Office.Core.AnswerWizard" /> object for Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-165">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente le créateur de l’objet spécifié (vous pouvez utiliser cette propriété avec un objet OLE Automation pour renvoyer l’application de cet objet).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-165">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArbitraryXMLSupportAvailable">
      <MemberSignature Language="C#" Value="public bool ArbitraryXMLSupportAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArbitraryXMLSupportAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArbitraryXMLSupportAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-166">Renvoie une valeur de <b>type Boolean</b> qui indique si les fonctionnalités XML de Microsoft Excel sont disponibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-166">Returns a <b>Boolean</b> value that indicates whether the XML features in Microsoft Excel are available.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-167">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-167">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AskToUpdateLinks">
      <MemberSignature Language="C#" Value="public bool AskToUpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AskToUpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AskToUpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AskToUpdateLinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AskToUpdateLinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-168">
            <b>La valeur true</b> si Microsoft Excel invite l’utilisateur à mettre à jour les liens lors de l’ouverture des fichiers avec des liens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-168">
              <b>True</b> if Microsoft Excel asks the user to update links when opening files with links.</span>
          </span>
          <span data-ttu-id="a4beb-169">
            <b>False</b> si les liaisons sont automatiquement mises à jour aucune boîte de dialogue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-169">
              <b>False</b> if links are automatically updated with no dialog box.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistance">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IAssistance Assistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IAssistance Assistance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistance As IAssistance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IAssistance ^ Assistance { Microsoft::Office::Core::IAssistance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IAssistance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-170">Renvoie un <see cref="T:Microsoft.Office.Core.IAssistance" /> objet pour short_Excel2007 qui représente la visionneuse de l’aide de Microsoft Office.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-170">Returns an <see cref="T:Microsoft.Office.Core.IAssistance" /> object for short_Excel2007 that represents the Microsoft Office Help Viewer.</span>
          </span>
          <span data-ttu-id="a4beb-171">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-171">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-172">
            <b>IAssistance</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-172">
              <b>IAssistance</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-173">
            <para>L’objet <b>IAssistance</b> permet aux développeurs d’afficher l’aide personnalisée et l’aide installée avec Office dans la visionneuse de l’aide.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-173">
              <para>The <b>IAssistance</b> object allows developers to show custom help and help that is installed with Office in the Office Help Viewer.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistant">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Assistant Assistant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Assistant Assistant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistant As Assistant" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Assistant ^ Assistant { Microsoft::Office::Core::Assistant ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Assistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-174">Renvoie un <see cref="T:Microsoft.Office.Core.Assistant" /> objet pour Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-174">Returns an <see cref="T:Microsoft.Office.Core.Assistant" /> object for Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCorrect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoCorrect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoCorrect As AutoCorrect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoCorrect ^ AutoCorrect { Microsoft::Office::Interop::Excel::AutoCorrect ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoCorrect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-175">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> objet qui représente les attributs de correction automatique Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-175">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> object that represents the Microsoft Excel AutoCorrect attributes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormatAsYouTypeReplaceHyperlinks">
      <MemberSignature Language="C#" Value="public bool AutoFormatAsYouTypeReplaceHyperlinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFormatAsYouTypeReplaceHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFormatAsYouTypeReplaceHyperlinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-176">
            <b>La valeur True</b> (valeur par défaut) si Microsoft Excel met automatiquement en forme des liens hypertexte en cours de frappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-176">
              <b>True</b> (default) if Microsoft Excel automatically formats hyperlinks as you type.</span>
          </span>
          <span data-ttu-id="a4beb-177">
            <b>False</b> si Excel ne forme pas automatiquement des liens hypertexte en cours de frappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-177">
              <b>False</b> if Excel does not automatically format hyperlinks as you type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationSecurity">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationSecurity As MsoAutomationSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutomationSecurity AutomationSecurity { Microsoft::Office::Core::MsoAutomationSecurity get(); void set(Microsoft::Office::Core::MsoAutomationSecurity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutomationSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-178">Cette propriété renvoie ou définit une <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> constante représentant le mode de sécurité Microsoft Excel utilise lors de l’ouverture des fichiers par programme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-178">Returns or sets an <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> constant that represents the security mode Microsoft Excel uses when programmatically opening files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-179">
            <para>Cette propriété est automatiquement définie avec la <b>valeur msoAutomationSecurityLow</b> au démarrage de l’application. Par conséquent, pour éviter d’interrompre des solutions qui reposent sur le paramètre par défaut, veillez à cette propriété avec la <b>valeur msoAutomationSecurityLow</b> après l’ouverture d’un fichier par programme. En outre, cette propriété doit être définie immédiatement avant et après l’ouverture d’un fichier par programme pour éviter tout dysfonctionnement.</para>
            <para>
              <b>MsoAutomationSecurity</b> peut être une de ces constantes <b>MsoAutomationSecurity</b> :</para>
            <list type="bullet">
              <item>
                <description>
                  <b>AutomationSecurity</b>  utilise le paramètre de sécurité spécifié dans la boîte de dialogue <b>sécurité</b> .</description>
              </item>
              <item>
                <description>
                  <b>msoAutomationSecurityForceDisable</b>  désactive toutes les macros de tous les fichiers ouverts par programme sans afficher d’alerte de sécurité.</description>
              </item>
              <item>
                <description>
                  <b>msoAutomationSecurityLow</b>  Active toutes les macros. Il s’agit de la valeur par défaut lors de l’application est démarrée.</description>
              </item>
            </list>
            <para>Paramètre <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /><b>false</b> sans incidence sur les alertes et affectent pas les avertissements de sécurité. Le <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> paramètre ne s’applique pas aux avertissements de sécurité. Par exemple, si l’utilisateur définit <b>DisplayAlerts</b> égale à <b>False</b> et à <b>AutomationSecurity</b><b>AutomationSecurity</b>, tandis que l’utilisateur est sur le niveau de sécurité moyen, puis il avertissements de sécurité sont alors que la macro est en cours d’exécution. Cela permet à la macro d’intercepter des erreurs d’ouverture de fichiers, tout en maintenant l’avertissement affiché si l’ouverture du fichier réussit.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-179">
              <para>This property is automatically set to <b>msoAutomationSecurityLow</b> when the application is started. Therefore, to avoid breaking solutions that rely on the default setting, you should be careful to reset this property to <b>msoAutomationSecurityLow</b> after programmatically opening a file. Also, this property should be set immediately before and after opening a file programmatically to avoid malicious subversion.</para>
              <para>
                <b>MsoAutomationSecurity</b> can be one of these <b>MsoAutomationSecurity</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>msoAutomationSecurityByUI</b>  Uses the security setting specified in the <b>Security</b> dialog box.</description>
                </item>
                <item>
                  <description>
                    <b>msoAutomationSecurityForceDisable</b>  Disables all macros in all files opened programmatically without showing any security alerts.</description>
                </item>
                <item>
                  <description>
                    <b>msoAutomationSecurityLow</b>  Enables all macros. This is the default value when the application is started.</description>
                </item>
              </list>
              <para>Setting <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> to <b>False</b> does not affect alerts and will not affect security warnings. The <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> setting will not apply to security warnings. For example, if the user sets <b>DisplayAlerts</b> equal to <b>False</b> and <b>AutomationSecurity</b> to <b>msoAutomationSecurityByUI</b>, while the user is on medium security level, then there will be security warnings while the macro is running. This allows the macro to trap file open errors, while still showing the security warning if the file open succeeds.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPercentEntry">
      <MemberSignature Language="C#" Value="public bool AutoPercentEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPercentEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoPercentEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPercentEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPercentEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-180">
            <b>La valeur true</b> si les entrées dans les cellules mises au format pourcentage ne sont pas automatiquement multipliées par 100 dès qu’elles sont entrées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-180">
              <b>True</b> if entries in cells formatted as percentages aren’t automatically multiplied by 100 as soon as they are entered.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoRecover">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoRecover AutoRecover { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoRecover AutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoRecover As AutoRecover" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoRecover ^ AutoRecover { Microsoft::Office::Interop::Excel::AutoRecover ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoRecover</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-181">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> object, qui sauvegarde tous les formats de fichier dans un intervalle de temps.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-181">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> object, which backs up all file formats on a timed interval.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-182">
            <para>Intervalles de temps valides sont des nombres entiers compris entre 1 et 120.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-182">
              <para>Valid time intervals are whole numbers from 1 to 120.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-183">Renvoie le numéro de version de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-183">Returns the Microsoft Excel build number.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-184">
            <para>Il est généralement plus prudent de tester la <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> propriété, sauf si vous êtes sûr que vous devez connaître le numéro de version.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-184">
              <para>It’s usually safer to test the <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> property, unless you’re sure you need to know the build number.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-185">Calcule tous les classeurs ouverts</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-185">Calculates all open workbooks</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateBeforeSave">
      <MemberSignature Language="C#" Value="public bool CalculateBeforeSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculateBeforeSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculateBeforeSave" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculateBeforeSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculateBeforeSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-186">
            <b>La valeur true</b> si les classeurs sont calculés avant d’être enregistrés sur le disque (si la <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> propriété a la valeur <b>xlManual</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-186">
              <b>True</b> if workbooks are calculated before they're saved to disk (if the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property is set to <b>xlManual</b>).</span>
          </span>
          <span data-ttu-id="a4beb-187">Cette propriété est conservée même si vous modifiez le <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-187">This property is preserved even if you change the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFull">
      <MemberSignature Language="C#" Value="public void CalculateFull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFull() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFull" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-188">Provoque un calcul intégral des données dans tous les classeurs ouverts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-188">Forces a full calculation of the data in all open workbooks.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFullRebuild">
      <MemberSignature Language="C#" Value="public void CalculateFullRebuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFullRebuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFullRebuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFullRebuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFullRebuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-189">Pour tous les classeurs ouverts, cette méthode provoque un calcul intégral des données et recrée les dépendances.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-189">For all open workbooks, forces a full calculation of the data and rebuilds the dependencies.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-190">
            <para>Les dépendances sont les formules qui dépendent d’autres cellules. Par exemple, la formule « = A1 » dépend de la cellule A1. La méthode <b>CalculateFullRebuild</b> est similaire à entrer de nouveau toutes les formules.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-190">
              <para>Dependencies are the formulas that depend on other cells. For example, the formula "=A1" depends on cell A1. The <b>CalculateFullRebuild</b> method is similar to re-entering all formulas.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateUntilAsyncQueriesDone">
      <MemberSignature Language="C#" Value="public void CalculateUntilAsyncQueriesDone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateUntilAsyncQueriesDone() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateUntilAsyncQueriesDone ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateUntilAsyncQueriesDone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-191">Exécute toutes les requêtes en cours sur les sources de données OLEDB et OLAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-191">Runs all pending queries to OLEDB and OLAP data sources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculation Calculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculation Calculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Calculation" />
      <MemberSignature Language="VB.NET" Value="Public Property Calculation As XlCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculation Calculation { Microsoft::Office::Interop::Excel::XlCalculation get(); void set(Microsoft::Office::Interop::Excel::XlCalculation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-192">Cette propriété renvoie ou définit le mode de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-192">Returns or sets the calculation mode.</span>
          </span>
          <span data-ttu-id="a4beb-193">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-193">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-194">
            <para>Sources de données OLAP, cette propriété peut uniquement renvoyer ou avoir la valeur <b>xlNormal</b>.</para>
            <para>
              <b>XlCalculation</b> peut être une de ces constantes <b>XlCalculation</b> :</para>
            <para>
              <b>xlCalculationAutomatic</b>
            </para>
            <para>
              <b>xlCalculationManual</b>
            </para>
            <para>
              <b>xlCalculationSemiautomatic</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-194">
              <para>For OLAP data sources, this property can only return or be set to <b>xlNormal</b>.</para>
              <para>
                <b>XlCalculation</b> can be one of these <b>XlCalculation</b> constants:</para>
              <para>
                <b>xlCalculationAutomatic</b>
              </para>
              <para>
                <b>xlCalculationManual</b>
              </para>
              <para>
                <b>xlCalculationSemiautomatic</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationInterruptKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationInterruptKey" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculationInterruptKey As XlCalculationInterruptKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationInterruptKey CalculationInterruptKey { Microsoft::Office::Interop::Excel::XlCalculationInterruptKey get(); void set(Microsoft::Office::Interop::Excel::XlCalculationInterruptKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationInterruptKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-195">Définit ou renvoie une <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> constante qui spécifie la touche qui peut interrompre Microsoft Excel lors de l’exécution de calculs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-195">Sets or returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> constant that specifies the key that can interrupt Microsoft Excel when performing calculations.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-196">
            <para>
              <b>XlCalculationInterruptKey</b> peut être une de ces constantes <b>XlCalculationInterruptKey</b> :</para>
            <para>
              <b>xlAnyKey</b>
            </para>
            <para>
              <b>xlEscKey</b>
            </para>
            <para>
              <b>xlNoKey</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-196">
              <para>
                <b>XlCalculationInterruptKey</b> can be one of these <b>XlCalculationInterruptKey</b> constants:</para>
              <para>
                <b>xlAnyKey</b>
              </para>
              <para>
                <b>xlEscKey</b>
              </para>
              <para>
                <b>xlNoKey</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationState CalculationState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationState CalculationState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationState As XlCalculationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationState CalculationState { Microsoft::Office::Interop::Excel::XlCalculationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-197">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> constante indiquant l’état de calcul de l’application pour les calculs sont en cours d’exécution dans Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-197">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> constant that indicates the calculation state of the application for any calculations that are being performed in Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-198">
            <para>
              <b>XlCalculationState</b> peut être une de ces constantes <b>XlCalculationState</b> :</para>
            <para>
              <b>xlCalculating</b>
            </para>
            <para>
              <b>xlDone</b>
            </para>
            <para>
              <b>xlPending</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-198">
              <para>
                <b>XlCalculationState</b> can be one of these <b>XlCalculationState</b> constants:</para>
              <para>
                <b>xlCalculating</b>
              </para>
              <para>
                <b>xlDone</b>
              </para>
              <para>
                <b>xlPending</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-199">Renvoie un nombre dont les quatre derniers chiffres sont le numéro de version de moteur de calcul secondaire, et dont les autres chiffres (à gauche) de la version principale de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-199">Returns a number whose rightmost four digits are the minor calculation engine version number, and whose other digits (on the left) are the major version of Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-200">
            <para>Si le classeur a été enregistré dans une version antérieure de Microsoft Excel et si le classeur n’a pas été entièrement recalculé, cette propriété renvoie la valeur 0.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-200">
              <para>If the workbook was saved in an earlier version of Excel and if the workbook hasn't been fully recalculated, this property returns 0.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caller">
      <MemberSignature Language="C#" Value="public object Caller[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caller(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caller(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Caller(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caller[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="a4beb-201">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-201">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-202">Un index dans le tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-202">An index to the array.</span>
          </span>
          <span data-ttu-id="a4beb-203">Cet argument est utilisé uniquement lorsque la propriété renvoie un tableau (pour plus d’informations, consultez la section Remarques).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-203">This argument is used only when the property returns an array (for more information, see the Remarks section).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-204">Renvoie des informations relatives à la manière dont Visual Basic a été appelé (pour plus d’informations, consultez la section Remarques).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-204">Returns information about how Visual Basic was called (for more information, see the Remarks section).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-205">
            <para>Cette propriété renvoie des informations sur la manière dont Visual Basic a été appelé, comme indiqué dans le tableau suivant.</para>
            <list type="table">
              <item>
                <term>Une fonction personnalisée est entré dans une cellule unique</term>
                <description>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet spécifiant cette cellule</description>
              </item>
              <item>
                <term>fonction personnalisée qui fait partie d’une formule matricielle dans une plage de cellules</term>,
              <description>un objet <b>Range</b> spécifiant cette plage de cellules</description></item>
              <item>
                <term>Une macro Auto_Open, Auto_Close, Auto_Activate ou Auto_Deactivate macro</term>,
              <description>le nom du document sous forme de texte</description></item>
              <item>
                <term>une macro définie par un le <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> ou <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> propriété</term>
                <description>le nom de l’objet graphique identificateur ou cellule de référence (le cas échéant) auquel la macro s’applique</description>
              </item>
              <item>
                <term>boîte de dialogue de la Macro (menu Outils), ou tout autre demandeur non décrit ci-dessus</term>
                <description>la #REF ! valeur d’erreur</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-205">
              <para>This property returns information about how Visual Basic was called, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>A custom function entered in a single cell</term>
                  <description>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying that cell</description>
                </item>
                <item>
                  <term>A custom function that is part of an array formula in a range of cells</term>
                  <description>A <b>Range</b> object specifying that range of cells</description>
                </item>
                <item>
                  <term>An Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro</term>
                  <description>The name of the document as text</description>
                </item>
                <item>
                  <term>A macro set by either the <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> or <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> property</term>
                  <description>The name of the chart object identifier or cell reference (if applicable) to which the macro applies</description>
                </item>
                <item>
                  <term>The Macro dialog box (Tools menu), or any caller not described above</term>
                  <description>The #REF! error value</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPlaySounds">
      <MemberSignature Language="C#" Value="public bool CanPlaySounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPlaySounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanPlaySounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPlaySounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPlaySounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-p121">Cette propriété ne doit pas être utilisée. Les sons ont été supprimés de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p121">This property should not be used. Sound notes have been removed from Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRecordSounds">
      <MemberSignature Language="C#" Value="public bool CanRecordSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRecordSounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanRecordSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRecordSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRecordSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-p122">Cette propriété ne doit pas être utilisée. Les sons ont été supprimés de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p122">This property should not be used. Sound notes have been removed from Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-210">Le nom qui s’affiche dans la barre de titre de la fenêtre Microsoft Excel principale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-210">The name that appears in the title bar of the main Microsoft Excel window.</span>
          </span>
          <span data-ttu-id="a4beb-211">Si vous ne spécifiez pas un nom, ou si vous affectez le nom <b>Empty</b>, cette propriété renvoie « Microsoft Excel ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-211">If you don't set a name, or if you set the name to <b>Empty</b>, this property returns "Microsoft Excel".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDragAndDrop">
      <MemberSignature Language="C#" Value="public bool CellDragAndDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CellDragAndDrop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CellDragAndDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property CellDragAndDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CellDragAndDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-212">
            <b>La valeur true</b> si le glisser-déplacer entre les cellules est activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-212">
              <b>True</b> if dragging and dropping cells is enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-213">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les cellules de la feuille de calcul active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-213">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the active worksheet.</span>
          </span>
          <span data-ttu-id="a4beb-214">Si le document actif n’est pas une feuille de calcul, cette propriété échoue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-214">If the active document isn’t a worksheet, this property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-215">
            <para>Étant donné que la <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> propriété est la propriété par défaut pour l’objet <b>Range</b> , vous pouvez spécifier l’index de ligne et de colonne immédiatement après le mot clé <b>Cells</b> . Pour plus d’informations, voir la <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> propriété.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-215">
              <para>Because the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword. For more information, see the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CentimetersToPoints">
      <MemberSignature Language="C#" Value="public double CentimetersToPoints (double Centimeters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CentimetersToPoints([in]float64 Centimeters) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CentimetersToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CentimetersToPoints (Centimeters As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CentimetersToPoints(double Centimeters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1086)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Centimeters" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Centimeters">
          <span data-ttu-id="a4beb-216">
            <b>Double</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-216">Required <b>Double</b>.</span>
          </span>
          <span data-ttu-id="a4beb-217">Spécifie la valeur en centimètres à convertir en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-217">Specifies the centimeter value to be converted to points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-218">Convertit des centimètres en points (un point est égal à 0,035 centimètres).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-218">Converts a measurement from centimeters to points (one point equals 0.035 centimeters).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-219">
            <b>La valeur True</b> provoque tous les graphiques dans les documents nouvellement créés pour utiliser le suivi du comportement de référence de cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-219">
              <b>True</b> will cause all charts in newly created documents to use the cell reference tracking behavior.</span>
          </span>
          <span data-ttu-id="a4beb-220">
            <b>Boolean</b> (bool en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-220">
              <b>Boolean</b> (bool in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-221">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles graphiques du classeur actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-221">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAbort">
      <MemberSignature Language="C#" Value="public void CheckAbort (object KeepAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckAbort([in]object KeepAbort) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckAbort(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckAbort (Optional KeepAbort As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="KeepAbort" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="KeepAbort">
          <span data-ttu-id="a4beb-222">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-222">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-223">Autorise le recalcul pour une <b>plage</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-223">Allows recalculation to be performed for a <b>Range</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-224">Cette méthode arrête le recalcul dans une application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-224">Stops recalculation in a Microsoft Excel application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public bool CheckSpelling (string Word, object CustomDictionary, object IgnoreUppercase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSpelling([in]string Word, [in]object CustomDictionary, [in]object IgnoreUppercase) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckSpelling(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Word As String, Optional CustomDictionary As Object, Optional IgnoreUppercase As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Word" Type="System.String" />
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Word">
          <span data-ttu-id="a4beb-225">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-225">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-226">Le mot que vous voulez vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-226">The word you want to check.</span>
          </span>
        </param>
        <param name="CustomDictionary">
          <span data-ttu-id="a4beb-227">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-227">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-228">Chaîne qui indique le nom de fichier du dictionnaire personnalisé à examiner si le mot n’est pas trouvé dans le dictionnaire principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-228">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="a4beb-229">Si cet argument est omis, le dictionnaire actuellement spécifié est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-229">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="a4beb-230">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-230">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-231">
            <b>True</b> pour que Microsoft Excel ignore les mots en majuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-231">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="a4beb-232">
            <b>False</b> pour que Microsoft Excel vérifie les mots en majuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-232">
              <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="a4beb-233">Si cet argument est omis, la valeur actuelle est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-233">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-234">Cette méthode vérifie l'orthographe d'un seul mot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-234">Checks the spelling of a single word.</span>
          </span>
          <span data-ttu-id="a4beb-235">Renvoie <b>la valeur True</b> si le mot est trouvé dans un des dictionnaires ; Renvoie la <b>valeur False</b> si le mot n’est pas trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-235">Returns <b>True</b> if the word is found in one of the dictionaries; returns <b>False</b> if the word isn't found.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipboardFormats">
      <MemberSignature Language="C#" Value="public object ClipboardFormats[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ClipboardFormats(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClipboardFormats(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipboardFormats(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ClipboardFormats[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="a4beb-236">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-236">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-237">L’élément de tableau à renvoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-237">The array element to be returned.</span>
          </span>
          <span data-ttu-id="a4beb-238">Si cet argument est omis, la propriété renvoie le tableau entier de formats actuellement dans le Presse-papiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-238">If this argument is omitted, the property returns the entire array of formats that are currently on the Clipboard.</span>
          </span>
          <span data-ttu-id="a4beb-239">Pour plus d’informations, voir la section Remarques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-239">For more information, see the Remarks section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-240">Renvoie les formats actuellement dans le Presse-papiers en tant que tableau de valeurs numériques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-240">Returns the formats that are currently on the Clipboard as an array of numeric values.</span>
          </span>
          <span data-ttu-id="a4beb-241">Pour déterminer si un format particulier se trouve dans le Presse-papiers, comparez chaque élément du tableau avec la constante appropriée répertoriée dans la section Remarques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-241">To determine whether a particular format is on the Clipboard, compare each element in the array with the appropriate constant listed in the Remarks section.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-242">
            <para>Cette propriété renvoie un tableau de valeurs numériques. Pour déterminer si un format particulier se trouve dans le Presse-papiers, comparez chaque élément du tableau avec l’une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> constantes :</para>
            <para>
              <b>xlClipboardFormatBIFF</b>
            </para>
            <para>
              <b>xlClipboardFormatBIFF2</b>
            </para>
            <para>
              <b>xlClipboardFormatBIFF3</b>
            </para>
            <para>
              <b> xlClipboardFormatBIFF4</b>
            </para>
            <para>
              <b>xlClipboardFormatBinary</b>
            </para>
            <para>
              <b>xlClipboardFormatBitmap</b>
            </para>
            <para>
              <b>xlClipboardFormatCGM</b>
            </para>
            <para>
              <b>xlClipboardFormatCSV</b>
            </para>
            <para>
              <b>xlClipboardFormatDIF</b>
            </para>
            <para>
              <b>xlClipboardFormatDspText</b>
            </para>
            <para>
              <b>xlClipboardFormatEmbeddedObject</b>
            </para>
            <para>
              <b>xlClipboardFormatEmbedSource</b>
            </para>
            <para>
              <b>xlClipboardFormatLink</b>
            </para>
            <para>
              <b>xlClipboardFormatLinkSource</b>
            </para>
            <para>
              <b>xlClipboardFormatLinkSourceDesc</b>
            </para>
            <para>
              <b>xlClipboardFormatMovie</b>
            </para>
            <para>
              <b>xlClipboardFormatNative</b>
            </para>
            <para>
              <b>xlClipboardFormatObjectDesc</b>
            </para>
            <para>
              <b>xlClipboardFormatObjectLink</b>
            </para>
            <para>
              <b>xlClipboardFormatOwnerLink</b>
            </para>
            <para>
              <b>xlClipboardFormatPICT</b>
            </para>
            <para>
              <b>xlClipboardFormatPrintPICT</b>
            </para>
            <para>
              <b>xlClipboardFormatRTF</b>
            </para>
            <para>
              <b>xlClipboardFormatScreenPICT</b>
            </para>
            <para>
              <b>xlClipboardFormatStandardFont</b>
            </para>
            <para>
              <b>xlClipboardFormatStandardScale</b>
            </para>
            <para>
              <b>xlClipboardFormatSYLK</b>
            </para>
            <para>
              <b>xlClipboardFormatTable</b>
            </para>
            <para>
              <b>xlClipboardFormatText</b>
            </para>
            <para>
              <b>xlClipboardFormatToolFace</b>
            </para>
            <para>
              <b>xlClipboardFormatToolFacePICT</b>
            </para>
            <para>
              <b>xlClipboardFormatVALU</b>
            </para>
            <para>
              <b>xlClipboardFormatWK1</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-242">
              <para>This property returns an array of numeric values. To determine whether a particular format is on the Clipboard, compare each element of the array with one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> constants:</para>
              <para>
                <b>xlClipboardFormatBIFF</b>
              </para>
              <para>
                <b>xlClipboardFormatBIFF2</b>
              </para>
              <para>
                <b>xlClipboardFormatBIFF3</b>
              </para>
              <para>
                <b>xlClipboardFormatBIFF4</b>
              </para>
              <para>
                <b>xlClipboardFormatBinary</b>
              </para>
              <para>
                <b>xlClipboardFormatBitmap</b>
              </para>
              <para>
                <b>xlClipboardFormatCGM</b>
              </para>
              <para>
                <b>xlClipboardFormatCSV</b>
              </para>
              <para>
                <b>xlClipboardFormatDIF</b>
              </para>
              <para>
                <b>xlClipboardFormatDspText</b>
              </para>
              <para>
                <b>xlClipboardFormatEmbeddedObject</b>
              </para>
              <para>
                <b>xlClipboardFormatEmbedSource</b>
              </para>
              <para>
                <b>xlClipboardFormatLink</b>
              </para>
              <para>
                <b>xlClipboardFormatLinkSource</b>
              </para>
              <para>
                <b>xlClipboardFormatLinkSourceDesc</b>
              </para>
              <para>
                <b>xlClipboardFormatMovie</b>
              </para>
              <para>
                <b>xlClipboardFormatNative</b>
              </para>
              <para>
                <b>xlClipboardFormatObjectDesc</b>
              </para>
              <para>
                <b>xlClipboardFormatObjectLink</b>
              </para>
              <para>
                <b>xlClipboardFormatOwnerLink</b>
              </para>
              <para>
                <b>xlClipboardFormatPICT</b>
              </para>
              <para>
                <b>xlClipboardFormatPrintPICT</b>
              </para>
              <para>
                <b>xlClipboardFormatRTF</b>
              </para>
              <para>
                <b>xlClipboardFormatScreenPICT</b>
              </para>
              <para>
                <b>xlClipboardFormatStandardFont</b>
              </para>
              <para>
                <b>xlClipboardFormatStandardScale</b>
              </para>
              <para>
                <b>xlClipboardFormatSYLK</b>
              </para>
              <para>
                <b>xlClipboardFormatTable</b>
              </para>
              <para>
                <b>xlClipboardFormatText</b>
              </para>
              <para>
                <b>xlClipboardFormatToolFace</b>
              </para>
              <para>
                <b>xlClipboardFormatToolFacePICT</b>
              </para>
              <para>
                <b>xlClipboardFormatVALU</b>
              </para>
              <para>
                <b>xlClipboardFormatWK1</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterConnector">
      <MemberSignature Language="C#" Value="public string ClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterConnector As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterConnector { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-243">Obtient ou définit le nom du connecteur de Cluster HPC High Performance Computing () qui est utilisé pour exécuter des fonctions définies par l’utilisateur dans les compléments XLL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-243">Gets or sets the name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-244">Le nom du connecteur de Cluster HPC High Performance Computing () qui est utilisé pour exécuter des fonctions définies par l’utilisateur dans les compléments XLL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-244">The name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-245">
            <para>En lecture-écriture.</para>
            <para>La valeur de la <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> propriété correspond à la type liste déroulante zone Cluster sous formules dans la catégorie Avancé de la boîte de dialogue Options Excel.</para>
            <para>
              <b>Remarque</b>: pour spécifier le <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> propriété, vous devez installer un connecteur de Cluster HPC High Performance Computing (). Un connecteur de Cluster permet d’exécuter les fonctions XLL sécurisées pour le cluster à distance sur un cluster HPC pour améliorer les performances.</para>
            <para>Avant de pouvoir spécifier la <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> propriété, vous devez utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> propriété pour permettre à Microsoft Excel 2010 à l’exécution de fonctions définies par l’utilisateur dans les compléments XLL</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-245">
              <para>Read/write.</para>
              <para>The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property corresponds to the Cluster type drop-down box under Formulas in the Advanced category of the Excel Options dialog box.</para>
              <para>
                <b>Note</b>: To specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector. A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</para>
              <para>Before you can specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property, you must use the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property to allow Microsoft Excel 2010 to run user-defined functions in XLL add-ins.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorButtons">
      <MemberSignature Language="C#" Value="public bool ColorButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColorButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ColorButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColorButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-246">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-246">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-247">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les colonnes de la feuille de calcul active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-247">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the active worksheet.</span>
          </span>
          <span data-ttu-id="a4beb-248">Si le document actif n’est pas une feuille de calcul, la propriété <b>Columns</b> échoue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-248">If the active document isn't a worksheet, the <b>Columns</b> property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMAddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.COMAddIns COMAddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.COMAddIns COMAddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.COMAddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property COMAddIns As COMAddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::COMAddIns ^ COMAddIns { Microsoft::Office::Core::COMAddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.COMAddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-249">Renvoie le <see cref="T:Microsoft.Office.Core.COMAddIns" /> collection dans Microsoft Excel, qui représente les compléments COM actuellement installés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-249">Returns the <see cref="T:Microsoft.Office.Core.COMAddIns" /> collection for Microsoft Excel, which represents the currently installed COM add-ins.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-250">Renvoie un <see cref="T:Microsoft.Office.Core.CommandBars" /> object qui représente les barres de commandes Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-250">Returns a <see cref="T:Microsoft.Office.Core.CommandBars" /> object that represents the Excel command bars.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-251">
            <para>Cette propriété renvoie l’ensemble des barres de commandes intégrées et personnalisées disponibles pour l’application.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-251">
              <para>This property returns the set of built-in and custom command bars available to the application.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandUnderlines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandUnderlines" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandUnderlines As XlCommandUnderlines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommandUnderlines CommandUnderlines { Microsoft::Office::Interop::Excel::XlCommandUnderlines get(); void set(Microsoft::Office::Interop::Excel::XlCommandUnderlines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommandUnderlines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-252">Cette propriété renvoie ou définit l’état des soulignements de commande dans Microsoft Excel pour Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-252">Returns or sets the state of the command underlines in Microsoft Excel for the Macintosh.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-253">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" />peut être une de ces constantes <b>XlCommandUnderlines</b> :</para>
            <para>
              <b>xlCommandUnderlinesOn</b>
            </para>
            <para>
              <b>xlCommandUnderlinesOff</b>
            </para>
            <para>
              <b>xlCommandUnderlinesAutomatic</b>
            </para>
            <para>dans Microsoft Excel pour Windows, toujours la lecture de cette propriété renvoie <b> xlCommandUnderlinesOn</b>, et la définition de cette propriété sur une valeur autre que <b>xlCommandUnderlinesOn</b> est une erreur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-253">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" /> can be one of these <b>XlCommandUnderlines</b> constants:</para>
              <para>
                <b>xlCommandUnderlinesOn</b>
              </para>
              <para>
                <b>xlCommandUnderlinesOff</b>
              </para>
              <para>
                <b>xlCommandUnderlinesAutomatic</b>
              </para>
              <para>In Microsoft Excel for Windows, reading this property always returns <b>xlCommandUnderlinesOn</b>, and setting this property to anything other than <b>xlCommandUnderlinesOn</b> is an error.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstrainNumeric">
      <MemberSignature Language="C#" Value="public bool ConstrainNumeric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstrainNumeric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ConstrainNumeric" />
      <MemberSignature Language="VB.NET" Value="Public Property ConstrainNumeric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstrainNumeric { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-254">
            <b>True</b> si la reconnaissance de l’écriture manuscrite est limitée aux nombres et à la ponctuation uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-254">
              <b>True</b> if handwriting recognition is limited to numbers and punctuation only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-255">
            <para>Cette propriété est disponible uniquement si vous utilisez Microsoft Windows pour Pen Computing. Si vous essayez de définir cette propriété sous tout autre système d’exploitation, une erreur se produit.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-255">
              <para>This property is available only if you're using Microsoft Windows for Pen Computing. If you try to set this property under any other operating system, an error occurs.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlCharacters">
      <MemberSignature Language="C#" Value="public bool ControlCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ControlCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-256">
            <b>La valeur true</b> si Microsoft Excel affiche des caractères de contrôle pour les langues de droite à gauche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-256">
              <b>True</b> if Microsoft Excel displays control characters for right-to-left languages.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-257">
            <para>Cette propriété peut être définie uniquement lorsque la droite à gauche prise en charge a été installée et sélectionnée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-257">
              <para>This property can be set only when right to left language support has been installed and selected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFormula">
      <MemberSignature Language="C#" Value="public object ConvertFormula (object Formula, Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, object ToReferenceStyle, object ToAbsolute, object RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFormula([in]object Formula, [in]valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, [in]object ToReferenceStyle, [in]object ToAbsolute, [in]object RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFormula (Formula As Object, FromReferenceStyle As XlReferenceStyle, Optional ToReferenceStyle As Object, Optional ToAbsolute As Object, Optional RelativeTo As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="FromReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="ToReferenceStyle" Type="System.Object" />
        <Parameter Name="ToAbsolute" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Formula">
          <span data-ttu-id="a4beb-258">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-258">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-259">
            <b>Chaîne</b> qui contient la formule que vous souhaitez convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-259">A <b>String</b> that contains the formula you want to convert.</span>
          </span>
          <span data-ttu-id="a4beb-260">Il doit s’agir d’une formule valide et elle doit commencer par un signe égal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-260">This must be a valid formula, and it must begin with an equal sign.</span>
          </span>
        </param>
        <param name="FromReferenceStyle">
          <span data-ttu-id="a4beb-261">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-261">Required <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
          <span data-ttu-id="a4beb-262">Le style de référence de la formule. <b>XlReferenceStyle</b> peut être une de ces constantes <b>XlReferenceStyle</b> :<b>xlA1</b><b>xlR1C1</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-262">The reference style of the formula.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlA1</b><b>xlR1C1</b></span>
          </span>
        </param>
        <param name="ToReferenceStyle">
          <span data-ttu-id="a4beb-263">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-263">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
          <span data-ttu-id="a4beb-264">Le style de référence à renvoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-264">The reference style you want returned.</span>
          </span>
          <span data-ttu-id="a4beb-265">Si cet argument est omis, le style de référence n’est pas modifié ; la formule reste dans le style spécifié par <paramref name="FromReferenceStyle" />. XlReferenceStyle peut être une de ces constantes XlReferenceStyle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-265">If this argument is omitted, the reference style isn't changed; the formula stays in the style specified by <paramref name="FromReferenceStyle" />.XlReferenceStyle can be one of these XlReferenceStyle constants.</span>
          </span>
          <span data-ttu-id="a4beb-266">
            <b>xlA1</b>
            <b>xlR1C1</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-266">
              <b>xlA1 </b>
              <b>xlR1C1</b>
            </span>
          </span>
        </param>
        <param name="ToAbsolute">
          <span data-ttu-id="a4beb-267">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-267">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
          <span data-ttu-id="a4beb-268">Spécifie le type de référence convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-268">Specifies the converted reference type.</span>
          </span>
          <span data-ttu-id="a4beb-269">Si cet argument est omis, le type de référence n’est pas modifié. <b>XlReferenceStyle</b> peut être une de ces constantes <b>XlReferenceStyle</b> :<b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-269">If this argument is omitted, the reference type isn't changed.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span>
          </span>
        </param>
        <param name="RelativeTo">
          <span data-ttu-id="a4beb-270">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-270">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-271">Facultatif <b>de type Variant</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-271">Optional <b>Variant</b>.</span>
          </span>
          <span data-ttu-id="a4beb-272">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui contient une cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-272">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that contains one cell.</span>
          </span>
          <span data-ttu-id="a4beb-273">Références relatives dépendent de cette cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-273">Relative references relate to this cell.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-274">Convertit les références de cellule dans une formule entre les styles de référence A1 et R1C1, entre les références absolues et relatives, ou les deux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-274">Converts cell references in a formula between the A1 and R1C1 reference styles, between relative and absolute references, or both.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyObjectsWithCells">
      <MemberSignature Language="C#" Value="public bool CopyObjectsWithCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CopyObjectsWithCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CopyObjectsWithCells" />
      <MemberSignature Language="VB.NET" Value="Public Property CopyObjectsWithCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CopyObjectsWithCells { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-275">
            <b>True</b> si les objets sont coupés, copiés, extraits et triés avec les cellules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-275">
              <b>True</b> if objects are cut, copied, extracted, and sorted with cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-276">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-276">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="a4beb-277">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-277">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-278">
            <para>La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Excel possède le code créateur XCEL.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-278">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMousePointer Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMousePointer Cursor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As XlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMousePointer Cursor { Microsoft::Office::Interop::Excel::XlMousePointer get(); void set(Microsoft::Office::Interop::Excel::XlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-279">Cette propriété renvoie ou définit l’apparence du pointeur de la souris dans Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-279">Returns or sets the appearance of the mouse pointer in Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-280">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" />peut être une de ces constantes <b>XlMousePointer</b> :</para>
            <para>
              <b>xlDefault</b> pointeur par défaut.</para>
            <para>pointeur en i de 
            <b>xlIBeam</b> .</para>
            <para>
              <b>xlNorthwestArrow</b> le pointeur en flèche Nord-Ouest.</para>
            <para>
              <b>xlWait</b> sablier.</para> Propriété 
          <para>le <b>curseur</b> n’est pas réinitialisée automatiquement lorsque la macro cesse de s’exécuter. Vous devriez le réinitialiser le pointeur <b>xlDefault</b> avant l’arrêt de votre macro.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-280">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" /> can be one of these <b>XlMousePointer</b> constants:</para>
              <para>
                <b>xlDefault</b> The default pointer.</para>
              <para>
                <b>xlIBeam</b> The I-beam pointer.</para>
              <para>
                <b>xlNorthwestArrow</b> The northwest arrow pointer.</para>
              <para>
                <b>xlWait</b> The hourglass pointer.</para>
              <para>The <b>Cursor</b> property isn't reset automatically when the macro stops running. You should reset the pointer to <b>xlDefault</b> before your macro stops running.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorMovement">
      <MemberSignature Language="C#" Value="public int CursorMovement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CursorMovement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CursorMovement" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorMovement As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CursorMovement { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-281">Cette propriété renvoie ou définit une valeur qui indique si un curseur visuel ou logique est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-281">Returns or sets a value that indicates whether a visual cursor or a logical cursor is used.</span>
          </span>
          <span data-ttu-id="a4beb-282">Peut être une des constantes suivantes : <b>xlVisualCursor</b> ou <b>xlLogicalCursor</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-282">Can be one of the following constants: <b>xlVisualCursor</b> or <b>xlLogicalCursor</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-283">
            <para>Ces constantes ne soient pas disponibles, en fonction de la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-283">
              <para>These constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomListCount">
      <MemberSignature Language="C#" Value="public int CustomListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CustomListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CustomListCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-284">Renvoie le nombre de listes personnalisées définies (y compris les listes prédéfinies).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-284">Returns the number of defined custom lists (including built-in lists).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CutCopyMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CutCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CutCopyMode As XlCutCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCutCopyMode CutCopyMode { Microsoft::Office::Interop::Excel::XlCutCopyMode get(); void set(Microsoft::Office::Interop::Excel::XlCutCopyMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCutCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-285">Cette propriété renvoie ou définit l’état du mode Couper ou copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-285">Returns or sets the status of Cut or Copy mode.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-286">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" />peut être une de ces constantes <b>XlCutCopyMode</b> .</para>
            <list type="table">
              <item>
                <term>
                  <b>False</b>
                </term>
                <description>pas en mode Couper ou copier</description>
              </item>
              <item>
                <term>
                  <b>xlCopy</b>
                </term>
                <description>copie dans le mode</description>
              </item>
              <item>
                <term>
                  <b>xlCut</b>
                </term>
                <description>mode de coupe</description>
              </item>
            </list>
            <list type="table">
              <item>
                <term>
                  <b>False</b>
                </term>
                <description>annule Couper ou en mode Copier et supprime le déplacement de la bordure.</description>
              </item>
              <item>
                <term>
                  <b>True</b>
                </term>
                <description>annule Couper ou en mode Copier et supprime le déplacement de la bordure.</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-286">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" /> can be one of these <b>XlCutCopyMode</b> constants.</para>
              <list type="table">
                <item>
                  <term>
                    <b>False</b>
                  </term>
                  <description>Not in Cut or Copy mode</description>
                </item>
                <item>
                  <term>
                    <b>xlCopy</b>
                  </term>
                  <description>In Copy mode</description>
                </item>
                <item>
                  <term>
                    <b>xlCut</b>
                  </term>
                  <description>In Cut mode</description>
                </item>
              </list>
              <list type="table">
                <item>
                  <term>
                    <b>False</b>
                  </term>
                  <description>Cancels Cut or Copy mode and removes the moving border.</description>
                </item>
                <item>
                  <term>
                    <b>True</b>
                  </term>
                  <description>Cancels Cut or Copy mode and removes the moving border.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataEntryMode">
      <MemberSignature Language="C#" Value="public int DataEntryMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataEntryMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DataEntryMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataEntryMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataEntryMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-287">Cette propriété renvoie ou définit le mode d’entrée de données, comme indiqué dans le tableau ci-dessous.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-287">Returns or sets Data Entry mode, as shown in the table below.</span>
          </span>
          <span data-ttu-id="a4beb-288">En mode de saisie de données, vous pouvez entrer des données uniquement dans les cellules non verrouillées dans la plage sélectionnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-288">When in Data Entry mode, you can enter data only in the unlocked cells in the currently selected range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-289">
            <list type="table">
              <item>
                <term>
                  <b>xlOn</b>
                </term>
                <description>Mode saisie de données est activé.</description>
              </item>
              <item>
                <term>
                  <b>xlOff</b>
                </term>
                <description>est en mode de saisie de données désactivés.</description>
              </item>
              <item>
                <term>
                  <b>xlStrict</b>
                </term>
                <description>mode saisie de données est activé et que la touche ÉCHAP ne désactiver.</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-289">
              <list type="table">
                <item>
                  <term>
                    <b>xlOn</b>
                  </term>
                  <description>Data Entry mode is turned on.</description>
                </item>
                <item>
                  <term>
                    <b>xlOff</b>
                  </term>
                  <description>Data Entry mode is turned off.</description>
                </item>
                <item>
                  <term>
                    <b>xlStrict</b>
                  </term>
                  <description>Data Entry mode is turned on and pressing ESC won't turn it off.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEAppReturnCode">
      <MemberSignature Language="C#" Value="public int DDEAppReturnCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DDEAppReturnCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DDEAppReturnCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DDEAppReturnCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DDEAppReturnCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-290">Renvoie le DDE propres aux applications renvoient un code qui était contenue dans la dernière DDE remercier message reçu par Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-290">Returns the application-specific DDE return code that was contained in the last DDE acknowledge message received by Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEExecute">
      <MemberSignature Language="C#" Value="public void DDEExecute (int Channel, string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEExecute([in]int32 Channel, [in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEExecute(System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEExecute(int Channel, System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(333)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="a4beb-291">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-291">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="a4beb-292">Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-292">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="String">
          <span data-ttu-id="a4beb-293">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-293">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-294">Message défini dans l'application réceptrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-294">The message defined in the receiving application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-295">Exécute une commande ou d’autres actions dans une autre application, par l’entremise du canal DDE spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-295">Runs a command or performs some other action or actions in another application by way of the specified DDE channel.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-296">
            <para>La méthode <b>DDEExecute</b> est conçue pour envoyer des commandes vers une autre application. Vous pouvez également l’utiliser pour envoyer des séquences de touches à une autre application, bien que le <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> méthode est la méthode recommandée pour envoyer des séquences de touches. Le <paramref name="String" /> argument peut spécifier n’importe quelle touche unique combinée avec ALT, CTRL ou MAJ ou n’importe quelle combinaison de ces touches. Chaque clé est représenté par un ou plusieurs caractères, tel que « a » pour le caractère un, ou « {ENTER} » pour la touche ENTRÉE.</para>
            <para>Pour spécifier des caractères qui ne sont pas affichés lorsque vous appuyez sur la touche correspondante (par exemple, entrée ou TAB), utilisez les codes listés dans le tableau suivant. Chaque code de la table représente une touche du clavier.</para>
            <list type="table">
              <item>
                <term>Retour arrière</term>
                <description>{BACKSPACE} ou {BS}</description>
              </item>
              <item>
                <term>arrêt</term>
                <description>{arrêt}</description>
              </item>
              <item>
                <term>Verr.MAJ</term>
                <description>{CAPSLOCK}</description>
              </item>
              <item>
                <term>clair</term>
                <description>{clair}</description>
              </item>
              <item>
                <term>Supprimer ou Suppr</term>
                <description>{DELETE} ou {DEL}</description>
              </item>
              <item>
                <term>Flèche vers le bas</term>
                <description>{vers le bas}</description>
              </item>
              <item>
                <term>Fin</term>
                <description>{fin}</description>
              </item>
              <item>
                <term>Entrée</term>
                <description>~ (tilde)</description>
              </item>
              <item>
                <term>Entrée (pavé numérique)</term>
                <description>{entrée}</description>
              </item>
              <item>
                <term>ÉCHAP</term>
                <description>{ESCAPE} ou {ESC}</description>
              </item>
              <item>
                <term>F1 à F15</term>
                <description>{F1} à {F15}</description>
              </item>
              <item>
                <term>Aide</term>
                <description>{aide}</description>
              </item>
              <item>
                <term>Accueil</term>
                <description>{accueil}</description>
              </item>
              <item>
                <term>INS</term>
                <description>{Insérer}</description>
              </item>
              <item>
                <term>Flèche gauche</term>
                <description>{LEFT}</description>
              </item>
              <item>
                <term>Le verrouillage du</term>
                <description>{NUMLOCK}</description>
              </item>
              <item>
                <term>Vers le bas de PAGE</term>
                <description>{PG}</description>
              </item>
              <item>
                <term>PAGE précédente</term>
                <description>{page précédente}</description>
              </item>
              <item>
                <term>Renvoyer</term>
                <description>{RETURN}</description>
              </item>
              <item>
                <term>Flèche vers la droite</term>
                <description>{RIGHT}</description>
              </item>
              <item>
                <term>Arrêt défil</term>
                <description>{Arrêt défil}</description>
              </item>
              <item>
                <term>Onglet</term>
                <description>{onglet}</description>
              </item>
              <item>
                <term>Flèche vers le haut</term>
                <description>{UP}</description>
              </item>
            </list>
            <para>Vous pouvez également spécifier des touches combinées avec MAJ, CTRL ou ALT. Pour spécifier une touche combinée à une ou plusieurs de ces touches, utilisez le tableau suivant.</para>
            <list type="table">
              <item>
                <term>MAJ</term>
                <description>+ (signe plus)</description>
              </item>
              <item>
                <term>CTRL</term>
                <description>^ (accent circonflexe)</description>
              </item>
              <item>
                <term>ALT</term>
                <description>% (signe pourcentage)</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-296">
              <para>The <b>DDEExecute</b> method is designed to send commands to another application. You can also use it to send keystrokes to another application, although the <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> method is the preferred way to send keystrokes. The <paramref name="String" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of those keys. Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</para>
              <para>To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</para>
              <list type="table">
                <item>
                  <term>BACKSPACE</term>
                  <description>{BACKSPACE} or {BS}</description>
                </item>
                <item>
                  <term>BREAK</term>
                  <description>{BREAK}</description>
                </item>
                <item>
                  <term>CAPS LOCK</term>
                  <description>{CAPSLOCK}</description>
                </item>
                <item>
                  <term>CLEAR</term>
                  <description>{CLEAR}</description>
                </item>
                <item>
                  <term>DELETE or DEL</term>
                  <description>{DELETE} or {DEL}</description>
                </item>
                <item>
                  <term>DOWN ARROW</term>
                  <description>{DOWN}</description>
                </item>
                <item>
                  <term>END</term>
                  <description>{END}</description>
                </item>
                <item>
                  <term>ENTER</term>
                  <description>~ (tilde)</description>
                </item>
                <item>
                  <term>ENTER (numeric keypad)</term>
                  <description>{ENTER}</description>
                </item>
                <item>
                  <term>ESC</term>
                  <description>{ESCAPE} or {ESC}</description>
                </item>
                <item>
                  <term>F1 through F15</term>
                  <description>{F1} through {F15}</description>
                </item>
                <item>
                  <term>HELP</term>
                  <description>{HELP}</description>
                </item>
                <item>
                  <term>HOME</term>
                  <description>{HOME}</description>
                </item>
                <item>
                  <term>INS</term>
                  <description>{INSERT}</description>
                </item>
                <item>
                  <term>LEFT ARROW</term>
                  <description>{LEFT}</description>
                </item>
                <item>
                  <term>NUM LOCK</term>
                  <description>{NUMLOCK}</description>
                </item>
                <item>
                  <term>PAGE DOWN</term>
                  <description>{PGDN}</description>
                </item>
                <item>
                  <term>PAGE UP</term>
                  <description>{PGUP}</description>
                </item>
                <item>
                  <term>RETURN</term>
                  <description>{RETURN}</description>
                </item>
                <item>
                  <term>RIGHT ARROW</term>
                  <description>{RIGHT}</description>
                </item>
                <item>
                  <term>SCROLL LOCK</term>
                  <description>{SCROLLLOCK}</description>
                </item>
                <item>
                  <term>TAB</term>
                  <description>{TAB}</description>
                </item>
                <item>
                  <term>UP ARROW</term>
                  <description>{UP}</description>
                </item>
              </list>
              <para>You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with one or more of the keys just mentioned, use the following table.</para>
              <list type="table">
                <item>
                  <term>SHIFT</term>
                  <description>+ (plus sign)</description>
                </item>
                <item>
                  <term>CTRL</term>
                  <description>^ (caret)</description>
                </item>
                <item>
                  <term>ALT</term>
                  <description>% (percent sign)</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEInitiate">
      <MemberSignature Language="C#" Value="public int DDEInitiate (string App, string Topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DDEInitiate([in]string App, [in]string Topic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDEInitiate (App As String, Topic As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DDEInitiate(System::String ^ App, System::String ^ Topic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="App" Type="System.String" />
        <Parameter Name="Topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="App">
          <span data-ttu-id="a4beb-297">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-297">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-298">Nom de l'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-298">The application name.</span>
          </span>
        </param>
        <param name="Topic">
          <span data-ttu-id="a4beb-299">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-299">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-300">Décrit quelque chose dans l'application vers laquelle vous ouvrez un canal. Il s'agit généralement d'un document de cette application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-300">Describes something in the application to which you're opening a channel — usually a document of that application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-301">Ouvre un canal DDE vers une application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-301">Opens a DDE channel to an application.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="a4beb-302">
            <para>Si l’opération réussit, la méthode <b>DDEInitiate</b> renvoie le numéro du canal ouvert. Toutes les fonctions DDE ultérieures utilisent ce numéro pour spécifier le canal.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-302">
              <para>If successful, the <b>DDEInitiate</b> method returns the number of the open channel. All subsequent DDE functions use this number to specify the channel.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEPoke">
      <MemberSignature Language="C#" Value="public void DDEPoke (int Channel, object Item, object Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEPoke([in]int32 Channel, [in]object Item, [in]object Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEPoke(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDEPoke (Channel As Integer, Item As Object, Data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEPoke(int Channel, System::Object ^ Item, System::Object ^ Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="a4beb-303">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-303">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="a4beb-304">Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-304">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="Item">
          <span data-ttu-id="a4beb-305">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-305">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-306">Élément vers lequel les données doivent être envoyées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-306">The item to which the data is to be sent.</span>
          </span>
        </param>
        <param name="Data">
          <span data-ttu-id="a4beb-307">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-307">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-308">Données à envoyer à l'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-308">The data to be sent to the application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-309">Cette méthode envoie des données à une application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-309">Sends data to an application.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-310">
            <para>Une erreur se produit si l’appel de méthode n’aboutit pas.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-310">
              <para>An error occurs if the method call doesn't succeed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDERequest">
      <MemberSignature Language="C#" Value="public object DDERequest (int Channel, string Item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DDERequest([in]int32 Channel, [in]string Item) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDERequest(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDERequest (Channel As Integer, Item As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DDERequest(int Channel, System::String ^ Item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="a4beb-311">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-311">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="a4beb-312">Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-312">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="Item">
          <span data-ttu-id="a4beb-313">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-313">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-314">Élément à requérir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-314">The item to be requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-p152">Cette méthode demande des informations à l'application spécifiée. Cette méthode renvoie toujours un tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p152">Requests information from the specified application. This method always returns an array.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDETerminate">
      <MemberSignature Language="C#" Value="public void DDETerminate (int Channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDETerminate([in]int32 Channel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDETerminate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDETerminate (Channel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDETerminate(int Channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="a4beb-317">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-317">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="a4beb-318">Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-318">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-319">Cette méthode ferme un canal vers une autre application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-319">Closes a channel to another application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalSeparator">
      <MemberSignature Language="C#" Value="public string DecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-320">Définit ou renvoie le caractère utilisé comme séparateur décimal sous forme de <b>chaîne</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-320">Sets or returns the character used for the decimal separator as a <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFilePath">
      <MemberSignature Language="C#" Value="public string DefaultFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-321">Cette propriété renvoie ou définit le chemin d’accès par défaut que Microsoft Excel utilise lors de l’ouverture des fichiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-321">Returns or sets the default path that Microsoft Excel uses when it opens files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSaveFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSaveFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSaveFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat DefaultSaveFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); void set(Microsoft::Office::Interop::Excel::XlFileFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-322">Cette propriété renvoie ou définit le format par défaut pour l’enregistrement des fichiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-322">Returns or sets the default format for saving files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSheetDirection">
      <MemberSignature Language="C#" Value="public int DefaultSheetDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSheetDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSheetDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSheetDirection As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSheetDirection { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-323">Cette propriété renvoie ou définit la direction par défaut dans lequel Microsoft Excel affiche les feuilles de calcul et des fenêtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-323">Returns or sets the default direction in which Microsoft Excel displays new windows and worksheets.</span>
          </span>
          <span data-ttu-id="a4beb-324">Peut être une des constantes suivantes : <b>xlRTL</b> (de droite à gauche) ou <b>xlLTR</b> (de gauche à droite).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-324">Can be one of the following constants: <b>xlRTL</b> (right to left) or <b>xlLTR</b> (left to right).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-325">
            <para>Certaines de ces constantes ne soient pas disponibles, en fonction de la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-325">
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultWebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultWebOptions As DefaultWebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DefaultWebOptions ^ DefaultWebOptions { Microsoft::Office::Interop::Excel::DefaultWebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DefaultWebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-326">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> objet qui contient les attributs de niveau application globaux utilisés par Microsoft Excel lorsque vous enregistrez un document sous forme de page Web ou ouvrez une page Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-326">Returns the <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> object that contains global application-level attributes used by Microsoft Excel whenever you save a document as a Web page or open a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferAsyncQueries">
      <MemberSignature Language="C#" Value="public bool DeferAsyncQueries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferAsyncQueries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DeferAsyncQueries" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferAsyncQueries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferAsyncQueries { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-327">Obtient ou définit si l’exécution des requêtes asynchrone aux sources de données OLAP lorsqu’une feuille de calcul est calculé par le code VBA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-327">Gets or sets whether asychronous queries to OLAP data sources are executed when a worksheet is calculated by VBA code.</span>
          </span>
          <span data-ttu-id="a4beb-328">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-328">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-329">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-329">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-330">
            <para>Définition de la propriété <b>DeferAsyncQueries</b> sur <b>True</b> empêche toute asynchrone l’exécution jusqu'à ce que la <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> méthode est appelée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-330">
              <para>Setting the <b>DeferAsyncQueries</b> property to <b>True</b> prevents any asynchronous queries form executing until the <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> method is called.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteChartAutoFormat">
      <MemberSignature Language="C#" Value="public void DeleteChartAutoFormat (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteChartAutoFormat([in]string Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteChartAutoFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteChartAutoFormat (Name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteChartAutoFormat(System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="a4beb-331">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-331">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-332">Nom de la mise en forme automatique personnalisée à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-332">The name of the custom autoformat to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-333">Supprime de la liste des formats automatiques de graphique disponibles une mise en forme automatique de graphique personnalisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-333">Removes a custom chart autoformat from the list of available chart autoformats.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCustomList">
      <MemberSignature Language="C#" Value="public void DeleteCustomList (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteCustomList([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteCustomList(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteCustomList (ListNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteCustomList(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum">
          <span data-ttu-id="a4beb-334">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-334">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="a4beb-335">Numéro de la liste personnalisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-335">The custom list number.</span>
          </span>
          <span data-ttu-id="a4beb-336">Ce numéro doit être supérieure ou égale à 5 (Microsoft Excel possède quatre listes personnalisées intégrées qui ne peuvent pas être supprimées).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-336">This number must be greater than or equal to 5 (Microsoft Excel has four built-in custom lists that cannot be deleted).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-337">Supprime une liste personnalisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-337">Deletes a custom list.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-338">
            <para>Cette méthode génère une erreur si le numéro de la liste est inférieure à 5 ou s’il n’existe aucune liste personnalisée correspondant.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-338">
              <para>This method generates an error if the list number is less than 5 or if there's no matching custom list.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dialogs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Dialogs Dialogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Dialogs Dialogs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dialogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dialogs As Dialogs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Dialogs ^ Dialogs { Microsoft::Office::Interop::Excel::Dialogs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Dialogs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-339">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> collection qui représente toutes les boîtes de dialogue prédéfinies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-339">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> collection that represents all built-in dialog boxes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-340">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-340">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAlerts">
      <MemberSignature Language="C#" Value="public bool DisplayAlerts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAlerts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAlerts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAlerts { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-341">
            <b>La valeur true</b> si Microsoft Excel affiche certaines alertes et certains messages pendant l’exécution d’une macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-341">
              <b>True</b> if Microsoft Excel displays certain alerts and messages while a macro is running.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-342">
            <para>La valeur par défaut est <b>True</b>. Définissez cette propriété sur <b>False</b> si vous ne souhaitez pas être dérangé par des invites et alertes pendant l’exécution d’un programme. chaque fois qu’un message nécessite une réponse, Microsoft Excel choisit la réponse par défaut.</para>
            <para>Si vous définissez cette propriété sur <b>False</b>, Microsoft Excel affecte à cette propriété <b>la valeur True</b> lorsque le code est terminé, sauf si vous exécutez croisée traiter code.</para>
            <para>Lors de l’utilisation du <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode pour les classeurs remplacer un fichier existant, l’alerte « Remplacer » a une valeur par défaut « Non », tandis que la réponse « Oui » est sélectionnée par Excel lorsque la propriété <b>DisplayAlerts</b> a la valeur <b>false</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-342">
              <para>The default value is <b>True</b>. Set this property to <b>False</b> if you don’t want to be disturbed by prompts and alert messages while a program is running; any time a message requires a response, Microsoft Excel chooses the default response.</para>
              <para>If you set this property to <b>False</b>, Microsoft Excel sets this property to <b>True</b> when the code is finished, unless you are running cross process code.</para>
              <para>When using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method for workbooks to overwrite an existing file, the 'Overwrite' alert has a default of 'No', while the 'Yes' response is selected by Excel when the <b>DisplayAlerts</b> property is set to <b>False</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayClipboardWindow">
      <MemberSignature Language="C#" Value="public bool DisplayClipboardWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayClipboardWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayClipboardWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayClipboardWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayClipboardWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-343">Renvoie <b>la valeur True</b> si le Presse-papiers Microsoft Office peut être affiché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-343">Returns <b>True</b> if the Microsoft Office Clipboard can be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCommentIndicator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayCommentIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayCommentIndicator As XlCommentDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommentDisplayMode DisplayCommentIndicator { Microsoft::Office::Interop::Excel::XlCommentDisplayMode get(); void set(Microsoft::Office::Interop::Excel::XlCommentDisplayMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommentDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-344">Cette propriété renvoie ou définit la manière dont les cellules affichent les commentaires et les indicateurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-344">Returns or sets the way cells display comments and indicators.</span>
          </span>
          <span data-ttu-id="a4beb-345">Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constantes : <b>xlNoIndicator</b>, <b>xlCommentIndicatorOnly</b>ou <b>xlCommentAndIndicator</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-345">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constants: <b>xlNoIndicator</b>, <b>xlCommentIndicatorOnly</b>, or <b>xlCommentAndIndicator</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentActionTaskPane">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentActionTaskPane { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentActionTaskPane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentActionTaskPane" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentActionTaskPane As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentActionTaskPane { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-346">Valeur <b>True</b> pour afficher le volet Office Actions de Document ; a la valeur <b>False</b> pour masquer le volet Office Actions de Document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-346">Set to <b>True</b> to display the Document Actions task pane; set to <b>False</b> to hide the Document Actions task pane.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-347">
            <para>Définir cette propriété sur <b>True</b> entraîne une erreur d’exécution si le classeur actif n’est pas un document dynamique.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-347">
              <para>Setting this property to <b>True</b> will result in a run-time error if the active workbook is not a smart document.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentInformationPanel">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentInformationPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentInformationPanel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentInformationPanel" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentInformationPanel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentInformationPanel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-p159">Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique si le panneau de propriétés de document est affiché. En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p159">Returns or sets a <b>Boolean</b> that represents whether the document properties panel is displayed. Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-350">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-350">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExcel4Menus">
      <MemberSignature Language="C#" Value="public bool DisplayExcel4Menus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayExcel4Menus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayExcel4Menus" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExcel4Menus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayExcel4Menus { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-351">
            <b>La valeur true</b> si Microsoft Excel affiche des barres de menus version 4.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-351">
              <b>True</b> if Microsoft Excel displays version 4.0 menu bars.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaAutoComplete">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-352">Obtient ou définit s’il faut afficher la liste des fonctions pertinentes et de noms définis lors de la création de formules de cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-352">Gets or sets whether to show a list of relevant functions and defined names when building cell formulas.</span>
          </span>
          <span data-ttu-id="a4beb-353">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-353">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-354">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-354">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaBar">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-355">
            <b>True</b> si la barre de formule est affichée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-355">
              <b>True</b> if the formula bar is displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFullScreen">
      <MemberSignature Language="C#" Value="public bool DisplayFullScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFullScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFullScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFullScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFullScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-356">
            <b>La valeur true</b> si Microsoft Excel est en mode plein écran.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-356">
              <b>True</b> if Microsoft Excel is in full-screen mode.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-357">
            <para>Mode plein écran agrandit la fenêtre d’application afin que la totalité de l’écran et masque la barre de titre d’application. Barres d’outils, la barre d’état et la barre de formule gérer les paramètres d’affichage distinct pour le mode plein écran et le mode normal.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-357">
              <para>Full-screen mode maximizes the application window so that it fills the entire screen and hides the application title bar. Toolbars, the status bar, and the formula bar maintain separate display settings for full-screen mode and normal mode.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFunctionToolTips">
      <MemberSignature Language="C#" Value="public bool DisplayFunctionToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFunctionToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFunctionToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFunctionToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFunctionToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-358">
            <b>La valeur true</b> si les info-bulles de fonction peuvent être affichées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-358">
              <b>True</b> if function ToolTips can be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInfoWindow">
      <MemberSignature Language="C#" Value="public bool DisplayInfoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInfoWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInfoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInfoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInfoWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-359">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-359">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInsertOptions">
      <MemberSignature Language="C#" Value="public bool DisplayInsertOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInsertOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInsertOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInsertOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInsertOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-360">
            <b>La valeur true</b> si le bouton Options d’insertion doit être affiché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-360">
              <b>True</b> if the Insert Options button should be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNoteIndicator">
      <MemberSignature Language="C#" Value="public bool DisplayNoteIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayNoteIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayNoteIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayNoteIndicator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayNoteIndicator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-361">
            <b>La valeur true</b> si les cellules contenant des commentaires affichent les info-bulles et contiennent des indicateurs d’annotations (petits points dans leur coin supérieur droit).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-361">
              <b>True</b> if cells containing notes display cell tips and contain note indicators (small dots in their upper-right corners).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPasteOptions">
      <MemberSignature Language="C#" Value="public bool DisplayPasteOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPasteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayPasteOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPasteOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPasteOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-362">
            <b>La valeur true</b> si le bouton Options de collage peut être affiché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-362">
              <b>True</b> if the Paste Options button can be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-363">
            <para>Il s’agit d’un paramètre Microsoft Office. Ce paramètre affecte toutes les autres applications Microsoft Office. Définition de la <b>DisplayPasteOptions</b> propriété la <b>valeur True</b> désactive le bouton Options de recopie incrémentée dans Microsoft Excel. Le bouton <b>Options de recopie incrémentée</b> est uniquement dans Excel, mais le bouton Options de collage est dans toutes les autres applications Microsoft Office.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-363">
              <para>This is a Microsoft Office-wide setting. This setting affects all other Microsoft Office applications. Setting the <b>DisplayPasteOptions</b> property to <b>True</b> turns off the Auto Fill Options button in Microsoft Excel. The <b>Auto Fill Options</b> button is only in Excel, but the Paste Options button is in all the other Microsoft Office applications.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRecentFiles">
      <MemberSignature Language="C#" Value="public bool DisplayRecentFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayRecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRecentFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRecentFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-364">
            <b>True</b> si la liste des derniers fichiers utilisés s’affiche dans le menu fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-364">
              <b>True</b> if the list of recently used files is displayed on the File menu.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayScrollBars">
      <MemberSignature Language="C#" Value="public bool DisplayScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayScrollBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayScrollBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayScrollBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-365">
            <b>True</b> si les barres de défilement sont visibles pour tous les classeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-365">
              <b>True</b> if scroll bars are visible for all workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStatusBar">
      <MemberSignature Language="C#" Value="public bool DisplayStatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayStatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayStatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStatusBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayStatusBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-366">
            <b>True</b> si la barre d’état est affichée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-366">
              <b>True</b> if the status bar is displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayXMLSourcePane">
      <MemberSignature Language="C#" Value="public void DisplayXMLSourcePane (object XmlMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayXMLSourcePane([in]object XmlMap) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DisplayXMLSourcePane(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayXMLSourcePane (Optional XmlMap As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlMap" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlMap">
          <span data-ttu-id="a4beb-367">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-367">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="a4beb-368">Le mappage XML à afficher dans le volet Office.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-368">The XML map to display in the task pane.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-369">Ouvre le volet Office XML Source et affiche le mappage XML spécifié par le <paramref name="XmlMap" /> argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-369">Opens the XML Source task pane and displays the XML map specified by the <paramref name="XmlMap" /> argument.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-370">
            <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-370">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public void DoubleClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoubleClick() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoubleClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoubleClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-371">Équivaut à double-cliquer sur la cellule active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-371">Equivalent to double-clicking the active cell.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy1">
      <MemberSignature Language="C#" Value="public object Dummy1 (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy1([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy1(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy1 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-372">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-372">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy10">
      <MemberSignature Language="C#" Value="public bool Dummy10 (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Dummy10([in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy10 (Optional arg As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-373">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-373">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy101">
      <MemberSignature Language="C#" Value="public object Dummy101 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Dummy101" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy101" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dummy101 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Dummy101 { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-374">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-374">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy11">
      <MemberSignature Language="C#" Value="public void Dummy11 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy11() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy11" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy11 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy11();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-375">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-375">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy12">
      <MemberSignature Language="C#" Value="public void Dummy12 (Microsoft.Office.Interop.Excel.PivotTable p1, Microsoft.Office.Interop.Excel.PivotTable p2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy12([in]class Microsoft.Office.Interop.Excel.PivotTable p1, [in]class Microsoft.Office.Interop.Excel.PivotTable p2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy12 (p1 As PivotTable, p2 As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy12(Microsoft::Office::Interop::Excel::PivotTable ^ p1, Microsoft::Office::Interop::Excel::PivotTable ^ p2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="p2" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-376">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-376">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy13">
      <MemberSignature Language="C#" Value="public object Dummy13 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy13([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy13 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-377">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-377">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy14">
      <MemberSignature Language="C#" Value="public void Dummy14 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy14() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy14" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy14 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy14();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-378">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-378">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy2">
      <MemberSignature Language="C#" Value="public object Dummy2 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy2([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy2 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-379">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-379">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy20">
      <MemberSignature Language="C#" Value="public object Dummy20 (int grfCompareFunctions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy20([in]int32 grfCompareFunctions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy20(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy20 (grfCompareFunctions As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy20(int grfCompareFunctions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCompareFunctions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="grfCompareFunctions">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-380">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-380">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4beb-381">
            <b>s</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-381">
              <b>s</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy22">
      <MemberSignature Language="C#" Value="public bool Dummy22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy22" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy22" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy22 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy22 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy23">
      <MemberSignature Language="C#" Value="public bool Dummy23 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy23" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy23 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy23 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy3">
      <MemberSignature Language="C#" Value="public object Dummy3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy3() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy3" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy3 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-382">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-382">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy4">
      <MemberSignature Language="C#" Value="public object Dummy4 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy4([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy4 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-383">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-383">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy5">
      <MemberSignature Language="C#" Value="public object Dummy5 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy5([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy5 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-384">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-384">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy6">
      <MemberSignature Language="C#" Value="public object Dummy6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy6() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy6" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy6 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-385">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-385">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy7">
      <MemberSignature Language="C#" Value="public object Dummy7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy7() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy7" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy7 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-386">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-386">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy8">
      <MemberSignature Language="C#" Value="public object Dummy8 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy8([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy8(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy8 (Optional Arg1 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-387">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-387">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy9">
      <MemberSignature Language="C#" Value="public object Dummy9 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy9() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy9" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy9 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy9();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-388">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-388">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditDirectlyInCell">
      <MemberSignature Language="C#" Value="public bool EditDirectlyInCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditDirectlyInCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EditDirectlyInCell" />
      <MemberSignature Language="VB.NET" Value="Public Property EditDirectlyInCell As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditDirectlyInCell { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-389">
            <b>La valeur true</b> si Microsoft Excel autorise la modification dans les cellules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-389">
              <b>True</b> if Microsoft Excel allows editing in cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAnimations">
      <MemberSignature Language="C#" Value="public bool EnableAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-390">Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-390">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoComplete">
      <MemberSignature Language="C#" Value="public bool EnableAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-391">
            <b>True</b> si la fonctionnalité de saisie semi-automatique est activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-391">
              <b>True</b> if the AutoComplete feature is enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCancelKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCancelKey" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCancelKey As XlEnableCancelKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableCancelKey EnableCancelKey { Microsoft::Office::Interop::Excel::XlEnableCancelKey get(); void set(Microsoft::Office::Interop::Excel::XlEnableCancelKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableCancelKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-392">Contrôle la façon dont Microsoft Excel gère les interruptions utilisateur CTRL + PAUSE (ou ÉCHAP ou commande + point) à la procédure en cours d’exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-392">Controls how Microsoft Excel handles CTRL+BREAK (or ESC or COMMAND+PERIOD) user interruptions to the running procedure.</span>
          </span>
          <span data-ttu-id="a4beb-393">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-393">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-394">
            <para>
              <b>XlEnableCancelKey</b> peut être une de ces constantes <b>XlEnableCancelKey</b> :</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlDisabled</b>  annuler l’interception des annulations est complètement désactivée.</description>
              </item>
              <item>
                <description>
                  <b>xlErrorHandler</b>  l’interruption est envoyée à la procédure en cours d’exécution en tant qu’erreur, interceptable par un gestionnaire d’erreurs configuré avec une instruction On Error GoTo. Le code d’erreur interceptable est 18.</description>
              </item>
              <item>
                <description>
                  <b>xlInterrupt</b>  la procédure en cours est interrompue et l’utilisateur peut déboguer et achever la procédure.</description>
              </item>
            </list>
            <para>Utilisez cette propriété soigneusement. Si vous utilisez <b>xlDisabled</b>, il est impossible d’interrompre une boucle ou un autre code qui n’est pas automatiquement abandonnée. De même, si vous utilisez <b>xlErrorHandler</b> mais votre gestionnaire d’erreurs retourne toujours à l’aide de l’instruction <b>Resume</b> , il est impossible d’interrompre du code.</para> Propriété 
          <para><b>EnableCancelKey</b> est toujours réinitialisée <b>xlInterrupt</b> chaque fois que Microsoft Excel renvoie l’état inactif et aucun code n’est en cours d’exécution. Pour intercepter ou désactiver l’annulation dans votre procédure, vous devez modifier explicitement la propriété <b>EnableCancelKey</b> chaque fois que la procédure est appelée.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-394">
              <para>
                <b>XlEnableCancelKey</b> can be one of these <b>XlEnableCancelKey</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlDisabled</b>  Cancel key trapping is completely disabled.</description>
                </item>
                <item>
                  <description>
                    <b>xlErrorHandler</b>  The interrupt is sent to the running procedure as an error, trappable by an error handler set up with an On Error GoTo statement. The trappable error code is 18.</description>
                </item>
                <item>
                  <description>
                    <b>xlInterrupt</b>  The current procedure is interrupted, and the user can debug or end the procedure.</description>
                </item>
              </list>
              <para>Use this property very carefully. If you use <b>xlDisabled</b>, there's no way to interrupt a runaway loop or other code that is not self-terminating. Likewise, if you use <b>xlErrorHandler</b> but your error handler always returns using the <b>Resume</b> statement, there's no way to stop runaway code.</para>
              <para>The <b>EnableCancelKey</b> property is always reset to <b>xlInterrupt</b> whenever Microsoft Excel returns to the idle state and there's no code running. To trap or disable cancellation in your procedure, you must explicitly change the <b>EnableCancelKey</b> property every time the procedure is called.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCheckFileExtensions">
      <MemberSignature Language="C#" Value="public bool EnableCheckFileExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCheckFileExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCheckFileExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCheckFileExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCheckFileExtensions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-395">True pour activer le savoir si Microsoft Excel n’est pas le programme par défaut pour afficher et modifier la boîte de dialogue des feuilles de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-395">True to enable the Tell me if Microsoft Excel isn't the default program for viewing and editing spreadsheets dialog box.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public bool EnableEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-396">
            <b>La valeur true</b> si les événements sont activés pour l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-396">
              <b>True</b> if events are enabled for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLargeOperationAlert">
      <MemberSignature Language="C#" Value="public bool EnableLargeOperationAlert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLargeOperationAlert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLargeOperationAlert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLargeOperationAlert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLargeOperationAlert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-397">Définit ou renvoie un <b>type Boolean</b> qui indique si pour afficher un message d’alerte lorsqu’un utilisateur tente d’effectuer une opération qui affecte un plus grand nombre de cellules que celle spécifiée dans l’interface utilisateur du Centre Office.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-397">Sets or returns a <b>Boolean</b> that represents whether to display an alert message when a user attempts to perform an operation that affects a larger number of cells than is specified in the Office center UI.</span>
          </span>
          <span data-ttu-id="a4beb-398">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-398">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-399">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-399">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-400">
            <para>La valeur par défaut de cette propriété a la <b>valeur True</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-400">
              <para>The default value of this property is <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLivePreview">
      <MemberSignature Language="C#" Value="public bool EnableLivePreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLivePreview" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLivePreview" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLivePreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLivePreview { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-401">Définit ou renvoie un <b>Boolean</b> qui indique s'il faut afficher ou masquer les aperçus qui s'affichent lorsque vous utilisez des galeries qui prise en charge les aperçus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-401">Sets or returns a <b>Boolean</b> that represents whether to show or hide gallery previews that appear when using galleries that support previewing.</span>
          </span>
          <span data-ttu-id="a4beb-402">Définir cette propriété sur <b>True</b> affiche un aperçu de votre classeur avant d’appliquer la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-402">Setting this property to <b>True</b> shows a preview of your workbook before applying the command.</span>
          </span>
          <span data-ttu-id="a4beb-403">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-403">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-404">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-404">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-405">
            <para>Cette propriété correspond à la case à cocher Activer l’aperçu instantané dans la boîte de dialogue Options Excel.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-405">
              <para>This property corresponds to the Enable Live Preview check box in the Excel Options dialog box.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMacroAnimations">
      <MemberSignature Language="C#" Value="public bool EnableMacroAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableMacroAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableMacroAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMacroAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableMacroAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-406">Contrôle si les animations de macro sont activées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-406">Controls whether macro animations are enabled.</span>
          </span>
          <span data-ttu-id="a4beb-407">
            <b>La valeur true</b> si les animations de graphiques ou les animations d’interface utilisateur sont activées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-407">
              <b>True</b> if user interface animations or chart animations are enabled.</span>
          </span>
          <span data-ttu-id="a4beb-408">Est définie sur <b>False</b> (sans animation) par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-408">Is set to <b>False</b> (no animation) by default.</span>
          </span>
          <span data-ttu-id="a4beb-409">Si elle est définie sur <b>True</b> lors de l’exécution d’une macro, elle permettra d’animation et puis est réinitialisées à <b>False</b> après que la macro s’exécute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-409">If it is set to <b>True</b> during the running of a macro, it will enable animation and then will reset to <b>False</b> after the macro runs.</span>
          </span>
          <span data-ttu-id="a4beb-410">En lecture/écriture <b>booléen</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-410">Read/write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSound">
      <MemberSignature Language="C#" Value="public bool EnableSound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableSound" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSound { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-411">
            <b>La valeur true</b> si le son est activé pour Microsoft Office.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-411">
              <b>True</b> if sound is enabled for Microsoft Office.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTipWizard">
      <MemberSignature Language="C#" Value="public bool EnableTipWizard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTipWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableTipWizard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableTipWizard { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-412">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-412">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCheckingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ErrorCheckingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCheckingOptions As ErrorCheckingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ ErrorCheckingOptions { Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorCheckingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-413">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> object, qui représente les options d’une application de vérification des erreurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-413">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> object, which represents the error checking options for an application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="a4beb-414">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-414">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-415">Nom de l'objet, conformément aux conventions de dénomination de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-415">The name of the object, using the naming convention of Microsoft Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-416">Cette méthode convertit un nom Microsoft Excel en un objet ou une valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-416">Converts a Microsoft Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="a4beb-417">
            <para>Les types suivants de noms dans Microsoft Excel peuvent être utilisés avec cette méthode :</para>
            <list type="bullet">
              <item>
                <description>Références de style A1. Vous pouvez utiliser toute référence à une cellule unique dans une notation de style A1. Toutes les références sont considérées comme absolues.</description>
              </item> Plages 
            <item><description>. Vous pouvez utiliser la plage, se coupent pas et les opérateurs union (deux-points, l’espace et virgule respectivement) avec des références.</description></item> Noms 
            <item><description>défini. Vous pouvez spécifier n’importe quel nom dans la langue de la macro.</description></item> Références 
            <item><description>externe. Vous pouvez utiliser le ! Pour faire référence à une cellule ou à un nom défini dans un autre classeur — par exemple, Evaluate (« [Classeur1. XLS] Sheet1 ! A1 »).</description></item></list>
            <para>
              <b>Remarque</b>: à l’aide des crochets droits (par exemple, « [a1 : C5] ») revient à appeler la méthode <b>Evaluate</b> avec un argument de chaîne. L’avantage des crochets est que le code est plus court. L’avantage de la méthode <b>Evaluate</b> est que l’argument est une chaîne, vous pouvez construire la chaîne dans votre code ou utiliser une variable.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-417">
              <para>The following types of names in Microsoft Excel can be used with this method:</para>
              <list type="bullet">
                <item>
                  <description>A1-style references. You can use any reference to a single cell in A1-style notation. All references are considered to be absolute references.</description>
                </item>
                <item>
                  <description>Ranges. You can use the range, intersect, and union operators (colon, space, and comma, respectively) with references.</description>
                </item>
                <item>
                  <description>Defined names. You can specify any name in the language of the macro.</description>
                </item>
                <item>
                  <description>External references. You can use the ! operator to refer to a cell or to a name defined in another workbook — for example, Evaluate("[BOOK1.XLS]Sheet1!A1").</description>
                </item>
              </list>
              <para>
                <b>Note</b>: Using square brackets (for example, "[A1:C5]") is identical to calling the <b>Evaluate</b> method with a string argument. The advantage of using square brackets is that the code is shorter. The advantage of using <b>Evaluate</b> is that the argument is a string, so you can either construct the string in your code or use a variable.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-418">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles de macro internationales de Microsoft Excel 4.0 dans le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-418">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-419">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles macro Microsoft Excel 4.0 dans le classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-419">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteExcel4Macro">
      <MemberSignature Language="C#" Value="public object ExecuteExcel4Macro (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteExcel4Macro([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ExecuteExcel4Macro(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteExcel4Macro(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="a4beb-420">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-420">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-421">Une fonction du langage macro Microsoft Excel 4.0 sans le signe égal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-421">A Microsoft Excel 4.0 macro language function without the equal sign.</span>
          </span>
          <span data-ttu-id="a4beb-422">Toutes les références doivent être indiquées sous forme de chaînes de caractères R1C1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-422">All references must be given as R1C1 strings.</span>
          </span>
          <span data-ttu-id="a4beb-423">Si <paramref name="String" /> contient des guillemets doubles incorporés, vous devez les doubler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-423">If <paramref name="String" /> contains embedded double quotation marks, you must double them.</span>
          </span>
          <span data-ttu-id="a4beb-424">Par exemple, pour exécuter la fonction macro = MID("sometext",1,4), <paramref name="String" /> devrait être « MID(""sometext"",1,4) ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-424">For example, to run the macro function =MID("sometext",1,4), <paramref name="String" /> would have to be "MID(""sometext"",1,4)".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-425">Exécute une fonction macro Microsoft Excel 4.0, puis renvoie le résultat de la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-425">Runs a Microsoft Excel 4.0 macro function, and then returns the result of the function.</span>
          </span>
          <span data-ttu-id="a4beb-426">Le type de retour dépend de la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-426">The return type depends on the function.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="a4beb-427">
            <para>La macro Microsoft Excel 4.0 n’est pas évaluée dans le contexte de la feuille ou du classeur actif. Cela signifie que toutes les références doivent être externes et doivent spécifier un nom de classeur explicite. Par exemple, pour exécuter la macro Microsoft Excel 4.0 appelée « Ma_Macro » dans Classeur1, vous devez utiliser « Classeur1 ! My_Macro() ». Si vous ne spécifiez pas le nom du classeur, cette méthode échoue.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-427">
              <para>The Microsoft Excel 4.0 macro isn't evaluated in the context of the current workbook or sheet. This means that any references should be external and should specify an explicit workbook name. For example, to run the Microsoft Excel 4.0 macro "My_Macro" in Book1, you must use "Book1!My_Macro()". If you don't specify the workbook name, this method fails.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendList">
      <MemberSignature Language="C#" Value="public bool ExtendList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtendList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ExtendList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExtendList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-428">
            <b>La valeur true</b> si Microsoft Excel étend automatiquement les formats et formules aux nouvelles données est ajouté à une liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-428">
              <b>True</b> if Microsoft Excel automatically extends formatting and formulas to new data that is added to a list.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-429">
            <para>Pour être étendus, les formats et formules doivent apparaître dans au moins trois de liste de cinq lignes ou colonnes précédant la nouvelle ligne ou colonne, et vous devez ajouter les données vers le bas ou à droite de la liste.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-429">
              <para>To be extended, formats and formulas must appear in at least three of the five list rows or columns preceding the new row or column, and you must add the data to the bottom or to the right-hand side of the list.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureInstall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFeatureInstall FeatureInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFeatureInstall FeatureInstall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FeatureInstall" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureInstall As MsoFeatureInstall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFeatureInstall FeatureInstall { Microsoft::Office::Core::MsoFeatureInstall get(); void set(Microsoft::Office::Core::MsoFeatureInstall value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFeatureInstall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-430">Cette propriété renvoie ou définit une valeur qui spécifie comment Microsoft Excel gère les appels aux méthodes et propriétés qui nécessitent des fonctionnalités qui ne sont pas encore installées (constante).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-430">Returns or sets a value (constant) that specifies how Microsoft Excel handles calls to methods and properties that require features that aren’t yet installed.</span>
          </span>
          <span data-ttu-id="a4beb-431">En lecture/écriture <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-431">Read/write <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-432">
            <para>
              <b>MsoFeatureInstall</b> peut être une de ces constantes <b>MsoFeatureInstall</b> :</para>
            <list type="bullet">
              <item>
                <description>
                  <b>msoFeatureInstallNone</b>  génère une erreur d’automatisation générique au moment de l’exécution lorsque des fonctionnalités non installées sont appelées. Il s’agit de la constante par défaut.</description>
              </item>
              <item>
                <description>
                  <b>msoFeatureInstallOnDemand</b>  invite l’utilisateur à installer de nouvelles fonctionnalités.</description>
              </item>
              <item>
                <description>
                  <b>msoFeatureInstallOnDemandWithUI</b>  affiche une jauge de progression pendant l’installation ; sans inviter l’utilisateur à installer de nouvelles fonctionnalités.</description>
              </item>
            </list>
            <para>, Vous pouvez utiliser la constante <b>msoFeatureInstallOnDemandWithUI</b> pour empêcher les utilisateurs de penser que l’application ne répond pas lors de l’installation d’une fonctionnalité. Utilisez la constante <b>msoFeatureInstallNone</b> si vous souhaitez que le développeur soit le seul à peut installer des fonctionnalités.</para>
            <para>Si vous avez le <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> propriété la valeur <b>False</b>, les utilisateurs ne sont pas invités à installer de nouvelles fonctionnalités même si la propriété <b>FeatureInstall</b> a la valeur <b>msoFeatureInstallOnDemand</b>. Si le <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> est définie sur <b>True</b>, une jauge de progression de l’installation s’affiche si la propriété <b>FeatureInstall</b> a la valeur <b>msoFeatureInstallOnDemand</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-432">
              <para>
                <b>MsoFeatureInstall</b> can be one of these <b>MsoFeatureInstall</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>msoFeatureInstallNone</b>  Generates a generic Automation error at run time when uninstalled features are called. This is the default constant.</description>
                </item>
                <item>
                  <description>
                    <b>msoFeatureInstallOnDemand</b>  Prompts the user to install new features.</description>
                </item>
                <item>
                  <description>
                    <b>msoFeatureInstallOnDemandWithUI</b>  Displays a progress meter during installation; doesn’t prompt the user to install new features.</description>
                </item>
              </list>
              <para>You can use the <b>msoFeatureInstallOnDemandWithUI</b> constant to prevent users from thinking that the application isn't responding while a feature is being installed. Use the <b>msoFeatureInstallNone</b> constant if you want the developer to be the only one who can install features.</para>
              <para>If you have the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property set to <b>False</b>, users won’t be prompted to install new features even if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>. If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is set to <b>True</b>, an installation progress meter will appear if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileConverters">
      <MemberSignature Language="C#" Value="public object FileConverters[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FileConverters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileConverters(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FileConverters[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">
          <span data-ttu-id="a4beb-433">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-433">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-434">Nom complet du convertisseur avec la chaîne de recherche du type de fichier dans Windows, par exemple, « Lotus 1-2-3 Files (*.wk*) ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-434">The long name of the converter, including the file-type search string in Windows, for example, "Lotus 1-2-3 Files (*.wk*)".</span>
          </span>
        </param>
        <param name="Index2">
          <span data-ttu-id="a4beb-435">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-435">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-436">Le chemin d’accès du convertisseur de DLL ou ressource de code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-436">The path of the converter DLL or code resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-437">Retourne des informations sur les convertisseurs de fichiers installés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-437">Returns information about installed file converters.</span>
          </span>
          <span data-ttu-id="a4beb-438">Renvoie la <b>valeur Null</b> s’il n’existe aucun convertisseur n’est installé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-438">Returns <b>Null</b> if there are no converters installed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-439">
            <para>Si vous ne spécifiez pas arguments, cette propriété renvoie un tableau qui contient des informations sur tous les convertisseurs de fichiers installés. Chaque ligne du tableau contient des informations sur un convertisseur de fichier unique, comme indiqué dans le tableau suivant.</para>
            <list type="table">
              <item>
                <term>1</term>
                <description>nom complet du convertisseur</description>
              </item>
              <item>
                <term>2</term>
                <description>la ressource de code ou un chemin d’accès de la DLL du convertisseur</description>
              </item>
              <item>
                <term>3</term>
                <description>la chaîne de recherche d’extension de fichier</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-439">
              <para>If you don’t specify arguments, this property returns an array that contains information about all the installed file converters. Each row in the array contains information about a single file converter, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>1</term>
                  <description>The long name of the converter</description>
                </item>
                <item>
                  <term>2</term>
                  <description>The path of the converter DLL or code resource</description>
                </item>
                <item>
                  <term>3</term>
                  <description>The file-extension search string</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileDialog FileDialog[Microsoft.Office.Core.MsoFileDialogType fileDialogType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileDialog FileDialog(valuetype Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileDialog(Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDialog(fileDialogType As MsoFileDialogType) As FileDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileDialog ^ FileDialog[Microsoft::Office::Core::MsoFileDialogType] { Microsoft::Office::Core::FileDialog ^ get(Microsoft::Office::Core::MsoFileDialogType fileDialogType); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDialogType" Type="Microsoft.Office.Core.MsoFileDialogType" />
      </Parameters>
      <Docs>
        <param name="fileDialogType">
          <span data-ttu-id="a4beb-440">Requis <see cref="T:Microsoft.Office.Core.MsoFileDialogType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-440">Required <see cref="T:Microsoft.Office.Core.MsoFileDialogType" />.</span>
          </span>
          <span data-ttu-id="a4beb-441">Le type de boîte de dialogue fichier. <b>MsoFileDialogType</b> peut être une de ces constantes <b>MsoFileDialogType</b> :<b>msoFileDialogFilePicker</b> permet à l’utilisateur de sélectionner un fichier. <b>msoFileDialogFolderPicker</b> Permet à l’utilisateur de sélectionner un dossier. <b>msoFileDialogOpen</b> Permet à utilisateur d’ouvrir un fichier. <b>msoFileDialogSaveAs</b> Permet à l’utilisateur d’enregistrer un fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-441">The type of file dialog.<b>MsoFileDialogType</b> can be one of these <b>MsoFileDialogType</b> constants:<b>msoFileDialogFilePicker</b> Allows user to select a file.<b>msoFileDialogFolderPicker</b> Allows user to select a folder.<b>msoFileDialogOpen</b> Allows user to open a file.<b>msoFileDialogSaveAs</b> Allows user to save a file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-442">Renvoie un <see cref="T:Microsoft.Office.Core.FileDialog" /> objet représentant une instance de la boîte de dialogue fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-442">Returns a <see cref="T:Microsoft.Office.Core.FileDialog" /> object representing an instance of the file dialog.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExportConverters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileExportConverters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExportConverters As FileExportConverters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FileExportConverters ^ FileExportConverters { Microsoft::Office::Interop::Excel::FileExportConverters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FileExportConverters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-443">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> collection qui représente tous les convertisseurs de fichier pour l’enregistrement des fichiers disponible dans Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-443">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> collection that represents all the file converters for saving files available to Microsoft Excel.</span>
          </span>
          <span data-ttu-id="a4beb-444">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-444">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-445">Cette propriété renvoie <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-445">Returns <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFind">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IFind FileFind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IFind FileFind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileFind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFind As IFind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IFind ^ FileFind { Microsoft::Office::Core::IFind ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IFind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-p175">Vous avez demandé de l’aide sur un mot clé Visual Basic utilisé uniquement pour les Macintosh. Pour plus d’informations sur ce mot clé, consultez l’Aide fournie avec l’édition de Microsoft Office pour Macintosh</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p175">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileSearch">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileSearch FileSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileSearch FileSearch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSearch As FileSearch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileSearch ^ FileSearch { Microsoft::Office::Core::FileSearch ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileSearch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-448">Renvoie un <see cref="T:Microsoft.Office.Core.FileSearch" /> objet pour une utilisation avec des recherches de fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-448">Returns a <see cref="T:Microsoft.Office.Core.FileSearch" /> object for use with file searches.</span>
          </span>
          <span data-ttu-id="a4beb-449">Cette propriété est disponible uniquement dans Microsoft Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-449">This property is available only in Microsoft Windows.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFileValidationMode FileValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFileValidationMode FileValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidation As MsoFileValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFileValidationMode FileValidation { Microsoft::Office::Core::MsoFileValidationMode get(); void set(Microsoft::Office::Core::MsoFileValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFileValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-450">Obtient ou définit la façon dont Microsoft Excel valide les fichiers avant leur ouverture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-450">Gets or sets how Microsoft Excel will validate files before opening them.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-451">A <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-451">A <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-452">
            <para>En lecture-écriture.</para> Fichiers 
          <para>qui ne passent pas validation ouvrira dans une fenêtre mode protégé. Si vous définissez la <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> propriété, que paramètre restent en vigueur pour toute la session de l’application est ouverte.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-452">
              <para>Read/write.</para>
              <para>Files that do not pass validation will be opened in a Protected View window. If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> property, that setting will remain in effect for the entire session the application is open.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidationPivot">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidationPivot As XlFileValidationPivotMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileValidationPivotMode FileValidationPivot { Microsoft::Office::Interop::Excel::XlFileValidationPivotMode get(); void set(Microsoft::Office::Interop::Excel::XlFileValidationPivotMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileValidationPivotMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-453">Obtient ou définit la façon dont Microsoft Excel valide le contenu des caches de données pour les rapports de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-453">Gets or sets how Microsoft Excel will validate the contents of the data caches for PivotTable reports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-454">A <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-454">A <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-455">
            <para>En lecture-écriture.</para> Fichiers de 
          <para>qui contiennent des caches de données qui ne valident pas ouvrira dans une fenêtre mode protégé. Si vous définissez la <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> propriété, que paramètre restent en vigueur pour toute la session de l’application est ouverte.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-455">
              <para>Read/write.</para>
              <para>Files that contain data caches that do not validate will be opened in a Protected View window. If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> property, that setting will remain in effect for the entire session the application is open.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFile">
      <MemberSignature Language="C#" Value="public bool FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FindFile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-456">Affiche la boîte de dialogue Ouvrir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-456">Displays the Open dialog box.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="a4beb-457">
            <para>Cette méthode affiche la boîte de dialogue Ouvrir et permet à l’utilisateur d’ouvrir un fichier. Si un nouveau fichier est ouvert avec succès, cette méthode renvoie <b>la valeur True</b>. Si l’utilisateur annule la boîte de dialogue, cette méthode renvoie la <b>valeur False</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-457">
              <para>This method displays the Open dialog box and allows the user to open a file. If a new file is opened successfully, this method returns <b>True</b>. If the user cancels the dialog box, this method returns <b>False</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat FindFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat FindFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FindFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property FindFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ FindFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-458">Cette propriété renvoie ou définit les critères de recherche pour le type de format de cellule à trouver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-458">Sets or returns the search criteria for the type of cell formats to find.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimal">
      <MemberSignature Language="C#" Value="public bool FixedDecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedDecimal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedDecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-459">Toutes les données saisies après que cette propriété est définie sur <b>True</b> sont formatées avec le nombre de décimales fixes défini la <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-459">All data entered after this property is set to <b>True</b> will be formatted with the number of fixed decimal places set by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> property.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimalPlaces">
      <MemberSignature Language="C#" Value="public int FixedDecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FixedDecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FixedDecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-460">Cette propriété renvoie ou définit le nombre de décimales fixes utilisé quand la <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> propriété est définie sur <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-460">Returns or sets the number of fixed decimal places used when the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> property is set to <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public bool FlashFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-461">
            <b>TRUE</b> indique que la fonctionnalité Excel Flash remplir a été activé et actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-461">
              <b>TRUE</b> indicates that the Excel Flash Fill feature has been enabled and active.</span>
          </span>
          <span data-ttu-id="a4beb-462">
            <b>Boolean</b> (<b>bool</b> en c#) En lecture/écriture</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-462">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-463">
            <para>Remplissage Flash détecte lorsque vous modifiez les données qui correspond à un modèle qui peut être rempli et appliqué à des données supplémentaires dans le classeur et remplit automatiquement la colonne avec les résultats.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-463">
              <para>Flash Fill detects when you are modifying data that fits a pattern which can be filled down and applied to additional data in the workbook, and then automatically fills down the column with the results.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFillMode">
      <MemberSignature Language="C#" Value="public bool FlashFillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFillMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFillMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFillMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-464">
            <b>True</b> si la fonctionnalité de remplissage Flash est activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-464">
              <b>True</b> if the Flash Fill feature is enabled.</span>
          </span>
          <span data-ttu-id="a4beb-465">
            <b>Boolean</b> (<b>bool</b> en c#) En lecture/écriture</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-465">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaBarHeight">
      <MemberSignature Language="C#" Value="public int FormulaBarHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FormulaBarHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FormulaBarHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaBarHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FormulaBarHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-466">Autorise l’utilisateur à spécifier la hauteur de la barre de formule en lignes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-466">Allows the user to specify the height of the formula bar in lines.</span>
          </span>
          <span data-ttu-id="a4beb-467">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-467">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-468">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-468">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-469">
            <para>Si la valeur de <b>FormulaBarHeight</b> spécifiée est supérieure à l’espace visible de la fenêtre, la barre de formule est redimensionnée pour être égale à la hauteur de la fenêtre.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-469">
              <para>If the specified value of <b>FormulaBarHeight</b> is greater than the viewable window space, the formula bar is  resized to be equal to the window height.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateGetPivotData">
      <MemberSignature Language="C#" Value="public bool GenerateGetPivotData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateGetPivotData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateGetPivotData" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateGetPivotData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateGetPivotData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-470">Renvoie <b>la valeur True</b> lorsque Microsoft Excel peut obtenir des données de rapport de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-470">Returns <b>True</b> when Microsoft Excel can get PivotTable report data.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTableRefs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateTableRefs As XlGenerateTableRefs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlGenerateTableRefs GenerateTableRefs { Microsoft::Office::Interop::Excel::XlGenerateTableRefs get(); void set(Microsoft::Office::Interop::Excel::XlGenerateTableRefs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlGenerateTableRefs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-471">Le <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> propriété détermine si la méthode de notation traditionnelle ou la nouvelle méthode de référencement structuré est utilisée pour faire référence à des tableaux dans les formules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-471">The <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> property determines whether the traditional notation method or the new structured referencing notation method is used for referencing tables in formulas.</span>
          </span>
          <span data-ttu-id="a4beb-472">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-472">Read/write.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlGenerateTableRefs" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListContents">
      <MemberSignature Language="C#" Value="public object GetCustomListContents (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomListContents([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListContents(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListContents (ListNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomListContents(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum">
          <span data-ttu-id="a4beb-473">
            <b>Integer</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-473">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="a4beb-474">Numéro de la liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-474">The list number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-475">Renvoie une liste personnalisée (tableau de chaînes de caractères).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-475">Returns a custom list (an array of strings).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListNum">
      <MemberSignature Language="C#" Value="public int GetCustomListNum (object ListArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCustomListNum([in]object ListArray) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListNum(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListNum (ListArray As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCustomListNum(System::Object ^ ListArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray">
          <span data-ttu-id="a4beb-476">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-476">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-477">Tableau de chaînes de caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-477">An array of strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-p183">Cette méthode renvoie le numéro de la liste personnalisée correspondant à un tableau de chaînes de caractères. Vous pouvez utiliser cette méthode pour faire correspondre à la fois les listes prédéfinies et les listes personnalisées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p183">Returns the custom list number for an array of strings. You can use this method to match both built-in lists and custom-defined lists.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="a4beb-480">
            <para>Cette méthode génère une erreur si aucune liste correspondante.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-480">
              <para>This method generates an error if there's no corresponding list.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenFilename">
      <MemberSignature Language="C#" Value="public object GetOpenFilename (object FileFilter, object FilterIndex, object Title, object ButtonText, object MultiSelect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOpenFilename([in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText, [in]object MultiSelect) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOpenFilename (Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object, Optional MultiSelect As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1075)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
        <Parameter Name="MultiSelect" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileFilter">
          <span data-ttu-id="a4beb-481">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-481">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-482">Chaîne spécifiant les critères de filtrage de fichier. Cette chaîne est constituée de paires de chaînes de filtre de fichier suivies par la spécification de filtre de fichier à générique de MS-DOS, avec chaque composant et chaque paire est séparée par des virgules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-482">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span>
          </span>
          <span data-ttu-id="a4beb-483">Chaque paire distincte est contenue dans les fichiers de la zone de liste déroulante type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-483">Each separate pair is listed in the Files of type drop-down list box.</span>
          </span>
          <span data-ttu-id="a4beb-484">Par exemple, la chaîne suivante spécifie deux filtres de fichiers — texte et addin : « fichiers texte (*.txt),*.txt, fichiers de compléments (*.xla),*.xla ». Pour utiliser plusieurs expressions génériques MS-DOS pour un type de filtre de fichier unique, séparez les expressions génériques par des points-virgules, par exemple, « fichiers Visual Basic (*.bas ; *.txt),*.bas ;*. txt ». Si omis, cet argument par défaut « Tous les fichiers (*.*),*.*».</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-484">For example, the following string specifies two file filters — text and addin: "Text Files (*.txt),*.txt,Add-In Files (*.xla),*.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span>
          </span>
        </param>
        <param name="FilterIndex">
          <span data-ttu-id="a4beb-485">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-485">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-486">Spécifie les critères de filtrage, de 1 au nombre de filtres spécifiés dans les numéros d’index de la valeur par défaut du fichier <paramref name="FileFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-486">Specifies the index numbers of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span>
          </span>
          <span data-ttu-id="a4beb-487">Si cet argument est omis ou supérieur au nombre de filtres présents, le premier filtre de fichier est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-487">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="a4beb-488">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-488">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-489">Spécifie le titre de la boîte de dialogue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-489">Specifies the title of the dialog box.</span>
          </span>
          <span data-ttu-id="a4beb-490">Si cet argument est omis, le titre est « Open ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-490">If this argument is omitted, the title is "Open."</span>
          </span>
        </param>
        <param name="ButtonText">
          <span data-ttu-id="a4beb-491">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-491">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-492">Macintosh uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-492">Macintosh only.</span>
          </span>
        </param>
        <param name="MultiSelect">
          <span data-ttu-id="a4beb-493">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-493">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-494">
            <b>La valeur true</b> pour autoriser plusieurs noms de fichiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-494">
              <b>True</b> to allow multiple file names to be selected.</span>
          </span>
          <span data-ttu-id="a4beb-495">
            <b>False</b> pour autoriser uniquement un nom de fichier à sélectionner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-495">
              <b>False</b> to allow only one file name to be selected.</span>
          </span>
          <span data-ttu-id="a4beb-496">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-496">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-497">Affiche la boîte de dialogue Ouvrir standard, et obtient un nom de fichier de l'utilisateur sans réellement ouvrir aucun fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-497">Displays the standard Open dialog box and gets a file name from the user without actually opening any files.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="a4beb-498">
            <para>Cette méthode retourne le nom du fichier sélectionné ou le nom entré par l’utilisateur. Le nom retourné peut inclure une spécification de chemin d’accès. Si <paramref name="MultiSelect" /> est <b>True</b>, la valeur de retour est un tableau de noms de fichiers sélectionnés (même si un seul nom de fichier est sélectionnée). Renvoie la <b>valeur False</b> si l’utilisateur annule la boîte de dialogue.</para>
            <para>Cette méthode peut changer le lecteur actif ou le dossier.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-498">
              <para>This method returns the selected file name or the name entered by the user. The returned name may include a path specification. If <paramref name="MultiSelect" /> is <b>True</b>, the return value is an array of the selected file names (even if only one filename is selected). Returns <b>False</b> if the user cancels the dialog box.</para>
              <para>This method may change the current drive or folder.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhonetic">
      <MemberSignature Language="C#" Value="public string GetPhonetic (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPhonetic([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetPhonetic(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPhonetic (Optional Text As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="a4beb-499">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-499">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-500">Spécifie le texte à convertir en texte phonétique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-500">Specifies the text to be converted to phonetic text.</span>
          </span>
          <span data-ttu-id="a4beb-501">Si vous omettez cet argument, la chaîne texte phonétiques possibles suivante (le cas échéant) du spécifié précédemment <paramref name="Text" /> est renvoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-501">If you omit this argument, the next possible phonetic text string (if any) of the previously specified <paramref name="Text" /> is returned.</span>
          </span>
          <span data-ttu-id="a4beb-502">S’il n’y a pas plus possible de chaînes de texte phonétique, une chaîne vide est renvoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-502">If there are no more possible phonetic text strings, an empty string is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-p190">Cette méthode renvoie le texte phonétique japonais de la chaîne de texte spécifiée. Elle est disponible uniquement si vous avez sélectionné ou installé la prise en charge linguistique du japonais pour Microsoft Office.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p190">Returns the Japanese phonetic text of the specified text string. This method is available to you only if you have selected or installed Japanese language support for Microsoft Office.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSaveAsFilename">
      <MemberSignature Language="C#" Value="public object GetSaveAsFilename (object InitialFilename, object FileFilter, object FilterIndex, object Title, object ButtonText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSaveAsFilename([in]object InitialFilename, [in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSaveAsFilename (Optional InitialFilename As Object, Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1076)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InitialFilename" Type="System.Object" />
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="InitialFilename">
          <span data-ttu-id="a4beb-505">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-505">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-506">Spécifie le nom de fichier suggéré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-506">Specifies the suggested file name.</span>
          </span>
          <span data-ttu-id="a4beb-507">Si cet argument est omis, Microsoft Excel utilise nom du classeur actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-507">If this argument is omitted, Microsoft Excel uses the active workbook's name.</span>
          </span>
        </param>
        <param name="FileFilter">
          <span data-ttu-id="a4beb-508">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-508">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-509">Chaîne spécifiant les critères de filtrage de fichier. Cette chaîne est constituée de paires de chaînes de filtre de fichier suivies par la spécification de filtre de fichier à générique de MS-DOS, avec chaque composant et chaque paire est séparée par des virgules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-509">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span>
          </span>
          <span data-ttu-id="a4beb-510">Chaque paire distincte est contenue dans les fichiers de la zone de liste déroulante type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-510">Each separate pair is listed in the Files of type drop-down list box.</span>
          </span>
          <span data-ttu-id="a4beb-511">Par exemple, la chaîne suivante spécifie deux filtres, texte et macros : « fichiers texte (.txt *), *.txt, fichiers de compléments (*.xla), .xla *». Pour utiliser plusieurs expressions génériques MS-DOS pour un type de filtre de fichier unique, séparez les expressions génériques par des points-virgules, par exemple, « fichiers Visual Basic (*.bas ; *.txt),*.bas ;*. txt ». Si omis, cet argument par défaut « Tous les fichiers (*.*),*.*».</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-511">For example, the following string specifies two file filters, text and addin: "Text Files (*.txt), *.txt, Add-In Files (*.xla), *.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span>
          </span>
        </param>
        <param name="FilterIndex">
          <span data-ttu-id="a4beb-512">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-512">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-513">Spécifie les critères de filtrage, de 1 au nombre de filtres spécifiés dans le numéro d’index de la valeur par défaut du fichier <paramref name="FileFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-513">Specifies the index number of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span>
          </span>
          <span data-ttu-id="a4beb-514">Si cet argument est omis ou supérieur au nombre de filtres présents, le premier filtre de fichier est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-514">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="a4beb-515">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-515">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-516">Spécifie le titre de la boîte de dialogue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-516">Specifies the title of the dialog box.</span>
          </span>
          <span data-ttu-id="a4beb-517">Si cet argument est omis, le titre par défaut est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-517">If this argument is omitted, the default title is used.</span>
          </span>
        </param>
        <param name="ButtonText">
          <span data-ttu-id="a4beb-518">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-518">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-519">Macintosh uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-519">Macintosh only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-520">Affiche la boîte de dialogue standard Enregistrer sous et lit un nom de fichier tapé par l’utilisateur sans réellement enregistrer les fichiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-520">Displays the standard Save As dialog box and gets a file name from the user without actually saving any files.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="a4beb-521">
            <para>Cette méthode retourne le nom du fichier sélectionné ou le nom entré par l’utilisateur. Le nom retourné peut inclure une spécification de chemin d’accès. Renvoie la <b>valeur False</b> si l’utilisateur annule la boîte de dialogue.</para>
            <para>Cette méthode peut changer le lecteur actif ou le dossier.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-521">
              <para>This method returns the selected file name or the name entered by the user. The returned name may include a path specification. Returns <b>False</b> if the user cancels the dialog box.</para>
              <para>This method may change the current drive or folder.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public void Goto (object Reference, object Scroll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Goto([in]object Reference, [in]object Scroll) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Goto (Optional Reference As Object, Optional Scroll As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(475)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Scroll" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Reference">
          <span data-ttu-id="a4beb-522">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-522">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-523">La destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-523">The destination.</span>
          </span>
          <span data-ttu-id="a4beb-524">Peut être un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet, une chaîne qui contient une référence de cellule dans une notation de type R1C1 ou une chaîne qui contient un nom de procédure Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-524">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, a string that contains a cell reference in R1C1-style notation, or a string that contains a Visual Basic procedure name.</span>
          </span>
          <span data-ttu-id="a4beb-525">Si cet argument est omis, la destination est la dernière plage que vous permet de sélectionner la méthode <b>Goto</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-525">If this argument is omitted, the destination is the last range you used the <b>Goto</b> method to select.</span>
          </span>
        </param>
        <param name="Scroll">
          <span data-ttu-id="a4beb-526">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-526">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-527">
            <b>True</b> pour faire défiler la fenêtre afin que le coin supérieur gauche de la plage s’affiche dans le coin supérieur gauche de la fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-527">
              <b>True</b> to scroll through the window so that the upper-left corner of the range appears in the upper-left corner of the window.</span>
          </span>
          <span data-ttu-id="a4beb-528">
            <b>False</b> pour ne pas faire défiler la fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-528">
              <b>False</b> to not scroll through the window.</span>
          </span>
          <span data-ttu-id="a4beb-529">La valeur par défaut est <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-529">The default is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-530">Sélectionne une plage ou une procédure Visual Basic dans n’importe quel classeur et active celui-ci s’il n’est pas déjà active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-530">Selects any range or Visual Basic procedure in any workbook and activates that workbook if it’s not already active.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-531">
            <para>Cette méthode diffère de la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> procédé comme suit :</para>
            <list type="bullet">
              <item>
                <description>Si vous spécifiez une plage dans une feuille qui n’est pas visible, Microsoft Excel bascule vers cette feuille avant la sélection. (Si vous utilisez l’option <b>Sélectionner</b> une plage située dans une feuille qui n’est pas visible, la plage est sélectionnée mais la feuille n’est pas activée).</description>
              </item>
              <item>
                <description>Cette méthode n’a un <paramref name="Scroll" /> argument qui vous permet de faire défiler la fenêtre de destination.</description>
              </item>
              <item>
                <description>Lorsque vous utilisez la méthode <b>Goto</b> , la sélection précédente (avant l’exécution de la méthode <b>Goto</b> ) est ajoutée dans le tableau des sélections précédentes (pour plus d’informations, voir la <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> propriété). Vous pouvez utiliser cette fonctionnalité pour passer rapidement jusqu'à quatre sélections.</description>
              </item>
              <item>
                <description>La méthode <b>Select</b> a un <paramref name="Replace" /> argument ; la <b>Goto</b> méthode ne.</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-531">
              <para>This method differs from the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> method in the following ways:</para>
              <list type="bullet">
                <item>
                  <description>If you specify a range on a sheet that’s not on top, Microsoft Excel will switch to that sheet before selecting. (If you use <b>Select</b> with a range on a sheet that’s not on top, the range will be selected but the sheet won’t be activated).</description>
                </item>
                <item>
                  <description>This method has a <paramref name="Scroll" /> argument that lets you scroll through the destination window.</description>
                </item>
                <item>
                  <description>When you use the <b>Goto</b> method, the previous selection (before the <b>Goto</b> method runs) is added to the array of previous selections (for more information, see the <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> property). You can use this feature to quickly jump between as many as four selections.</description>
                </item>
                <item>
                  <description>The <b>Select</b> method has a <paramref name="Replace" /> argument; the <b>Goto</b> method doesn’t.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-532">La hauteur, en points, de la fenêtre d’application principale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-532">The height, in points, of the main application window.</span>
          </span>
          <span data-ttu-id="a4beb-533">Si la fenêtre est réduite, cette propriété est en lecture seule et fait référence à la hauteur de l’icône.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-533">If the window is minimized, this property is read-only and refers to the height of the icon.</span>
          </span>
          <span data-ttu-id="a4beb-534">Si la fenêtre est réduite, cette propriété ne peut pas être définie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-534">If the window is maximized, this property cannot be set.</span>
          </span>
          <span data-ttu-id="a4beb-535">Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> propriété pour déterminer l’état de la fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-535">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> property to determine the window state.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public void Help (object HelpFile, object HelpContextID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Help([in]object HelpFile, [in]object HelpContextID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Help(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Help (Optional HelpFile As Object, Optional HelpContextID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(354)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="HelpFile">
          <span data-ttu-id="a4beb-536">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-536">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-537">Le nom du fichier d’aide en ligne que vous souhaitez afficher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-537">The name of the online Help file you want to display.</span>
          </span>
          <span data-ttu-id="a4beb-538">Si cet argument n’est pas spécifié, l’aide de Microsoft Excel est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-538">If this argument isn't specified, Microsoft Excel Help is used.</span>
          </span>
        </param>
        <param name="HelpContextID">
          <span data-ttu-id="a4beb-539">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-539">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-540">Spécifie le numéro d’identificateur contextuel de la rubrique d’aide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-540">Specifies the context ID number for the Help topic.</span>
          </span>
          <span data-ttu-id="a4beb-541">Si cet argument n’est pas spécifié, la boîte de dialogue Rubriques d’aide s’affiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-541">If this argument isn't specified, the Help Topics dialog box is displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-542">Cette méthode affiche une rubrique d'aide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-542">Displays a Help topic.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighQualityModeForGraphics">
      <MemberSignature Language="C#" Value="public bool HighQualityModeForGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighQualityModeForGraphics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HighQualityModeForGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Property HighQualityModeForGraphics As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighQualityModeForGraphics { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-543">Obtient ou définit si Excel utilise le mode haute qualité pour imprimer des graphiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-543">Gets or sets whether Excel uses high quality mode to print graphics.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-544">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-544">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-545">
            <para>Cette propriété correspond au paramètre du mode haute qualité pour la case à cocher de graphiques dans la section imprimer de la catégorie Avancé de la boîte de dialogue Options Excel.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-545">
              <para>This property corresponds to the setting of the High quality mode for graphics check box in the Print section of the Advanced category of the Excel Options dialog box.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hinstance">
      <MemberSignature Language="C#" Value="public int Hinstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hinstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hinstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hinstance As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hinstance { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-546">Renvoie le descripteur d’instances de l’instance qui appelle Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-546">Returns the instance handle of the instance that is calling Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HinstancePtr">
      <MemberSignature Language="C#" Value="public object HinstancePtr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HinstancePtr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HinstancePtr" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HinstancePtr As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HinstancePtr { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-547">Obtient un handle vers l’instance de Microsoft Excel 2010 représenté par le <see cref="T:Microsoft.Office.Interop.Excel._Application" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-547">Gets a handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-548">Un handle vers l’instance de Microsoft Excel 2010 représenté par le <see cref="T:Microsoft.Office.Interop.Excel._Application" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-548">A handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-549">
            <para>En lecture seule <b>Variant</b>.</para>
            <para>Cette propriété renvoie une poignée correcte dans les versions 32 bits et 64 bits de Microsoft Excel. Il étend les fonctionnalités de la <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object, qui ne fonctionne correctement dans la version 32 bits de Microsoft Excel.</para> Type de 
          <para>les données idéales à utiliser avec cette propriété est le type de données <b>LongPtr</b> . Affectation de la valeur renvoyée par cette propriété à une variable <b>LongPtr</b> fonctionne comme prévu dans les versions 32 bits et 64 bits de Microsoft Excel. La propriété est définie en tant que <b>Variant</b> pour des raisons d’implémentation interne. Toutefois, elle renvoie toujours la valeur 32 bits sur les systèmes 32 bits et une valeur 64 bits sur les systèmes 64 bits.</para><para>Cette propriété seulement fonctionne commençant par Excel 2010 et n’est requis avec la version 64 bits de Microsoft Excel. Si vous devez écrire du code qui fonctionne également avec les versions antérieures d’Excel, afin d’éviter les erreurs de compilation, lisez cette propriété sous une directive de compilation conditionnelle #if Win64 et utilisez le <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> propriété sous le #else, directive.</para><para><b>Remarque</b>: cette propriété fonctionne dans les deux environnements 32 bits et 64 bits avec Excel 2010. Par conséquent, si votre code est destiné à être utilisé uniquement avec Excel 2010 ou version ultérieure, soit 32 bits ou 64 bits, il peut lire cette propriété sans compilation conditionnelle.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-549">
              <para>Read-only <b>Variant</b>.</para>
              <para>This property returns a correct handle in both the 32- and 64-bit versions of Excel. It extends the functionality of the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object, which only works correctly in the 32-bit version of Excel.</para>
              <para>The ideal data type to use with this property is the <b>LongPtr</b> data type. Assigning the value returned by this property to a <b>LongPtr</b> variable will work as expected in both 32- and 64-bit versions of Excel. The property is defined as <b>Variant</b> for internal implementation reasons. However, it always returns a 32-bit value on 32-bit systems and a 64-bit value on 64-bit systems.</para>
              <para>This property only works starting with Excel 2010, and is only required with the 64-bit version of Excel. If you must write code that will also work with earlier versions of Excel, in order to avoid compilation errors, read this property under an #if Win64 conditional compilation directive, and use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property under the #else directive.</para>
              <para>
                <b>Note</b>: This property works fine in both 32- and 64-bit environments starting with Excel 2010. Therefore, if your code is intended to be used only with Excel 2010 or later, either 32- or 64-bit, it can read this property without conditional compilation.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-550">Renvoie un <b>entier</b> indiquant le handle de fenêtre supérieure de la fenêtre Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-550">Returns an <b>Integer</b> indicating the top-level window handle of the Microsoft Excel window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreRemoteRequests">
      <MemberSignature Language="C#" Value="public bool IgnoreRemoteRequests { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreRemoteRequests" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IgnoreRemoteRequests" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreRemoteRequests As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreRemoteRequests { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-551">
            <b>La valeur true</b> si les requêtes DDE sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-551">
              <b>True</b> if remote DDE requests are ignored.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InchesToPoints">
      <MemberSignature Language="C#" Value="public double InchesToPoints (double Inches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 InchesToPoints([in]float64 Inches) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InchesToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InchesToPoints (Inches As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InchesToPoints(double Inches);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1087)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Inches" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Inches">
          <span data-ttu-id="a4beb-552">
            <b>Double</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-552">Required <b>Double</b>.</span>
          </span>
          <span data-ttu-id="a4beb-553">Spécifie la valeur en pouces à convertir en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-553">Specifies the inch value to be converted to points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-554">Cette méthode convertit une mesure en pouces en une mesure en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-554">Converts a measurement from inches to points.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public object InputBox (string Prompt, object Title, object Default, object Left, object Top, object HelpFile, object HelpContextID, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InputBox([in]string Prompt, [in]object Title, [in]object Default, [in]object Left, [in]object Top, [in]object HelpFile, [in]object HelpContextID, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As Object, Optional Default As Object, Optional Left As Object, Optional Top As Object, Optional HelpFile As Object, Optional HelpContextID As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(357)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="Default" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Prompt">
          <span data-ttu-id="a4beb-555">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-555">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-556">Message à afficher dans la boîte de dialogue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-556">The message to be displayed in the dialog box.</span>
          </span>
          <span data-ttu-id="a4beb-557">Il peut s’agir d’une chaîne, un nombre, une date ou une valeur de <b>type Boolean</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-557">This can be a string, a number, a date, or a <b>Boolean</b> value.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="a4beb-558">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-558">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-559">Titre de la zone d’entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-559">The title for the input box.</span>
          </span>
          <span data-ttu-id="a4beb-560">Si cet argument est omis, le titre par défaut est « Entrée ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-560">If this argument is omitted, the default title is "Input."</span>
          </span>
        </param>
        <param name="Default">
          <span data-ttu-id="a4beb-561">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-561">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-562">Spécifie une valeur qui apparaît dans la zone de texte quand la boîte de dialogue s’affiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-562">Specifies a value that will appear in the text box when the dialog box is initially displayed.</span>
          </span>
          <span data-ttu-id="a4beb-563">Si cet argument est omis, la zone de texte reste vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-563">If this argument is omitted, the text box is left empty.</span>
          </span>
          <span data-ttu-id="a4beb-564">Cette valeur peut être un objet <b>Range</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-564">This value can be a <b>Range</b> object.</span>
          </span>
        </param>
        <param name="Left">
          <span data-ttu-id="a4beb-565">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-565">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-566">Spécifie une position x pour la boîte de dialogue relative à l’angle supérieur gauche de l’écran en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-566">Specifies an x position for the dialog box in relation to the upper-left corner of the screen in points.</span>
          </span>
        </param>
        <param name="Top">
          <span data-ttu-id="a4beb-567">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-567">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-568">Spécifie une position y pour la boîte de dialogue relative à l’angle supérieur gauche de l’écran en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-568">Specifies a y position for the dialog box in relation to the upper-left corner of the screen in points.</span>
          </span>
        </param>
        <param name="HelpFile">
          <span data-ttu-id="a4beb-569">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-569">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-570">Nom du fichier d’aide pour cette zone d’entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-570">The name of the Help file for this input box.</span>
          </span>
          <span data-ttu-id="a4beb-571">Si la <paramref name="HelpFile" /> et <paramref name="HelpContextID" /> arguments sont présents, un bouton Aide apparaîtra dans la boîte de dialogue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-571">If the <paramref name="HelpFile" /> and <paramref name="HelpContextID" /> arguments are present, a Help button will appear in the dialog box.</span>
          </span>
        </param>
        <param name="HelpContextID">
          <span data-ttu-id="a4beb-572">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-572">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-573">Numéro d’identificateur contextuel de la rubrique d’aide dans <paramref name="HelpFile" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-573">The context ID number of the Help topic in <paramref name="HelpFile" />.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="a4beb-574">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-574">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-575">Spécifie le type de données renvoyées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-575">Specifies the return data type.</span>
          </span>
          <span data-ttu-id="a4beb-576">Si cet argument est omis, la boîte de dialogue renvoie texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-576">If this argument is omitted, the dialog box returns text.</span>
          </span>
          <span data-ttu-id="a4beb-577">Peut être une ou la somme des valeurs suivantes. Vous pouvez utiliser la somme des valeurs autorisées pour <paramref name="Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-577">Can be one or a sum of the following values.You can use the sum of the allowable values for <paramref name="Type" />.</span>
          </span>
          <span data-ttu-id="a4beb-578">Par exemple, pour une zone d’entrée qui peut accepter du texte et les numéros, définissez <paramref name="Type" /> à 1 + 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-578">For example, for an input box that can accept both text and numbers, set <paramref name="Type" /> to 1 + 2.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-p210">Cette méthode affiche une boîte de dialogue dans laquelle l'utilisateur peut saisir des données. Elle renvoie les informations saisies dans la boîte de dialogue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p210">Displays a dialog box for user input. Returns the information entered in the dialog box.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="a4beb-581">
            <para>Utiliser la <b>fonction InputBox</b> pour afficher une boîte de dialogue simple afin que vous pouvez entrer des informations à utiliser dans une macro. La boîte de dialogue possède un bouton OK et un bouton Annuler. Si vous choisissez le bouton OK, <b>InputBox</b> renvoie la valeur entrée dans la boîte de dialogue. Si vous cliquez sur le bouton Annuler, <b>InputBox</b> renvoie la <b>valeur False</b>.</para>
            <para>Si <paramref name="Type" /> est 0, <b>InputBox</b> renvoie la formule sous la forme de texte — par exemple, « = 2 \* PI () / 360 ». S’il existe des références dans la formule, ils sont renvoyés en tant que références de style A1. (Utilisez <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> pour convertir les styles de référence.)</para>
            <para>Si <paramref name="Type" /> est 8, <b>InputBox</b> renvoie un objet <b>Range</b> .</para>
            <para>Si vous utilisez la méthode <b>InputBox</b> pour demander à l’utilisateur une formule, vous devez utiliser le <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> propriété pour affecter la formule à un objet <b>Range</b> . La formule d’entrée est dans la langue de l’utilisateur.</para> Méthode 
          <para><b>InputBox</b> diffère de la fonction <b>InputBox</b> en ce sens qu’elle permet une validation sélective de l’entrée d’utilisateur, et il peut être utilisé avec des objets Microsoft Excel, les valeurs d’erreur et les formules. InputBox sans qualificateur d’objet appelle la fonction <b>InputBox</b> .</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-581">
              <para>Use <b>InputBox</b> to display a simple dialog box so that you can enter information to be used in a macro. The dialog box has an OK button and a Cancel button. If you choose the OK button, <b>InputBox</b> returns the value entered in the dialog box. If you click the Cancel button, <b>InputBox</b> returns <b>False</b>.</para>
              <para>If <paramref name="Type" /> is 0, <b>InputBox</b> returns the formula in the form of text — for example, "=2\*PI()/360". If there are any references in the formula, they are returned as A1-style references. (Use <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> to convert between reference styles.)</para>
              <para>If <paramref name="Type" /> is 8, <b>InputBox</b> returns a <b>Range</b> object.</para>
              <para>If you use the <b>InputBox</b> method to ask the user for a formula, you must use the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> property to assign the formula to a <b>Range</b> object. The input formula will be in the user's language.</para>
              <para>The <b>InputBox</b> method differs from the <b>InputBox</b> function in that it allows selective validation of the user's input, and it can be used with Microsoft Excel objects, error values, and formulas. InputBox with no object qualifier calls the <b>InputBox</b> function.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="public bool Interactive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Interactive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Interactive" />
      <MemberSignature Language="VB.NET" Value="Public Property Interactive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Interactive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-582">
            <b>La valeur true</b> si Microsoft Excel est en mode interactif. Cette propriété est généralement <b>la valeur True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-582">
              <b>True</b> if Microsoft Excel is in interactive mode; this property is usually <b>True</b>.</span>
          </span>
          <span data-ttu-id="a4beb-583">Si vous définissez cette propriété sur <b>False</b>, Microsoft Excel empêchera toutes les entrées du clavier et de la souris (à l’exception d’entrée aux boîtes de dialogue affichées par votre code).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-583">If you set this property to <b>False</b>, Microsoft Excel will block all input from the keyboard and mouse (except input to dialog boxes that are displayed by your code).</span>
          </span>
          <span data-ttu-id="a4beb-584">Utilisateur empêche l’utilisateur d’entraver le code lorsqu’il déplace ou active des objets Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-584">Blocking user input will prevent the user from interfering with the code as it moves or activates Microsoft Excel objects.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-585">
            <para>Cette propriété est utile si vous écrivez du code pour communiquer avec Microsoft Excel à partir d’une autre application.</para>
            <para>Si vous définissez cette propriété sur <b>False</b>, n’oubliez pas de le définir sur <b>True</b>. Microsoft Excel ne sont pas automatiquement définir cette propriété sur <b>True</b> lorsque votre code s’arrête.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-585">
              <para>This property is useful if you're writing code to communicate with Microsoft Excel from another application.</para>
              <para>If you set this property to <b>False</b>, don't forget to set it back to <b>True</b>. Microsoft Excel won't automatically set this property back to <b>True</b> when your code stops running.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="International">
      <MemberSignature Language="C#" Value="public object International[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object International(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.International(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property International(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ International[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="a4beb-586">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-586">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-587">Le paramètre à renvoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-587">The setting to be returned.</span>
          </span>
          <span data-ttu-id="a4beb-588">Peut être une de le <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> constantes répertoriées dans les tableaux suivants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-588">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> constants listed in the following tables.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-589">Retourne des informations sur le pays/la région et les paramètres internationaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-589">Returns information about the current country/region and international settings.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-590">
            <para>Accolades et crochets</para>
            <list type="table">
              <item>
                <term>
                  <b>xlLeftBrace</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>caractère utilisé à la place de l’accolade gauche ({}) dans les littérales.</description>
              </item>
              <item>
                <term>
                  <b>xlLeftBracket</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>caractère utilisé à la place du crochet gauche ([]) dans les références relatives de style R1C1.</description>
              </item>
              <item>
                <term>
                  <b>xlLowerCaseColumnLetter</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>de colonne en minuscules.</description>
              </item>
              <item>
                <term>
                  <b>xlLowerCaseRowLetter</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>de ligne en minuscules.</description>
              </item>
              <item>
                <term>
                  <b>xlRightBrace</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>caractère utilisé à la place de l’accolade droite (}) dans les littérales.</description>
              </item>
              <item>
                <term>
                  <b>xlRightBracket</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>caractère utilisé à la place du crochet (]) dans les références de style R1C1.</description>
              </item>
              <item>
                <term>
                  <b>xlUpperCaseColumnLetter</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>de colonne en majuscules.</description>
              </item>
              <item>
                <term>
                  <b>xlUpperCaseRowLetter</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>lettre de ligne en majuscules (pour les références de style R1C1).</description>
              </item>
            </list>
            <para>Paramètres de pays/région</para>
            <list type="table">
              <item>
                <term>
                  <b>xlCountryCode</b>
                </term>
                <description>
                  <b>entier</b>
                </description>
                <description>version de pays/région de Microsoft Excel.</description>
              </item>
              <item>
                <term>
                  <b>xlCountrySetting</b>
                </term>
                <description>
                  <b>entier</b>
                </description>
                <description>valeur pays/région actuelle dans le panneau de configuration Windows.</description>
              </item>
              <item>
                <term>
                  <b>xlGeneralFormatName</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>nom de format numérique standard.</description>
              </item>
            </list>
            <para>Devise</para>
            <list type="table">
              <item>
                <term>
                  <b>xlCurrencyBefore</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>la valeur True</b> si le symbole monétaire précède la valeur ; <b>False</b> s’il suit.</description>
              </item>
              <item>
                <term>
                  <b>xlCurrencyCode</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>symbole monétaire.</description>
              </item>
              <item>
                <term>
                  <b>xlCurrencyDigits</b>
                </term>
                <description>
                  <b>entier</b>
                </description>
                <description>nombre de décimales à utiliser dans les formats monétaires.</description>
              </item>
              <item>
                <term>
                  <b>xlCurrencyLeadingZeros</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>la valeur True</b> si un zéro non significatif sont affichées pour les valeurs monétaires nulles.</description>
              </item>
              <item>
                <term>
                  <b>xlCurrencyMinusSign</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>la valeur True</b> si vous utilisez un signe moins pour les nombres négatifs ; <b>False</b> si vous utilisez des parenthèses.</description>
              </item>
              <item>
                <term>
                  <b>xlCurrencyNegative</b>
                </term>
                <description>
                  <b>entier</b>
                </description>
                <description>format monétaire pour les valeurs monétaires négatives : 0 = (symbolex) ou (x symbole) 1 = - symbolex ou - 2 = symbole-x ou x-symbole 3 = symbolex - ou x symbole-où symbole correspond au symbole de devise de la pays ou région. Notez que la position du symbole monétaire est déterminée par <b>xlCurrencyBefore</b>.</description>
              </item>
              <item>
                <term>
                  <b>xlCurrencySpaceBefore</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>la valeur True</b> si un espace est ajouté devant le symbole monétaire.</description>
              </item>
              <item>
                <term>
                  <b>xlCurrencyTrailingZeros</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>la valeur True</b> si les zéros sont affichés pour les valeurs monétaires nulles.</description>
              </item>
              <item>
                <term>
                  <b>xlNoncurrencyDigits</b>
                </term>
                <description>
                  <b>entier</b>
                </description>
                <description>nombre de décimales à utiliser dans les formats non monétaires.</description>
              </item>
            </list>
            <para>Date et heure</para>
            <list type="table">
              <item>
                <term>
                  <b>xl24HourClock</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>la valeur True</b> si vous utilisez le format horaire 24 heures ; <b>False</b> si vous utilisez le format horaire 12 heures.</description>
              </item>
              <item>
                <term>
                  <b>xl4DigitYears</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>la valeur True</b> si vous utilisez des années à quatre chiffres ; <b>False</b> si elles comportent deux chiffres.</description>
              </item>
              <item>
                <term>
                  <b>xlDateOrder</b>
                </term>
                <description>
                  <b>entier</b>
                </description>
                <description>l’ordre des éléments de date : 0 = mois-jour-année 1 = jour-mois-année 2 = année-mois-jour</description>
              </item>
              <item>
                <term>
                  <b>xlDateSeparator</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>séparateur de Date (/).</description>
              </item>
              <item>
                <term>
                  <b>xlDayCode</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>symbole du jour (d).</description>
              </item>
              <item>
                <term>
                  <b>xlDayLeadingZero</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>la valeur True si un zéro non significatif est affiché dans les jours.</description>
              </item>
              <item>
                <term>
                  <b>xlHourCode</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>symbole des heures (h).</description>
              </item>
              <item>
                <term>
                  <b>xlMDY</b>
                </term>
                <description>
                  <b>booléenne</b>
                </description>
                <b>True</b> si l’ordre de date est mois-jour-année
              <description>dates affichés dans le formulaire de type long ; <b>False</b> si l’ordre de date est jour-mois-année.</description></item>
              <item>
                <term>
                  <b>xlMinuteCode</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>symbole des minutes (m).</description>
              </item>
              <item>
                <term>
                  <b>xlMonthCode</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>symbole du mois (m).</description>
              </item>
              <item>
                <term>
                  <b>xlMonthLeadingZero</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>la valeur True</b> si un zéro non significatif est affiché dans les mois (lorsque les mois sont affichés sous forme numérique).</description>
              </item>
              <item>
                <term>
                  <b>xlMonthNameChars</b>
                </term>
                <description>
                  <b>entier</b>
                </description>
                <description>toujours renvoie trois caractères pour la compatibilité descendante. Noms de mois abrégés sont lus à partir de Microsoft Windows et peut être n’importe quelle longueur.</description>
              </item>
              <item>
                <term>
                  <b>xlSecondCode</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>symbole des secondes (s).</description>
              </item>
              <item>
                <term>
                  <b>xlTimeSeparator</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>séparateur d’heure ( :)).</description>
              </item>
              <item>
                <term>
                  <b>xlTimeLeadingZero</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>la valeur True</b> si un zéro non significatif est affiché dans l’heure.</description>
              </item>
              <item>
                <term>
                  <b>xlWeekdayNameChars</b>
                </term>
                <description>
                  <b>entier</b>
                </description>
                <description>toujours renvoie trois caractères pour la compatibilité descendante. Noms de jours courts sont lus à partir de Microsoft Windows et peut être n’importe quelle longueur.</description>
              </item>
              <item>
                <term>
                  <b>xlYearCode</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>symbole de l’année dans les formats numériques (y).</description>
              </item>
            </list>
            <para>Systèmes de mesure</para>
            <list type="table">
              <item>
                <term>
                  <b>xlMetric</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>la valeur True</b> si vous utilisez le système métrique ; <b>False</b> si vous utilisez le système de mesure anglais.</description>
              </item>
              <item>
                <term>
                  <b>xlNonEnglishFunctions</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>la valeur True</b> si les fonctions ne sont pas affichées en anglais.</description>
              </item>
            </list>
            <para>Séparateurs</para>
            <list type="table">
              <item>
                <term>
                  <b>xlAlternateArraySeparator</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>autre séparateur d’éléments à utiliser si le séparateur actuel est identique au séparateur décimal.</description>
              </item>
              <item>
                <term>
                  <b>xlColumnSeparator</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>caractère utilisé pour séparer les colonnes dans les littérales.</description>
              </item>
              <item>
                <term>
                  <b>xlDecimalSeparator</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>séparateur décimal.</description>
              </item>
              <item>
                <term>
                  <b>xlListSeparator</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>séparateur de liste.</description>
              </item>
              <item>
                <term>
                  <b>xlRowSeparator</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>caractère utilisé pour séparer les lignes dans les littérales.</description>
              </item>
              <item>
                <term>
                  <b>xlThousandsSeparator</b>
                </term>
                <description>
                  <b>chaîne</b>
                </description>
                <description>zéro ou séparateur de milliers.</description>
              </item>
            </list>
            <para>Symboles, séparateurs et formats monétaires figurant dans le tableau précédent peuvent différer de ceux utilisés dans votre langue ou l’emplacement géographique et ne peut pas être disponibles, en fonction de la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionné ou installé.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-590">
              <para>Brackets and Braces</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlLeftBrace</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the left brace ({) in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlLeftBracket</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the left bracket ([) in R1C1-style relative references.</description>
                </item>
                <item>
                  <term>
                    <b>xlLowerCaseColumnLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Lowercase column letter.</description>
                </item>
                <item>
                  <term>
                    <b>xlLowerCaseRowLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Lowercase row letter.</description>
                </item>
                <item>
                  <term>
                    <b>xlRightBrace</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the right brace (}) in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlRightBracket</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the right bracket (]) in R1C1-style references.</description>
                </item>
                <item>
                  <term>
                    <b>xlUpperCaseColumnLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Uppercase column letter.</description>
                </item>
                <item>
                  <term>
                    <b>xlUpperCaseRowLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Uppercase row letter (for R1C1-style references).</description>
                </item>
              </list>
              <para>Country/Region Settings</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlCountryCode</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Country/Region version of Microsoft Excel.</description>
                </item>
                <item>
                  <term>
                    <b>xlCountrySetting</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Current country/region setting in the Windows Control Panel.</description>
                </item>
                <item>
                  <term>
                    <b>xlGeneralFormatName</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Name of the General number format.</description>
                </item>
              </list>
              <para>Currency</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlCurrencyBefore</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if the currency symbol precedes the currency values; <b>False</b> if it follows them.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Currency symbol.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyDigits</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Number of decimal digits to be used in currency formats.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyLeadingZeros</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if leading zeros are displayed for zero currency values.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyMinusSign</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using a minus sign for negative numbers; <b>False</b> if you’re using parentheses.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyNegative</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Currency format for negative currency values:0 = (symbolx) or (xsymbol)1 = -symbolx or -xsymbol2 = symbol-x or x-symbol3 = symbolx- or xsymbol-where symbol is the currency symbol of the country or region. Note that the position of the currency symbol is determined by <b>xlCurrencyBefore</b>.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencySpaceBefore</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if a space is added before the currency symbol.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyTrailingZeros</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if trailing zeros are displayed for zero currency values.</description>
                </item>
                <item>
                  <term>
                    <b>xlNoncurrencyDigits</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Number of decimal digits to be used in non-currency formats.</description>
                </item>
              </list>
              <para>Date and Time</para>
              <list type="table">
                <item>
                  <term>
                    <b>xl24HourClock</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using 24-hour time; <b>False</b> if you’re using 12-hour time.</description>
                </item>
                <item>
                  <term>
                    <b>xl4DigitYears</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using four-digit years; <b>False</b> if you’re using two-digit years.</description>
                </item>
                <item>
                  <term>
                    <b>xlDateOrder</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Order of date elements:0 = month-day-year1 = day-month-year2 = year-month-day</description>
                </item>
                <item>
                  <term>
                    <b>xlDateSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Date separator (/).</description>
                </item>
                <item>
                  <term>
                    <b>xlDayCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Day symbol (d).</description>
                </item>
                <item>
                  <term>
                    <b>xlDayLeadingZero</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>True if a leading zero is displayed in days.</description>
                </item>
                <item>
                  <term>
                    <b>xlHourCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Hour symbol (h).</description>
                </item>
                <item>
                  <term>
                    <b>xlMDY</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if the date order is month-day-year for dates displayed in the long form; <b>False</b> if the date order is day-month-year.</description>
                </item>
                <item>
                  <term>
                    <b>xlMinuteCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Minute symbol (m).</description>
                </item>
                <item>
                  <term>
                    <b>xlMonthCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Month symbol (m).</description>
                </item>
                <item>
                  <term>
                    <b>xlMonthLeadingZero</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if a leading zero is displayed in months (when months are displayed as numbers).</description>
                </item>
                <item>
                  <term>
                    <b>xlMonthNameChars</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Always returns three characters for backward compatibility. Abbreviated month names are read from Microsoft Windows and can be any length.</description>
                </item>
                <item>
                  <term>
                    <b>xlSecondCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Second symbol (s).</description>
                </item>
                <item>
                  <term>
                    <b>xlTimeSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Time separator (:).</description>
                </item>
                <item>
                  <term>
                    <b>xlTimeLeadingZero</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if a leading zero is displayed in times.</description>
                </item>
                <item>
                  <term>
                    <b>xlWeekdayNameChars</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Always returns three characters for backward compatibility. Abbreviated weekday names are read from Microsoft Windows and can be any length.</description>
                </item>
                <item>
                  <term>
                    <b>xlYearCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Year symbol in number formats (y).</description>
                </item>
              </list>
              <para>Measurement Systems</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlMetric</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using the metric system; <b>False</b> if you’re using the English measurement system.</description>
                </item>
                <item>
                  <term>
                    <b>xlNonEnglishFunctions</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re not displaying functions in English.</description>
                </item>
              </list>
              <para>Separators</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlAlternateArraySeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Alternate array item separator to be used if the current array separator is the same as the decimal separator.</description>
                </item>
                <item>
                  <term>
                    <b>xlColumnSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used to separate columns in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlDecimalSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Decimal separator.</description>
                </item>
                <item>
                  <term>
                    <b>xlListSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>List separator.</description>
                </item>
                <item>
                  <term>
                    <b>xlRowSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used to separate rows in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlThousandsSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Zero or thousands separator.</description>
                </item>
              </list>
              <para>Symbols, separators, and currency formats shown in the preceding table may differ from those used in your language or geographic location and may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Intersect (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Intersect([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(766)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">
          <span data-ttu-id="a4beb-591">
            <b>Objet Range</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-591">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="a4beb-592">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-592">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-593">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-593">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="a4beb-594">
            <b>Objet Range</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-594">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="a4beb-595">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-595">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-596">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-596">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="a4beb-597">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-597">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-598">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-598">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-599">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-599">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="a4beb-600">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-600">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-601">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-601">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-602">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-602">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="a4beb-603">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-603">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-604">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-604">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-605">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-605">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="a4beb-606">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-606">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-607">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-607">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-608">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-608">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="a4beb-609">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-609">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-610">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-610">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-611">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-611">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="a4beb-612">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-612">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-613">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-613">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-614">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-614">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="a4beb-615">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-615">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-616">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-616">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-617">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-617">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="a4beb-618">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-618">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-619">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-619">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-620">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-620">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="a4beb-621">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-621">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-622">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-622">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-623">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-623">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="a4beb-624">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-624">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-625">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-625">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-626">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-626">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="a4beb-627">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-627">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-628">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-628">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-629">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-629">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="a4beb-630">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-630">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-631">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-631">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-632">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-632">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="a4beb-633">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-633">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-634">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-634">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-635">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-635">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="a4beb-636">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-636">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-637">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-637">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-638">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-638">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="a4beb-639">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-639">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-640">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-640">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-641">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-641">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="a4beb-642">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-642">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-643">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-643">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-644">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-644">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="a4beb-645">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-645">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-646">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-646">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-647">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-647">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="a4beb-648">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-648">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-649">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-649">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-650">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-650">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="a4beb-651">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-651">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-652">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-652">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-653">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-653">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="a4beb-654">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-654">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-655">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-655">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-656">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-656">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="a4beb-657">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-657">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-658">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-658">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-659">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-659">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="a4beb-660">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-660">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-661">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-661">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-662">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-662">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="a4beb-663">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-663">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-664">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-664">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-665">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-665">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="a4beb-666">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-666">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-667">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-667">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-668">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-668">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="a4beb-669">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-669">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-670">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-670">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-671">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-671">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="a4beb-672">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-672">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-673">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-673">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-674">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-674">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="a4beb-675">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-675">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-676">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-676">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-677">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-677">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="a4beb-678">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-678">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-679">Les plages qui se croisent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-679">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="a4beb-680">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-680">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-681">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente l’intersection rectangulaire de deux plages ou plus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-681">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rectangular intersection of two or more ranges.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSandboxed">
      <MemberSignature Language="C#" Value="public bool IsSandboxed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSandboxed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSandboxed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSandboxed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-682">Indique si le classeur spécifié est ouvert dans une fenêtre mode protégé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-682">Gets whether the specified workbook is open in a Protected View window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-683">
            <b>la valeur true</b> si le classeur spécifié est ouvert dans une fenêtre mode protégé ; Sinon, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-683">
              <b>true</b> if the specified workbook is open in a Protected View window; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-684">
            <para>En lecture seule</para>
            <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> propriété pour déterminer si un classeur est ouvert dans une fenêtre mode protégé.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-684">
              <para>Read-only</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> property to determine if a workbook is open in a Protected View window.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public bool Iteration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Iteration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Iteration" />
      <MemberSignature Language="VB.NET" Value="Public Property Iteration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Iteration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-685">
            <b>La valeur true</b> si Microsoft Excel utilise l’itération pour résoudre des références circulaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-685">
              <b>True</b> if Microsoft Excel will use iteration to resolve circular references.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.LanguageSettings LanguageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.LanguageSettings LanguageSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LanguageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageSettings As LanguageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::LanguageSettings ^ LanguageSettings { Microsoft::Office::Core::LanguageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.LanguageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-686">Renvoie le <see cref="T:Microsoft.Office.Core.LanguageSettings" /> object, qui contient des informations sur les paramètres de langue dans Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-686">Returns the <see cref="T:Microsoft.Office.Core.LanguageSettings" /> object, which contains information about the language settings in Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeButtons">
      <MemberSignature Language="C#" Value="public bool LargeButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LargeButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LargeButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-687">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-687">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeOperationCellThousandCount">
      <MemberSignature Language="C#" Value="public int LargeOperationCellThousandCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeOperationCellThousandCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeOperationCellThousandCount" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeOperationCellThousandCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LargeOperationCellThousandCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-688">Cette propriété renvoie ou définit le nombre maximal de cellules nécessaires dans une opération au-delà duquel une alerte est déclenchée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-688">Returns or sets the maximum number of cells needed in an operation beyond which an alert  is triggered.</span>
          </span>
          <span data-ttu-id="a4beb-689">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-689">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-690">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-690">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-691">Distance, en points, entre le bord gauche de l’écran et le bord gauche de la fenêtre Microsoft Excel principale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-691">The distance, in points, from the left edge of the screen to the left edge of the main Microsoft Excel window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-692">
            <para>Si la fenêtre est réduite, cette propriété renvoie un nombre négatif qui varie en fonction de la largeur de la bordure de la fenêtre. Définir cette propriété sur 0 (zéro) rend la fenêtre un petit peu plus petite qu’il serait si la fenêtre d’application avait été agrandie. En d’autres termes, si cette propriété est 0 (zéro), la bordure gauche de la fenêtre Microsoft Excel principale sera peine visible à l’écran.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-692">
              <para>If the window is maximized, this property returns a negative number that varies based on the width of the window border. Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized. In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LibraryPath">
      <MemberSignature Language="C#" Value="public string LibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-693">Renvoie le chemin d’accès au dossier Library sans du séparateur final.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-693">Returns the path to the Library folder but without the final separator.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions">
      <MemberSignature Language="C#" Value="public void MacroOptions (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1135)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">
          <span data-ttu-id="a4beb-694">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-694">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-695">Nom de la macro ou de la fonction définie par l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-695">The macro name or the name of a user defined function (UDF).</span>
          </span>
        </param>
        <param name="Description">
          <span data-ttu-id="a4beb-696">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-696">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-697">Description de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-697">The macro description.</span>
          </span>
        </param>
        <param name="HasMenu">
          <span data-ttu-id="a4beb-698">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-698">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-699">Argument ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-699">This argument is ignored.</span>
          </span>
        </param>
        <param name="MenuText">
          <span data-ttu-id="a4beb-700">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-700">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-701">Argument ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-701">This argument is ignored.</span>
          </span>
        </param>
        <param name="HasShortcutKey">
          <span data-ttu-id="a4beb-702">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-702">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-703">
            <b>La valeur true</b> pour assigner une touche de raccourci à la macro (<paramref name="ShortcutKey" /> doit également être spécifié).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-703">
              <b>True</b> to assign a shortcut key to the macro (<paramref name="ShortcutKey" /> must also be specified).</span>
          </span>
          <span data-ttu-id="a4beb-704">Si cet argument a la <b>valeur False</b>, aucune touche de raccourci n’est assignée à la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-704">If this argument is <b>False</b>, no shortcut key is assigned to the macro.</span>
          </span>
          <span data-ttu-id="a4beb-705">Si la macro a déjà une touche de raccourci, affectant à cet argument la <b>valeur False</b> supprime la touche de raccourci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-705">If the macro already has a shortcut key, setting this argument to <b>False</b> removes the shortcut key.</span>
          </span>
          <span data-ttu-id="a4beb-706">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-706">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="ShortcutKey">
          <span data-ttu-id="a4beb-707">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-707">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-708">Obligatoire si <paramref name="HasShortcutKey" /> est <b>True</b>; ignoré dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-708">Required if <paramref name="HasShortcutKey" /> is <b>True</b>; ignored otherwise.</span>
          </span>
          <span data-ttu-id="a4beb-709">La touche de raccourci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-709">The shortcut key.</span>
          </span>
        </param>
        <param name="Category">
          <span data-ttu-id="a4beb-710">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-710">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-711">Un entier qui spécifie une catégorie de fonction macro existante (financier, Date &amp; heure ou définies par l’utilisateur, par exemple).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-711">An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example).</span>
          </span>
          <span data-ttu-id="a4beb-712">Voir la section Notes pour connaître les entiers mappés sur les catégories prédéfinies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-712">See the remarks section to determine the integers that are mapped to the built-in categories.</span>
          </span>
          <span data-ttu-id="a4beb-713">Vous pouvez également spécifier une chaîne pour une catégorie personnalisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-713">You can also specify a string for a custom category.</span>
          </span>
          <span data-ttu-id="a4beb-714">Si vous fournissez une chaîne, il est considéré comme le nom de catégorie qui est affiché dans la boîte de dialogue Insérer une fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-714">If you provide a string, it will be treated as the category name that is displayed in the Insert Function dialog box.</span>
          </span>
          <span data-ttu-id="a4beb-715">Si le nom de catégorie n’a jamais été utilisé, une nouvelle catégorie est définie avec ce nom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-715">If the category name has never been used, a new category is defined with that name.</span>
          </span>
          <span data-ttu-id="a4beb-716">Si vous utilisez un nom de catégorie qui est identique à un nom prédéfini, Excel mappe la fonction définie par l’utilisateur sur cette catégorie prédéfinie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-716">If you use a category name that is that same as a built-in name, Excel will map the user defined function to that built-in category.</span>
          </span>
        </param>
        <param name="StatusBar">
          <span data-ttu-id="a4beb-717">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-717">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-718">Texte de la barre d'état de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-718">The status bar text for the macro.</span>
          </span>
        </param>
        <param name="HelpContextID">
          <span data-ttu-id="a4beb-719">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-719">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-720">Nombre entier qui spécifie l'identificateur contextuel de la rubrique d'aide assignée à la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-720">An integer that specifies the context ID for the Help topic assigned to the macro.</span>
          </span>
        </param>
        <param name="HelpFile">
          <span data-ttu-id="a4beb-721">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-721">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-722">Le nom du fichier d’aide qui contient la rubrique d’aide définie par <paramref name="HelpContextId" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-722">The name of the Help file that contains the Help topic defined by <paramref name="HelpContextId" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-723">Correspond aux options de la boîte de dialogue Options de Macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-723">Corresponds to options in the Macro Options dialog box.</span>
          </span>
          <span data-ttu-id="a4beb-724">Vous pouvez également utiliser cette méthode pour afficher une fonction définie par l’utilisateur (UDF) dans une catégorie prédéfinie ou nouvelle dans la boîte de dialogue Insérer une fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-724">You can also use this method to display a user defined function (UDF) in a built-in or new category within the Insert Function dialog box.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-725">
            <para>Le tableau suivant répertorie les entiers mappés sur les catégories prédéfinies qui peuvent être utilisées dans le paramètre Category.</para>
            <list type="table">
              <item>
                <term>1</term>
                <description>
                  <b>financières</b>
                </description>
              </item>
              <item>
                <term>2</term>
                <description>
                  <b>Date &amp; temps</b>
                </description>
              </item>
              <item>
                <term>3</term>
                <description>
                  <b>Math &amp; trigonométrique</b>
                </description>
              </item>
              <item>
                <term>4</term>
                <description>
                  <b>statistiques</b>
                </description>
              </item>
              <item>
                <term>5</term>
                <description>
                  <b>recherche &amp; Référence</b>
                </description>
              </item>
              <term>6</term>
              <description>
                <b>base de données</b>
              </description>
              <item>de
              <term>7</term><description><b>texte</b></description></item>
              <item>
                <description>
                  <b>logique</b>
                </description>
                <term>8</term>
              </item>
              <item></item>
              <item>
                <term>9</term>
                <description>
                  <b>informations</b>
                </description>
              </item>
              <item>
                <term>10</term>
                <description>
                  <b>commandes</b>
                </description>
              </item>
              <item>
                <term>11</term>
                <description>
                  <b>personnalisation</b>
                </description>
              </item>
              <item>
                <term>12</term>
                <description>
                  <b>Macro contrôle</b>
                </description>
              </item>
              <item>
                <term>13</term>
                <description>
                  <b>DDE/externe</b>
                </description>
              </item>
              <item>
                <term>14</term>
                <description>
                  <b>défini par l’utilisateur</b>
                </description>
              </item>
              <item>
                <term>15</term>
                <description>premier catégorie personnalisée</description>
              </item>
              <item>
                <term>16</term>
                <description>deuxième catégorie personnalisée</description>
              </item>
              <item>
                <term>17</term>
                <description>troisième catégorie personnalisée</description>
              </item>
              <item>
                <term>18</term>
                <description>quatrième catégorie personnalisée</description>
              </item>
              <item>
                <term>19</term>
                <description>cinquième personnalisé catégorie</description>
              </item>
              <item>
                <term>20</term>
                <description>sixième catégorie personnalisée</description>
              </item>
              <item>
                <term>21</term>
                <description>septième catégorie personnalisée</description>
              </item>
              <item>
                <term>22</term>
                <description>huitième catégorie personnalisée</description>
              </item>
              <item>
                <term>23</term>
                <description>neuvième personnalisé catégorie</description>
              </item>
              <item>
                <term>24</term>
                <description>dixième catégorie personnalisée</description>
              </item>
              <item>
                <term>25</term>
                <description>onzième catégorie personnalisée</description>
              </item>
              <item>
                <term>26</term>
                <description>douzième catégorie personnalisée</description>
              </item>
              <item>
                <term>27</term>
                <description>treizième catégorie personnalisée</description>
              </item>
              <item>
                <term>28</term>
                <description>quatorzième catégorie personnalisée</description>
              </item>
              <item>
                <term>29</term>
                <description>quinzième catégorie personnalisée</description>
              </item>
              <item>
                <term>30</term>
                <description>seizième catégorie personnalisée</description>
              </item>
              <item>
                <term>31</term>
                <description>Dix-septième catégorie personnalisée</description>
              </item>
              <item>
                <term>32</term>
                <description>dix-huitième catégorie personnalisée</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-725">
              <para>The following table lists which integers are mapped to the built-in categories that can be used in the Category parameter.</para>
              <list type="table">
                <item>
                  <term>1</term>
                  <description>
                    <b>Financial</b>
                  </description>
                </item>
                <item>
                  <term>2</term>
                  <description>
                    <b>Date &amp; Time</b>
                  </description>
                </item>
                <item>
                  <term>3</term>
                  <description>
                    <b>Math &amp; Trig</b>
                  </description>
                </item>
                <item>
                  <term>4</term>
                  <description>
                    <b>Statistical</b>
                  </description>
                </item>
                <item>
                  <term>5</term>
                  <description>
                    <b>Lookup &amp; Reference</b>
                  </description>
                </item>
                <item>
                  <term>6</term>
                  <description>
                    <b>Database</b>
                  </description>
                </item>
                <item>
                  <term>7</term>
                  <description>
                    <b>Text</b>
                  </description>
                </item>
                <item>
                  <term>8</term>
                  <description>
                    <b>Logical</b>
                  </description>
                </item>
                <item>
                  <term>9</term>
                  <description>
                    <b>Information</b>
                  </description>
                </item>
                <item>
                  <term>10</term>
                  <description>
                    <b>Commands</b>
                  </description>
                </item>
                <item>
                  <term>11</term>
                  <description>
                    <b>Customizing</b>
                  </description>
                </item>
                <item>
                  <term>12</term>
                  <description>
                    <b>Macro Control</b>
                  </description>
                </item>
                <item>
                  <term>13</term>
                  <description>
                    <b>DDE/External</b>
                  </description>
                </item>
                <item>
                  <term>14</term>
                  <description>
                    <b>User Defined</b>
                  </description>
                </item>
                <item>
                  <term>15</term>
                  <description>First custom category</description>
                </item>
                <item>
                  <term>16</term>
                  <description>Second custom category</description>
                </item>
                <item>
                  <term>17</term>
                  <description>Third custom category</description>
                </item>
                <item>
                  <term>18</term>
                  <description>Fourth custom category</description>
                </item>
                <item>
                  <term>19</term>
                  <description>Fifth custom category</description>
                </item>
                <item>
                  <term>20</term>
                  <description>Sixth custom category</description>
                </item>
                <item>
                  <term>21</term>
                  <description>Seventh custom category</description>
                </item>
                <item>
                  <term>22</term>
                  <description>Eighth custom category</description>
                </item>
                <item>
                  <term>23</term>
                  <description>Ninth custom category</description>
                </item>
                <item>
                  <term>24</term>
                  <description>Tenth custom category</description>
                </item>
                <item>
                  <term>25</term>
                  <description>Eleventh custom category</description>
                </item>
                <item>
                  <term>26</term>
                  <description>Twelfth custom category</description>
                </item>
                <item>
                  <term>27</term>
                  <description>Thirteenth custom category</description>
                </item>
                <item>
                  <term>28</term>
                  <description>Fourteenth custom category</description>
                </item>
                <item>
                  <term>29</term>
                  <description>Fifteenth custom category</description>
                </item>
                <item>
                  <term>30</term>
                  <description>Sixteenth custom category</description>
                </item>
                <item>
                  <term>31</term>
                  <description>Seventeenth custom category</description>
                </item>
                <item>
                  <term>32</term>
                  <description>Eighteenth custom category</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions2">
      <MemberSignature Language="C#" Value="public void MacroOptions2 (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile, object ArgumentDescriptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions2([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile, [in]object ArgumentDescriptions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions2 (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object, Optional ArgumentDescriptions As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="ArgumentDescriptions" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Description">To be added.</param>
        <param name="HasMenu">To be added.</param>
        <param name="MenuText">To be added.</param>
        <param name="HasShortcutKey">To be added.</param>
        <param name="ShortcutKey">To be added.</param>
        <param name="Category">To be added.</param>
        <param name="StatusBar">To be added.</param>
        <param name="HelpContextID">To be added.</param>
        <param name="HelpFile">To be added.</param>
        <param name="ArgumentDescriptions">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-726">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-726">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogoff">
      <MemberSignature Language="C#" Value="public void MailLogoff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogoff() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogoff" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogoff ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MailLogoff();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-727">Cette méthode ferme une session de messagerie MAPI ouverte par Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-727">Closes a MAPI mail session established by Microsoft Excel.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogon">
      <MemberSignature Language="C#" Value="public void MailLogon (object Name, object Password, object DownloadNewMail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogon([in]object Name, [in]object Password, [in]object DownloadNewMail) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogon(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogon (Optional Name As Object, Optional Password As Object, Optional DownloadNewMail As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DownloadNewMail" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="a4beb-728">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-728">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-729">Le nom du compte de messagerie ou le nom de profil Microsoft Exchange.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-729">The mail account name or Microsoft Exchange profile name.</span>
          </span>
          <span data-ttu-id="a4beb-730">Si cet argument est omis, le nom de compte de messagerie par défaut est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-730">If this argument is omitted, the default mail account name is used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="a4beb-731">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-731">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-732">Mot de passe de messagerie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-732">The mail account password.</span>
          </span>
          <span data-ttu-id="a4beb-733">Cet argument est ignoré dans Microsoft Exchange.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-733">This argument is ignored in Microsoft Exchange.</span>
          </span>
        </param>
        <param name="DownloadNewMail">
          <span data-ttu-id="a4beb-734">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-734">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-735">
            <b>True</b> pour télécharger immédiatement les nouveaux messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-735">
              <b>True</b> to download new mail immediately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-p258">Se connecte et ouvre une session de messagerie MAPI ou Microsoft Exchange. Si Microsoft Mail n’est pas déjà démarré, vous devez utiliser cette méthode pour établir une session de messagerie afin de permettre l’utilisation de fonctions de distribution de documents ou de messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p258">Logs in to MAPI Mail or Microsoft Exchange and establishes a mail session. If Microsoft Mail isn't already running, you must use this method to establish a mail session before mail or document routing functions can be used.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-738">
            <para>Microsoft Excel se déconnecte les sessions de messagerie il précédemment établi avant d’essayer d’établir une nouvelle session.</para>
            <para>Pour la session de messagerie par défaut système omettez, omettez les paramètres le nom et le mot de passe.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-738">
              <para>Microsoft Excel logs off any mail sessions it previously established before attempting to establish the new session.</para>
              <para>To piggyback on the system default mail session, omit both the name and password parameters.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSession">
      <MemberSignature Language="C#" Value="public object MailSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MailSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSession As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MailSession { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-739">Renvoie le numéro de session de messagerie MAPI sous la forme d’une chaîne hexadécimale (s’il existe une session active), ou renvoie la <b>valeur Null</b> s’il n’existe aucune session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-739">Returns the MAPI mail session number as a hexadecimal string (if there's an active session), or returns <b>Null</b> if there's no session.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-740">
            <para>Cette propriété s’applique uniquement aux sessions de messagerie créées par Microsoft Excel (elle ne renvoie pas un numéro de session de messagerie de Microsoft Mail).</para>
            <para>Cette propriété n’est pas utilisée sur les systèmes de messagerie PowerTalk.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-740">
              <para>This property applies only to mail sessions created by Microsoft Excel (it doesn't return a mail session number for Microsoft Mail).</para>
              <para>This property isn't used on PowerTalk mail systems.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSystem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMailSystem MailSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMailSystem MailSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSystem As XlMailSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMailSystem MailSystem { Microsoft::Office::Interop::Excel::XlMailSystem get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMailSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-741">Renvoie le système de messagerie est installé sur l’ordinateur hôte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-741">Returns the mail system that's installed on the host machine.</span>
          </span>
          <span data-ttu-id="a4beb-742">En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-742">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-743">
            <para>
              <b>XlMailSystem</b> peut être une de ces constantes <b>XlMailSystem</b> :</para>
            <para>
              <b>xlMAPI</b>
            </para>
            <para>
              <b>xlNoMailSystem</b>
            </para>
            <para>
              <b>xlPowerTalk</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-743">
              <para>
                <b>XlMailSystem</b> can be one of these <b>XlMailSystem</b> constants:</para>
              <para>
                <b>xlMAPI</b>
              </para>
              <para>
                <b>xlNoMailSystem</b>
              </para>
              <para>
                <b>xlPowerTalk</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPaperSize">
      <MemberSignature Language="C#" Value="public bool MapPaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapPaperSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MapPaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MapPaperSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapPaperSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-744">
            <b>La valeur true</b> si les documents au format de la taille de papier standard d’un autre pays/région (par exemple, A4) sont automatiquement ajustées afin que lors de l’impression de la taille de papier standard (par exemple, lettre) de votre pays/région.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-744">
              <b>True</b> if documents formatted for the standard paper size of another country/region (for example, A4) are automatically adjusted so that they're printed correctly on the standard paper size (for example, Letter) of your country/region.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathCoprocessorAvailable">
      <MemberSignature Language="C#" Value="public bool MathCoprocessorAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathCoprocessorAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MathCoprocessorAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MathCoprocessorAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MathCoprocessorAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-745">
            <b>True</b> si un coprocesseur mathématique est disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-745">
              <b>True</b> if a math coprocessor is available.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxChange">
      <MemberSignature Language="C#" Value="public double MaxChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxChange" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxChange { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-746">Cette propriété renvoie ou définit la quantité maximale de chaque itération pendant que Microsoft Excel résout des références circulaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-746">Returns or sets the maximum amount of change between each iteration as Microsoft Excel resolves circular references.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-747">
            <para>Le <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> propriété définit le nombre maximal d’itérations que Microsoft Excel peut utiliser lors de la résolution des références circulaires.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-747">
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> property sets the maximum number of iterations that Microsoft Excel can use when resolving circular references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIterations">
      <MemberSignature Language="C#" Value="public int MaxIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIterations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIterations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-748">Cette propriété renvoie ou définit le nombre maximal d’itérations que Microsoft Excel peut utiliser pour résoudre des références circulaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-748">Returns or sets the maximum number of iterations that Microsoft Excel can use to resolve a circular reference.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-749">
            <para>Le <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> propriété définit la quantité maximale de chaque itération lors de la résolution des références circulaires par Microsoft Excel.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-749">
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> property sets the maximum amount of change between each iteration when Microsoft Excel is resolving circular references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementUnit">
      <MemberSignature Language="C#" Value="public int MeasurementUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasurementUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MeasurementUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property MeasurementUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasurementUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-750">Spécifie l’unité de mesure utilisée dans l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-750">Specifies the measurement unit used in the application.</span>
          </span>
          <span data-ttu-id="a4beb-751">
            <b>Entier en lecture/écriture correspondant à l’une des constantes dans</b> le <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-751">Read/write <b>Integer</b> value corresponding to the constants in the <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-752">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-752">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryFree">
      <MemberSignature Language="C#" Value="public int MemoryFree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryFree" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryFree" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryFree As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryFree { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-753">Renvoie la quantité de mémoire est toujours disponible pour Microsoft Excel à utiliser, en octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-753">Returns the amount of memory that's still available for Microsoft Excel to use, in bytes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryTotal">
      <MemberSignature Language="C#" Value="public int MemoryTotal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryTotal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryTotal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryTotal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryTotal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-754">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-754">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryUsed">
      <MemberSignature Language="C#" Value="public int MemoryUsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryUsed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryUsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryUsed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryUsed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-755">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-755">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBars MenuBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBars MenuBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MenuBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuBars As MenuBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBars ^ MenuBars { Microsoft::Office::Interop::Excel::MenuBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-756">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-756">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeInstances">
      <MemberSignature Language="C#" Value="public bool MergeInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MergeInstances" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MergeInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MergeInstances { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-757">True pour fusionner plusieurs instances de l’application dans une seule instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-757">True to merge multiple instances of the application into a single instance.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Modules Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Modules Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Modules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Modules ^ Modules { Microsoft::Office::Interop::Excel::Modules ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Modules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-758">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-758">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseAvailable">
      <MemberSignature Language="C#" Value="public bool MouseAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MouseAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MouseAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MouseAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-759">
            <b>La valeur true</b> si une souris est disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-759">
              <b>True</b> if a mouse is available.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturn">
      <MemberSignature Language="C#" Value="public bool MoveAfterReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveAfterReturn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveAfterReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-760">
            <b>True</b> si la cellule active est déplacée dès que la touche entrée (retour).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-760">
              <b>True</b> if the active cell will be moved as soon as the ENTER (RETURN) key is pressed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-761">
            <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> propriété pour indiquer la direction dans laquelle la cellule active doit être déplacé.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-761">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> property to specify the direction in which the active cell is to be moved.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturnDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturnDirection As XlDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDirection MoveAfterReturnDirection { Microsoft::Office::Interop::Excel::XlDirection get(); void set(Microsoft::Office::Interop::Excel::XlDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-762">Cette propriété renvoie ou définit la direction dans laquelle la cellule active est déplacée lorsque l’utilisateur appuie sur ENTRÉE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-762">Returns or sets the direction in which the active cell is moved when the user presses ENTER.</span>
          </span>
          <span data-ttu-id="a4beb-763">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-763">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-764">
            <para>
              <b>XlDirection</b> peut être une de ces constantes <b>XlDirection</b> :</para>
            <para>
              <b>xlDown</b>
            </para>
            <para>
              <b>xlToLeft</b>
            </para>
            <para>
              <b>xlToRight</b>
            </para>
            <para>
              <b>xlUp</b>
            </para>
            <para>Si le <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> propriété est <b>False</b>, la sélection ne se déplace pas du tout, quelle que soit la la propriété <b>MoveAfterReturnDirection</b> est définie.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-764">
              <para>
                <b>XlDirection</b> can be one of these <b>XlDirection</b> constants:</para>
              <para>
                <b>xlDown</b>
              </para>
              <para>
                <b>xlToLeft</b>
              </para>
              <para>
                <b>xlToRight</b>
              </para>
              <para>
                <b>xlUp</b>
              </para>
              <para>If the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> property is <b>False</b>, the selection doesn’t move at all, regardless of how the <b>MoveAfterReturnDirection</b> property is set.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiThreadedCalculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MultiThreadedCalculation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiThreadedCalculation As MultiThreadedCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ MultiThreadedCalculation { Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MultiThreadedCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-765">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> objet qui contrôle les paramètres de recalcul multi-thread qui sont Nouveautés dans Excel 2007.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-765">Returns a <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> object that controls the multi-threaded recalculation settings that are new in Excel 2007.</span>
          </span>
          <span data-ttu-id="a4beb-766">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-766">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-767">Renvoie le nom de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-767">Returns the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-768">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection qui représente tous les noms du classeur actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-768">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkTemplatesPath">
      <MemberSignature Language="C#" Value="public string NetworkTemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NetworkTemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NetworkTemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkTemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NetworkTemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-769">Renvoie le chemin d’accès réseau où les modèles sont stockés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-769">Returns the network path where templates are stored.</span>
          </span>
          <span data-ttu-id="a4beb-770">Si le chemin d’accès réseau n’existe pas, cette propriété renvoie une chaîne vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-770">If the network path doesn’t exist, this property returns an empty string.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.NewFile NewWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.NewFile NewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewWorkbook As NewFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::NewFile ^ NewWorkbook { Microsoft::Office::Core::NewFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.NewFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-771">Renvoie un objet <b>NewFile</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-771">Returns a <b>NewFile</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextLetter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook NextLetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook NextLetter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.NextLetter" />
      <MemberSignature Language="VB.NET" Value="Public Function NextLetter () As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Workbook ^ NextLetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(972)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-p264">Vous avez demandé de l’aide sur un mot clé Visual Basic utilisé uniquement pour les Macintosh. Pour plus d’informations sur ce mot clé, consultez l’Aide fournie avec l’édition de Microsoft Office pour Macintosh</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p264">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ODBCErrors As ODBCErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ODBCErrors ^ ODBCErrors { Microsoft::Office::Interop::Excel::ODBCErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ODBCErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-774">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection qui contient toutes les erreurs ODBC générées par la plus récente table de requête ou d’une opération de rapport de tableau croisé dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-774">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection that contains all the ODBC errors generated by the most recent query table or PivotTable report operation.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-775">
            <para>Si plusieurs requêtes sont exécutées en même temps, le <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection contient les erreurs ODBC de la requête est terminée en dernier.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-775">
              <para>If there’s more than one query running at the same time, the <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection contains the ODBC errors from the query that’s finished last.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCTimeout">
      <MemberSignature Language="C#" Value="public int ODBCTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ODBCTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ODBCTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ODBCTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-776">Cette propriété renvoie ou définit le délai de requête ODBC en secondes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-776">Returns or sets the ODBC query time limit in seconds.</span>
          </span>
          <span data-ttu-id="a4beb-777">La valeur par défaut est 45 secondes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-777">The default value is 45 seconds.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-778">
            <para>La valeur 0 (zéro) indique une limite de temps d’exécution indéterminée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-778">
              <para>The value 0 (zero) indicates an indefinite time limit.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEDBErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OLEDBErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEDBErrors As OLEDBErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEDBErrors ^ OLEDBErrors { Microsoft::Office::Interop::Excel::OLEDBErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEDBErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-779">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> collection, qui représente les informations d’erreur renvoyées par la requête OLE DB la plus récente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-779">Returns the <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> collection, which represents the error information returned by the most recent OLE DB query.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-780">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-780">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-781">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-781">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-782">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-782">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-783">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-783">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKey">
      <MemberSignature Language="C#" Value="public void OnKey (string Key, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnKey([in]string Key, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnKey (Key As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="a4beb-784">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-784">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-785">Chaîne indiquant la touche sur laquelle appuyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-785">A string indicating the key to be pressed.</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="a4beb-786">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-786">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-787">Chaîne indiquant le nom de la procédure à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-787">A string indicating the name of the procedure to be run.</span>
          </span>
          <span data-ttu-id="a4beb-788">Si <paramref name="Procedure" /> est « » (texte vide), rien ne se produit lorsque <paramref name="Key" /> a été enfoncé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-788">If <paramref name="Procedure" /> is "" (empty text), nothing happens when <paramref name="Key" /> is pressed.</span>
          </span>
          <span data-ttu-id="a4beb-789">Cette <b>OnKey</b> modifie le résultat normal des touches dans Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-789">This form of <b>OnKey</b> changes the normal result of keystrokes in Microsoft Excel.</span>
          </span>
          <span data-ttu-id="a4beb-790">Si <paramref name="Procedure" /> est omis, <paramref name="Key" /> revient à son résultat d’origine dans Microsoft Excel et n’importe quelle touche spéciale affectations effectuées avec de précédentes méthodes <b>OnKey</b> sont supprimées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-790">If <paramref name="Procedure" /> is omitted, <paramref name="Key" /> reverts to its normal result in Microsoft Excel, and any special key assignments made with previous <b>OnKey</b> methods are cleared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-791">Exécute une procédure spécifiée lorsque l’utilisateur appuie sur une touche ou une combinaison de touches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-791">Runs a specified procedure when a particular key or key combination is pressed.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-792">
            <para>Le <paramref name="Key" /> argument peut spécifier n’importe quelle touche unique combinée avec ALT, CTRL ou MAJ ou n’importe quelle combinaison de ces clés. Chaque clé est représenté par un ou plusieurs caractères, tel que « a » pour le caractère un, ou « {ENTER} » pour la touche ENTRÉE.</para>
            <para>Pour spécifier des caractères qui ne sont pas affichés lorsque vous appuyez sur la touche correspondante (entrée ou TAB, par exemple), utilisez les codes listés dans le tableau suivant. Chaque code de la table représente une touche du clavier.</para>
            <list type="table">
              <item>
                <term>Retour arrière</term>
                <description>{BACKSPACE} ou {BS}</description>
              </item>
              <item>
                <term>arrêt</term>
                <description>{arrêt}</description>
              </item>
              <item>
                <term>Verr.MAJ</term>
                <description>{CAPSLOCK}</description>
              </item>
              <item>
                <term>clair</term>
                <description>{clair}</description>
              </item>
              <item>
                <term>Supprimer ou Suppr</term>
                <description>{ DELETE} ou {DEL}</description>
              </item>
              <item>
                <term>Bas</term>
                <description>{bas}</description>
              </item>
              <item>
                <term>fin</term>
                <description>{fin}</description>
              </item>
              <item>
                <term>entrée</term>
                <description>~ (tilde)</description>
              </item>
              <item>
                <term>entrée (pavé numérique)</term>
                <description>{entrée}</description>
              </item>
              <item>
                <term>ÉCHAP</term>
                <description>{ESCAPE} ou {ESC}</description>
              </item>
              <item>
                <term>F1 à F15</term>
                <description>{F1} à {F15}</description>
              </item>
              <item>
                <term>Aide</term>
                <description>{aide}</description>
              </item>
              <item>
                <term>Accueil</term>
                <description>{accueil}</description>
              </item>
              <item>
                <term>INS</term>
                <description>{Insérer}</description>
              </item>
              <item>
                <term>Flèche gauche</term>
                <description>{LEFT}</description>
              </item>
              <item>
                <term>Le verrouillage du</term>
                <description>{NUMLOCK}</description>
              </item>
              <item>
                <term>Vers le bas de PAGE</term>
                <description>{PG}</description>
              </item>
              <item>
                <term>PAGE précédente</term>
                <description>{page précédente}</description>
              </item>
              <item>
                <term>Renvoyer</term>
                <description>{RETURN}</description>
              </item>
              <item>
                <term>Flèche vers la droite</term>
                <description>{RIGHT}</description>
              </item>
              <item>
                <term>Arrêt défil</term>
                <description>{Arrêt défil}</description>
              </item>
              <item>
                <term>Onglet</term>
                <description>{onglet}</description>
              </item>
              <item>
                <term>Flèche vers le haut</term>
                <description>{UP}</description>
              </item>
            </list>
            <para>Vous pouvez également spécifier des touches combinées avec MAJ, CTRL ou ALT. Pour spécifier une touche combinée à une autre ou les clés, utilisez le tableau suivant.</para>
            <list type="table">
              <item>
                <term>MAJ</term>
                <description>+ (signe plus)</description>
              </item>
              <item>
                <term>CTRL</term>
                <description>^ (accent circonflexe)</description>
              </item>
              <item>
                <term>ALT</term>
                <description>% (signe pourcentage)</description>
              </item>
            </list>
            <para>Pour affecter une procédure à un des caractères spéciaux (+, ^, % et ainsi de suite), mettez le caractère entre accolades.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-792">
              <para>The <paramref name="Key" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of these keys. Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</para>
              <para>To specify characters that aren't displayed when you press the corresponding key (ENTER or TAB, for example), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</para>
              <list type="table">
                <item>
                  <term>BACKSPACE</term>
                  <description>{BACKSPACE} or {BS}</description>
                </item>
                <item>
                  <term>BREAK</term>
                  <description>{BREAK}</description>
                </item>
                <item>
                  <term>CAPS LOCK</term>
                  <description>{CAPSLOCK}</description>
                </item>
                <item>
                  <term>CLEAR</term>
                  <description>{CLEAR}</description>
                </item>
                <item>
                  <term>DELETE or DEL</term>
                  <description>{DELETE} or {DEL}</description>
                </item>
                <item>
                  <term>DOWN ARROW</term>
                  <description>{DOWN}</description>
                </item>
                <item>
                  <term>END</term>
                  <description>{END}</description>
                </item>
                <item>
                  <term>ENTER</term>
                  <description>~ (tilde)</description>
                </item>
                <item>
                  <term>ENTER (numeric keypad)</term>
                  <description>{ENTER}</description>
                </item>
                <item>
                  <term>ESC</term>
                  <description>{ESCAPE} or {ESC}</description>
                </item>
                <item>
                  <term>F1 through F15</term>
                  <description>{F1} through {F15}</description>
                </item>
                <item>
                  <term>HELP</term>
                  <description>{HELP}</description>
                </item>
                <item>
                  <term>HOME</term>
                  <description>{HOME}</description>
                </item>
                <item>
                  <term>INS</term>
                  <description>{INSERT}</description>
                </item>
                <item>
                  <term>LEFT ARROW</term>
                  <description>{LEFT}</description>
                </item>
                <item>
                  <term>NUM LOCK</term>
                  <description>{NUMLOCK}</description>
                </item>
                <item>
                  <term>PAGE DOWN</term>
                  <description>{PGDN}</description>
                </item>
                <item>
                  <term>PAGE UP</term>
                  <description>{PGUP}</description>
                </item>
                <item>
                  <term>RETURN</term>
                  <description>{RETURN}</description>
                </item>
                <item>
                  <term>RIGHT ARROW</term>
                  <description>{RIGHT}</description>
                </item>
                <item>
                  <term>SCROLL LOCK</term>
                  <description>{SCROLLLOCK}</description>
                </item>
                <item>
                  <term>TAB</term>
                  <description>{TAB}</description>
                </item>
                <item>
                  <term>UP ARROW</term>
                  <description>{UP}</description>
                </item>
              </list>
              <para>You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</para>
              <list type="table">
                <item>
                  <term>SHIFT</term>
                  <description>+ (plus sign)</description>
                </item>
                <item>
                  <term>CTRL</term>
                  <description>^ (caret)</description>
                </item>
                <item>
                  <term>ALT</term>
                  <description>% (percent sign)</description>
                </item>
              </list>
              <para>To assign a procedure to one of the special characters (+, ^, %, and so on), enclose the character in braces.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRepeat">
      <MemberSignature Language="C#" Value="public void OnRepeat (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRepeat([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRepeat (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRepeat(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="a4beb-793">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-793">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-794">Texte qui apparaît avec la commande Répéter (menu Edition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-794">The text that appears with the Repeat command (Edit menu).</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="a4beb-795">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-795">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-796">Nom de la procédure exécutée lorsque vous choisissez la commande Répéter (menu Edition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-796">The name of the procedure that will be run when you choose the Repeat command (Edit menu).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-797">Cette méthode définit la commande de menu Répéter et le nom de la procédure exécutée lorsque vous sélectionnez la commande Rétablir (menu Edition) après l'exécution de la procédure qui définit cette propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-797">Sets the Repeat menu item and the name of the procedure that will run if you choose the Repeat command (Edit menu) after running the procedure that sets this property.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-798">
            <para>Si une procédure n’utilise pas la méthode <b>OnRepeat</b> , la commande Répéter répète la procédure exécutée.</para>
            <para>La procédure doit utiliser <b>OnRepeat</b> et <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> dernières méthodes, pour éviter la répétition et d’annulation par les actions suivantes de la procédure de remplacement des procédures de.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-798">
              <para>If a procedure doesn’t use the <b>OnRepeat</b> method, the Repeat command repeats the procedure that was run most recently.</para>
              <para>The procedure must use the <b>OnRepeat</b> and <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-799">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-799">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-800">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-800">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTime">
      <MemberSignature Language="C#" Value="public void OnTime (object EarliestTime, string Procedure, object LatestTime, object Schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTime([in]object EarliestTime, [in]string Procedure, [in]object LatestTime, [in]object Schedule) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnTime(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnTime (EarliestTime As Object, Procedure As String, Optional LatestTime As Object, Optional Schedule As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(624)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EarliestTime" Type="System.Object" />
        <Parameter Name="Procedure" Type="System.String" />
        <Parameter Name="LatestTime" Type="System.Object" />
        <Parameter Name="Schedule" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EarliestTime">
          <span data-ttu-id="a4beb-801">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-801">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-802">Heure à laquelle vous voulez que la procédure s'exécute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-802">The time when you want this procedure to be run.</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="a4beb-803">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-803">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-804">Nom de la procédure à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-804">The name of the procedure to be run.</span>
          </span>
        </param>
        <param name="LatestTime">
          <span data-ttu-id="a4beb-805">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-805">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-806">La dernière heure à laquelle la procédure peut être exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-806">The latest time at which the procedure can be run.</span>
          </span>
          <span data-ttu-id="a4beb-807">Par exemple, si <paramref name="LatestTime" /> est défini sur <paramref name="EarliestTime" /> + 30 et Microsoft Excel n’est pas en mode Ready, Copy, Cut ou rechercher à <paramref name="EarliestTime" /> , car une autre procédure est en cours d’exécution, Microsoft Excel attendra 30 secondes pour la première procédure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-807">For example, if <paramref name="LatestTime" /> is set to <paramref name="EarliestTime" /> + 30 and Microsoft Excel is not in Ready, Copy, Cut, or Find mode at <paramref name="EarliestTime" /> because another procedure is running, Microsoft Excel will wait 30 seconds for the first procedure to complete.</span>
          </span>
          <span data-ttu-id="a4beb-808">Si Microsoft Excel n’est pas en mode Ready dans les 30 secondes, la procédure ne sera pas exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-808">If Microsoft Excel is not in Ready mode within 30 seconds, the procedure won’t be run.</span>
          </span>
          <span data-ttu-id="a4beb-809">Si cet argument est omis, Microsoft Excel attendra jusqu'à ce que la procédure peut être exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-809">If this argument is omitted, Microsoft Excel will wait until the procedure can be run.</span>
          </span>
        </param>
        <param name="Schedule">
          <span data-ttu-id="a4beb-810">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-810">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-811">
            <b>True</b> pour programmer une nouvelle procédure <b>OnTime</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-811">
              <b>True</b> to schedule a new <b>OnTime</b> procedure.</span>
          </span>
          <span data-ttu-id="a4beb-812">
            <b>False</b> pour effacer définie précédemment procédure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-812">
              <b>False</b> to clear a previously set procedure.</span>
          </span>
          <span data-ttu-id="a4beb-813">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-813">The default value is <b>True</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-814">Cette méthode programme l'exécution d'une procédure à un moment précis (soit à une heure précise soit après l'écoulement d'un délai précis).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-814">Schedules a procedure to be run at a specified time in the future (either at a specific time of day or after a specific amount of time has passed).</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-815">
            <para>Utilisez Now+TimeValue(time) pour programmer une procédure à exécuter lorsqu’une durée spécifique (à partir de maintenant) s’est écoulé. Utilisez TimeValue pour programmer une procédure à exécuter à un moment spécifique.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-815">
              <para>Use Now+TimeValue(time) to schedule something to be run when a specific amount of time (counting from now) has elapsed. Use TimeValue(time) to schedule something to be run a specific time.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUndo">
      <MemberSignature Language="C#" Value="public void OnUndo (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUndo([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnUndo (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnUndo(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="a4beb-816">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-816">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-817">Texte qui apparaît avec la commande Annuler (menu Edition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-817">The text that appears with the Undo command (Edit menu).</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="a4beb-818">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-818">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-819">Nom de la procédure exécutée si vous sélectionnez la commande Annuler (menu Edition).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-819">The name of the procedure that’s run when you choose the Undo command (Edit menu).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-820">Définit le texte de la commande de menu Annuler et le nom de la procédure exécutée lorsque vous sélectionnez la commande Annuler (menu Edition) après l’exécution de la procédure qui définit cette propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-820">Sets the text of the Undo and the name of the procedure that’s run if you choose the Undo command (Edit menu) after running the procedure that sets this property.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-821">
            <para>Si une procédure n’utilise pas la méthode <b>OnUndo</b> , la commande Undo est désactivée.</para>
            <para>La procédure doit utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> et méthodes <b>OnUndo</b> dernier pour éviter la répétition et d’annulation par les actions suivantes de la procédure de remplacement des procédures de.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-821">
              <para>If a procedure doesn’t use the <b>OnUndo</b> method, the Undo command is disabled.</para>
              <para>The procedure must use the <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> and <b>OnUndo</b> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-822">Cette propriété renvoie ou définit le nom de la procédure exécutée lorsque vous activez une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-822">Returns or sets the name of the procedure that’s run whenever you activate a window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-823">
            <para>La procédure spécifiée par cette propriété n’est pas exécutée lorsque d’autres procédures basculent vers la fenêtre ou de la commande pour basculer vers une fenêtre est reçue via un canal DDE. Au lieu de cela, la procédure répond aux actions de l’utilisateur, par exemple cliquer sur une fenêtre avec la souris, cliquez sur Atteindre dans le menu Edition et ainsi de suite.</para>
            <para>Si une feuille de calcul ou une feuille macro a une macro Auto_Activate ou Auto_Deactivate est définie, cette macro sera exécutée après la procédure spécifiée par la propriété <b>OnWindow</b> .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-823">
              <para>The procedure specified by this property isn’t run when other procedures switch to the window or when a command to switch to a window is received through a DDE channel. Instead, the procedure responds to the user's actions, such as clicking a window with the mouse, clicking Go To on the Edit menu, and so on.</para>
              <para>If a worksheet or macro sheet has an Auto_Activate or Auto_Deactivate macro defined for it, those macros will be run after the procedure specified by the <b>OnWindow</b> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatingSystem">
      <MemberSignature Language="C#" Value="public string OperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatingSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperatingSystem As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OperatingSystem { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-824">Renvoie le nom et numéro de version du système d’exploitation actuel, par exemple, « Windows (32 bits) 4.00 » ou « Macintosh 7.00 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-824">Returns the name and version number of the current operating system, for example, "Windows (32-bit) 4.00" or "Macintosh 7.00".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizationName">
      <MemberSignature Language="C#" Value="public string OrganizationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OrganizationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrganizationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-825">Renvoie le nom enregistré de l’organisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-825">Returns the registered organization name.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Parent { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-826">Renvoie l'objet parent de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-826">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-827">Renvoie le chemin d’accès complet à l’application, à l’exclusion du séparateur final et du nom de l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-827">Returns the complete path to the application, excluding the final separator and name of the application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-828">Renvoie le caractère séparateur de chemin d’accès («\").</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-828">Returns the path separator character ("\").</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableSelection">
      <MemberSignature Language="C#" Value="public bool PivotTableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PivotTableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PivotTableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotTableSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PivotTableSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-829">
            <b>La valeur true</b> si les rapports de tableau croisé dynamique utilisent une sélection structurée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-829">
              <b>True</b> if PivotTable reports use structured selection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSelections">
      <MemberSignature Language="C#" Value="public object PreviousSelections[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PreviousSelections(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSelections(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PreviousSelections[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="a4beb-830">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-830">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-831">Numéro d'index (1 à 4) de la plage ou du nom précédent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-831">The index number (from 1 to 4) of the previous range or name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-832">Renvoie un tableau des quatre derniers noms ou plages sélectionnés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-832">Returns an array of the last four ranges or names selected.</span>
          </span>
          <span data-ttu-id="a4beb-833">Chaque élément du tableau est un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-833">Each element in the array is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-834">
            <para>Chaque fois que vous accédez à une plage ou de la cellule à l’aide de la zone Nom ou la commande Atteindre (menu Edition), ou chaque fois qu’une macro appelle le <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> méthode, la plage précédente est ajoutée au tableau comme l’élément numéro 1 et les autres éléments du tableau sont déplacés vers le bas.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-834">
              <para>Each time you go to a range or cell by using the Name box or the Go To command (Edit menu), or each time a macro calls the <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> method, the previous range is added to this array as element number 1, and the other items in the array are moved down.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintCommunication">
      <MemberSignature Language="C#" Value="public bool PrintCommunication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintCommunication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintCommunication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintCommunication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-835">Obtient ou définit si la communication avec l’imprimante est activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-835">Gets or sets whether communication with the printer is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-836">
            <b>true</b> si la communication avec l’imprimante est activée ; Sinon, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-836">
              <b>true</b> if communication with the printer is turned on; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-837">
            <para>
              <b>Boolean</b> En lecture-écriture.</para>
            <para>Set la <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> propriété sur <b>false</b> pour accélérer l’exécution de code qui définit les propriétés PageSetup. Définir le <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> propriété <b>la valeur true</b> après la définition de propriétés à valider toutes les mises en cache des commandes PageSetup.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-837">
              <para>
                <b>boolean</b> Read/write.</para>
              <para>Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>false</b> to speed up the execution of code that sets PageSetup properties. Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>true</b> after setting properties to commit all cached PageSetup commands.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductCode">
      <MemberSignature Language="C#" Value="public string ProductCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProductCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-838">Renvoie l’identificateur global unique (GUID) de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-838">Returns the globally unique identifier (GUID) for Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptForSummaryInfo">
      <MemberSignature Language="C#" Value="public bool PromptForSummaryInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PromptForSummaryInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PromptForSummaryInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptForSummaryInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PromptForSummaryInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-839">
            <b>La valeur true</b> si Microsoft Excel demande un résumé lorsque les fichiers sont d’abord enregistrés pour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-839">
              <b>True</b> if Microsoft Excel asks for summary information when files are first saved.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedViewWindows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProtectedViewWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedViewWindows As ProtectedViewWindows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ ProtectedViewWindows { Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-840">Obtient un <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection qui représente toutes les fenêtres mode protégé qui sont ouvertes dans l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-840">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-841">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection qui représente toutes les fenêtres mode protégé qui sont ouvertes dans l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-841">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-842">
            <para>En lecture seule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-842">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAnalysis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.QuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuickAnalysis As QuickAnalysis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QuickAnalysis ^ QuickAnalysis { Microsoft::Office::Interop::Excel::QuickAnalysis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QuickAnalysis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-843">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> object qui représente les options d’analyse rapide de l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-843">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> object that represents the Quick Analysis options of the application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public void Quit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Quit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Quit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Quit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Quit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-844">Cette méthode quitte Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-844">Quits Microsoft Excel.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-845">
            <para>Si des classeurs non enregistrés sont ouverts lorsque vous utilisez cette méthode, Microsoft Excel affiche une boîte de dialogue vous demandant si vous souhaitez enregistrer les modifications. Vous pouvez éviter cela en enregistrant tous les classeurs avant d’utiliser la méthode <b>Quit</b> ou en définissant le <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> propriété la <b>valeur False</b>. Lorsque cette propriété a la <b>valeur False</b>, Microsoft Excel n’affiche la boîte de dialogue lorsque vous quittez des classeurs non enregistrés ; elle se ferme sans les enregistrer.</para>
            <para>Si vous définissez le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> à la propriété <b>la valeur True</b> sans enregistrer le classeur sur le disque, Microsoft Excel se ferme sans demander d’enregistrer le classeur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-845">
              <para>If unsaved workbooks are open when you use this method, Microsoft Excel displays a dialog box asking whether you want to save the changes. You can prevent this by saving all workbooks before using the <b>Quit</b> method or by setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>. When this property is <b>False</b>, Microsoft Excel doesn’t display the dialog box when you quit with unsaved workbooks; it quits without saving them.</para>
              <para>If you set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property for a workbook to <b>True</b> without saving the workbook to the disk, Microsoft Excel will quit without asking you to save the workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Quitting">
      <MemberSignature Language="C#" Value="public bool Quitting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Quitting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Quitting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Quitting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Quitting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-846">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-846">Reserved for internal use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-847">Cette propriété renvoie <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-847">Returns <see cref="T:System.Boolean" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <span data-ttu-id="a4beb-848">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-848">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-849">Nom de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-849">The name of the range.</span>
          </span>
          <span data-ttu-id="a4beb-850">Ce doit être une référence de style A1 dans la langue de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-850">This must be an A1-style reference in the language of the macro.</span>
          </span>
          <span data-ttu-id="a4beb-851">Il peut inclure l’opérateur de plage (le signe deux-points), l’opérateur d’intersection (un espace) ou l’opérateur union (une virgule).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-851">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
          </span>
          <span data-ttu-id="a4beb-852">Il peut également inclure des signes dollar, mais ils sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-852">It can also include dollar signs, but they’re ignored.</span>
          </span>
          <span data-ttu-id="a4beb-853">Vous pouvez utiliser un nom local défini dans n’importe quelle partie de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-853">You can use a local defined name in any part of the range.</span>
          </span>
          <span data-ttu-id="a4beb-854">Si vous utilisez un nom, le nom est supposé pour être dans la langue de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-854">If you use a name, the name is assumed to be in the language of the macro.</span>
          </span>
        </param>
        <param name="Cell2">
          <span data-ttu-id="a4beb-855">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-855">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-856">La cellule dans le coin supérieur gauche et inférieur droit de la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-856">The cell in the upper-left and lower-right corner of the range.</span>
          </span>
          <span data-ttu-id="a4beb-857">Peut être un objet <b>Range</b> qui contient une seule cellule, une colonne entière ou une ligne entière, ou il peut être une chaîne qui nomme une seule cellule dans la langue de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-857">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-858">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente une cellule ou une plage de cellules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-858">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-859">
            <para>La propriété est par rapport à l’objet <b>Range</b> . Par exemple, si la sélection est la cellule C3, puis Selection.Range("B1") renvoie la cellule D3, car elle est liée à l’objet <b>Range</b> renvoyé par la <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> propriété. En revanche, le code ActiveSheet.Range("B1") renvoie toujours la cellule B1.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-859">
              <para>The property is relative to the <b>Range</b> object. For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property. On the other hand, the code ActiveSheet.Range("B1") always returns cell B1.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ready">
      <MemberSignature Language="C#" Value="public bool Ready { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ready" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Ready" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ready As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ready { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-860">Renvoie <b>la valeur True</b> lorsque l’application Microsoft Excel est prête ; <b>False</b> lorsque l’application Excel n’est pas prête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-860">Returns <b>True</b> when the Microsoft Excel application is ready; <b>False</b> when the Excel application is not ready.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RecentFiles RecentFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RecentFiles RecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecentFiles As RecentFiles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RecentFiles ^ RecentFiles { Microsoft::Office::Interop::Excel::RecentFiles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RecentFiles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-861">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> collection qui représente la liste des derniers fichiers utilisés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-861">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> collection that represents the list of recently used files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordMacro">
      <MemberSignature Language="C#" Value="public void RecordMacro (object BasicCode, object XlmCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordMacro([in]object BasicCode, [in]object XlmCode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RecordMacro(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordMacro (Optional BasicCode As Object, Optional XlmCode As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BasicCode" Type="System.Object" />
        <Parameter Name="XlmCode" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="BasicCode">
          <span data-ttu-id="a4beb-862">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-862">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-863">Chaîne qui spécifie le code Visual Basic enregistré si l’enregistreur de macro enregistre dans un module Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-863">A string that specifies the Visual Basic code that will be recorded if the macro recorder is recording into a Visual Basic module.</span>
          </span>
          <span data-ttu-id="a4beb-864">La chaîne sera enregistrée sur une ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-864">The string will be recorded on one line.</span>
          </span>
          <span data-ttu-id="a4beb-865">Si la chaîne contient un retour chariot (caractère ASCII 10 ou Chr$(10) dans le code), elle sera enregistrée sur plusieurs lignes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-865">If the string contains a carriage return (ASCII character 10, or Chr$(10) in code), it will be recorded on more than one line.</span>
          </span>
        </param>
        <param name="XlmCode">
          <span data-ttu-id="a4beb-866">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-866">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-867">Argument ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-867">This argument is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-868">Cette méthode enregistre le code si l'enregistreur de macro est activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-868">Records code if the macro recorder is on.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-869">
            <para>La méthode <b>RecordMacro</b> ne peut pas enregistrer dans le module actif (le module dans lequel la méthode <b>RecordMacro</b> existe).</para>
            <para>Pour empêcher l’enregistrement (par exemple, si l’utilisateur annule votre boîte de dialogue), appelez cette fonction avec deux chaînes vides.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-869">
              <para>The <b>RecordMacro</b> method cannot record into the active module (the module in which the <b>RecordMacro</b> method exists).</para>
              <para>To prevent recording (for example, if the user cancels your dialog box), call this function with two empty strings.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordRelative">
      <MemberSignature Language="C#" Value="public bool RecordRelative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecordRelative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecordRelative" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordRelative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecordRelative { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-870">
            <b>La valeur true</b> si les macros sont enregistrées à l’aide de références relatives ; <b>False</b> si l’enregistrement est absolue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-870">
              <b>True</b> if macros are recorded using relative references; <b>False</b> if recording is absolute.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReferenceStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceStyle As XlReferenceStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle { Microsoft::Office::Interop::Excel::XlReferenceStyle get(); void set(Microsoft::Office::Interop::Excel::XlReferenceStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlReferenceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-871">Cette propriété renvoie ou définit comment Microsoft Excel affiche des références de cellules et des en-têtes de ligne et de colonne dans le style de référence A1 ou R1C1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-871">Returns or sets how Microsoft Excel displays cell references and row and column headings in either A1 or R1C1 reference style.</span>
          </span>
          <span data-ttu-id="a4beb-872">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-872">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-873">
            <para>
              <b>XlReferenceStyle</b> peut être une de ces constantes <b>XlReferenceStyle</b> :</para>
            <para>
              <b>xlA1</b>
            </para>
            <para>
              <b>xlR1C1</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-873">
              <para>
                <b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:</para>
              <para>
                <b>xlA1</b>
              </para>
              <para>
                <b>xlR1C1</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredFunctions">
      <MemberSignature Language="C#" Value="public object RegisteredFunctions[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RegisteredFunctions(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RegisteredFunctions(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredFunctions(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RegisteredFunctions[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">
          <span data-ttu-id="a4beb-874">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-874">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-875">Nom de la bibliothèque DLL ou de la ressource de code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-875">The name of the DLL or code resource.</span>
          </span>
        </param>
        <param name="Index2">
          <span data-ttu-id="a4beb-876">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-876">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-877">Nom de la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-877">The name of the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-878">Retourne des informations sur les fonctions de deux bibliothèques de liens dynamiques (DLL) ou de ressources qui ont été enregistrés avec les fonctions de macro REGISTER ou Registre de code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-878">Returns information about functions in either dynamic-link libraries (DLLs) or code resources that were registered with the REGISTER or REGISTER.ID macro functions.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-879">
            <para>Si vous ne spécifiez pas les arguments, cette propriété renvoie un tableau qui contient une liste de toutes les fonctions enregistrées. Chaque ligne du tableau contient des informations sur une seule fonction, comme indiqué dans le tableau suivant.</para>
            <item>
              <term>1</term>
              <description>le nom de la DLL ou ressource de code</description>
            </item>
            <list type="table">
              <item>
                <term>2</term>
                <description>le nom de la procédure dans la DLL ou ressource de code</description>
              </item>
              <item>
                <term>3</term>
                <description>chaînes de caractères spécifiant les types de données des types de valeurs et le nombre et les données renvoyées les arguments</description>
              </item>
            </list>
            <para>s’il n’existe aucune inscrite, cette propriété renvoie <b>Null</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-879">
              <para>If you don’t specify these arguments, this property returns an array that contains a list of all registered functions. Each row in the array contains information about a single function, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>1</term>
                  <description>The name of the DLL or code resource</description>
                </item>
                <item>
                  <term>2</term>
                  <description>The name of the procedure in the DLL or code resource</description>
                </item>
                <item>
                  <term>3</term>
                  <description>Strings specifying the data types of the return values and the number and data types of the arguments</description>
                </item>
              </list>
              <para>If there are no registered functions, this property returns <b>Null</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterXLL">
      <MemberSignature Language="C#" Value="public bool RegisterXLL (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterXLL([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RegisterXLL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterXLL (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RegisterXLL(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="a4beb-880">
            <b>String</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-880">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="a4beb-881">Spécifie le nom de la ressource XLL à charger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-881">Specifies the name of the XLL to be loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-882">Cette méthode charge une ressource de code XLL et enregistre automatiquement les fonctions et les commandes contenues dans la ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-882">Loads an XLL code resource and automatically registers the functions and commands contained in the resource.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="a4beb-883">
            <para>Cette méthode renvoie <b>la valeur True</b> si la ressource de code n’est pas chargée correctement ; dans le cas contraire, la méthode renvoie <b>False</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-883">
              <para>This method returns <b>True</b> if the code resource is successfully loaded; otherwise, the method returns <b>False</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public void Repeat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Repeat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Repeat" />
      <MemberSignature Language="VB.NET" Value="Public Sub Repeat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Repeat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-884">Répète la dernière action de l’interface utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-884">Repeats the last user interface action.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-885">
            <para>Cette méthode répète la dernière action effectuée par l’utilisateur avant d’exécuter la procédure. Il doit être la première ligne de la procédure.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-885">
              <para>This method repeats only the last action taken by the user before running the procedure. It must be the first line in the procedure.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplaceFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ ReplaceFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-886">Définit les critères de remplacement à utiliser lors du remplacement des formats de cellule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-886">Sets the replacement criteria to use in replacing cell formats.</span>
          </span>
          <span data-ttu-id="a4beb-887">Les critères de remplacement est ensuite utilisée dans un appel suivant à la <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode de la <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-887">The replacement criteria is then used in a subsequent call to the <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTipWizard">
      <MemberSignature Language="C#" Value="public void ResetTipWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTipWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ResetTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTipWizard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTipWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-p287">Cette méthode rétablit le bordereau de routage de façon à ce qu'une nouvelle distribution puisse commencer avec le même bordereau (en utilisant la même liste de destinataires et les mêmes informations de distribution). Vous ne pouvez utiliser cette méthode que lorsque la distribution est terminée. En d'autres circonstances, elle génère une erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p287">Resets the routing slip so that a new routing can be initiated with the same slip (using the same recipient list and delivery information). The routing must be completed before you use this method. Using this method at other times causes an error.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="a4beb-891">
            <para>Cet exemple montre comment rétablit le bordereau de routage du classeur Book1.xls si le routage est terminé.</para>
            <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-891">
              <para>This example resets the routing slip for Book1.xls if routing has been completed.</para>
              <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="a4beb-892">
            <para>Cet exemple montre comment rétablit le bordereau de routage du classeur Book1.xls si le routage est terminé.</para>
            <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-892">
              <para>This example resets the routing slip for Book1.xls if routing has been completed.</para>
              <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="a4beb-893">
            <para>Cet exemple montre comment rétablit le bordereau de routage du classeur Book1.xls si le routage est terminé.</para>
            <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-893">
              <para>This example resets the routing slip for Book1.xls if routing has been completed.</para>
              <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="RollZoom">
      <MemberSignature Language="C#" Value="public bool RollZoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RollZoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RollZoom" />
      <MemberSignature Language="VB.NET" Value="Public Property RollZoom As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RollZoom { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-894">
            <b>La valeur true</b> si IntelliMouse effectue un zoom plutôt qu’un défilement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-894">
              <b>True</b> if the IntelliMouse zooms instead of scrolling.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-895">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les lignes de la feuille de calcul active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-895">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the active worksheet.</span>
          </span>
          <span data-ttu-id="a4beb-896">Si le document actif n’est pas une feuille de calcul, la propriété <b>Rows</b> échoue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-896">If the active document isn’t a worksheet, the <b>Rows</b> property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-897">
            <para>Lorsqu’elle est appliquée à un objet <b>Range</b> qui est une sélection multiple, cette propriété renvoie des lignes à partir de la première zone de la plage uniquement. Par exemple, si l’objet <b>Range</b> comporte deux zones : a1 : B2 et C3 : D4, Selection.Rows.Count renvoie 2, pas 4. Pour utiliser cette propriété sur une plage qui peut contenir une sélection multiple, testez <b>Areas.Count</b> afin de déterminer si la plage est une sélection multiple. S’il s’agit, une boucle sur chaque zone de la plage.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-897">
              <para>When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range. For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — Selection.Rows.Count returns 2, not 4. To use this property on a range that may contain a multiple selection, test <b>Areas.Count</b> to determine whether the range is a multiple selection. If it is, loop over each area in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RTD RTD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RTD RTD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RTD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RTD As RTD" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RTD ^ RTD { Microsoft::Office::Interop::Excel::RTD ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RTD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-898">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-898">Returns an <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">
          <span data-ttu-id="a4beb-899">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-899">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-900">La macro à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-900">The macro to run.</span>
          </span>
          <span data-ttu-id="a4beb-901">Il peut s’agir soit d’une chaîne avec le nom de la macro, un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet indiquant où la fonction ou un ID de Registre pour une fonction DLL (XLL) enregistrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-901">This can be either a string with the macro name, a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object indicating where the function is, or a register ID for a registered DLL (XLL) function.</span>
          </span>
          <span data-ttu-id="a4beb-902">Si une chaîne est utilisée, la chaîne sera évaluée dans le contexte de la feuille active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-902">If a string is used, the string will be evaluated in the context of the active sheet.</span>
          </span>
        </param>
        <param name="Arg1">
          <span data-ttu-id="a4beb-903">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-903">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-904">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-904">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="a4beb-905">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-905">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-906">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-906">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="a4beb-907">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-907">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-908">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-908">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="a4beb-909">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-909">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-910">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-910">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="a4beb-911">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-911">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-912">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-912">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="a4beb-913">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-913">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-914">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-914">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="a4beb-915">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-915">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-916">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-916">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="a4beb-917">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-917">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-918">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-918">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="a4beb-919">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-919">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-920">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-920">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="a4beb-921">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-921">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-922">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-922">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="a4beb-923">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-923">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-924">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-924">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="a4beb-925">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-925">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-926">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-926">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="a4beb-927">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-927">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-928">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-928">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="a4beb-929">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-929">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-930">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-930">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="a4beb-931">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-931">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-932">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-932">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="a4beb-933">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-933">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-934">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-934">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="a4beb-935">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-935">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-936">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-936">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="a4beb-937">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-937">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-938">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-938">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="a4beb-939">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-939">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-940">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-940">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="a4beb-941">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-941">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-942">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-942">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="a4beb-943">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-943">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-944">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-944">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="a4beb-945">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-945">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-946">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-946">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="a4beb-947">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-947">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-948">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-948">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="a4beb-949">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-949">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-950">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-950">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="a4beb-951">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-951">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-952">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-952">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="a4beb-953">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-953">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-954">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-954">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="a4beb-955">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-955">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-956">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-956">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="a4beb-957">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-957">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-958">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-958">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="a4beb-959">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-959">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-960">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-960">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="a4beb-961">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-961">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-962">Arguments à transmettre à la fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-962">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-963">Exécute une macro ou appelle une fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-963">Runs a macro or calls a function.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="a4beb-964">
            <para>Vous ne pouvez pas utiliser les arguments nommés avec cette méthode. Les arguments doivent être passés par sa position.</para> Méthode 
          <para><b>exécuter</b> renvoie ce que la macro appelée renvoie. Objets transmis en tant qu’arguments à la macro sont convertis en valeurs (en appliquant la <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> propriété à l’objet). Cela signifie que vous ne pouvez pas passer d’objets aux macros à l’aide de la méthode <b>Run</b> .</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-964">
              <para>You cannot use named arguments with this method. Arguments must be passed by position.</para>
              <para>The <b>Run</b> method returns whatever the called macro returns. Objects passed as arguments to the macro are converted to values (by applying the <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> property to the object). This means that you cannot pass objects to macros by using the <b>Run</b> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-965">Cette méthode enregistre les modifications apportées au classeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-965">Saves changes to the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-966">
            <para>Pour ouvrir un fichier classeur, utilisez la <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> méthode.</para>
            <para />
            <para>Pour marquer le classeur comme enregistré, sans l’enregistrer sur un disque, définissez sa <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> propriété la <b>valeur True</b>.</para>
            <para />
            <para>La première fois que vous enregistrez un classeur, utilisez la <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> méthode pour spécifier un nom pour le fichier.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-966">
              <para>To open a workbook file, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> method.</para>
              <para />
              <para>To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> property to <b>True</b>.</para>
              <para />
              <para>The first time you save a workbook, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> method to specify a name for the file.</para>
              <para />
            </span>
          </span>
        </remarks>
        <example>
          <span data-ttu-id="a4beb-967">
            <para>Cet exemple montre comment enregistre le classeur actif.</para>
            <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
            <para>Cet exemple montre comment enregistrer tous les classeurs ouverts, puis fermer Microsoft Excel.</para>
            <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-967">
              <para>This example saves the active workbook.</para>
              <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
              <para>This example saves all open workbooks and then closes Microsoft Excel.</para>
              <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="a4beb-968">
            <para>Cet exemple montre comment enregistre le classeur actif.</para>
            <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
            <para>Cet exemple montre comment enregistrer tous les classeurs ouverts, puis fermer Microsoft Excel.</para>
            <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-968">
              <para>This example saves the active workbook.</para>
              <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
              <para>This example saves all open workbooks and then closes Microsoft Excel.</para>
              <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="a4beb-969">
            <para>Cet exemple montre comment enregistre le classeur actif.</para>
            <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
            <para>Cet exemple montre comment enregistrer tous les classeurs ouverts, puis fermer Microsoft Excel.</para>
            <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-969">
              <para>This example saves the active workbook.</para>
              <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
              <para>This example saves all open workbooks and then closes Microsoft Excel.</para>
              <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SaveISO8601Dates">
      <MemberSignature Language="C#" Value="public bool SaveISO8601Dates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveISO8601Dates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SaveISO8601Dates" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveISO8601Dates As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveISO8601Dates { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-970">Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-970">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkspace">
      <MemberSignature Language="C#" Value="public void SaveWorkspace (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveWorkspace([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SaveWorkspace(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkspace (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-971">Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-971">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenUpdating">
      <MemberSignature Language="C#" Value="public bool ScreenUpdating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScreenUpdating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Property ScreenUpdating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScreenUpdating { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-972">
            <b>True</b> si la mise à jour de l'écran est activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-972">
              <b>True</b> if screen updating is turned on.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-973">Écran <para>Activer la mise à jour d’accélération de votre code. Vous ne pourrez pas voir ce que fait le code, mais il s’exécute plus rapidement.</para><para>N’oubliez pas de définir la propriété <b>ScreenUpdating</b> à <b>True</b> lorsque votre code se termine.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-973">
              <para>Turn screen updating off to speed up your code. You won't be able to see what the code is doing, but it will run faster.</para>
              <para>Remember to set the <b>ScreenUpdating</b> property back to <b>True</b> when your code ends.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-974">Renvoie l’objet sélectionné dans la fenêtre active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-974">Returns the selected object in the active window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-975">
            <para>Le type d’objet renvoyé dépend de la sélection en cours (par exemple, si une cellule est sélectionnée, cette propriété renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet). La propriété <b>Selection</b> renvoie <b>Nothing</b> si rien n’est sélectionné.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-975">
              <para>The returned object type depends on the current selection (for example, if a cell is selected, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object). The <b>Selection</b> property returns <b>Nothing</b> if nothing is selected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (object Keys, object Wait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeys([in]object Keys, [in]object Wait) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As Object, Optional Wait As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.Object" />
        <Parameter Name="Wait" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Keys">
          <span data-ttu-id="a4beb-976">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-976">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-977">La touche ou combinaison de touches que vous souhaitez envoyer à l’application en tant que texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-977">The key or key combination you want to send to the application as text.</span>
          </span>
        </param>
        <param name="Wait">
          <span data-ttu-id="a4beb-978">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-978">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-979">
            <b>True</b> pour que Microsoft Excel pour les touches à traiter avant de rendre le contrôle à la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-979">
              <b>True</b> to have Microsoft Excel wait for the keys to be processed before returning control to the macro.</span>
          </span>
          <span data-ttu-id="a4beb-980">
            <b>False</b> (ou omis) pour poursuivre l’exécution de la macro sans attendre que les traitement des touches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-980">
              <b>False</b> (or omitted) to continue running the macro without waiting for the keys to be processed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-981">Envoie des séquences de touches à l’application active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-981">Sends keystrokes to the active application.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-982">
            <para>Cette méthode place les touches dans un mémoire tampon de clé. Dans certains cas, vous devez appeler cette méthode avant d’appeler la méthode qui utilise la séquence de touches. Par exemple, pour envoyer un mot de passe à une boîte de dialogue, vous devez appeler la méthode <b>SendKeys</b> avant d’afficher la boîte de dialogue.</para>
            <para>La <paramref name="Keys" /> argument peut spécifier n’importe quelle touche unique ou n’importe quelle touche combinée avec ALT, CTRL ou MAJ (ou n’importe quelle combinaison de ces touches). Chaque clé est représenté par un ou plusieurs caractères, tel que « a » pour le caractère un, ou « {ENTER} » pour la touche ENTRÉE.</para>
            <para>Pour spécifier des caractères qui ne sont pas affichés lorsque vous appuyez sur la touche correspondante (par exemple, entrée ou TAB), utilisez les codes listés dans le tableau suivant. Chaque code de la table représente une touche du clavier.</para>
            <list type="table">
              <item>
                <term>Retour arrière</term>
                <description>{BACKSPACE} ou {BS}</description>
              </item>
              <item>
                <term>arrêt</term>
                <description>{arrêt}</description>
              </item>
              <item>
                <term>Verr.MAJ</term>
                <description>{CAPSLOCK}</description>
              </item>
              <item>
                <term>clair</term>
                <description>{clair}</description>
              </item>
              <item>
                <term>Supprimer ou Suppr</term>
                <description>{DELETE} ou {DEL}</description>
              </item>
              <item>
                <term>Flèche vers le bas</term>
                <description>{vers le bas}</description>
              </item>
              <item>
                <term>Fin</term>
                <description>{fin}</description>
              </item>
              <item>
                <term>Entrée</term>
                <description>~ (tilde)</description>
              </item>
              <item>
                <term>Entrée (pavé numérique)</term>
                <description>{entrée}</description>
              </item>
              <item>
                <term>ÉCHAP</term>
                <description>{ESCAPE} ou {ESC}</description>
              </item>
              <item>
                <term>F1 à F15</term>
                <description>{F1} à {F15}</description>
              </item>
              <item>
                <term>Aide</term>
                <description>{aide}</description>
              </item>
              <item>
                <term>Accueil</term>
                <description>{accueil}</description>
              </item>
              <item>
                <term>INS</term>
                <description>{Insérer}</description>
              </item>
              <item>
                <term>Flèche gauche</term>
                <description>{LEFT}</description>
              </item>
              <item>
                <term>Le verrouillage du</term>
                <description>{NUMLOCK}</description>
              </item>
              <item>
                <term>Vers le bas de PAGE</term>
                <description>{PG}</description>
              </item>
              <item>
                <term>PAGE précédente</term>
                <description>{page précédente}</description>
              </item>
              <item>
                <term>Renvoyer</term>
                <description>{RETURN}</description>
              </item>
              <item>
                <term>Flèche vers la droite</term>
                <description>{RIGHT}</description>
              </item>
              <item>
                <term>Arrêt défil</term>
                <description>{Arrêt défil}</description>
              </item>
              <item>
                <term>Onglet</term>
                <description>{onglet}</description>
              </item>
              <item>
                <term>Flèche vers le haut</term>
                <description>{UP}</description>
              </item>
            </list>
            <para>Vous pouvez également spécifier des touches combinées avec MAJ, CTRL ou ALT. Pour spécifier une touche combinée à une autre ou les clés, utilisez le tableau suivant.</para>
            <list type="table">
              <item>
                <term>MAJ</term>
                <description>+ (signe plus)</description>
              </item>
              <item>
                <term>CTRL</term>
                <description>^ (accent circonflexe)</description>
              </item>
              <item>
                <term>ALT</term>
                <description>% (signe pourcentage)</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-982">
              <para>This method places keystrokes in a key buffer. In some cases, you must call this method before you call the method that will use the keystrokes. For example, to send a password to a dialog box, you must call the <b>SendKeys</b> method before you display the dialog box.</para>
              <para>The <paramref name="Keys" /> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</para>
              <para>To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</para>
              <list type="table">
                <item>
                  <term>BACKSPACE</term>
                  <description>{BACKSPACE} or {BS}</description>
                </item>
                <item>
                  <term>BREAK</term>
                  <description>{BREAK}</description>
                </item>
                <item>
                  <term>CAPS LOCK</term>
                  <description>{CAPSLOCK}</description>
                </item>
                <item>
                  <term>CLEAR</term>
                  <description>{CLEAR}</description>
                </item>
                <item>
                  <term>DELETE or DEL</term>
                  <description>{DELETE} or {DEL}</description>
                </item>
                <item>
                  <term>DOWN ARROW</term>
                  <description>{DOWN}</description>
                </item>
                <item>
                  <term>END</term>
                  <description>{END}</description>
                </item>
                <item>
                  <term>ENTER</term>
                  <description>~ (tilde)</description>
                </item>
                <item>
                  <term>ENTER (numeric keypad)</term>
                  <description>{ENTER}</description>
                </item>
                <item>
                  <term>ESC</term>
                  <description>{ESCAPE} or {ESC}</description>
                </item>
                <item>
                  <term>F1 through F15</term>
                  <description>{F1} through {F15}</description>
                </item>
                <item>
                  <term>HELP</term>
                  <description>{HELP}</description>
                </item>
                <item>
                  <term>HOME</term>
                  <description>{HOME}</description>
                </item>
                <item>
                  <term>INS</term>
                  <description>{INSERT}</description>
                </item>
                <item>
                  <term>LEFT ARROW</term>
                  <description>{LEFT}</description>
                </item>
                <item>
                  <term>NUM LOCK</term>
                  <description>{NUMLOCK}</description>
                </item>
                <item>
                  <term>PAGE DOWN</term>
                  <description>{PGDN}</description>
                </item>
                <item>
                  <term>PAGE UP</term>
                  <description>{PGUP}</description>
                </item>
                <item>
                  <term>RETURN</term>
                  <description>{RETURN}</description>
                </item>
                <item>
                  <term>RIGHT ARROW</term>
                  <description>{RIGHT}</description>
                </item>
                <item>
                  <term>SCROLL LOCK</term>
                  <description>{SCROLLLOCK}</description>
                </item>
                <item>
                  <term>TAB</term>
                  <description>{TAB}</description>
                </item>
                <item>
                  <term>UP ARROW</term>
                  <description>{UP}</description>
                </item>
              </list>
              <para>You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</para>
              <list type="table">
                <item>
                  <term>SHIFT</term>
                  <description>+ (plus sign)</description>
                </item>
                <item>
                  <term>CTRL</term>
                  <description>^ (caret)</description>
                </item>
                <item>
                  <term>ALT</term>
                  <description>% (percent sign)</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object FormatName, object Gallery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object FormatName, [in]object Gallery) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SetDefaultChart(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Optional FormatName As Object, Optional Gallery As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormatName" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FormatName">
          <span data-ttu-id="a4beb-983">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-983">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-984">Spécifie le nom de la mise en forme automatique personnalisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-984">Specifies the name of a custom autoformat.</span>
          </span>
          <span data-ttu-id="a4beb-985">Ce nom peut être une chaîne désignant une mise en forme automatique personnalisée, ou elle peut être la constante spéciale <b>xlBuiltIn</b> pour spécifier le modèle de graphique intégrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-985">This name can be a string naming a custom autoformat, or it can be the special constant <b>xlBuiltIn</b> to specify the built-in chart template.</span>
          </span>
        </param>
        <param name="Gallery">
          <span data-ttu-id="a4beb-986">Objet facultatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-986">Optional Object.</span>
          </span>
          <span data-ttu-id="a4beb-987">Spécifie le nom de la galerie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-987">Specifies the name of a gallery.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-988">Spécifie le nom du modèle de graphique que Microsoft Excel utilise lors de la création de graphiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-988">Specifies the name of the chart template that Microsoft Excel will use when creating new charts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharePointVersion">
      <MemberSignature Language="C#" Value="public int SharePointVersion (string bstrUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SharePointVersion([in]string bstrUrl) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SharePointVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SharePointVersion (bstrUrl As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SharePointVersion(System::String ^ bstrUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrUrl">
          <span data-ttu-id="a4beb-989">URL du site à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-989">The URL of site to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-990">Renvoie le numéro de version de SharePoint Foundation s’exécutant sur le site pour l’URL spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-990">Returns the version number of SharePoint Foundation instances running at site for the specified URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4beb-991">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-991">
              <b>Integer</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-992">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles du classeur actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-992">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetsInNewWorkbook">
      <MemberSignature Language="C#" Value="public int SheetsInNewWorkbook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SheetsInNewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SheetsInNewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public Property SheetsInNewWorkbook As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SheetsInNewWorkbook { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-993">Cette propriété renvoie ou définit le nombre de feuilles que Microsoft Excel insère automatiquement dans les nouveaux classeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-993">Returns or sets the number of sheets that Microsoft Excel automatically inserts into new workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutMenus">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Menu ShortcutMenus[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Menu ShortcutMenus(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShortcutMenus(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShortcutMenus(Index As Integer) As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Menu ^ ShortcutMenus[int] { Microsoft::Office::Interop::Excel::Menu ^ get(int Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Menu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-994">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-994">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipNames">
      <MemberSignature Language="C#" Value="public bool ShowChartTipNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-995">
            <b>La valeur true</b> si les graphiques affichent des noms des info-bulle du graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-995">
              <b>True</b> if charts show chart tip names.</span>
          </span>
          <span data-ttu-id="a4beb-996">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-996">The default value is <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipValues">
      <MemberSignature Language="C#" Value="public bool ShowChartTipValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-997">
            <b>La valeur true</b> si les graphiques montrent les valeurs info-bulle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-997">
              <b>True</b> if charts show chart tip values.</span>
          </span>
          <span data-ttu-id="a4beb-998">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-998">The default value is <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDevTools">
      <MemberSignature Language="C#" Value="public bool ShowDevTools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDevTools" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowDevTools" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDevTools As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDevTools { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-999">Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique si l’onglet Développeur est affichée dans le ruban.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-999">Returns or sets a <b>Boolean</b> that represents whether the Developer tab is displayed in the Ribbon.</span>
          </span>
          <span data-ttu-id="a4beb-1000">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1000">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-1001">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1001">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-1002">
            <para>Cette propriété correspond à l’afficher l’onglet Développeur dans la case à cocher du ruban dans la boîte de dialogue Options Excel.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1002">
              <para>This property corresponds to the Show Developer tab in the Ribbon check box in the Excel Options dialog box.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMenuFloaties">
      <MemberSignature Language="C#" Value="public bool ShowMenuFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowMenuFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowMenuFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowMenuFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowMenuFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1003">Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique s’il faut afficher la Mini barre d’outils lorsque l’utilisateur clique dans la fenêtre du classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1003">Returns or sets a <b>Boolean</b> that represents whether to display Mini toolbars when the user right-clicks in the workbook window.</span>
          </span>
          <span data-ttu-id="a4beb-1004">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1004">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-1005">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1005">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowQuickAnalysis">
      <MemberSignature Language="C#" Value="public bool ShowQuickAnalysis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowQuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowQuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowQuickAnalysis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowQuickAnalysis { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1006">Contrôle l’affichage de l’interface utilisateur contextuelle analyse rapide sur la sélection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1006">Controls whether the Quick Analysis contextual user interface is displayed on selection.</span>
          </span>
          <span data-ttu-id="a4beb-1007">
            <b>TRUE</b> signifie qu'affiche le bouton analyse rapide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1007">
              <b>TRUE</b> means the Quick Analysis button will show.</span>
          </span>
          <span data-ttu-id="a4beb-1008">Correspond aux options Afficher l’analyse rapide sur la case à cocher sélection située dans le fichier menu, <b>Options, Options Excel</b>et onglet puis général en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1008">Corresponds to the Show Quick Analysis options on selection checkbox located in the File menu, <b>Options, Excel Options</b>, and then General tab. Read/Write.</span>
          </span>
          <span data-ttu-id="a4beb-1009">
            <b>Boolean</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1009">
              <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionFloaties">
      <MemberSignature Language="C#" Value="public bool ShowSelectionFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowSelectionFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1010">Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique si la Mini barre d’outils affiche lorsqu’un utilisateur sélectionne le texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1010">Returns or sets a <b>Boolean</b> that represents whether Mini toolbars displays when a user selects text.</span>
          </span>
          <span data-ttu-id="a4beb-1011">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1011">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-1012">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1012">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-1013">
            <para>Correspond à la case à cocher de sélection dans la boîte de dialogue Options Excel afficher la minibarre.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1013">
              <para>Corresponds with the Show MiniBar on selection check box in the Excel Options dialog box.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowStartupDialog">
      <MemberSignature Language="C#" Value="public bool ShowStartupDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowStartupDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowStartupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowStartupDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowStartupDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1014">Renvoie <b>la valeur True</b> (valeur par défaut) lorsque le volet Nouveau classeur s’affiche pour une application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1014">Returns <b>True</b> (default) when the New Workbook task pane appears for a Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowToolTips">
      <MemberSignature Language="C#" Value="public bool ShowToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1015">
            <b>La valeur true</b> si les info-bulles sont activées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1015">
              <b>True</b> if ToolTips are turned on.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindowsInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowWindowsInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindowsInTaskbar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowWindowsInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindowsInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindowsInTaskbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1016">Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1016">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtColors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtColors SmartArtColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtColors SmartArtColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtColors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtColors As SmartArtColors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtColors ^ SmartArtColors { Microsoft::Office::Core::SmartArtColors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtColors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1017">Obtient le jeu de styles de couleurs qui sont actuellement chargées dans l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1017">Gets the set of color styles that are currently loaded in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-1018">Le jeu de styles de couleur qui sont actuellement chargées dans l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1018">The set of color styles that are currently loaded in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-1019">
            <para>En lecture seule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1019">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtLayouts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtLayouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtLayouts As SmartArtLayouts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtLayouts ^ SmartArtLayouts { Microsoft::Office::Core::SmartArtLayouts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtLayouts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1020">Obtient l’ensemble des mises en page SmartArt qui sont actuellement chargées dans l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1020">Gets the set of SmartArt layouts that are currently loaded in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-1021">L’ensemble des mises en page SmartArt qui sont actuellement chargées dans l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1021">The set of SmartArt layouts that are currently loaded in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-1022">
            <para>En lecture seule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1022">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtQuickStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtQuickStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtQuickStyles As SmartArtQuickStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtQuickStyles ^ SmartArtQuickStyles { Microsoft::Office::Core::SmartArtQuickStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtQuickStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1023">Obtient le jeu de styles rapides SmartArt qui sont actuellement chargées dans l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1023">Gets the set of SmartArt quick styles which are currently loaded in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-1024">Le jeu de styles rapides SmartArt qui sont actuellement chargées dans l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1024">The set of SmartArt quick styles which are currently loaded in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-1025">
            <para>En lecture seule.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1025">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRecognizers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartTagRecognizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagRecognizers As SmartTagRecognizers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ SmartTagRecognizers { Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagRecognizers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1026">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> collection pour une application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1026">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> collection for an application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speech">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Speech Speech { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Speech Speech" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Speech" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Speech As Speech" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Speech ^ Speech { Microsoft::Office::Interop::Excel::Speech ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Speech</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1027">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1027">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellingOptions As SpellingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SpellingOptions ^ SpellingOptions { Microsoft::Office::Interop::Excel::SpellingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SpellingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1028">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> object qui représente les options d’orthographe de l’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1028">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> object that represents the spelling options of the application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFont">
      <MemberSignature Language="C#" Value="public string StandardFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFont" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFont As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardFont { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1029">Cette propriété renvoie ou définit le nom de la police standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1029">Returns or sets the name of the standard font.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-1030">
            <para>Si vous modifiez la police standard en utilisant cette propriété, les modifications ne prennent effet qu’après avoir redémarré Microsoft Excel.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1030">
              <para>If you change the standard font by using this property, the change doesn't take effect until you restart Microsoft Excel.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFontSize">
      <MemberSignature Language="C#" Value="public double StandardFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardFontSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardFontSize { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1031">Cette propriété renvoie ou définit la taille de police standard, en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1031">Returns or sets the standard font size, in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-1032">
            <para>Si vous modifiez la taille de police standard en utilisant cette propriété, les modifications ne prennent effet qu’après avoir redémarré Microsoft Excel.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1032">
              <para>If you change the standard font size by using this property, the change doesn't take effect until you restart Microsoft Excel.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartupPath">
      <MemberSignature Language="C#" Value="public string StartupPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StartupPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartupPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1033">Renvoie le chemin d’accès complet du dossier de démarrage à l’exclusion du séparateur final.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1033">Returns the complete path of the startup folder excluding the final separator.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public object StatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object StatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusBar As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ StatusBar { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1034">Cette propriété renvoie ou définit le texte dans la barre d’état.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1034">Returns or sets the text in the status bar.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-1035">
            <para>Cette propriété renvoie <b>False</b> si Microsoft Excel possède un contrôle de la barre d’état. Pour restaurer le texte par défaut, définissez la propriété sur <b>False</b>. Cela fonctionne même si la barre d’état est masquée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1035">
              <para>This property returns <b>False</b> if Microsoft Excel has control of the status bar. To restore the default status bar text, set the property to <b>False</b>; this works even if the status bar is hidden.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Support">
      <MemberSignature Language="C#" Value="public object Support (object Object, int ID, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Support([in]object Object, [in]int32 ID, [in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Support(System.Object,System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Object" Type="System.Object" />
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Object">To be added.</param>
        <param name="ID">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>
          <span data-ttu-id="a4beb-1036">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1036">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatesPath">
      <MemberSignature Language="C#" Value="public string TemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1037">Renvoie le chemin d’accès local où les modèles sont stockés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1037">Returns the local path where templates are stored.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ThisCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ThisCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ThisCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1038">Renvoie la cellule de la fonction définie par l’utilisateur est appelée en tant que depuis un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1038">Returns the cell the user-defined function is being called from as a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-1039">
            <para>Les utilisateurs ne doivent pas accéder aux propriétés ou méthodes de l’objet <b>Range</b> dans la fonction définie par l’utilisateur. Les utilisateurs peuvent mettre en cache l’objet <b>Range</b> pour une utilisation ultérieure et effectuer d’autres actions lorsque le recalcul est terminé.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1039">
              <para>Users should not access properties or methods on the <b>Range</b> object when inside the user-defined function. Users can cache the <b>Range</b> object for later use and perform additional actions when the recalculation is finished.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ThisWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ThisWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ThisWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1040">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objet qui représente le classeur sur lequel s’exécute le code de macro en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1040">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook where the current macro code is running.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-1041">
            <para>Utiliser cette propriété pour faire référence au classeur qui contient le code de votre macro. <b>ThisWorkbook</b> est la seule façon pour faire référence à un classeur macro complémentaire à partir à l’intérieur de la macro complémentaire proprement dit. La propriété <b>ActiveWorkbook</b> ne renvoie pas le classeur macro complémentaire ; elle renvoie le classeur qui appelle la macro complémentaire. Le <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> propriété peut échouer, car le nom du classeur probablement modifié lorsque vous avez créé le complément et <b>ThisWorkbook</b> renvoie toujours le classeur dans lequel le code est en cours d’exécution.</para>
            <para>Cette propriété peut être utilisée uniquement à partir de l’intérieur d’Excel. Vous ne pouvez pas l’utiliser pour accéder à un classeur à partir de n’importe quelle autre application.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1041">
              <para>Use this property to refer to the workbook that contains your macro code. <b>ThisWorkbook</b> is the only way to refer to an add-in workbook from inside the add-in itself. The <b>ActiveWorkbook</b> property doesn't return the add-in workbook; it returns the workbook that's calling the add-in. The <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property may fail, because the workbook name probably changed when you created the add-in. <b>ThisWorkbook</b> always returns the workbook in which the code is running.</para>
              <para>This property can be used only from inside Excel. You cannot use it to access a workbook from any other application.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public string ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1042">Définit ou renvoie le caractère utilisé pour les milliers séparateur sous forme de <b>chaîne</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1042">Sets or returns the character used for the thousands separator as a <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toolbars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Toolbars Toolbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Toolbars Toolbars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Toolbars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Toolbars As Toolbars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Toolbars ^ Toolbars { Microsoft::Office::Interop::Excel::Toolbars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Toolbars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1043">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1043">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1044">Distance, en points, entre le bord supérieur de l’écran et le bord supérieur de la fenêtre Microsoft Excel principale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1044">The distance, in points, from the top edge of the screen to the top edge of the main Microsoft Excel window.</span>
          </span>
          <span data-ttu-id="a4beb-1045">Si la fenêtre d'application est réduite, cette propriété contrôle la position de l'icône de la fenêtre (n'importe où sur l'écran).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1045">If the application window is minimized, this property controls the position of the window icon (anywhere on the screen).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKey">
      <MemberSignature Language="C#" Value="public string TransitionMenuKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransitionMenuKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransitionMenuKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1046">Renvoie ou définit l’autre touche de menu ou d’aide Microsoft Excel, généralement « / ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1046">Returns or sets the Microsoft Excel menu or help key, which is usually "/".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKeyAction">
      <MemberSignature Language="C#" Value="public int TransitionMenuKeyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransitionMenuKeyAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKeyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKeyAction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TransitionMenuKeyAction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1047">Cette propriété renvoie ou définit l’action entreprise lorsque la touche menu Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1047">Returns or sets the action taken when the Microsoft Excel menu key is pressed.</span>
          </span>
          <span data-ttu-id="a4beb-1048">Peut être <b>xlExcelMenus</b> ou <b>xlLotusHelp</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1048">Can be either <b>xlExcelMenus</b> or <b>xlLotusHelp</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionNavigKeys">
      <MemberSignature Language="C#" Value="public bool TransitionNavigKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionNavigKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionNavigKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionNavigKeys { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1049">
            <b>La valeur true</b> si les touches de déplacement sont actives.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1049">
              <b>True</b> if transition navigation keys are active.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UILanguage">
      <MemberSignature Language="C#" Value="public int UILanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UILanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UILanguage" />
      <MemberSignature Language="VB.NET" Value="Public Property UILanguage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UILanguage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1050">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1050">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Undo() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1051">Annule la dernière action de l’interface utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1051">Cancels the last user interface action.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a4beb-1052">
            <para>Cette méthode annule la dernière action effectuée par l’utilisateur avant d’exécuter la procédure. Il doit être la première ligne de la procédure.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1052">
              <para>This method undoes only the last action taken by the user before running the procedure. It must be the first line in the procedure.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Union (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Union([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">
          <span data-ttu-id="a4beb-1053">
            <b>Objet Range</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1053">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1054">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1054">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="a4beb-1055">
            <b>Objet Range</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1055">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1056">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1056">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="a4beb-1057">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1057">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1058">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1058">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="a4beb-1059">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1059">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1060">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1060">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="a4beb-1061">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1061">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1062">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1062">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="a4beb-1063">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1063">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1064">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1064">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="a4beb-1065">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1065">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1066">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1066">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="a4beb-1067">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1067">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1068">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1068">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="a4beb-1069">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1069">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1070">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1070">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="a4beb-1071">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1071">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1072">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1072">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="a4beb-1073">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1073">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1074">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1074">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="a4beb-1075">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1075">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1076">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1076">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="a4beb-1077">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1077">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1078">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1078">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="a4beb-1079">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1079">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1080">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1080">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="a4beb-1081">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1081">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1082">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1082">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="a4beb-1083">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1083">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1084">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1084">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="a4beb-1085">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1085">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1086">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1086">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="a4beb-1087">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1087">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1088">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1088">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="a4beb-1089">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1089">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1090">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1090">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="a4beb-1091">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1091">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1092">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1092">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="a4beb-1093">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1093">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1094">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1094">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="a4beb-1095">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1095">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1096">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1096">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="a4beb-1097">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1097">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1098">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1098">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="a4beb-1099">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1099">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1100">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1100">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="a4beb-1101">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1101">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1102">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1102">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="a4beb-1103">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1103">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1104">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1104">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="a4beb-1105">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1105">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1106">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1106">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="a4beb-1107">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1107">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1108">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1108">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="a4beb-1109">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1109">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1110">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1110">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="a4beb-1111">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1111">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1112">Au moins deux objets <b>Range</b> doivent être spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1112">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-1113">Cette méthode renvoie l'union d'au moins deux plages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1113">Returns the union of two or more ranges.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1114">Renvoie la hauteur maximale de l’espace qu’une fenêtre peut occuper dans la zone de fenêtre d’application, en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1114">Returns the maximum height of the space that a window can occupy in the application window area, in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1115">Renvoie la largeur maximale de l’espace qu’une fenêtre peut occuper dans la zone de fenêtre d’application en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1115">Returns the maximum width of the space that a window can occupy in the application window area in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseClusterConnector">
      <MemberSignature Language="C#" Value="public bool UseClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property UseClusterConnector As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseClusterConnector { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1116">Obtient ou définit si Microsoft Excel autorise des fonctions définies par l’utilisateur dans les compléments XLL à exécuter sur un cluster de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1116">Gets or sets whether Microsoft Excel allows user-defined functions in XLL add-ins to be run on a compute cluster.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-1117">
            <b>true</b> si Excel autorise les fonctions définies par l’utilisateur dans les compléments XLL à exécuter sur un cluster de calcul ; Sinon, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1117">
              <b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4beb-1118">
            <para>En lecture-écriture.</para>
            <para>
              <b>true</b> si Excel autorise des fonctions définies par l’utilisateur dans les compléments XLL à exécuter sur un cluster de calcul, sinon <b>false</b>. Le paramètre de la <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> propriété correspond aux fonctions XLL autoriser définies par l’utilisateur à exécuter sur une compute cluster case sous formules dans la catégorie Avancé de la boîte de dialogue Options Excel.</para>
            <para>
              <b>Remarque</b>: pour activer la <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> propriété, vous devez installer un connecteur de Cluster HPC High Performance Computing (). Un connecteur de Cluster permet d’exécuter les fonctions XLL sécurisées pour le cluster à distance sur un cluster HPC pour améliorer les performances.</para>
            <para>Après avoir défini les <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> propriété, utilisez la <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> propriété pour spécifier le connecteur de Cluster HPC à utiliser.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1118">
              <para>Read/write.</para>
              <para>
                <b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise <b>false</b>. The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property corresponds to the Allow user-defined XLL functions to run on a compute cluster check box under Formulas in the Advanced category of the Excel Options dialog box.</para>
              <para>
                <b>Note</b>: To enable the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector. A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</para>
              <para>After setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property, use the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property to specify the HPC Cluster Connector to use.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.UsedObjects UsedObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.UsedObjects UsedObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsedObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedObjects As UsedObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::UsedObjects ^ UsedObjects { Microsoft::Office::Interop::Excel::UsedObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.UsedObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1119">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> objet représentant des objets alloués dans un classeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> object representing objects allocated in a workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1120">
            <b>True</b> si l’application est visible ou si elle a été créée ou démarrée par l’utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1120">
              <b>True</b> if the application is visible or if it was created or started by the user.</span>
          </span>
          <span data-ttu-id="a4beb-1121">
            <b>False</b> si vous avez créé ou démarrée par programmation à l’application en utilisant les fonctions <b>CreateObject</b> ou <b>GetObject</b> et l’application est masquée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1121">
              <b>False</b> if you created or started the application programmatically by using the <b>CreateObject</b> or <b>GetObject</b> functions and the application is hidden.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-1122">
            <para>Lorsque la propriété <b>UserControl</b> a la <b>valeur False</b> pour un objet, cet objet est libéré lorsque la dernière référence de programmation à l’objet est publiée. Si cette propriété a la <b>valeur False</b>, Microsoft Excel se ferme lorsque l’utilisateur relâche le dernier objet de la session.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1122">
              <para>When the <b>UserControl</b> property is <b>False</b> for an object, that object is released when the last programmatic reference to the object is released. If this property is <b>False</b>, Microsoft Excel quits when the last object in the session is released.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLibraryPath">
      <MemberSignature Language="C#" Value="public string UserLibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserLibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserLibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserLibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1123">Renvoie le chemin d’accès à l’emplacement sur l’ordinateur où les compléments COM sont installés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1123">Returns the path to the location on the user’s computer where the COM add-ins are installed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1124">Cette propriété renvoie ou définit le nom de l’utilisateur actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1124">Returns or sets the name of the current user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSystemSeparators">
      <MemberSignature Language="C#" Value="public bool UseSystemSeparators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemSeparators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseSystemSeparators" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemSeparators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemSeparators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1125">
            <b>La valeur True</b> (valeur par défaut) si les séparateurs système de Microsoft Excel sont activés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1125">
              <b>True</b> (default) if the system separators of Microsoft Excel are enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1126">Renvoie « Microsoft Excel ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1126">Returns "Microsoft Excel".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBE">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBE VBE { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBE VBE" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.VBE" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBE As VBE" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBE ^ VBE { Microsoft::Vbe::Interop::VBE ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBE</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1127">Renvoie un objet <b>VBE</b> représentant Visual Basic Editor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1127">Returns a <b>VBE</b> object that represents the Visual Basic Editor.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1128">Renvoie le numéro de version de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1128">Returns the Microsoft Excel version number.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1129">Détermine si l’objet est visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1129">Determines whether the object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volatile">
      <MemberSignature Language="C#" Value="public void Volatile (object Volatile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Volatile([in]object Volatile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Volatile(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Volatile (Optional Volatile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Volatile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Volatile">
          <span data-ttu-id="a4beb-1130">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1130">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1131">
            <b>True</b> pour marquer la fonction comme volatile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1131">
              <b>True</b> to mark the function as volatile.</span>
          </span>
          <span data-ttu-id="a4beb-1132">
            <b>False</b> pour marquer la fonction comme non volatiles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1132">
              <b>False</b> to mark the function as nonvolatile.</span>
          </span>
          <span data-ttu-id="a4beb-1133">La valeur par défaut est <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1133">The default value is <b>True</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-p364">Marque comme volatile une fonction personnalisée. Une fonction volatile doit être recalculée chaque fois qu’un calcul est effectué dans une cellule quelconque de la feuille de calcul. Une fonction non volatile n’est recalculée qu’en cas de changement des variables d’entrée. Cette méthode est sans effet si elle ne se trouve pas à l’intérieur d’une fonction définie par l’utilisateur utilisée pour calculer une cellule de feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p364">Marks a user-defined function as volatile. A volatile function must be recalculated whenever calculation occurs in any cells on the worksheet. A nonvolatile function is recalculated only when the input variables change. This method has no effect if it's not inside a user-defined function used to calculate a worksheet cell.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (Time As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">
          <span data-ttu-id="a4beb-1138">
            <b>Objet</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1138">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a4beb-1139">Le moment auquel vous souhaitez que la macro doit reprendre au format de date Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1139">The time at which you want the macro to resume in Microsoft Excel date format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4beb-p366">Suspend l'exécution d'une macro jusqu'à une heure spécifiée. Renvoie  <b>True</b>  si l'heure spécifiée est atteinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-p366">Pauses a running macro until a specified time. Returns <b>True</b> if the specified time has arrived.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="a4beb-1142">
            <para>
              <b>Important</b>: la méthode <b>Wait</b> suspend toute activité de Microsoft Excel et peut vous empêcher d’effectuer d’autres opérations sur votre ordinateur <b>pendant en vigueur</b> . Toutefois, en arrière-plan traite telles que l’impression et le recalcul continuent.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1142">
              <para>
                <b>Important</b>: The <b>Wait</b> method suspends all Microsoft Excel activity and may prevent you from performing other operations on your computer while <b>Wait</b> is in effect. However, background processes such as printing and recalculation continue.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WarnOnFunctionNameConflict">
      <MemberSignature Language="C#" Value="public bool WarnOnFunctionNameConflict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WarnOnFunctionNameConflict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" />
      <MemberSignature Language="VB.NET" Value="Public Property WarnOnFunctionNameConflict As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WarnOnFunctionNameConflict { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1143">Le <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> propriété, la valeur <b>True</b>, déclenche une alerte si un développeur tente de créer une nouvelle fonction à l’aide du nom d’une fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1143">The <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> property, when set to <b>True</b>, raises an alert if a developer tries to create a new function using an existing function name.</span>
          </span>
          <span data-ttu-id="a4beb-1144">Type de données <b>Boolean</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1144">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4beb-1145">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1145">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Watches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Watches Watches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Watches Watches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Watches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Watches As Watches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Watches ^ Watches { Microsoft::Office::Interop::Excel::Watches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Watches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1146">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> objet représentant une plage qui est suivie lorsque la feuille de calcul est recalculée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1146">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> object representing a range which is tracked when the worksheet is recalculated.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1147">Distance, en points, entre le bord gauche de la fenêtre d’application à sa droite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1147">The distance, in points, from the left edge of the application window to its right edge.</span>
          </span>
          <span data-ttu-id="a4beb-1148">Si la fenêtre est réduite, cette propriété est en lecture seule et renvoie la largeur de l’icône de la fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1148">If the window is minimized, this property is read-only and returns the width of the window icon.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1149">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection qui représente toutes les fenêtres dans tous les classeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1149">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in all the workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-1150">
            <para>Cette propriété renvoie une collection de fenêtres visibles et masquées.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1150">
              <para>This property returns a collection of both visible and hidden windows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForPens">
      <MemberSignature Language="C#" Value="public bool WindowsForPens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WindowsForPens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowsForPens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsForPens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WindowsForPens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1151">
            <b>True</b> si l’ordinateur est en cours d’exécution sous Microsoft Windows pour Pen Computing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1151">
              <b>True</b> if the computer is running under Microsoft Windows for Pen Computing.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1152">Cette propriété renvoie ou définit l’état de la fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1152">Returns or sets the state of the window.</span>
          </span>
          <span data-ttu-id="a4beb-1153">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1153">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-1154">
            <para>
              <b>XlWindowState</b> peut être une de ces constantes <b>XlWindowState</b> :</para>
            <para>
              <b>xlMaximized</b>
            </para>
            <para>
              <b>xlNormal</b>
            </para>
            <para>
              <b>xlMinimized</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1154">
              <para>
                <b>XlWindowState</b> can be one of these <b>XlWindowState</b> constants:</para>
              <para>
                <b>xlMaximized</b>
              </para>
              <para>
                <b>xlNormal</b>
              </para>
              <para>
                <b>xlMinimized</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Workbooks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbooks Workbooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbooks Workbooks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workbooks As Workbooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbooks ^ Workbooks { Microsoft::Office::Interop::Excel::Workbooks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1155">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection qui représente tous les classeurs ouverts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1155">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection that represents all the open workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-1156">
            <para>La collection retournée par la propriété <b>Workbooks</b> n’inclut pas les compléments ouverts, qui sont un type spécifique de classeur masqué. Toutefois, vous pouvez renvoyer une seule macro complémentaire ouverte, si vous connaissez le nom de fichier. Par exemple, Workbooks renverra le complément ouvert « OSCAR.xla » en que d’un objet <b>Workbook</b> .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1156">
              <para>The collection returned by the <b>Workbooks</b> property doesn’t include open add-ins, which are a special kind of hidden workbook. You can, however, return a single open add-in if you know the file name. For example, Workbooks("Oscar.xla") will return the open add-in named "Oscar.xla" as a <b>Workbook</b> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorksheetFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WorksheetFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorksheetFunction As WorksheetFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorksheetFunction ^ WorksheetFunction { Microsoft::Office::Interop::Excel::WorksheetFunction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorksheetFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1157">Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1157">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4beb-1158">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles de calcul du classeur actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1158">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a4beb-1159">
            <para>Cette propriété ne renvoie pas les feuilles de macro ; Utilisez le <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> propriété ou la <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> propriété permet de renvoyer ces feuilles.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4beb-1159">
              <para>This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> property to return those sheets.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>