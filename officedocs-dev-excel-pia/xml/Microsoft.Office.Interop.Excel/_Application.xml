<Type Name="_Application" FullName="Microsoft.Office.Interop.Excel._Application">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e1779c82659528041c775925bebd417907f8643" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20587786" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Application" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Application" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Application" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D5-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Il s’agit d’une interface principale dans une coclasse COM qui est requis par le code managé pour l’interopérabilité avec l’objet COM correspondant. Utilisez cette interface principale uniquement lorsque la méthode que vous souhaitez utiliser partageant le même nom qu’un événement de l’objet COM ; Dans ce cas, effectuez un cast à cette interface pour appeler la méthode et dans l’interface d’événements le plus récent pour se connecter à l’événement. Sinon, utilisez l’interface .NET est dérivé de la coclasse COM pour accéder aux méthodes, propriétés et événements de l’objet COM. Pour plus d’informations sur l’objet COM, voir <see cref="T:Microsoft.Office.Interop.Excel.Application" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_FindFile">
      <MemberSignature Language="C#" Value="public void _FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub _FindFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1068)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Run2">
      <MemberSignature Language="C#" Value="public object _Run2 (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Run2([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Run2 (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(31)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Wait">
      <MemberSignature Language="C#" Value="public void _Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Wait (Time As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateMicrosoftApp">
      <MemberSignature Language="C#" Value="public void ActivateMicrosoftApp (Microsoft.Office.Interop.Excel.XlMSApplication Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateMicrosoftApp([in]valuetype Microsoft.Office.Interop.Excel.XlMSApplication Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateMicrosoftApp (Index As XlMSApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateMicrosoftApp(Microsoft::Office::Interop::Excel::XlMSApplication Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1095)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="Microsoft.Office.Interop.Excel.XlMSApplication" />
      </Parameters>
      <Docs>
        <param name="Index">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />. Spécifie l’application Microsoft à activer. <b>XlMSApplication</b> peut être une de ces constantes <b>XlMSApplication</b> :<b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject </b><b>xlMicrosoftSchedulePlus</b></param>
        <summary>Active une application Microsoft. Si celle-ci est déjà en cours d'exécution, cette méthode l'active. Si tel n'est pas le cas, la méthode démarre une nouvelle instance de l'application.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente la cellule active dans la fenêtre active (la fenêtre en haut) ou dans la fenêtre spécifiée. Si la fenêtre n’est pas une feuille de calcul, cette propriété échoue.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Veillez à faire la distinction entre la cellule active et la sélection. La cellule active est une cellule unique à l’intérieur de la sélection actuelle. La sélection peut contenir plusieurs cellules, mais qu’un seul est la cellule active.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object qui représente le graphique actif (un graphique incorporé ou une feuille de graphique). Un graphique incorporé est considéré comme actif lorsqu’il est sélectionné ou activé. Lorsqu’aucun graphique n’est actif, cette propriété renvoie la <b>valeur Nothing</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveDialog As DialogSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DialogSheet ^ ActiveDialog { Microsoft::Office::Interop::Excel::DialogSheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DialogSheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEncryptionSession">
      <MemberSignature Language="C#" Value="public int ActiveEncryptionSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveEncryptionSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveEncryptionSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEncryptionSession As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ActiveEncryptionSession { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En lecture seule.</summary>
        <value>
          <b>Integer</b>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMenuBar">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveMenuBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMenuBar As MenuBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBar ^ ActiveMenuBar { Microsoft::Office::Interop::Excel::MenuBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePrinter">
      <MemberSignature Language="C#" Value="public string ActivePrinter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivePrinter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActivePrinter" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivePrinter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivePrinter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le nom de l'imprimante active.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveProtectedViewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveProtectedViewWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveProtectedViewWindow As ProtectedViewWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ ActiveProtectedViewWindow { Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object qui représente la fenêtre mode protégé active (la fenêtre en haut).</summary>
        <value>A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object qui représente la fenêtre mode protégé active (la fenêtre en haut).</value>
        <remarks>
          <para>Retourne une référence null (Nothing dans Visual Basic) s’il n’y a aucune fenêtre mode protégé ouverte. En lecture seule.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un object qui représente la feuille active (feuille au premier plan) dans le classeur actif ou dans la fenêtre spécifiée ou du classeur. Renvoie la <b>valeur Nothing</b> si aucune feuille n’est active.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Si un classeur apparaît dans plusieurs fenêtres, la propriété <b>ActiveSheet</b> peut être différente dans différentes fenêtres.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window ActiveWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window ActiveWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ ActiveWindow { Microsoft::Office::Interop::Excel::Window ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object qui représente la fenêtre active (celle en haut). Renvoie la <b>valeur Nothing</b> s’il n’y a aucune fenêtre ouverte.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ActiveWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objet qui représente le classeur dans la fenêtre active (la fenêtre en haut). Renvoie <b>Nothing</b> s’il n’y a aucune fenêtre ouverte ou si la fenêtre d’information ou de la fenêtre du Presse-papiers est la fenêtre active.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChartAutoFormat">
      <MemberSignature Language="C#" Value="public void AddChartAutoFormat (object Chart, string Name, object Description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChartAutoFormat([in]object Chart, [in]string Name, [in]object Description) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddChartAutoFormat(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChartAutoFormat (Chart As Object, Name As String, Optional Description As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(216)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Chart" Type="System.Object" />
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Chart">
          <b>Objet</b>obligatoire. Un graphique qui contient le format qui est appliqué lors de la nouvelle mise en forme automatique graphique est appliqué.</param>
        <param name="Name">
          <b>String</b>obligatoire. Nom de la mise en forme automatique.</param>
        <param name="Description">Facultatif <b>Object</b>. Description de la mise en forme automatique personnalisée.</param>
        <summary>Ajoute une mise en forme automatique de graphique personnalisée dans la liste des mises en forme automatiques de graphique disponibles.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomList">
      <MemberSignature Language="C#" Value="public void AddCustomList (object ListArray, object ByRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCustomList([in]object ListArray, [in]object ByRow) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddCustomList(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomList (ListArray As Object, Optional ByRow As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
        <Parameter Name="ByRow" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray">
          <b>Objet</b>obligatoire. Spécifie les données sources sous la forme d’un tableau de chaînes ou un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</param>
        <param name="ByRow">Facultatif <b>Object</b>. Utilisé uniquement si <paramref name="ListArray" /> est un objet <b>Range</b> . <b>True</b> pour créer une liste personnalisée à partir de chaque ligne de la plage. <b>False</b> pour créer une liste personnalisée à partir de chaque colonne de la plage. Si cet argument est omis, et il existe plus de lignes que les colonnes (ou un nombre égal de lignes et de colonnes) de la plage, Microsoft Excel crée une liste personnalisée à partir de chaque colonne de la plage. Si cet argument est omis, et il existe plus de colonnes que les lignes de la plage, Microsoft Excel crée une liste personnalisée à partir de chaque ligne de la plage.</param>
        <summary>Ajoute une liste personnalisée pour la recopie incrémentée et/ou le tri personnalisé.</summary>
        <remarks>
          <para>Si la liste que vous tentez d’ajouter déjà existe, cette méthode est sans effet.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns AddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns AddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns As AddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns ^ AddIns { Microsoft::Office::Interop::Excel::AddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> collection qui représente tous les compléments répertoriés dans la boîte de dialogue Compléments (menu Outils).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns2 AddIns2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns2 AddIns2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns2 As AddIns2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns2 ^ AddIns2 { Microsoft::Office::Interop::Excel::AddIns2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objets qui représentent tous les compléments qui sont actuellement disponibles ou ouvertes dans Excel, qu’elles soient installées ou non.</summary>
        <value>Une collection de <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objets qui représentent tous les compléments qui sont actuellement disponibles ou ouvertes dans Excel.</value>
        <remarks>
          <para>En lecture seule.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertBeforeOverwriting">
      <MemberSignature Language="C#" Value="public bool AlertBeforeOverwriting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlertBeforeOverwriting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlertBeforeOverwriting" />
      <MemberSignature Language="VB.NET" Value="Public Property AlertBeforeOverwriting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlertBeforeOverwriting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si Microsoft Excel affiche un message avant de remplacer des cellules non vides pendant une opération glisser-déplacer.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AltStartupPath">
      <MemberSignature Language="C#" Value="public string AltStartupPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AltStartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AltStartupPath" />
      <MemberSignature Language="VB.NET" Value="Public Property AltStartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AltStartupPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le nom de l’autre dossier de démarrage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseClearType">
      <MemberSignature Language="C#" Value="public bool AlwaysUseClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseClearType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlwaysUseClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseClearType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique s’il faut utiliser ClearType pour afficher les polices dans le menu, le ruban et le texte de la boîte de dialogue. Lecture/écriture.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>
          <para>Même si le paramètre Microsoft Windows pour ClearType est désactivé, la définition de cette propriété sur <b>True</b> remplace le paramètre Windows et utilise ClearType dans toutes les applications Microsoft Office.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.AnswerWizard AnswerWizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.AnswerWizard AnswerWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AnswerWizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnswerWizard As AnswerWizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::AnswerWizard ^ AnswerWizard { Microsoft::Office::Core::AnswerWizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.AnswerWizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le <see cref="T:Microsoft.Office.Core.AnswerWizard" /> objet pour Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente le créateur de l’objet spécifié (vous pouvez utiliser cette propriété avec un objet OLE Automation pour renvoyer l’application de cet objet).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArbitraryXMLSupportAvailable">
      <MemberSignature Language="C#" Value="public bool ArbitraryXMLSupportAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArbitraryXMLSupportAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArbitraryXMLSupportAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une valeur de <b>type Boolean</b> qui indique si les fonctionnalités XML de Microsoft Excel sont disponibles.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AskToUpdateLinks">
      <MemberSignature Language="C#" Value="public bool AskToUpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AskToUpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AskToUpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AskToUpdateLinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AskToUpdateLinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si Microsoft Excel invite l’utilisateur à mettre à jour les liens lors de l’ouverture des fichiers avec des liens. <b>False</b> si les liaisons sont automatiquement mises à jour aucune boîte de dialogue.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistance">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IAssistance Assistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IAssistance Assistance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistance As IAssistance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IAssistance ^ Assistance { Microsoft::Office::Core::IAssistance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IAssistance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Core.IAssistance" /> objet pour short_Excel2007 qui représente la visionneuse de l’aide de Microsoft Office. En lecture seule.</summary>
        <value>
          <b>IAssistance</b>
        </value>
        <remarks>
          <para>L’objet <b>IAssistance</b> permet aux développeurs d’afficher l’aide personnalisée et l’aide installée avec Office dans la visionneuse de l’aide Office.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistant">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Assistant Assistant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Assistant Assistant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistant As Assistant" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Assistant ^ Assistant { Microsoft::Office::Core::Assistant ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Assistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Core.Assistant" /> objet pour Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCorrect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoCorrect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoCorrect As AutoCorrect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoCorrect ^ AutoCorrect { Microsoft::Office::Interop::Excel::AutoCorrect ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoCorrect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> objet qui représente les attributs de correction automatique Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormatAsYouTypeReplaceHyperlinks">
      <MemberSignature Language="C#" Value="public bool AutoFormatAsYouTypeReplaceHyperlinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFormatAsYouTypeReplaceHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFormatAsYouTypeReplaceHyperlinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur True</b> (valeur par défaut) si Microsoft Excel met automatiquement en forme des liens hypertexte en cours de frappe. <b>False</b> si Excel ne forme pas automatiquement des liens hypertexte en cours de frappe.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationSecurity">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationSecurity As MsoAutomationSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutomationSecurity AutomationSecurity { Microsoft::Office::Core::MsoAutomationSecurity get(); void set(Microsoft::Office::Core::MsoAutomationSecurity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutomationSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit une <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> constante représentant le mode de sécurité Microsoft Excel utilise lors de l’ouverture des fichiers par programme.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Cette propriété est automatiquement définie avec la <b>valeur msoAutomationSecurityLow</b> au démarrage de l’application. Par conséquent, pour éviter d’interrompre des solutions qui reposent sur le paramètre par défaut, veillez à cette propriété avec la <b>valeur msoAutomationSecurityLow</b> après l’ouverture d’un fichier par programme. En outre, cette propriété doit être définie immédiatement avant et après l’ouverture d’un fichier par programme pour éviter tout dysfonctionnement.</para>
          <para>
            <b>MsoAutomationSecurity</b> peut être une de ces constantes <b>MsoAutomationSecurity</b> :</para>
          <list type="bullet">
            <item>
              <description>
                <b>AutomationSecurity</b> utilise le paramètre de sécurité spécifié dans la boîte de dialogue <b>sécurité</b> .</description>
            </item>
            <item>
              <description>
                <b>msoAutomationSecurityForceDisable</b> désactive toutes les macros de tous les fichiers ouverts par programme sans afficher d’alerte de sécurité.</description>
            </item>
            <item>
              <description>
                <b>msoAutomationSecurityLow</b> Active toutes les macros. Il s’agit de la valeur par défaut lors de l’application est démarrée.</description>
            </item>
          </list>
          <para>Paramètre <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /><b>false</b> sans incidence sur les alertes et affectent pas les avertissements de sécurité. Le <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> paramètre ne s’applique pas aux avertissements de sécurité. Par exemple, si l’utilisateur définit <b>DisplayAlerts</b> égale à <b>False</b> et à <b>AutomationSecurity</b><b>AutomationSecurity</b>, tandis que l’utilisateur est sur le niveau de sécurité moyen, puis il avertissements de sécurité sont alors que la macro est en cours d’exécution. Cela permet à la macro d’intercepter des erreurs d’ouverture de fichiers, tout en maintenant l’avertissement affiché si l’ouverture du fichier réussit.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPercentEntry">
      <MemberSignature Language="C#" Value="public bool AutoPercentEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPercentEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoPercentEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPercentEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPercentEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les entrées dans les cellules mises au format pourcentage ne sont pas automatiquement multipliées par 100 dès qu’elles sont entrées.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoRecover">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoRecover AutoRecover { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoRecover AutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoRecover As AutoRecover" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoRecover ^ AutoRecover { Microsoft::Office::Interop::Excel::AutoRecover ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoRecover</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> object, qui sauvegarde tous les formats de fichier dans un intervalle de temps.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Intervalles de temps valides sont des nombres entiers compris entre 1 et 120.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le numéro de version de Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Il est généralement plus prudent de tester la <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> propriété, sauf si vous êtes sûr d’avoir besoin de connaître le numéro de build.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calcule tous les classeurs ouverts</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateBeforeSave">
      <MemberSignature Language="C#" Value="public bool CalculateBeforeSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculateBeforeSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculateBeforeSave" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculateBeforeSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculateBeforeSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les classeurs sont calculés avant d’être enregistrés sur le disque (si la <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> propriété a la valeur <b>xlManual</b>). Cette propriété est conservée même si vous modifiez le <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> propriété.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFull">
      <MemberSignature Language="C#" Value="public void CalculateFull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFull() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFull" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provoque un calcul intégral des données dans tous les classeurs ouverts.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFullRebuild">
      <MemberSignature Language="C#" Value="public void CalculateFullRebuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFullRebuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFullRebuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFullRebuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFullRebuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour tous les classeurs ouverts, cette méthode provoque un calcul intégral des données et recrée les dépendances.</summary>
        <remarks>
          <para>Les dépendances sont les formules qui dépendent d’autres cellules. Par exemple, la formule « = A1 » dépend de la cellule A1. La méthode <b>CalculateFullRebuild</b> est similaire à entrer de nouveau toutes les formules.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateUntilAsyncQueriesDone">
      <MemberSignature Language="C#" Value="public void CalculateUntilAsyncQueriesDone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateUntilAsyncQueriesDone() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateUntilAsyncQueriesDone ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateUntilAsyncQueriesDone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exécute toutes les requêtes en cours sur les sources de données OLEDB et OLAP.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculation Calculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculation Calculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Calculation" />
      <MemberSignature Language="VB.NET" Value="Public Property Calculation As XlCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculation Calculation { Microsoft::Office::Interop::Excel::XlCalculation get(); void set(Microsoft::Office::Interop::Excel::XlCalculation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le mode de calcul. En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Sources de données OLAP, cette propriété peut uniquement renvoyer ou avoir la valeur <b>xlNormal</b>.</para>
          <para>
            <b>XlCalculation</b> peut être une de ces constantes <b>XlCalculation</b> :</para>
          <para>
            <b>xlCalculationAutomatic</b>
          </para>
          <para>
            <b>xlCalculationManual</b>
          </para>
          <para>
            <b>xlCalculationSemiautomatic</b>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationInterruptKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationInterruptKey" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculationInterruptKey As XlCalculationInterruptKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationInterruptKey CalculationInterruptKey { Microsoft::Office::Interop::Excel::XlCalculationInterruptKey get(); void set(Microsoft::Office::Interop::Excel::XlCalculationInterruptKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationInterruptKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit ou renvoie une <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> constante qui spécifie la touche qui peut interrompre Microsoft Excel lors de l’exécution de calculs.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>XlCalculationInterruptKey</b> peut être une de ces constantes <b>XlCalculationInterruptKey</b> :</para>
          <para>
            <b>xlAnyKey</b>
          </para>
          <para>
            <b>xlEscKey</b>
          </para>
          <para>
            <b>xlNoKey</b>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationState CalculationState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationState CalculationState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationState As XlCalculationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationState CalculationState { Microsoft::Office::Interop::Excel::XlCalculationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> constante indiquant l’état de calcul de l’application pour les calculs sont en cours d’exécution dans Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>XlCalculationState</b> peut être une de ces constantes <b>XlCalculationState</b> :</para>
          <para>
            <b>xlCalculating</b>
          </para>
          <para>
            <b>xlDone</b>
          </para>
          <para>
            <b>xlPending</b>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un nombre dont les quatre derniers chiffres sont le numéro de version de moteur de calcul secondaire, et dont les autres chiffres (à gauche) de la version principale de Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Si le classeur a été enregistré dans une version antérieure de Microsoft Excel et si le classeur n’a pas été entièrement recalculé, cette propriété renvoie 0.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caller">
      <MemberSignature Language="C#" Value="public object Caller[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caller(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caller(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Caller(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caller[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">Facultatif <b>Object</b>. Un index dans le tableau. Cet argument est utilisé uniquement lorsque la propriété renvoie un tableau (pour plus d’informations, consultez la section Remarques).</param>
        <summary>Renvoie des informations relatives à la manière dont Visual Basic a été appelé (pour plus d’informations, consultez la section Remarques).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Cette propriété renvoie des informations sur la manière dont Visual Basic a été appelé, comme indiqué dans le tableau suivant.</para>
          <list type="table">
            <item>
              <term>Une fonction personnalisée est entré dans une cellule unique</term>
              <description>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet spécifiant cette cellule</description>
            </item>
            <item>
              <term>fonction personnalisée qui fait partie d’une formule matricielle dans une plage de cellules</term>,
              <description>un objet <b>Range</b> spécifiant cette plage de cellules</description></item>
            <item>
              <term>Une macro Auto_Open, Auto_Close, Auto_Activate ou Auto_Deactivate macro</term>,
              <description>le nom du document sous forme de texte</description></item>
            <item>
              <term>une macro définie par un le <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> ou <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> propriété</term>
              <description>le nom de l’objet graphique identificateur ou cellule de référence (le cas échéant) auquel la macro s’applique</description>
            </item>
            <item>
              <term>boîte de dialogue de la Macro (menu Outils), ou tout autre demandeur non décrit ci-dessus</term>
              <description>la #REF ! valeur d’erreur</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPlaySounds">
      <MemberSignature Language="C#" Value="public bool CanPlaySounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPlaySounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanPlaySounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPlaySounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPlaySounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété ne doit pas être utilisée. Les sons ont été supprimés de Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRecordSounds">
      <MemberSignature Language="C#" Value="public bool CanRecordSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRecordSounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanRecordSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRecordSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRecordSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété ne doit pas être utilisée. Les sons ont été supprimés de Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Le nom qui s’affiche dans la barre de titre de la fenêtre Microsoft Excel principale. Si vous ne spécifiez pas un nom, ou si vous affectez le nom <b>Empty</b>, cette propriété renvoie « Microsoft Excel ».</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDragAndDrop">
      <MemberSignature Language="C#" Value="public bool CellDragAndDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CellDragAndDrop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CellDragAndDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property CellDragAndDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CellDragAndDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si le glisser-déplacer entre les cellules est activée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les cellules de la feuille de calcul active. Si le document actif n’est pas une feuille de calcul, cette propriété échoue.</summary>
        <value>To be added.</value>
        <remarks>
          <para>, Car le <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> propriété est la propriété par défaut pour l’objet <b>Range</b> , vous pouvez spécifier l’index de ligne et de colonne immédiatement après le mot clé <b>Cells</b> . Pour plus d’informations, voir la <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> propriété.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CentimetersToPoints">
      <MemberSignature Language="C#" Value="public double CentimetersToPoints (double Centimeters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CentimetersToPoints([in]float64 Centimeters) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CentimetersToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CentimetersToPoints (Centimeters As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CentimetersToPoints(double Centimeters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1086)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Centimeters" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Centimeters">
          <b>Double</b>obligatoire. Spécifie la valeur en centimètres à convertir en points.</param>
        <summary>Convertit des centimètres en points (un point est égal à 0,035 centimètres).</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur True</b> provoque tous les graphiques dans les documents nouvellement créés pour utiliser le suivi du comportement de référence de cellule. <b>Boolean</b> (bool en c#).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles graphiques du classeur actif.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAbort">
      <MemberSignature Language="C#" Value="public void CheckAbort (object KeepAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckAbort([in]object KeepAbort) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckAbort(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckAbort (Optional KeepAbort As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="KeepAbort" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="KeepAbort">Facultatif <b>Object</b>. Autorise le recalcul pour une <b>plage</b>.</param>
        <summary>Cette méthode arrête le recalcul dans une application Microsoft Excel.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public bool CheckSpelling (string Word, object CustomDictionary, object IgnoreUppercase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSpelling([in]string Word, [in]object CustomDictionary, [in]object IgnoreUppercase) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckSpelling(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Word As String, Optional CustomDictionary As Object, Optional IgnoreUppercase As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Word" Type="System.String" />
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Word">
          <b>String</b>obligatoire. Le mot que vous voulez vérifier.</param>
        <param name="CustomDictionary">Facultatif <b>Object</b>. Chaîne qui indique le nom de fichier du dictionnaire personnalisé à examiner si le mot n’est pas trouvé dans le dictionnaire principal. Si cet argument est omis, le dictionnaire actuellement spécifié est utilisé.</param>
        <param name="IgnoreUppercase">Facultatif <b>Object</b>. <b>True</b> pour que Microsoft Excel ignore les mots en majuscules. <b>False</b> pour que Microsoft Excel vérifie les mots en majuscules. Si cet argument est omis, la valeur actuelle est utilisée.</param>
        <summary>Cette méthode vérifie l'orthographe d'un seul mot. Renvoie <b>la valeur True</b> si le mot est trouvé dans un des dictionnaires ; Renvoie la <b>valeur False</b> si le mot n’est pas trouvé.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipboardFormats">
      <MemberSignature Language="C#" Value="public object ClipboardFormats[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ClipboardFormats(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClipboardFormats(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipboardFormats(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ClipboardFormats[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">Facultatif <b>Object</b>. L’élément de tableau à renvoyer. Si cet argument est omis, la propriété renvoie le tableau entier de formats actuellement dans le Presse-papiers. Pour plus d’informations, voir la section Remarques.</param>
        <summary>Renvoie les formats actuellement dans le Presse-papiers en tant que tableau de valeurs numériques. Pour déterminer si un format particulier se trouve dans le Presse-papiers, comparez chaque élément du tableau avec la constante appropriée répertoriée dans la section Remarques.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Cette propriété renvoie un tableau de valeurs numériques. Pour déterminer si un format particulier se trouve dans le Presse-papiers, comparez chaque élément du tableau avec l’une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> constantes :</para>
          <para>
            <b>xlClipboardFormatBIFF</b>
          </para>
          <para>
            <b>xlClipboardFormatBIFF2</b>
          </para>
          <para>
            <b>xlClipboardFormatBIFF3</b>
          </para>
          <para>
            <b> xlClipboardFormatBIFF4</b>
          </para>
          <para>
            <b>xlClipboardFormatBinary</b>
          </para>
          <para>
            <b>xlClipboardFormatBitmap</b>
          </para>
          <para>
            <b>xlClipboardFormatCGM</b>
          </para>
          <para>
            <b>xlClipboardFormatCSV</b>
          </para>
          <para>
            <b>xlClipboardFormatDIF</b>
          </para>
          <para>
            <b>xlClipboardFormatDspText</b>
          </para>
          <para>
            <b>xlClipboardFormatEmbeddedObject</b>
          </para>
          <para>
            <b>xlClipboardFormatEmbedSource</b>
          </para>
          <para>
            <b>xlClipboardFormatLink</b>
          </para>
          <para>
            <b>xlClipboardFormatLinkSource</b>
          </para>
          <para>
            <b>xlClipboardFormatLinkSourceDesc</b>
          </para>
          <para>
            <b>xlClipboardFormatMovie</b>
          </para>
          <para>
            <b>xlClipboardFormatNative</b>
          </para>
          <para>
            <b>xlClipboardFormatObjectDesc</b>
          </para>
          <para>
            <b>xlClipboardFormatObjectLink</b>
          </para>
          <para>
            <b>xlClipboardFormatOwnerLink</b>
          </para>
          <para>
            <b>xlClipboardFormatPICT</b>
          </para>
          <para>
            <b>xlClipboardFormatPrintPICT</b>
          </para>
          <para>
            <b>xlClipboardFormatRTF</b>
          </para>
          <para>
            <b>xlClipboardFormatScreenPICT</b>
          </para>
          <para>
            <b>xlClipboardFormatStandardFont</b>
          </para>
          <para>
            <b>xlClipboardFormatStandardScale</b>
          </para>
          <para>
            <b>xlClipboardFormatSYLK</b>
          </para>
          <para>
            <b>xlClipboardFormatTable</b>
          </para>
          <para>
            <b>xlClipboardFormatText</b>
          </para>
          <para>
            <b>xlClipboardFormatToolFace</b>
          </para>
          <para>
            <b>xlClipboardFormatToolFacePICT</b>
          </para>
          <para>
            <b>xlClipboardFormatVALU</b>
          </para>
          <para>
            <b>xlClipboardFormatWK1</b>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterConnector">
      <MemberSignature Language="C#" Value="public string ClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterConnector As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterConnector { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du connecteur de Cluster HPC High Performance Computing () qui est utilisé pour exécuter des fonctions définies par l’utilisateur dans les compléments XLL.</summary>
        <value>Le nom du connecteur de Cluster HPC High Performance Computing () qui est utilisé pour exécuter des fonctions définies par l’utilisateur dans les compléments XLL.</value>
        <remarks>
          <para>En lecture-écriture.</para>
          <para>La valeur de la <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> propriété correspond à la type liste déroulante zone Cluster sous formules dans la catégorie Avancé de la boîte de dialogue Options Excel.</para>
          <para>
            <b>Remarque</b>: pour spécifier le <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> propriété, vous devez installer un connecteur de Cluster HPC High Performance Computing (). Un connecteur de Cluster permet d’exécuter les fonctions XLL sécurisées pour le cluster à distance sur un cluster HPC pour améliorer les performances.</para>
          <para>Avant de pouvoir spécifier la <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> propriété, vous devez utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> propriété pour permettre à Microsoft Excel 2010 à l’exécution de fonctions définies par l’utilisateur dans les compléments XLL</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorButtons">
      <MemberSignature Language="C#" Value="public bool ColorButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColorButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ColorButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColorButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les colonnes de la feuille de calcul active. Si le document actif n’est pas une feuille de calcul, la propriété <b>Columns</b> échoue.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMAddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.COMAddIns COMAddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.COMAddIns COMAddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.COMAddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property COMAddIns As COMAddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::COMAddIns ^ COMAddIns { Microsoft::Office::Core::COMAddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.COMAddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le <see cref="T:Microsoft.Office.Core.COMAddIns" /> collection dans Microsoft Excel, qui représente les compléments COM actuellement installés.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Core.CommandBars" /> object qui représente les barres de commandes Excel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Cette propriété renvoie l’ensemble des barres de commandes intégrées et personnalisées disponibles pour l’application.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandUnderlines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandUnderlines" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandUnderlines As XlCommandUnderlines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommandUnderlines CommandUnderlines { Microsoft::Office::Interop::Excel::XlCommandUnderlines get(); void set(Microsoft::Office::Interop::Excel::XlCommandUnderlines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommandUnderlines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit l’état des soulignements de commande dans Microsoft Excel pour Macintosh.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" />peut être une de ces constantes <b>XlCommandUnderlines</b> :</para>
          <para>
            <b>xlCommandUnderlinesOn</b>
          </para>
          <para>
            <b>xlCommandUnderlinesOff</b>
          </para>
          <para>
            <b>xlCommandUnderlinesAutomatic</b>
          </para>
          <para>dans Microsoft Excel pour Windows, toujours la lecture de cette propriété renvoie <b> xlCommandUnderlinesOn</b>, et la définition de cette propriété sur une valeur autre que <b>xlCommandUnderlinesOn</b> est une erreur.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstrainNumeric">
      <MemberSignature Language="C#" Value="public bool ConstrainNumeric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstrainNumeric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ConstrainNumeric" />
      <MemberSignature Language="VB.NET" Value="Public Property ConstrainNumeric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstrainNumeric { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si la reconnaissance de l’écriture manuscrite est limitée aux nombres et à la ponctuation uniquement.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Cette propriété est disponible uniquement si vous utilisez Microsoft Windows pour Pen Computing. Si vous tentez de définir cette propriété sous tout autre système d’exploitation, une erreur se produit.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlCharacters">
      <MemberSignature Language="C#" Value="public bool ControlCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ControlCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si Microsoft Excel affiche des caractères de contrôle pour les langues de droite à gauche.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Cette propriété peut être définie uniquement lorsque la droite à gauche langue prise en charge a été installée et sélectionnée.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFormula">
      <MemberSignature Language="C#" Value="public object ConvertFormula (object Formula, Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, object ToReferenceStyle, object ToAbsolute, object RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFormula([in]object Formula, [in]valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, [in]object ToReferenceStyle, [in]object ToAbsolute, [in]object RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFormula (Formula As Object, FromReferenceStyle As XlReferenceStyle, Optional ToReferenceStyle As Object, Optional ToAbsolute As Object, Optional RelativeTo As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="FromReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="ToReferenceStyle" Type="System.Object" />
        <Parameter Name="ToAbsolute" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Formula">
          <b>Objet</b>obligatoire. <b>Chaîne</b> qui contient la formule que vous souhaitez convertir. Il doit s’agir d’une formule valide et elle doit commencer par un signe égal.</param>
        <param name="FromReferenceStyle">Requis <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />. Le style de référence de la formule. <b>XlReferenceStyle</b> peut être une de ces constantes <b>XlReferenceStyle</b> :<b>xlA1</b><b>xlR1C1</b></param>
        <param name="ToReferenceStyle">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />. Le style de référence à renvoyer. Si cet argument est omis, le style de référence n’est pas modifié ; la formule reste dans le style spécifié par <paramref name="FromReferenceStyle" />. XlReferenceStyle peut être une de ces constantes XlReferenceStyle. <b>xlA1</b><b>xlR1C1</b></param>
        <param name="ToAbsolute">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />. Spécifie le type de référence convertie. Si cet argument est omis, le type de référence n’est pas modifié. <b>XlReferenceStyle</b> peut être une de ces constantes <b>XlReferenceStyle</b> :<b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></param>
        <param name="RelativeTo">Facultatif <b>Object</b>. Facultatif <b>de type Variant</b>. A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui contient une cellule. Références relatives dépendent de cette cellule.</param>
        <summary>Convertit les références de cellule dans une formule entre les styles de référence A1 et R1C1, entre les références absolues et relatives, ou les deux.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyObjectsWithCells">
      <MemberSignature Language="C#" Value="public bool CopyObjectsWithCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CopyObjectsWithCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CopyObjectsWithCells" />
      <MemberSignature Language="VB.NET" Value="Public Property CopyObjectsWithCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CopyObjectsWithCells { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si les objets sont coupés, copiés, extraits et triés avec les cellules.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé. Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</summary>
        <value>To be added.</value>
        <remarks>Propriété <para>le <b>créateur</b> est conçue pour être utilisé dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Excel possède le code créateur XCEL.</para><para></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMousePointer Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMousePointer Cursor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As XlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMousePointer Cursor { Microsoft::Office::Interop::Excel::XlMousePointer get(); void set(Microsoft::Office::Interop::Excel::XlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit l’apparence du pointeur de la souris dans Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" />peut être une de ces constantes <b>XlMousePointer</b> :</para>
          <para>
            <b>xlDefault</b> pointeur par défaut.</para>
          <para>pointeur en i de 
            <b>xlIBeam</b> .</para>
          <para>
            <b>xlNorthwestArrow</b> le pointeur en flèche Nord-Ouest.</para>
          <para>
            <b>xlWait</b> sablier.</para> Propriété 
          <para>le <b>curseur</b> n’est pas réinitialisée automatiquement lorsque la macro cesse de s’exécuter. Vous devriez le réinitialiser le pointeur <b>xlDefault</b> avant l’arrêt de votre macro.</para><para></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorMovement">
      <MemberSignature Language="C#" Value="public int CursorMovement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CursorMovement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CursorMovement" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorMovement As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CursorMovement { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit une valeur qui indique si un curseur visuel ou logique est utilisé. Peut être une des constantes suivantes : <b>xlVisualCursor</b> ou <b>xlLogicalCursor</b>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Ces constantes ne soient pas disponibles, en fonction de la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomListCount">
      <MemberSignature Language="C#" Value="public int CustomListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CustomListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CustomListCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le nombre de listes personnalisées définies (y compris les listes prédéfinies).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CutCopyMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CutCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CutCopyMode As XlCutCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCutCopyMode CutCopyMode { Microsoft::Office::Interop::Excel::XlCutCopyMode get(); void set(Microsoft::Office::Interop::Excel::XlCutCopyMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCutCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit l’état du mode Couper ou copier.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" />peut être une de ces constantes <b>XlCutCopyMode</b> .</para>
          <list type="table">
            <item>
              <term>
                <b>False</b>
              </term>
              <description>pas en mode Couper ou copier</description>
            </item>
            <item>
              <term>
                <b>xlCopy</b>
              </term>
              <description>copie dans le mode</description>
            </item>
            <item>
              <term>
                <b>xlCut</b>
              </term>
              <description>mode de coupe</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>
                <b>False</b>
              </term>
              <description>annule Couper ou en mode Copier et supprime le déplacement de la bordure.</description>
            </item>
            <item>
              <term>
                <b>True</b>
              </term>
              <description>annule Couper ou en mode Copier et supprime le déplacement de la bordure.</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataEntryMode">
      <MemberSignature Language="C#" Value="public int DataEntryMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataEntryMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DataEntryMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataEntryMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataEntryMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le mode d’entrée de données, comme indiqué dans le tableau ci-dessous. En mode de saisie de données, vous pouvez entrer des données uniquement dans les cellules non verrouillées dans la plage sélectionnée.</summary>
        <value>To be added.</value>
        <remarks>
          <list type="table">
            <item>
              <term>
                <b>xlOn</b>
              </term>
              <description>mode saisie de données est activé.</description>
            </item>
            <item>
              <term>
                <b>xlOff</b>
              </term>
              <description>est en mode de saisie de données désactivés.</description>
            </item>
            <item>
              <term>
                <b>xlStrict</b>
              </term>
              <description>mode saisie de données est activé et que la touche ÉCHAP ne désactiver.</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEAppReturnCode">
      <MemberSignature Language="C#" Value="public int DDEAppReturnCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DDEAppReturnCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DDEAppReturnCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DDEAppReturnCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DDEAppReturnCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le DDE propres aux applications renvoient un code qui était contenue dans la dernière DDE remercier message reçu par Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEExecute">
      <MemberSignature Language="C#" Value="public void DDEExecute (int Channel, string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEExecute([in]int32 Channel, [in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEExecute(System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEExecute(int Channel, System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(333)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <b>Integer</b>obligatoire. Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</param>
        <param name="String">
          <b>String</b>obligatoire. Message défini dans l'application réceptrice.</param>
        <summary>Exécute une commande ou d’autres actions dans une autre application, par l’entremise du canal DDE spécifié.</summary>
        <remarks>
          <para>La méthode <b>DDEExecute</b> est conçue pour envoyer des commandes vers une autre application. Vous pouvez également l’utiliser pour envoyer des séquences de touches à une autre application, bien que le <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> méthode est la méthode recommandée pour envoyer des séquences de touches. Le <paramref name="String" /> argument peut spécifier n’importe quelle touche unique combinée avec ALT, CTRL ou MAJ ou n’importe quelle combinaison de ces touches. Chaque clé est représenté par un ou plusieurs caractères, tel que « a » pour le caractère un, ou « {ENTER} » pour la touche ENTRÉE.</para>
          <para>Pour spécifier des caractères qui ne sont pas affichés lorsque vous appuyez sur la touche correspondante (par exemple, entrée ou TAB), utilisez les codes listés dans le tableau suivant. Chaque code de la table représente une touche du clavier.</para>
          <list type="table">
            <item>
              <term>Retour arrière</term>
              <description>{BACKSPACE} ou {BS}</description>
            </item>
            <item>
              <term>arrêt</term>
              <description>{arrêt}</description>
            </item>
            <item>
              <term>Verr.MAJ</term>
              <description>{CAPSLOCK}</description>
            </item>
            <item>
              <term>clair</term>
              <description>{clair}</description>
            </item>
            <item>
              <term>Supprimer ou Suppr</term>
              <description>{DELETE} ou {DEL}</description>
            </item>
            <item>
              <term>Flèche vers le bas</term>
              <description>{vers le bas}</description>
            </item>
            <item>
              <term>Fin</term>
              <description>{fin}</description>
            </item>
            <item>
              <term>Entrée</term>
              <description>~ (tilde)</description>
            </item>
            <item>
              <term>Entrée (pavé numérique)</term>
              <description>{entrée}</description>
            </item>
            <item>
              <term>ÉCHAP</term>
              <description>{ESCAPE} ou {ESC}</description>
            </item>
            <item>
              <term>F1 à F15</term>
              <description>{F1} à {F15}</description>
            </item>
            <item>
              <term>Aide</term>
              <description>{aide}</description>
            </item>
            <item>
              <term>Accueil</term>
              <description>{accueil}</description>
            </item>
            <item>
              <term>INS</term>
              <description>{Insérer}</description>
            </item>
            <item>
              <term>Flèche gauche</term>
              <description>{LEFT}</description>
            </item>
            <item>
              <term>Le verrouillage du</term>
              <description>{NUMLOCK}</description>
            </item>
            <item>
              <term>Vers le bas de PAGE</term>
              <description>{PG}</description>
            </item>
            <item>
              <term>PAGE précédente</term>
              <description>{page précédente}</description>
            </item>
            <item>
              <term>Renvoyer</term>
              <description>{RETURN}</description>
            </item>
            <item>
              <term>Flèche vers la droite</term>
              <description>{RIGHT}</description>
            </item>
            <item>
              <term>Arrêt défil</term>
              <description>{Arrêt défil}</description>
            </item>
            <item>
              <term>Onglet</term>
              <description>{onglet}</description>
            </item>
            <item>
              <term>Flèche vers le haut</term>
              <description>{UP}</description>
            </item>
          </list>
          <para>Vous pouvez également spécifier des touches combinées avec MAJ, CTRL ou ALT. Pour spécifier une touche combinée à une ou plusieurs de ces touches, utilisez le tableau suivant.</para>
          <list type="table">
            <item>
              <term>MAJ</term>
              <description>+ (signe plus)</description>
            </item>
            <item>
              <term>CTRL</term>
              <description>^ (accent circonflexe)</description>
            </item>
            <item>
              <term>ALT</term>
              <description>% (signe pourcentage)</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEInitiate">
      <MemberSignature Language="C#" Value="public int DDEInitiate (string App, string Topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DDEInitiate([in]string App, [in]string Topic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDEInitiate (App As String, Topic As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DDEInitiate(System::String ^ App, System::String ^ Topic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="App" Type="System.String" />
        <Parameter Name="Topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="App">
          <b>String</b>obligatoire. Nom de l'application.</param>
        <param name="Topic">
          <b>String</b>obligatoire. Décrit quelque chose dans l'application vers laquelle vous ouvrez un canal. Il s'agit généralement d'un document de cette application.</param>
        <summary>Ouvre un canal DDE vers une application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Si l’opération réussit, la méthode <b>DDEInitiate</b> renvoie le numéro du canal ouvert. Toutes les fonctions DDE ultérieures utilisent ce numéro pour spécifier le canal d’échange.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEPoke">
      <MemberSignature Language="C#" Value="public void DDEPoke (int Channel, object Item, object Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEPoke([in]int32 Channel, [in]object Item, [in]object Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEPoke(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDEPoke (Channel As Integer, Item As Object, Data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEPoke(int Channel, System::Object ^ Item, System::Object ^ Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <b>Integer</b>obligatoire. Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</param>
        <param name="Item">
          <b>Objet</b>obligatoire. Élément vers lequel les données doivent être envoyées.</param>
        <param name="Data">
          <b>Objet</b>obligatoire. Données à envoyer à l'application.</param>
        <summary>Cette méthode envoie des données à une application.</summary>
        <remarks>
          <para>Une erreur se produit si l’appel de méthode n’aboutit pas.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDERequest">
      <MemberSignature Language="C#" Value="public object DDERequest (int Channel, string Item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DDERequest([in]int32 Channel, [in]string Item) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDERequest(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDERequest (Channel As Integer, Item As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DDERequest(int Channel, System::String ^ Item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <b>Integer</b>obligatoire. Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</param>
        <param name="Item">
          <b>String</b>obligatoire. Élément à requérir.</param>
        <summary>Cette méthode demande des informations à l'application spécifiée. Cette méthode renvoie toujours un tableau.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDETerminate">
      <MemberSignature Language="C#" Value="public void DDETerminate (int Channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDETerminate([in]int32 Channel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDETerminate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDETerminate (Channel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDETerminate(int Channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <b>Integer</b>obligatoire. Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</param>
        <summary>Cette méthode ferme un canal vers une autre application.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalSeparator">
      <MemberSignature Language="C#" Value="public string DecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit ou renvoie le caractère utilisé comme séparateur décimal sous forme de <b>chaîne</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFilePath">
      <MemberSignature Language="C#" Value="public string DefaultFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le chemin d’accès par défaut que Microsoft Excel utilise lors de l’ouverture des fichiers.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSaveFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSaveFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSaveFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat DefaultSaveFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); void set(Microsoft::Office::Interop::Excel::XlFileFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le format par défaut pour l’enregistrement des fichiers.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSheetDirection">
      <MemberSignature Language="C#" Value="public int DefaultSheetDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSheetDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSheetDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSheetDirection As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSheetDirection { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit la direction par défaut dans lequel Microsoft Excel affiche les feuilles de calcul et des fenêtres. Peut être une des constantes suivantes : <b>xlRTL</b> (de droite à gauche) ou <b>xlLTR</b> (de gauche à droite).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Certaines de ces constantes ne soient pas disponibles, en fonction de la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultWebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultWebOptions As DefaultWebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DefaultWebOptions ^ DefaultWebOptions { Microsoft::Office::Interop::Excel::DefaultWebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DefaultWebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> objet qui contient les attributs de niveau application globaux utilisés par Microsoft Excel lorsque vous enregistrez un document sous forme de page Web ou ouvrez une page Web.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferAsyncQueries">
      <MemberSignature Language="C#" Value="public bool DeferAsyncQueries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferAsyncQueries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DeferAsyncQueries" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferAsyncQueries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferAsyncQueries { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si l’exécution des requêtes asynchrone aux sources de données OLAP lorsqu’une feuille de calcul est calculé par le code VBA. Lecture/écriture.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>
          <para>La définition sur <b>True</b> la propriété <b>DeferAsyncQueries</b> empêche toute asynchrone l’exécution jusqu'à ce que la <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> méthode est appelée.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteChartAutoFormat">
      <MemberSignature Language="C#" Value="public void DeleteChartAutoFormat (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteChartAutoFormat([in]string Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteChartAutoFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteChartAutoFormat (Name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteChartAutoFormat(System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">
          <b>String</b>obligatoire. Nom de la mise en forme automatique personnalisée à supprimer.</param>
        <summary>Supprime de la liste des formats automatiques de graphique disponibles une mise en forme automatique de graphique personnalisée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCustomList">
      <MemberSignature Language="C#" Value="public void DeleteCustomList (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteCustomList([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteCustomList(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteCustomList (ListNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteCustomList(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum">
          <b>Integer</b>obligatoire. Numéro de la liste personnalisée. Ce numéro doit être supérieure ou égale à 5 (Microsoft Excel possède quatre listes personnalisées intégrées qui ne peuvent pas être supprimées).</param>
        <summary>Supprime une liste personnalisée.</summary>
        <remarks>
          <para>Cette méthode génère une erreur si le numéro de la liste est inférieure à 5 ou s’il n’existe aucune liste personnalisée correspondant.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dialogs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Dialogs Dialogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Dialogs Dialogs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dialogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dialogs As Dialogs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Dialogs ^ Dialogs { Microsoft::Office::Interop::Excel::Dialogs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Dialogs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> collection qui représente toutes les boîtes de dialogue prédéfinies.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAlerts">
      <MemberSignature Language="C#" Value="public bool DisplayAlerts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAlerts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAlerts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAlerts { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si Microsoft Excel affiche certaines alertes et certains messages pendant l’exécution d’une macro.</summary>
        <value>To be added.</value>
        <remarks>
          <para>La valeur par défaut est <b>True</b>. Définissez cette propriété sur <b>False</b> si vous ne souhaitez pas être dérangé par des invites et alertes pendant l’exécution d’un programme. chaque fois qu’un message nécessite une réponse, Microsoft Excel choisit la réponse par défaut.</para>
          <para>Si vous définissez cette propriété sur <b>False</b>, Microsoft Excel affecte à cette propriété <b>la valeur True</b> lorsque le code est terminé, sauf si vous exécutez croisée traiter code.</para>
          <para>Lors de l’utilisation du <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode pour les classeurs remplacer un fichier existant, l’alerte « Remplacer » a une valeur par défaut « Non », tandis que la réponse « Oui » est sélectionnée par Excel lorsque la propriété <b>DisplayAlerts</b> a la valeur <b>false</b>.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayClipboardWindow">
      <MemberSignature Language="C#" Value="public bool DisplayClipboardWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayClipboardWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayClipboardWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayClipboardWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayClipboardWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie <b>la valeur True</b> si le Presse-papiers Microsoft Office peut être affiché.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCommentIndicator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayCommentIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayCommentIndicator As XlCommentDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommentDisplayMode DisplayCommentIndicator { Microsoft::Office::Interop::Excel::XlCommentDisplayMode get(); void set(Microsoft::Office::Interop::Excel::XlCommentDisplayMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommentDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit la manière dont les cellules affichent les commentaires et les indicateurs. Peut être une des opérations suivantes <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constantes : <b>xlNoIndicator</b>, <b>xlCommentIndicatorOnly</b>ou <b>xlCommentAndIndicator</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentActionTaskPane">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentActionTaskPane { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentActionTaskPane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentActionTaskPane" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentActionTaskPane As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentActionTaskPane { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Valeur <b>True</b> pour afficher le volet Office Actions de Document ; a la valeur <b>False</b> pour masquer le volet Office Actions de Document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>La définition de cette propriété sur <b>True</b> entraîne une erreur d’exécution si le classeur actif n’est pas un document dynamique.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentInformationPanel">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentInformationPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentInformationPanel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentInformationPanel" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentInformationPanel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentInformationPanel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique si le panneau de propriétés de document est affiché. En lecture-écriture.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExcel4Menus">
      <MemberSignature Language="C#" Value="public bool DisplayExcel4Menus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayExcel4Menus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayExcel4Menus" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExcel4Menus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayExcel4Menus { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si Microsoft Excel affiche des barres de menus version 4.0.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaAutoComplete">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit s’il faut afficher la liste des fonctions pertinentes et de noms définis lors de la création de formules de cellule. Lecture/écriture.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaBar">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si la barre de formule est affichée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFullScreen">
      <MemberSignature Language="C#" Value="public bool DisplayFullScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFullScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFullScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFullScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFullScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si Microsoft Excel est en mode plein écran.</summary>
        <value>To be added.</value>
        <remarks>Mode <para>plein écran agrandit la fenêtre d’application afin que la totalité de l’écran et masque la barre de titre d’application. Barres d’outils, la barre d’état et la barre de formule gérer les paramètres d’affichage distinct pour le mode plein écran et le mode normal.</para><para></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFunctionToolTips">
      <MemberSignature Language="C#" Value="public bool DisplayFunctionToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFunctionToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFunctionToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFunctionToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFunctionToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les info-bulles de fonction peuvent être affichées.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInfoWindow">
      <MemberSignature Language="C#" Value="public bool DisplayInfoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInfoWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInfoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInfoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInfoWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInsertOptions">
      <MemberSignature Language="C#" Value="public bool DisplayInsertOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInsertOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInsertOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInsertOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInsertOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si le bouton Options d’insertion doit être affiché.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNoteIndicator">
      <MemberSignature Language="C#" Value="public bool DisplayNoteIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayNoteIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayNoteIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayNoteIndicator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayNoteIndicator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les cellules contenant des commentaires affichent les info-bulles et contiennent des indicateurs d’annotations (petits points dans leur coin supérieur droit).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPasteOptions">
      <MemberSignature Language="C#" Value="public bool DisplayPasteOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPasteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayPasteOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPasteOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPasteOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si le bouton Options de collage peut être affiché.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Il s’agit d’un paramètre Microsoft Office. Ce paramètre affecte toutes les autres applications Microsoft Office. Définition de la <b>DisplayPasteOptions</b> propriété la <b>valeur True</b> désactive le bouton Options de recopie incrémentée dans Microsoft Excel. Le bouton <b>Options de recopie incrémentée</b> est uniquement dans Excel, mais le bouton Options de collage est dans toutes les autres applications Microsoft Office.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRecentFiles">
      <MemberSignature Language="C#" Value="public bool DisplayRecentFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayRecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRecentFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRecentFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si la liste des derniers fichiers utilisés s’affiche dans le menu fichier.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayScrollBars">
      <MemberSignature Language="C#" Value="public bool DisplayScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayScrollBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayScrollBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayScrollBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si les barres de défilement sont visibles pour tous les classeurs.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStatusBar">
      <MemberSignature Language="C#" Value="public bool DisplayStatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayStatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayStatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStatusBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayStatusBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si la barre d’état est affichée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayXMLSourcePane">
      <MemberSignature Language="C#" Value="public void DisplayXMLSourcePane (object XmlMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayXMLSourcePane([in]object XmlMap) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DisplayXMLSourcePane(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayXMLSourcePane (Optional XmlMap As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlMap" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlMap">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objet. Le mappage XML à afficher dans le volet Office.</param>
        <summary>Ouvre le volet Office XML Source et affiche le mappage XML spécifié par le <paramref name="XmlMap" /> argument.</summary>
        <remarks>
          <para>Les fonctionnalités XML, à l’exception de l’enregistrement des fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professionnel 2003 et Microsoft Office Excel 2003.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public void DoubleClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoubleClick() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoubleClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoubleClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Équivaut à double-cliquer sur la cellule active.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy1">
      <MemberSignature Language="C#" Value="public object Dummy1 (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy1([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy1(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy1 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy10">
      <MemberSignature Language="C#" Value="public bool Dummy10 (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Dummy10([in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy10 (Optional arg As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy101">
      <MemberSignature Language="C#" Value="public object Dummy101 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Dummy101" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy101" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dummy101 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Dummy101 { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy11">
      <MemberSignature Language="C#" Value="public void Dummy11 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy11() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy11" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy11 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy11();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy12">
      <MemberSignature Language="C#" Value="public void Dummy12 (Microsoft.Office.Interop.Excel.PivotTable p1, Microsoft.Office.Interop.Excel.PivotTable p2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy12([in]class Microsoft.Office.Interop.Excel.PivotTable p1, [in]class Microsoft.Office.Interop.Excel.PivotTable p2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy12 (p1 As PivotTable, p2 As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy12(Microsoft::Office::Interop::Excel::PivotTable ^ p1, Microsoft::Office::Interop::Excel::PivotTable ^ p2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="p2" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy13">
      <MemberSignature Language="C#" Value="public object Dummy13 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy13([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy13 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy14">
      <MemberSignature Language="C#" Value="public void Dummy14 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy14() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy14" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy14 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy14();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy2">
      <MemberSignature Language="C#" Value="public object Dummy2 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy2([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy2 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy20">
      <MemberSignature Language="C#" Value="public object Dummy20 (int grfCompareFunctions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy20([in]int32 grfCompareFunctions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy20(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy20 (grfCompareFunctions As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy20(int grfCompareFunctions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCompareFunctions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="grfCompareFunctions">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>
          <b>s</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy22">
      <MemberSignature Language="C#" Value="public bool Dummy22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy22" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy22" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy22 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy22 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy23">
      <MemberSignature Language="C#" Value="public bool Dummy23 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy23" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy23 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy23 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy3">
      <MemberSignature Language="C#" Value="public object Dummy3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy3() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy3" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy3 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy4">
      <MemberSignature Language="C#" Value="public object Dummy4 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy4([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy4 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy5">
      <MemberSignature Language="C#" Value="public object Dummy5 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy5([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy5 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy6">
      <MemberSignature Language="C#" Value="public object Dummy6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy6() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy6" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy6 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy7">
      <MemberSignature Language="C#" Value="public object Dummy7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy7() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy7" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy7 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy8">
      <MemberSignature Language="C#" Value="public object Dummy8 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy8([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy8(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy8 (Optional Arg1 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy9">
      <MemberSignature Language="C#" Value="public object Dummy9 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy9() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy9" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy9 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy9();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditDirectlyInCell">
      <MemberSignature Language="C#" Value="public bool EditDirectlyInCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditDirectlyInCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EditDirectlyInCell" />
      <MemberSignature Language="VB.NET" Value="Public Property EditDirectlyInCell As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditDirectlyInCell { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si Microsoft Excel autorise la modification dans les cellules.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAnimations">
      <MemberSignature Language="C#" Value="public bool EnableAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoComplete">
      <MemberSignature Language="C#" Value="public bool EnableAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si la fonctionnalité de saisie semi-automatique est activée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCancelKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCancelKey" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCancelKey As XlEnableCancelKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableCancelKey EnableCancelKey { Microsoft::Office::Interop::Excel::XlEnableCancelKey get(); void set(Microsoft::Office::Interop::Excel::XlEnableCancelKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableCancelKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contrôle la façon dont Microsoft Excel gère les interruptions utilisateur CTRL + PAUSE (ou ÉCHAP ou commande + point) à la procédure en cours d’exécution. En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>XlEnableCancelKey</b> peut être une de ces constantes <b>XlEnableCancelKey</b> :</para>
          <list type="bullet">
            <item>
              <description>
                <b>xlDisabled</b> annuler l’interception des annulations est complètement désactivée.</description>
            </item>
            <item>
              <description>
                <b>xlErrorHandler</b> l’interruption est transmise à la procédure en cours d’exécution en tant qu’erreur, interceptable par un gestionnaire d’erreurs configuré avec une instruction On Error GoTo. Le code d’erreur interceptable est 18.</description>
            </item>
            <item>
              <description>
                <b>xlInterrupt</b> la procédure en cours est interrompue et l’utilisateur peut déboguer et achever la procédure.</description>
            </item>
          </list>
          <para>Utilisez cette propriété soigneusement. Si vous utilisez <b>xlDisabled</b>, il est impossible d’interrompre une boucle ou un autre code qui n’est pas automatiquement abandonnée. De même, si vous utilisez <b>xlErrorHandler</b> mais votre gestionnaire d’erreurs retourne toujours à l’aide de l’instruction <b>Resume</b> , il est impossible d’interrompre du code.</para> Propriété 
          <para><b>EnableCancelKey</b> est toujours réinitialisée <b>xlInterrupt</b> chaque fois que Microsoft Excel renvoie l’état inactif et aucun code n’est en cours d’exécution. Pour intercepter ou désactiver l’annulation dans votre procédure, vous devez modifier explicitement la propriété <b>EnableCancelKey</b> chaque fois que la procédure est appelée.</para><para></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCheckFileExtensions">
      <MemberSignature Language="C#" Value="public bool EnableCheckFileExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCheckFileExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCheckFileExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCheckFileExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCheckFileExtensions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>True pour activer le savoir si Microsoft Excel n’est pas le programme par défaut pour afficher et modifier la boîte de dialogue des feuilles de calcul.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public bool EnableEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les événements sont activés pour l’objet spécifié.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLargeOperationAlert">
      <MemberSignature Language="C#" Value="public bool EnableLargeOperationAlert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLargeOperationAlert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLargeOperationAlert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLargeOperationAlert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLargeOperationAlert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit ou renvoie un <b>type Boolean</b> qui indique si pour afficher un message d’alerte lorsqu’un utilisateur tente d’effectuer une opération qui affecte un plus grand nombre de cellules que celle spécifiée dans l’interface utilisateur du Centre Office. Lecture/écriture.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>
          <para>La valeur par défaut de cette propriété a la <b>valeur True</b>.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLivePreview">
      <MemberSignature Language="C#" Value="public bool EnableLivePreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLivePreview" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLivePreview" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLivePreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLivePreview { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit ou renvoie un <b>Boolean</b> qui indique s'il faut afficher ou masquer les aperçus qui s'affichent lorsque vous utilisez des galeries qui prise en charge les aperçus. Définir cette propriété sur <b>True</b> affiche un aperçu de votre classeur avant d’appliquer la commande. Lecture/écriture.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>
          <para>Cette propriété correspond à la case à cocher Activer l’aperçu instantané dans la boîte de dialogue Options Excel.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMacroAnimations">
      <MemberSignature Language="C#" Value="public bool EnableMacroAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableMacroAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableMacroAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMacroAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableMacroAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contrôle si les animations de macro sont activées. <b>La valeur true</b> si les animations de graphiques ou les animations d’interface utilisateur sont activées. Est définie sur <b>False</b> (sans animation) par défaut. Si elle est définie sur <b>True</b> lors de l’exécution d’une macro, elle permettra d’animation et puis est réinitialisées à <b>False</b> après que la macro s’exécute. En lecture/écriture <b>booléen</b> (<b>bool</b> en c#).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSound">
      <MemberSignature Language="C#" Value="public bool EnableSound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableSound" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSound { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si le son est activé pour Microsoft Office.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTipWizard">
      <MemberSignature Language="C#" Value="public bool EnableTipWizard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTipWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableTipWizard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableTipWizard { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCheckingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ErrorCheckingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCheckingOptions As ErrorCheckingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ ErrorCheckingOptions { Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorCheckingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> object, qui représente les options d’une application de vérification des erreurs.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <b>Objet</b>obligatoire. Nom de l'objet, conformément aux conventions de dénomination de Microsoft Excel.</param>
        <summary>Cette méthode convertit un nom Microsoft Excel en un objet ou une valeur.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Les types suivants de noms dans Microsoft Excel peuvent être utilisés avec cette méthode :</para>
          <list type="bullet">
            <item>
              <description>Références de style A1. Vous pouvez utiliser toute référence à une cellule unique dans une notation de style A1. Toutes les références sont considérées comme absolues.</description>
            </item> Plages 
            <item><description>. Vous pouvez utiliser la plage, se coupent pas et les opérateurs union (deux-points, l’espace et virgule respectivement) avec des références.</description></item> Noms 
            <item><description>défini. Vous pouvez spécifier n’importe quel nom dans la langue de la macro.</description></item> Références 
            <item><description>externe. Vous pouvez utiliser le ! Pour faire référence à une cellule ou à un nom défini dans un autre classeur — par exemple, Evaluate (« [Classeur1. XLS] Sheet1 ! A1 »).</description></item></list>
          <para>
            <b>Remarque</b>: à l’aide des crochets droits (par exemple, « [a1 : C5] ») revient à appeler la méthode <b>Evaluate</b> avec un argument de chaîne. L’avantage des crochets est que le code est plus court. L’avantage de la méthode <b>Evaluate</b> est que l’argument est une chaîne, vous pouvez construire la chaîne dans votre code ou utiliser une variable.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles de macro internationales de Microsoft Excel 4.0 dans le classeur spécifié.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles macro Microsoft Excel 4.0 dans le classeur spécifié.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteExcel4Macro">
      <MemberSignature Language="C#" Value="public object ExecuteExcel4Macro (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteExcel4Macro([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ExecuteExcel4Macro(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteExcel4Macro(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <b>String</b>obligatoire. Une fonction du langage macro Microsoft Excel 4.0 sans le signe égal. Toutes les références doivent être indiquées sous forme de chaînes de caractères R1C1. Si <paramref name="String" /> contient des guillemets doubles incorporés, vous devez les doubler. Par exemple, pour exécuter la fonction macro = MID("sometext",1,4), <paramref name="String" /> devrait être « MID(""sometext"",1,4) ».</param>
        <summary>Exécute une fonction macro Microsoft Excel 4.0, puis renvoie le résultat de la fonction. Le type de retour dépend de la fonction.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Microsoft Excel 4.0 la macro n’est pas évaluée dans le contexte de la feuille ou du classeur actif. Cela signifie que toutes les références doivent être externes et doivent spécifier un nom de classeur explicite. Par exemple, pour exécuter la macro Microsoft Excel 4.0 appelée « Ma_Macro » dans Classeur1, vous devez utiliser « Classeur1 ! My_Macro() ». Si vous ne spécifiez pas le nom du classeur, cette méthode échoue.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendList">
      <MemberSignature Language="C#" Value="public bool ExtendList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtendList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ExtendList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExtendList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si Microsoft Excel étend automatiquement les formats et formules aux nouvelles données est ajouté à une liste.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Être étendu, les formats et formules doivent apparaître dans au moins trois de liste de cinq lignes ou colonnes précédant la nouvelle ligne ou colonne et vous devez ajouter les données vers le bas ou à droite de la liste.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureInstall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFeatureInstall FeatureInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFeatureInstall FeatureInstall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FeatureInstall" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureInstall As MsoFeatureInstall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFeatureInstall FeatureInstall { Microsoft::Office::Core::MsoFeatureInstall get(); void set(Microsoft::Office::Core::MsoFeatureInstall value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFeatureInstall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit une valeur qui spécifie comment Microsoft Excel gère les appels aux méthodes et propriétés qui nécessitent des fonctionnalités qui ne sont pas encore installées (constante). En lecture/écriture <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>MsoFeatureInstall</b> peut être une de ces constantes <b>MsoFeatureInstall</b> :</para>
          <list type="bullet">
            <item>
              <description>
                <b>msoFeatureInstallNone</b> génère une erreur d’automatisation générique au moment de l’exécution lorsque des fonctionnalités non installées sont appelées. Il s’agit de la constante par défaut.</description>
            </item>
            <item>
              <description>
                <b>msoFeatureInstallOnDemand</b> invite l’utilisateur à installer de nouvelles fonctionnalités.</description>
            </item>
            <item>
              <description>
                <b>msoFeatureInstallOnDemandWithUI</b> affiche une jauge de progression pendant l’installation ; sans inviter l’utilisateur à installer de nouvelles fonctionnalités.</description>
            </item>
          </list>
          <para>, Vous pouvez utiliser la constante <b>msoFeatureInstallOnDemandWithUI</b> pour empêcher les utilisateurs de penser que l’application ne répond pas lors de l’installation d’une fonctionnalité. Utilisez la constante <b>msoFeatureInstallNone</b> si vous souhaitez que le développeur soit le seul à peut installer des fonctionnalités.</para>
          <para>Si vous avez le <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> propriété la valeur <b>False</b>, les utilisateurs ne sont pas invités à installer de nouvelles fonctionnalités même si la propriété <b>FeatureInstall</b> a la valeur <b>msoFeatureInstallOnDemand</b>. Si le <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> est définie sur <b>True</b>, une jauge de progression de l’installation s’affiche si la propriété <b>FeatureInstall</b> a la valeur <b>msoFeatureInstallOnDemand</b>.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileConverters">
      <MemberSignature Language="C#" Value="public object FileConverters[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FileConverters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileConverters(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FileConverters[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">Facultatif <b>Object</b>. Nom complet du convertisseur avec la chaîne de recherche du type de fichier dans Windows, par exemple, « Lotus 1-2-3 Files (*.wk*) ».</param>
        <param name="Index2">Facultatif <b>Object</b>. Le chemin d’accès du convertisseur de DLL ou ressource de code.</param>
        <summary>Retourne des informations sur les convertisseurs de fichiers installés. Renvoie la <b>valeur Null</b> s’il n’existe aucun convertisseur n’est installé.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Si vous ne spécifiez pas arguments, cette propriété renvoie un tableau qui contient des informations sur tous les convertisseurs de fichiers installés. Chaque ligne du tableau contient des informations sur un convertisseur de fichier unique, comme indiqué dans le tableau suivant.</para>
          <list type="table">
            <item>
              <term>1</term>
              <description>le nom complet du convertisseur</description>
            </item>
            <item>
              <term>2</term>
              <description>la ressource de code ou un chemin d’accès de la DLL du convertisseur</description>
            </item>
            <item>
              <term>3</term>
              <description>la chaîne de recherche d’extension de fichier</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileDialog FileDialog[Microsoft.Office.Core.MsoFileDialogType fileDialogType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileDialog FileDialog(valuetype Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileDialog(Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDialog(fileDialogType As MsoFileDialogType) As FileDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileDialog ^ FileDialog[Microsoft::Office::Core::MsoFileDialogType] { Microsoft::Office::Core::FileDialog ^ get(Microsoft::Office::Core::MsoFileDialogType fileDialogType); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDialogType" Type="Microsoft.Office.Core.MsoFileDialogType" />
      </Parameters>
      <Docs>
        <param name="fileDialogType">Requis <see cref="T:Microsoft.Office.Core.MsoFileDialogType" />. Le type de boîte de dialogue fichier. <b>MsoFileDialogType</b> peut être une de ces constantes <b>MsoFileDialogType</b> :<b>msoFileDialogFilePicker</b> permet à l’utilisateur de sélectionner un fichier. <b>msoFileDialogFolderPicker</b> Permet à l’utilisateur de sélectionner un dossier. <b>msoFileDialogOpen</b> Permet à utilisateur d’ouvrir un fichier. <b>msoFileDialogSaveAs</b> Permet à l’utilisateur d’enregistrer un fichier.</param>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Core.FileDialog" /> objet représentant une instance de la boîte de dialogue fichier.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExportConverters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileExportConverters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExportConverters As FileExportConverters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FileExportConverters ^ FileExportConverters { Microsoft::Office::Interop::Excel::FileExportConverters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FileExportConverters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> collection qui représente tous les convertisseurs de fichier pour l’enregistrement des fichiers disponible dans Microsoft Excel. En lecture seule.</summary>
        <value>Cette propriété renvoie <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFind">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IFind FileFind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IFind FileFind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileFind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFind As IFind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IFind ^ FileFind { Microsoft::Office::Core::IFind ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IFind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Vous avez demandé de l’aide sur un mot clé Visual Basic utilisé uniquement pour les Macintosh. Pour plus d’informations sur ce mot clé, consultez l’Aide fournie avec l’édition de Microsoft Office pour Macintosh</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileSearch">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileSearch FileSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileSearch FileSearch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSearch As FileSearch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileSearch ^ FileSearch { Microsoft::Office::Core::FileSearch ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileSearch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Core.FileSearch" /> objet pour une utilisation avec des recherches de fichier. Cette propriété est disponible uniquement dans Microsoft Windows.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFileValidationMode FileValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFileValidationMode FileValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidation As MsoFileValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFileValidationMode FileValidation { Microsoft::Office::Core::MsoFileValidationMode get(); void set(Microsoft::Office::Core::MsoFileValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFileValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la façon dont Microsoft Excel valide les fichiers avant leur ouverture.</summary>
        <value>A <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> objet.</value>
        <remarks>
          <para>En lecture-écriture.</para> Fichiers 
          <para>qui ne passent pas validation ouvrira dans une fenêtre mode protégé. Si vous définissez la <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> propriété, que paramètre restent en vigueur pour toute la session de l’application est ouverte.</para><para></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidationPivot">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidationPivot As XlFileValidationPivotMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileValidationPivotMode FileValidationPivot { Microsoft::Office::Interop::Excel::XlFileValidationPivotMode get(); void set(Microsoft::Office::Interop::Excel::XlFileValidationPivotMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileValidationPivotMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la façon dont Microsoft Excel valide le contenu des caches de données pour les rapports de tableau croisé dynamique.</summary>
        <value>A <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> objet.</value>
        <remarks>
          <para>En lecture-écriture.</para> Fichiers de 
          <para>qui contiennent des caches de données qui ne valident pas ouvrira dans une fenêtre mode protégé. Si vous définissez la <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> propriété, que paramètre restent en vigueur pour toute la session de l’application est ouverte.</para><para></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFile">
      <MemberSignature Language="C#" Value="public bool FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FindFile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Affiche la boîte de dialogue Ouvrir.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Cette méthode affiche la boîte de dialogue Ouvrir et permet à l’utilisateur d’ouvrir un fichier. Si un nouveau fichier est ouvert avec succès, cette méthode renvoie <b>la valeur True</b>. Si l’utilisateur annule la boîte de dialogue, cette méthode renvoie la <b>valeur False</b>.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat FindFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat FindFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FindFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property FindFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ FindFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit les critères de recherche pour le type de format de cellule à trouver.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimal">
      <MemberSignature Language="C#" Value="public bool FixedDecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedDecimal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedDecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Toutes les données saisies après que cette propriété est définie sur <b>True</b> sont formatées avec le nombre de décimales fixes défini la <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> propriété.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimalPlaces">
      <MemberSignature Language="C#" Value="public int FixedDecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FixedDecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FixedDecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le nombre de décimales fixes utilisé quand la <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> propriété est définie sur <b>True</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public bool FlashFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>TRUE</b> indique que la fonctionnalité Excel Flash remplir a été activé et actif. <b>Boolean</b> (<b>bool</b> en c#) En lecture/écriture</summary>
        <value>To be added.</value>
        <remarks>
          <para>Flash remplir détecte lorsque vous modifiez les données qui correspond à un modèle qui peut être rempli et appliqué à des données supplémentaires dans le classeur et remplit automatiquement la colonne avec les résultats.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFillMode">
      <MemberSignature Language="C#" Value="public bool FlashFillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFillMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFillMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFillMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si la fonctionnalité de remplissage Flash est activée. <b>Boolean</b> (<b>bool</b> en c#) En lecture/écriture</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaBarHeight">
      <MemberSignature Language="C#" Value="public int FormulaBarHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FormulaBarHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FormulaBarHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaBarHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FormulaBarHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Autorise l’utilisateur à spécifier la hauteur de la barre de formule en lignes. Lecture/écriture.</summary>
        <value>
          <b>Integer</b>
        </value>
        <remarks>
          <para>Si la valeur de <b>FormulaBarHeight</b> spécifiée est supérieure à l’espace visible de la fenêtre, la barre de formule est redimensionnée pour être égale à la hauteur de la fenêtre.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateGetPivotData">
      <MemberSignature Language="C#" Value="public bool GenerateGetPivotData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateGetPivotData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateGetPivotData" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateGetPivotData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateGetPivotData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie <b>la valeur True</b> lorsque Microsoft Excel peut obtenir des données de rapport de tableau croisé dynamique.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTableRefs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateTableRefs As XlGenerateTableRefs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlGenerateTableRefs GenerateTableRefs { Microsoft::Office::Interop::Excel::XlGenerateTableRefs get(); void set(Microsoft::Office::Interop::Excel::XlGenerateTableRefs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlGenerateTableRefs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Le <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> propriété détermine si la méthode de notation traditionnelle ou la nouvelle méthode de référencement structuré est utilisée pour faire référence à des tableaux dans les formules. Lecture/écriture.</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlGenerateTableRefs" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListContents">
      <MemberSignature Language="C#" Value="public object GetCustomListContents (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomListContents([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListContents(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListContents (ListNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomListContents(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum">
          <b>Integer</b>obligatoire. Numéro de la liste.</param>
        <summary>Renvoie une liste personnalisée (tableau de chaînes de caractères).</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListNum">
      <MemberSignature Language="C#" Value="public int GetCustomListNum (object ListArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCustomListNum([in]object ListArray) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListNum(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListNum (ListArray As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCustomListNum(System::Object ^ ListArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray">
          <b>Objet</b>obligatoire. Tableau de chaînes de caractères.</param>
        <summary>Cette méthode renvoie le numéro de la liste personnalisée correspondant à un tableau de chaînes de caractères. Vous pouvez utiliser cette méthode pour faire correspondre à la fois les listes prédéfinies et les listes personnalisées.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Cette méthode génère une erreur si aucune liste correspondant.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenFilename">
      <MemberSignature Language="C#" Value="public object GetOpenFilename (object FileFilter, object FilterIndex, object Title, object ButtonText, object MultiSelect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOpenFilename([in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText, [in]object MultiSelect) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOpenFilename (Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object, Optional MultiSelect As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1075)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
        <Parameter Name="MultiSelect" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileFilter">Facultatif <b>Object</b>. Chaîne spécifiant les critères de filtrage de fichier. Cette chaîne est constituée de paires de chaînes de filtre de fichier suivies par la spécification de filtre de fichier à générique de MS-DOS, avec chaque composant et chaque paire est séparée par des virgules. Chaque paire distincte est contenue dans les fichiers de la zone de liste déroulante type. Par exemple, la chaîne suivante spécifie deux filtres de fichiers — texte et addin : « fichiers texte (*.txt),*.txt, fichiers de compléments (*.xla),*.xla ». Pour utiliser plusieurs expressions génériques MS-DOS pour un type de filtre de fichier unique, séparez les expressions génériques par des points-virgules, par exemple, « fichiers Visual Basic (*.bas ; *.txt),*.bas ;*. txt ». Si omis, cet argument par défaut « Tous les fichiers (*.*),*.*».</param>
        <param name="FilterIndex">Facultatif <b>Object</b>. Spécifie les critères de filtrage, de 1 au nombre de filtres spécifiés dans les numéros d’index de la valeur par défaut du fichier <paramref name="FileFilter" />. Si cet argument est omis ou supérieur au nombre de filtres présents, le premier filtre de fichier est utilisé.</param>
        <param name="Title">Facultatif <b>Object</b>. Spécifie le titre de la boîte de dialogue. Si cet argument est omis, le titre est « Open ».</param>
        <param name="ButtonText">Facultatif <b>Object</b>. Macintosh uniquement.</param>
        <param name="MultiSelect">Facultatif <b>Object</b>. <b>La valeur true</b> pour autoriser plusieurs noms de fichiers. <b>False</b> pour autoriser uniquement un nom de fichier à sélectionner. <b>False</b> est la valeur par défaut.</param>
        <summary>Affiche la boîte de dialogue Ouvrir standard, et obtient un nom de fichier de l'utilisateur sans réellement ouvrir aucun fichier.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Cette méthode retourne le nom du fichier sélectionné ou le nom entré par l’utilisateur. Le nom retourné peut inclure une spécification de chemin d’accès. Si <paramref name="MultiSelect" /> est <b>True</b>, la valeur de retour est un tableau de noms de fichiers sélectionnés (même si un seul nom de fichier est sélectionnée). Renvoie la <b>valeur False</b> si l’utilisateur annule la boîte de dialogue.</para>
          <para>Cette méthode peut changer le lecteur actif ou le dossier.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhonetic">
      <MemberSignature Language="C#" Value="public string GetPhonetic (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPhonetic([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetPhonetic(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPhonetic (Optional Text As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">Facultatif <b>Object</b>. Spécifie le texte à convertir en texte phonétique. Si vous omettez cet argument, la chaîne texte phonétiques possibles suivante (le cas échéant) du spécifié précédemment <paramref name="Text" /> est renvoyée. S’il n’y a pas plus possible de chaînes de texte phonétique, une chaîne vide est renvoyée.</param>
        <summary>Cette méthode renvoie le texte phonétique japonais de la chaîne de texte spécifiée. Elle est disponible uniquement si vous avez sélectionné ou installé la prise en charge linguistique du japonais pour Microsoft Office.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSaveAsFilename">
      <MemberSignature Language="C#" Value="public object GetSaveAsFilename (object InitialFilename, object FileFilter, object FilterIndex, object Title, object ButtonText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSaveAsFilename([in]object InitialFilename, [in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSaveAsFilename (Optional InitialFilename As Object, Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1076)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InitialFilename" Type="System.Object" />
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="InitialFilename">Facultatif <b>Object</b>. Spécifie le nom de fichier suggéré. Si cet argument est omis, Microsoft Excel utilise nom du classeur actif.</param>
        <param name="FileFilter">Facultatif <b>Object</b>. Chaîne spécifiant les critères de filtrage de fichier. Cette chaîne est constituée de paires de chaînes de filtre de fichier suivies par la spécification de filtre de fichier à générique de MS-DOS, avec chaque composant et chaque paire est séparée par des virgules. Chaque paire distincte est contenue dans les fichiers de la zone de liste déroulante type. Par exemple, la chaîne suivante spécifie deux filtres, texte et macros : « fichiers texte (.txt *), *.txt, fichiers de compléments (*.xla), .xla *». Pour utiliser plusieurs expressions génériques MS-DOS pour un type de filtre de fichier unique, séparez les expressions génériques par des points-virgules, par exemple, « fichiers Visual Basic (*.bas ; *.txt),*.bas ;*. txt ». Si omis, cet argument par défaut « Tous les fichiers (*.*),*.*».</param>
        <param name="FilterIndex">Facultatif <b>Object</b>. Spécifie les critères de filtrage, de 1 au nombre de filtres spécifiés dans le numéro d’index de la valeur par défaut du fichier <paramref name="FileFilter" />. Si cet argument est omis ou supérieur au nombre de filtres présents, le premier filtre de fichier est utilisé.</param>
        <param name="Title">Facultatif <b>Object</b>. Spécifie le titre de la boîte de dialogue. Si cet argument est omis, le titre par défaut est utilisé.</param>
        <param name="ButtonText">Facultatif <b>Object</b>. Macintosh uniquement.</param>
        <summary>Affiche la boîte de dialogue standard Enregistrer sous et lit un nom de fichier tapé par l’utilisateur sans réellement enregistrer les fichiers.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Cette méthode retourne le nom du fichier sélectionné ou le nom entré par l’utilisateur. Le nom retourné peut inclure une spécification de chemin d’accès. Renvoie la <b>valeur False</b> si l’utilisateur annule la boîte de dialogue.</para>
          <para>Cette méthode peut changer le lecteur actif ou le dossier.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public void Goto (object Reference, object Scroll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Goto([in]object Reference, [in]object Scroll) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Goto (Optional Reference As Object, Optional Scroll As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(475)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Scroll" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Reference">Facultatif <b>Object</b>. La destination. Peut être un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet, une chaîne qui contient une référence de cellule dans une notation de type R1C1 ou une chaîne qui contient un nom de procédure Visual Basic. Si cet argument est omis, la destination est la dernière plage que vous permet de sélectionner la méthode <b>Goto</b> .</param>
        <param name="Scroll">Facultatif <b>Object</b>. <b>True</b> pour faire défiler la fenêtre afin que le coin supérieur gauche de la plage s’affiche dans le coin supérieur gauche de la fenêtre. <b>False</b> pour ne pas faire défiler la fenêtre. La valeur par défaut est <b>False</b>.</param>
        <summary>Sélectionne une plage ou une procédure Visual Basic dans n’importe quel classeur et active celui-ci s’il n’est pas déjà active.</summary>
        <remarks>
          <para>Cette méthode diffère de la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> procédé comme suit :</para>
          <list type="bullet">
            <item>
              <description>Si vous spécifiez une plage dans une feuille qui n’est pas visible, Microsoft Excel bascule vers cette feuille avant la sélection. (Si vous utilisez l’option <b>Sélectionner</b> une plage située dans une feuille qui n’est pas visible, la plage est sélectionnée mais la feuille n’est pas activée).</description>
            </item>
            <item>
              <description>Cette méthode n’a un <paramref name="Scroll" /> argument qui vous permet de faire défiler la fenêtre de destination.</description>
            </item>
            <item>
              <description>Lorsque vous utilisez la méthode <b>Goto</b> , la sélection précédente (avant l’exécution de la méthode <b>Goto</b> ) est ajoutée dans le tableau des sélections précédentes (pour plus d’informations, voir la <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> propriété). Vous pouvez utiliser cette fonctionnalité pour passer rapidement jusqu'à quatre sélections.</description>
            </item>
            <item>
              <description>La méthode <b>Select</b> a un <paramref name="Replace" /> argument ; la <b>Goto</b> méthode ne.</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La hauteur, en points, de la fenêtre d’application principale. Si la fenêtre est réduite, cette propriété est en lecture seule et fait référence à la hauteur de l’icône. Si la fenêtre est réduite, cette propriété ne peut pas être définie. Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> propriété pour déterminer l’état de la fenêtre.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public void Help (object HelpFile, object HelpContextID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Help([in]object HelpFile, [in]object HelpContextID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Help(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Help (Optional HelpFile As Object, Optional HelpContextID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(354)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="HelpFile">Facultatif <b>Object</b>. Le nom du fichier d’aide en ligne que vous souhaitez afficher. Si cet argument n’est pas spécifié, l’aide de Microsoft Excel est utilisée.</param>
        <param name="HelpContextID">Facultatif <b>Object</b>. Spécifie le numéro d’identificateur contextuel de la rubrique d’aide. Si cet argument n’est pas spécifié, la boîte de dialogue Rubriques d’aide s’affiche.</param>
        <summary>Cette méthode affiche une rubrique d'aide.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighQualityModeForGraphics">
      <MemberSignature Language="C#" Value="public bool HighQualityModeForGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighQualityModeForGraphics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HighQualityModeForGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Property HighQualityModeForGraphics As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighQualityModeForGraphics { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si Excel utilise le mode haute qualité pour imprimer des graphiques.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>
          <para>Cette propriété correspond au paramètre du mode haute qualité pour la case à cocher de graphiques dans la section imprimer de la catégorie Avancé de la boîte de dialogue Options Excel.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hinstance">
      <MemberSignature Language="C#" Value="public int Hinstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hinstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hinstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hinstance As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hinstance { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le descripteur d’instances de l’instance qui appelle Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HinstancePtr">
      <MemberSignature Language="C#" Value="public object HinstancePtr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HinstancePtr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HinstancePtr" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HinstancePtr As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HinstancePtr { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un handle vers l’instance de Microsoft Excel 2010 représenté par le <see cref="T:Microsoft.Office.Interop.Excel._Application" /> objet.</summary>
        <value>Un handle vers l’instance de Microsoft Excel 2010 représenté par le <see cref="T:Microsoft.Office.Interop.Excel._Application" /> objet.</value>
        <remarks>
          <para>En lecture seule <b>Variant</b>.</para>
          <para>Cette propriété renvoie une poignée correcte dans les versions 32 bits et 64 bits de Microsoft Excel. Il étend les fonctionnalités de la <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object, qui ne fonctionne correctement dans la version 32 bits de Microsoft Excel.</para> Type de 
          <para>les données idéales à utiliser avec cette propriété est le type de données <b>LongPtr</b> . Affectation de la valeur renvoyée par cette propriété à une variable <b>LongPtr</b> fonctionne comme prévu dans les versions 32 bits et 64 bits de Microsoft Excel. La propriété est définie en tant que <b>Variant</b> pour des raisons d’implémentation interne. Toutefois, elle renvoie toujours la valeur 32 bits sur les systèmes 32 bits et une valeur 64 bits sur les systèmes 64 bits.</para><para>Cette propriété seulement fonctionne commençant par Excel 2010 et n’est requis avec la version 64 bits de Microsoft Excel. Si vous devez écrire du code qui fonctionne également avec les versions antérieures d’Excel, afin d’éviter les erreurs de compilation, lisez cette propriété sous une directive de compilation conditionnelle #if Win64 et utilisez le <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> propriété sous le #else, directive.</para><para><b>Remarque</b>: cette propriété fonctionne dans les deux environnements 32 bits et 64 bits avec Excel 2010. Par conséquent, si votre code est destiné à être utilisé uniquement avec Excel 2010 ou version ultérieure, soit 32 bits ou 64 bits, il peut lire cette propriété sans compilation conditionnelle.</para><para></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <b>entier</b> indiquant le handle de fenêtre supérieure de la fenêtre Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreRemoteRequests">
      <MemberSignature Language="C#" Value="public bool IgnoreRemoteRequests { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreRemoteRequests" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IgnoreRemoteRequests" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreRemoteRequests As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreRemoteRequests { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les requêtes DDE sont ignorés.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InchesToPoints">
      <MemberSignature Language="C#" Value="public double InchesToPoints (double Inches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 InchesToPoints([in]float64 Inches) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InchesToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InchesToPoints (Inches As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InchesToPoints(double Inches);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1087)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Inches" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Inches">
          <b>Double</b>obligatoire. Spécifie la valeur en pouces à convertir en points.</param>
        <summary>Cette méthode convertit une mesure en pouces en une mesure en points.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public object InputBox (string Prompt, object Title, object Default, object Left, object Top, object HelpFile, object HelpContextID, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InputBox([in]string Prompt, [in]object Title, [in]object Default, [in]object Left, [in]object Top, [in]object HelpFile, [in]object HelpContextID, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As Object, Optional Default As Object, Optional Left As Object, Optional Top As Object, Optional HelpFile As Object, Optional HelpContextID As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(357)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="Default" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Prompt">
          <b>Objet</b>obligatoire. Message à afficher dans la boîte de dialogue. Il peut s’agir d’une chaîne, un nombre, une date ou une valeur de <b>type Boolean</b> .</param>
        <param name="Title">Facultatif <b>Object</b>. Titre de la zone d’entrée. Si cet argument est omis, le titre par défaut est « Entrée ».</param>
        <param name="Default">Facultatif <b>Object</b>. Spécifie une valeur qui apparaît dans la zone de texte quand la boîte de dialogue s’affiche. Si cet argument est omis, la zone de texte reste vide. Cette valeur peut être un objet <b>Range</b>.</param>
        <param name="Left">Facultatif <b>Object</b>. Spécifie une position x pour la boîte de dialogue relative à l’angle supérieur gauche de l’écran en points.</param>
        <param name="Top">Facultatif <b>Object</b>. Spécifie une position y pour la boîte de dialogue relative à l’angle supérieur gauche de l’écran en points.</param>
        <param name="HelpFile">Facultatif <b>Object</b>. Nom du fichier d’aide pour cette zone d’entrée. Si la <paramref name="HelpFile" /> et <paramref name="HelpContextID" /> arguments sont présents, un bouton Aide apparaîtra dans la boîte de dialogue.</param>
        <param name="HelpContextID">Facultatif <b>Object</b>. Numéro d’identificateur contextuel de la rubrique d’aide dans <paramref name="HelpFile" />.</param>
        <param name="Type">Facultatif <b>Object</b>. Spécifie le type de données renvoyées. Si cet argument est omis, la boîte de dialogue renvoie texte. Peut être une ou la somme des valeurs suivantes. Vous pouvez utiliser la somme des valeurs autorisées pour <paramref name="Type" />. Par exemple, pour une zone d’entrée qui peut accepter du texte et les numéros, définissez <paramref name="Type" /> à 1 + 2.</param>
        <summary>Cette méthode affiche une boîte de dialogue dans laquelle l'utilisateur peut saisir des données. Elle renvoie les informations saisies dans la boîte de dialogue.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Utiliser la <b>fonction InputBox</b> pour afficher une boîte de dialogue simple afin que vous pouvez entrer des informations à utiliser dans une macro. La boîte de dialogue possède un bouton OK et un bouton Annuler. Si vous choisissez le bouton OK, <b>InputBox</b> renvoie la valeur entrée dans la boîte de dialogue. Si vous cliquez sur le bouton Annuler, <b>InputBox</b> renvoie la <b>valeur False</b>.</para>
          <para>Si <paramref name="Type" /> est 0, <b>InputBox</b> renvoie la formule sous la forme de texte — par exemple, « = 2 * PI () / 360 ». S’il existe des références dans la formule, ils sont renvoyés en tant que références de style A1. (Utilisez <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> pour convertir les styles de référence.)</para>
          <para>Si <paramref name="Type" /> est 8, <b>InputBox</b> renvoie un objet <b>Range</b> .</para>
          <para>Si vous utilisez la méthode <b>InputBox</b> pour demander à l’utilisateur une formule, vous devez utiliser le <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> propriété pour affecter la formule à un objet <b>Range</b> . La formule d’entrée est dans la langue de l’utilisateur.</para> Méthode 
          <para><b>InputBox</b> diffère de la fonction <b>InputBox</b> en ce sens qu’elle permet une validation sélective de l’entrée d’utilisateur, et il peut être utilisé avec des objets Microsoft Excel, les valeurs d’erreur et les formules. InputBox sans qualificateur d’objet appelle la fonction <b>InputBox</b> .</para><para></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="public bool Interactive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Interactive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Interactive" />
      <MemberSignature Language="VB.NET" Value="Public Property Interactive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Interactive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si Microsoft Excel est en mode interactif. Cette propriété est généralement <b>la valeur True</b>. Si vous définissez cette propriété sur <b>False</b>, Microsoft Excel empêchera toutes les entrées du clavier et de la souris (à l’exception d’entrée aux boîtes de dialogue affichées par votre code). Utilisateur empêche l’utilisateur d’entraver le code lorsqu’il déplace ou active des objets Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Cette propriété est utile si vous écrivez du code pour communiquer avec Microsoft Excel à partir d’une autre application.</para>
          <para>Si vous définissez cette propriété sur <b>False</b>, n’oubliez pas de le définir sur <b>True</b>. Microsoft Excel ne sont pas automatiquement définir cette propriété sur <b>True</b> lorsque votre code s’arrête.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="International">
      <MemberSignature Language="C#" Value="public object International[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object International(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.International(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property International(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ International[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <b>Objet</b>obligatoire. Le paramètre à renvoyer. Peut être une de le <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> constantes répertoriées dans les tableaux suivants.</param>
        <summary>Retourne des informations sur le pays/la région et les paramètres internationaux.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Accolades et crochets</para>
          <list type="table">
            <item>
              <term>
                <b>xlLeftBrace</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>caractère utilisé à la place de l’accolade gauche ({}) dans les littérales.</description>
            </item>
            <item>
              <term>
                <b>xlLeftBracket</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>caractère utilisé à la place du crochet gauche ([]) dans les références relatives de style R1C1.</description>
            </item>
            <item>
              <term>
                <b>xlLowerCaseColumnLetter</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>de colonne en minuscules.</description>
            </item>
            <item>
              <term>
                <b>xlLowerCaseRowLetter</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>de ligne en minuscules.</description>
            </item>
            <item>
              <term>
                <b>xlRightBrace</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>caractère utilisé à la place de l’accolade droite (}) dans les littérales.</description>
            </item>
            <item>
              <term>
                <b>xlRightBracket</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>caractère utilisé à la place du crochet (]) dans les références de style R1C1.</description>
            </item>
            <item>
              <term>
                <b>xlUpperCaseColumnLetter</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>de colonne en majuscules.</description>
            </item>
            <item>
              <term>
                <b>xlUpperCaseRowLetter</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>lettre de ligne en majuscules (pour les références de style R1C1).</description>
            </item>
          </list>
          <para>Paramètres de pays/région</para>
          <list type="table">
            <item>
              <term>
                <b>xlCountryCode</b>
              </term>
              <description>
                <b>entier</b>
              </description>
              <description>version de pays/région de Microsoft Excel.</description>
            </item>
            <item>
              <term>
                <b>xlCountrySetting</b>
              </term>
              <description>
                <b>entier</b>
              </description>
              <description>valeur pays/région actuelle dans le panneau de configuration Windows.</description>
            </item>
            <item>
              <term>
                <b>xlGeneralFormatName</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>nom de format numérique standard.</description>
            </item>
          </list>
          <para>Devise</para>
          <list type="table">
            <item>
              <term>
                <b>xlCurrencyBefore</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>
                <b>la valeur True</b> si le symbole monétaire précède la valeur ; <b>False</b> s’il suit.</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyCode</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>symbole monétaire.</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyDigits</b>
              </term>
              <description>
                <b>entier</b>
              </description>
              <description>nombre de décimales à utiliser dans les formats monétaires.</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyLeadingZeros</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>
                <b>la valeur True</b> si un zéro non significatif sont affichées pour les valeurs monétaires nulles.</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyMinusSign</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>
                <b>la valeur True</b> si vous utilisez un signe moins pour les nombres négatifs ; <b>False</b> si vous utilisez des parenthèses.</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyNegative</b>
              </term>
              <description>
                <b>entier</b>
              </description>
              <description>format monétaire pour les valeurs monétaires négatives : 0 = (symbolex) ou (x symbole) 1 = - symbolex ou - 2 = symbole-x ou x-symbole 3 = symbolex - ou x symbole-où symbole correspond au symbole de devise de la pays ou région. Notez que la position du symbole monétaire est déterminée par <b>xlCurrencyBefore</b>.</description>
            </item>
            <item>
              <term>
                <b>xlCurrencySpaceBefore</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>
                <b>la valeur True</b> si un espace est ajouté devant le symbole monétaire.</description>
            </item>
            <item>
              <term>
                <b>xlCurrencyTrailingZeros</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>
                <b>la valeur True</b> si les zéros sont affichés pour les valeurs monétaires nulles.</description>
            </item>
            <item>
              <term>
                <b>xlNoncurrencyDigits</b>
              </term>
              <description>
                <b>entier</b>
              </description>
              <description>nombre de décimales à utiliser dans les formats non monétaires.</description>
            </item>
          </list>
          <para>Date et heure</para>
          <list type="table">
            <item>
              <term>
                <b>xl24HourClock</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>
                <b>la valeur True</b> si vous utilisez le format horaire 24 heures ; <b>False</b> si vous utilisez le format horaire 12 heures.</description>
            </item>
            <item>
              <term>
                <b>xl4DigitYears</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>
                <b>la valeur True</b> si vous utilisez des années à quatre chiffres ; <b>False</b> si elles comportent deux chiffres.</description>
            </item>
            <item>
              <term>
                <b>xlDateOrder</b>
              </term>
              <description>
                <b>entier</b>
              </description>
              <description>l’ordre des éléments de date : 0 = mois-jour-année 1 = jour-mois-année 2 = année-mois-jour</description>
            </item>
            <item>
              <term>
                <b>xlDateSeparator</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>séparateur de Date (/).</description>
            </item>
            <item>
              <term>
                <b>xlDayCode</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>symbole du jour (d).</description>
            </item>
            <item>
              <term>
                <b>xlDayLeadingZero</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>la valeur True si un zéro non significatif est affiché dans les jours.</description>
            </item>
            <item>
              <term>
                <b>xlHourCode</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>symbole des heures (h).</description>
            </item>
            <item>
              <term>
                <b>xlMDY</b>
              </term>
              <description>
                <b>booléenne</b>
              </description>
              <b>True</b> si l’ordre de date est mois-jour-année
              <description>dates affichés dans le formulaire de type long ; <b>False</b> si l’ordre de date est jour-mois-année.</description></item>
            <item>
              <term>
                <b>xlMinuteCode</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>symbole des minutes (m).</description>
            </item>
            <item>
              <term>
                <b>xlMonthCode</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>symbole du mois (m).</description>
            </item>
            <item>
              <term>
                <b>xlMonthLeadingZero</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>
                <b>la valeur True</b> si un zéro non significatif est affiché dans les mois (lorsque les mois sont affichés sous forme numérique).</description>
            </item>
            <item>
              <term>
                <b>xlMonthNameChars</b>
              </term>
              <description>
                <b>entier</b>
              </description>
              <description>toujours renvoie trois caractères pour la compatibilité descendante. Noms de mois abrégés sont lus à partir de Microsoft Windows et peut être n’importe quelle longueur.</description>
            </item>
            <item>
              <term>
                <b>xlSecondCode</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>symbole des secondes (s).</description>
            </item>
            <item>
              <term>
                <b>xlTimeSeparator</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>séparateur d’heure ( :)).</description>
            </item>
            <item>
              <term>
                <b>xlTimeLeadingZero</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>
                <b>la valeur True</b> si un zéro non significatif est affiché dans l’heure.</description>
            </item>
            <item>
              <term>
                <b>xlWeekdayNameChars</b>
              </term>
              <description>
                <b>entier</b>
              </description>
              <description>toujours renvoie trois caractères pour la compatibilité descendante. Noms de jours courts sont lus à partir de Microsoft Windows et peut être n’importe quelle longueur.</description>
            </item>
            <item>
              <term>
                <b>xlYearCode</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>symbole de l’année dans les formats numériques (y).</description>
            </item>
          </list>
          <para>Systèmes de mesure</para>
          <list type="table">
            <item>
              <term>
                <b>xlMetric</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>
                <b>la valeur True</b> si vous utilisez le système métrique ; <b>False</b> si vous utilisez le système de mesure anglais.</description>
            </item>
            <item>
              <term>
                <b>xlNonEnglishFunctions</b>
              </term>
              <description>
                <b>Boolean</b>
              </description>
              <description>
                <b>la valeur True</b> si les fonctions ne sont pas affichées en anglais.</description>
            </item>
          </list>
          <para>Séparateurs</para>
          <list type="table">
            <item>
              <term>
                <b>xlAlternateArraySeparator</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>autre séparateur d’éléments à utiliser si le séparateur actuel est identique au séparateur décimal.</description>
            </item>
            <item>
              <term>
                <b>xlColumnSeparator</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>caractère utilisé pour séparer les colonnes dans les littérales.</description>
            </item>
            <item>
              <term>
                <b>xlDecimalSeparator</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>séparateur décimal.</description>
            </item>
            <item>
              <term>
                <b>xlListSeparator</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>séparateur de liste.</description>
            </item>
            <item>
              <term>
                <b>xlRowSeparator</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>caractère utilisé pour séparer les lignes dans les littérales.</description>
            </item>
            <item>
              <term>
                <b>xlThousandsSeparator</b>
              </term>
              <description>
                <b>chaîne</b>
              </description>
              <description>zéro ou séparateur de milliers.</description>
            </item>
          </list>
          <para>Symboles, séparateurs et formats monétaires figurant dans le tableau précédent peuvent différer de ceux utilisés dans votre langue ou l’emplacement géographique et ne peut pas être disponibles, en fonction de la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionné ou installé.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Intersect (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Intersect([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(766)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">
          <b>Objet Range</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg2">
          <b>Objet Range</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg3">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg4">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg5">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg6">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg7">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg8">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg9">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg10">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg11">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg12">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg13">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg14">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg15">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg16">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg17">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg18">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg19">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg20">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg21">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg22">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg23">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg24">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg25">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg26">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg27">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg28">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg29">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg30">
          <b>Objet</b>obligatoire. Les plages qui se croisent. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente l’intersection rectangulaire de deux plages ou plus.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSandboxed">
      <MemberSignature Language="C#" Value="public bool IsSandboxed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSandboxed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSandboxed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSandboxed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si le classeur spécifié est ouvert dans une fenêtre mode protégé.</summary>
        <value>
          <b>la valeur true</b> si le classeur spécifié est ouvert dans une fenêtre mode protégé ; Sinon, <b>false</b>.</value>
        <remarks>
          <para>En lecture seule</para>
          <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> propriété pour déterminer si un classeur est ouvert dans une fenêtre mode protégé.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public bool Iteration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Iteration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Iteration" />
      <MemberSignature Language="VB.NET" Value="Public Property Iteration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Iteration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si Microsoft Excel utilise l’itération pour résoudre des références circulaires.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.LanguageSettings LanguageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.LanguageSettings LanguageSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LanguageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageSettings As LanguageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::LanguageSettings ^ LanguageSettings { Microsoft::Office::Core::LanguageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.LanguageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le <see cref="T:Microsoft.Office.Core.LanguageSettings" /> object, qui contient des informations sur les paramètres de langue dans Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeButtons">
      <MemberSignature Language="C#" Value="public bool LargeButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LargeButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LargeButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeOperationCellThousandCount">
      <MemberSignature Language="C#" Value="public int LargeOperationCellThousandCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeOperationCellThousandCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeOperationCellThousandCount" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeOperationCellThousandCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LargeOperationCellThousandCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le nombre maximal de cellules nécessaires dans une opération au-delà duquel une alerte est déclenchée. Lecture/écriture.</summary>
        <value>
          <b>Integer</b>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Distance, en points, entre le bord gauche de l’écran et le bord gauche de la fenêtre Microsoft Excel principale.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Si la fenêtre est agrandie, cette propriété renvoie un nombre négatif qui varie en fonction de la largeur de la bordure de la fenêtre. Définir cette propriété sur 0 (zéro) rend la fenêtre un petit peu plus petite qu’il serait si la fenêtre d’application avait été agrandie. En d’autres termes, si cette propriété est 0 (zéro), la bordure gauche de la fenêtre Microsoft Excel principale peine sera visible à l’écran.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LibraryPath">
      <MemberSignature Language="C#" Value="public string LibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le chemin d’accès au dossier Library sans du séparateur final.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions">
      <MemberSignature Language="C#" Value="public void MacroOptions (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1135)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">Facultatif <b>Object</b>. Nom de la macro ou de la fonction définie par l'utilisateur.</param>
        <param name="Description">Facultatif <b>Object</b>. Description de la macro.</param>
        <param name="HasMenu">Facultatif <b>Object</b>. Argument ignoré.</param>
        <param name="MenuText">Facultatif <b>Object</b>. Argument ignoré.</param>
        <param name="HasShortcutKey">Facultatif <b>Object</b>. <b>La valeur true</b> pour assigner une touche de raccourci à la macro (<paramref name="ShortcutKey" /> doit également être spécifié). Si cet argument a la <b>valeur False</b>, aucune touche de raccourci n’est assignée à la macro. Si la macro a déjà une touche de raccourci, affectant à cet argument la <b>valeur False</b> supprime la touche de raccourci. <b>False</b> est la valeur par défaut.</param>
        <param name="ShortcutKey">Facultatif <b>Object</b>. Obligatoire si <paramref name="HasShortcutKey" /> est <b>True</b>; ignoré dans le cas contraire. La touche de raccourci.</param>
        <param name="Category">Facultatif <b>Object</b>. Un entier qui spécifie une catégorie de fonction macro existante (financier, Date &amp; heure ou définies par l’utilisateur, par exemple). Voir la section Notes pour connaître les entiers mappés sur les catégories prédéfinies. Vous pouvez également spécifier une chaîne pour une catégorie personnalisée. Si vous fournissez une chaîne, il est considéré comme le nom de catégorie qui est affiché dans la boîte de dialogue Insérer une fonction. Si le nom de catégorie n’a jamais été utilisé, une nouvelle catégorie est définie avec ce nom. Si vous utilisez un nom de catégorie qui est identique à un nom prédéfini, Excel mappe la fonction définie par l’utilisateur sur cette catégorie prédéfinie.</param>
        <param name="StatusBar">Facultatif <b>Object</b>. Texte de la barre d'état de la macro.</param>
        <param name="HelpContextID">Facultatif <b>Object</b>. Nombre entier qui spécifie l'identificateur contextuel de la rubrique d'aide assignée à la macro.</param>
        <param name="HelpFile">Facultatif <b>Object</b>. Le nom du fichier d’aide qui contient la rubrique d’aide définie par <paramref name="HelpContextId" />.</param>
        <summary>Correspond aux options de la boîte de dialogue Options de Macro. Vous pouvez également utiliser cette méthode pour afficher une fonction définie par l’utilisateur (UDF) dans une catégorie prédéfinie ou nouvelle dans la boîte de dialogue Insérer une fonction.</summary>
        <remarks>
          <para>Le tableau suivant répertorie les entiers mappés sur les catégories prédéfinies qui peuvent être utilisées dans le paramètre Category.</para>
          <list type="table">
            <item>
              <term>1</term>
              <description>
                <b>financières</b>
              </description>
            </item>
            <item>
              <term>2</term>
              <description>
                <b>Date &amp; temps</b>
              </description>
            </item>
            <item>
              <term>3</term>
              <description>
                <b>Math &amp; trigonométrique</b>
              </description>
            </item>
            <item>
              <term>4</term>
              <description>
                <b>statistiques</b>
              </description>
            </item>
            <item>
              <term>5</term>
              <description>
                <b>recherche &amp; Référence</b>
              </description>
            </item>
            <term>6</term>
            <description>
              <b>base de données</b>
            </description>
            <item>de
              <term>7</term><description><b>texte</b></description></item>
            <item>
              <description>
                <b>logique</b>
              </description>
              <term>8</term>
            </item>
            <item></item>
            <item>
              <term>9</term>
              <description>
                <b>informations</b>
              </description>
            </item>
            <item>
              <term>10</term>
              <description>
                <b>commandes</b>
              </description>
            </item>
            <item>
              <term>11</term>
              <description>
                <b>personnalisation</b>
              </description>
            </item>
            <item>
              <term>12</term>
              <description>
                <b>Macro contrôle</b>
              </description>
            </item>
            <item>
              <term>13</term>
              <description>
                <b>DDE/externe</b>
              </description>
            </item>
            <item>
              <term>14</term>
              <description>
                <b>défini par l’utilisateur</b>
              </description>
            </item>
            <item>
              <term>15</term>
              <description>premier catégorie personnalisée</description>
            </item>
            <item>
              <term>16</term>
              <description>deuxième catégorie personnalisée</description>
            </item>
            <item>
              <term>17</term>
              <description>troisième catégorie personnalisée</description>
            </item>
            <item>
              <term>18</term>
              <description>quatrième catégorie personnalisée</description>
            </item>
            <item>
              <term>19</term>
              <description>cinquième personnalisé catégorie</description>
            </item>
            <item>
              <term>20</term>
              <description>sixième catégorie personnalisée</description>
            </item>
            <item>
              <term>21</term>
              <description>septième catégorie personnalisée</description>
            </item>
            <item>
              <term>22</term>
              <description>huitième catégorie personnalisée</description>
            </item>
            <item>
              <term>23</term>
              <description>neuvième personnalisé catégorie</description>
            </item>
            <item>
              <term>24</term>
              <description>dixième catégorie personnalisée</description>
            </item>
            <item>
              <term>25</term>
              <description>onzième catégorie personnalisée</description>
            </item>
            <item>
              <term>26</term>
              <description>douzième catégorie personnalisée</description>
            </item>
            <item>
              <term>27</term>
              <description>treizième catégorie personnalisée</description>
            </item>
            <item>
              <term>28</term>
              <description>quatorzième catégorie personnalisée</description>
            </item>
            <item>
              <term>29</term>
              <description>quinzième catégorie personnalisée</description>
            </item>
            <item>
              <term>30</term>
              <description>seizième catégorie personnalisée</description>
            </item>
            <item>
              <term>31</term>
              <description>Dix-septième catégorie personnalisée</description>
            </item>
            <item>
              <term>32</term>
              <description>dix-huitième catégorie personnalisée</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions2">
      <MemberSignature Language="C#" Value="public void MacroOptions2 (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile, object ArgumentDescriptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions2([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile, [in]object ArgumentDescriptions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions2 (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object, Optional ArgumentDescriptions As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="ArgumentDescriptions" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Description">To be added.</param>
        <param name="HasMenu">To be added.</param>
        <param name="MenuText">To be added.</param>
        <param name="HasShortcutKey">To be added.</param>
        <param name="ShortcutKey">To be added.</param>
        <param name="Category">To be added.</param>
        <param name="StatusBar">To be added.</param>
        <param name="HelpContextID">To be added.</param>
        <param name="HelpFile">To be added.</param>
        <param name="ArgumentDescriptions">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogoff">
      <MemberSignature Language="C#" Value="public void MailLogoff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogoff() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogoff" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogoff ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MailLogoff();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode ferme une session de messagerie MAPI ouverte par Microsoft Excel.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogon">
      <MemberSignature Language="C#" Value="public void MailLogon (object Name, object Password, object DownloadNewMail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogon([in]object Name, [in]object Password, [in]object DownloadNewMail) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogon(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogon (Optional Name As Object, Optional Password As Object, Optional DownloadNewMail As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DownloadNewMail" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">Facultatif <b>Object</b>. Le nom du compte de messagerie ou le nom de profil Microsoft Exchange. Si cet argument est omis, le nom de compte de messagerie par défaut est utilisé.</param>
        <param name="Password">Facultatif <b>Object</b>. Mot de passe de messagerie. Cet argument est ignoré dans Microsoft Exchange.</param>
        <param name="DownloadNewMail">Facultatif <b>Object</b>. <b>True</b> pour télécharger immédiatement les nouveaux messages.</param>
        <summary>Se connecte et ouvre une session de messagerie MAPI ou Microsoft Exchange. Si Microsoft Mail n’est pas déjà démarré, vous devez utiliser cette méthode pour établir une session de messagerie afin de permettre l’utilisation de fonctions de distribution de documents ou de messages.</summary>
        <remarks>
          <para>Microsoft Excel se déconnecte les sessions de messagerie il précédemment établi avant d’essayer d’établir une nouvelle session.</para>
          <para>Pour la session de messagerie par défaut système omettez, omettez les paramètres le nom et le mot de passe.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSession">
      <MemberSignature Language="C#" Value="public object MailSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MailSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSession As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MailSession { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le numéro de session de messagerie MAPI sous la forme d’une chaîne hexadécimale (s’il existe une session active), ou renvoie la <b>valeur Null</b> s’il n’existe aucune session.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Cette propriété s’applique uniquement aux sessions de messagerie créées par Microsoft Excel (elle ne renvoie pas un numéro de session de messagerie de Microsoft Mail).</para>
          <para>Cette propriété n’est pas utilisée sur les systèmes de messagerie PowerTalk.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSystem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMailSystem MailSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMailSystem MailSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSystem As XlMailSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMailSystem MailSystem { Microsoft::Office::Interop::Excel::XlMailSystem get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMailSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le système de messagerie est installé sur l’ordinateur hôte. En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>XlMailSystem</b> peut être une de ces constantes <b>XlMailSystem</b> :</para>
          <para>
            <b>xlMAPI</b>
          </para>
          <para>
            <b>xlNoMailSystem</b>
          </para>
          <para>
            <b>xlPowerTalk</b>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPaperSize">
      <MemberSignature Language="C#" Value="public bool MapPaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapPaperSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MapPaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MapPaperSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapPaperSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les documents au format de la taille de papier standard d’un autre pays/région (par exemple, A4) sont automatiquement ajustées afin que lors de l’impression de la taille de papier standard (par exemple, lettre) de votre pays/région.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathCoprocessorAvailable">
      <MemberSignature Language="C#" Value="public bool MathCoprocessorAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathCoprocessorAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MathCoprocessorAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MathCoprocessorAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MathCoprocessorAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si un coprocesseur mathématique est disponible.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxChange">
      <MemberSignature Language="C#" Value="public double MaxChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxChange" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxChange { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit la quantité maximale de chaque itération pendant que Microsoft Excel résout des références circulaires.</summary>
        <value>To be added.</value>
        <remarks>
          <para>La <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> propriété définit le nombre maximal d’itérations que Microsoft Excel peut utiliser lors de la résolution des références circulaires.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIterations">
      <MemberSignature Language="C#" Value="public int MaxIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIterations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIterations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le nombre maximal d’itérations que Microsoft Excel peut utiliser pour résoudre des références circulaires.</summary>
        <value>To be added.</value>
        <remarks>
          <para>La <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> propriété définit la quantité maximale de chaque itération lors de la résolution des références circulaires par Microsoft Excel.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementUnit">
      <MemberSignature Language="C#" Value="public int MeasurementUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasurementUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MeasurementUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property MeasurementUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasurementUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Spécifie l’unité de mesure utilisée dans l’application. <b>Entier en lecture/écriture correspondant à l’une des constantes dans</b> le <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> énumération.</summary>
        <value>
          <b>Integer</b>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryFree">
      <MemberSignature Language="C#" Value="public int MemoryFree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryFree" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryFree" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryFree As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryFree { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie la quantité de mémoire est toujours disponible pour Microsoft Excel à utiliser, en octets.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryTotal">
      <MemberSignature Language="C#" Value="public int MemoryTotal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryTotal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryTotal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryTotal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryTotal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryUsed">
      <MemberSignature Language="C#" Value="public int MemoryUsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryUsed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryUsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryUsed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryUsed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBars MenuBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBars MenuBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MenuBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuBars As MenuBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBars ^ MenuBars { Microsoft::Office::Interop::Excel::MenuBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeInstances">
      <MemberSignature Language="C#" Value="public bool MergeInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MergeInstances" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MergeInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MergeInstances { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>True pour fusionner plusieurs instances de l’application dans une seule instance.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Modules Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Modules Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Modules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Modules ^ Modules { Microsoft::Office::Interop::Excel::Modules ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Modules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseAvailable">
      <MemberSignature Language="C#" Value="public bool MouseAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MouseAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MouseAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MouseAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si une souris est disponible.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturn">
      <MemberSignature Language="C#" Value="public bool MoveAfterReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveAfterReturn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveAfterReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si la cellule active est déplacée dès que la touche entrée (retour).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> propriété pour indiquer la direction dans laquelle la cellule active doit être déplacé.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturnDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturnDirection As XlDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDirection MoveAfterReturnDirection { Microsoft::Office::Interop::Excel::XlDirection get(); void set(Microsoft::Office::Interop::Excel::XlDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit la direction dans laquelle la cellule active est déplacée lorsque l’utilisateur appuie sur ENTRÉE. En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>XlDirection</b> peut être une de ces constantes <b>XlDirection</b> :</para>
          <para>
            <b>xlDown</b>
          </para>
          <para>
            <b>xlToLeft</b>
          </para>
          <para>
            <b>xlToRight</b>
          </para>
          <para>
            <b>xlUp</b>
          </para>
          <para>Si le <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> propriété est <b>False</b>, la sélection ne se déplace pas du tout, quelle que soit la la propriété <b>MoveAfterReturnDirection</b> est définie.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiThreadedCalculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MultiThreadedCalculation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiThreadedCalculation As MultiThreadedCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ MultiThreadedCalculation { Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MultiThreadedCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> objet qui contrôle les paramètres de recalcul multi-thread qui sont Nouveautés dans Excel 2007. En lecture seule.</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le nom de l'objet.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection qui représente tous les noms du classeur actif.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkTemplatesPath">
      <MemberSignature Language="C#" Value="public string NetworkTemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NetworkTemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NetworkTemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkTemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NetworkTemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le chemin d’accès réseau où les modèles sont stockés. Si le chemin d’accès réseau n’existe pas, cette propriété renvoie une chaîne vide.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.NewFile NewWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.NewFile NewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewWorkbook As NewFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::NewFile ^ NewWorkbook { Microsoft::Office::Core::NewFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.NewFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un objet <b>NewFile</b> .</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextLetter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook NextLetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook NextLetter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.NextLetter" />
      <MemberSignature Language="VB.NET" Value="Public Function NextLetter () As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Workbook ^ NextLetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(972)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Vous avez demandé de l’aide sur un mot clé Visual Basic utilisé uniquement pour les Macintosh. Pour plus d’informations sur ce mot clé, consultez l’Aide fournie avec l’édition de Microsoft Office pour Macintosh</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ODBCErrors As ODBCErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ODBCErrors ^ ODBCErrors { Microsoft::Office::Interop::Excel::ODBCErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ODBCErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection qui contient toutes les erreurs ODBC générées par la plus récente table de requête ou d’une opération de rapport de tableau croisé dynamique.</summary>
        <value>To be added.</value>
        <remarks>
          <para>S’il existe plus d’une requête en cours d’exécution en même temps, le <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection contient les erreurs ODBC de la requête est terminée en dernier.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCTimeout">
      <MemberSignature Language="C#" Value="public int ODBCTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ODBCTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ODBCTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ODBCTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le délai de requête ODBC en secondes. La valeur par défaut est 45 secondes.</summary>
        <value>To be added.</value>
        <remarks>
          <para>La valeur 0 (zéro) indique une limite de temps d’exécution indéterminée.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEDBErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OLEDBErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEDBErrors As OLEDBErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEDBErrors ^ OLEDBErrors { Microsoft::Office::Interop::Excel::OLEDBErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEDBErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> collection, qui représente les informations d’erreur renvoyées par la requête OLE DB la plus récente.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKey">
      <MemberSignature Language="C#" Value="public void OnKey (string Key, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnKey([in]string Key, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnKey (Key As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Key">
          <b>String</b>obligatoire. Chaîne indiquant la touche sur laquelle appuyer.</param>
        <param name="Procedure">Facultatif <b>Object</b>. Chaîne indiquant le nom de la procédure à exécuter. Si <paramref name="Procedure" /> est « » (texte vide), rien ne se produit lorsque <paramref name="Key" /> a été enfoncé. Cette <b>OnKey</b> modifie le résultat normal des touches dans Microsoft Excel. Si <paramref name="Procedure" /> est omis, <paramref name="Key" /> revient à son résultat d’origine dans Microsoft Excel et n’importe quelle touche spéciale affectations effectuées avec de précédentes méthodes <b>OnKey</b> sont supprimées.</param>
        <summary>Exécute une procédure spécifiée lorsque l’utilisateur appuie sur une touche ou une combinaison de touches.</summary>
        <remarks>
          <para>Le <paramref name="Key" /> argument peut spécifier n’importe quelle touche unique combinée avec ALT, CTRL ou MAJ ou n’importe quelle combinaison de ces clés. Chaque clé est représenté par un ou plusieurs caractères, tel que « a » pour le caractère un, ou « {ENTER} » pour la touche ENTRÉE.</para>
          <para>Pour spécifier des caractères qui ne sont pas affichés lorsque vous appuyez sur la touche correspondante (entrée ou TAB, par exemple), utilisez les codes listés dans le tableau suivant. Chaque code de la table représente une touche du clavier.</para>
          <list type="table">
            <item>
              <term>Retour arrière</term>
              <description>{BACKSPACE} ou {BS}</description>
            </item>
            <item>
              <term>arrêt</term>
              <description>{arrêt}</description>
            </item>
            <item>
              <term>Verr.MAJ</term>
              <description>{CAPSLOCK}</description>
            </item>
            <item>
              <term>clair</term>
              <description>{clair}</description>
            </item>
            <item>
              <term>Supprimer ou Suppr</term>
              <description>{ DELETE} ou {DEL}</description>
            </item>
            <item>
              <term>Bas</term>
              <description>{bas}</description>
            </item>
            <item>
              <term>fin</term>
              <description>{fin}</description>
            </item>
            <item>
              <term>entrée</term>
              <description>~ (tilde)</description>
            </item>
            <item>
              <term>entrée (pavé numérique)</term>
              <description>{entrée}</description>
            </item>
            <item>
              <term>ÉCHAP</term>
              <description>{ESCAPE} ou {ESC}</description>
            </item>
            <item>
              <term>F1 à F15</term>
              <description>{F1} à {F15}</description>
            </item>
            <item>
              <term>Aide</term>
              <description>{aide}</description>
            </item>
            <item>
              <term>Accueil</term>
              <description>{accueil}</description>
            </item>
            <item>
              <term>INS</term>
              <description>{Insérer}</description>
            </item>
            <item>
              <term>Flèche gauche</term>
              <description>{LEFT}</description>
            </item>
            <item>
              <term>Le verrouillage du</term>
              <description>{NUMLOCK}</description>
            </item>
            <item>
              <term>Vers le bas de PAGE</term>
              <description>{PG}</description>
            </item>
            <item>
              <term>PAGE précédente</term>
              <description>{page précédente}</description>
            </item>
            <item>
              <term>Renvoyer</term>
              <description>{RETURN}</description>
            </item>
            <item>
              <term>Flèche vers la droite</term>
              <description>{RIGHT}</description>
            </item>
            <item>
              <term>Arrêt défil</term>
              <description>{Arrêt défil}</description>
            </item>
            <item>
              <term>Onglet</term>
              <description>{onglet}</description>
            </item>
            <item>
              <term>Flèche vers le haut</term>
              <description>{UP}</description>
            </item>
          </list>
          <para>Vous pouvez également spécifier des touches combinées avec MAJ, CTRL ou ALT. Pour spécifier une touche combinée à une autre ou les clés, utilisez le tableau suivant.</para>
          <list type="table">
            <item>
              <term>MAJ</term>
              <description>+ (signe plus)</description>
            </item>
            <item>
              <term>CTRL</term>
              <description>^ (accent circonflexe)</description>
            </item>
            <item>
              <term>ALT</term>
              <description>% (signe pourcentage)</description>
            </item>
          </list>
          <para>Pour affecter une procédure à un des caractères spéciaux (+, ^, % et ainsi de suite), mettez le caractère entre accolades.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRepeat">
      <MemberSignature Language="C#" Value="public void OnRepeat (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRepeat([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRepeat (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRepeat(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">
          <b>String</b>obligatoire. Texte qui apparaît avec la commande Répéter (menu Edition).</param>
        <param name="Procedure">
          <b>String</b>obligatoire. Nom de la procédure exécutée lorsque vous choisissez la commande Répéter (menu Edition).</param>
        <summary>Cette méthode définit la commande de menu Répéter et le nom de la procédure exécutée lorsque vous sélectionnez la commande Rétablir (menu Edition) après l'exécution de la procédure qui définit cette propriété.</summary>
        <remarks>
          <para>Si une procédure n’utilise pas la méthode <b>OnRepeat</b> , la commande Répéter répète la procédure exécutée.</para>
          <para>La procédure doit utiliser <b>OnRepeat</b> et <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> dernières méthodes, pour éviter la répétition et d’annulation par les actions suivantes de la procédure de remplacement des procédures de.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTime">
      <MemberSignature Language="C#" Value="public void OnTime (object EarliestTime, string Procedure, object LatestTime, object Schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTime([in]object EarliestTime, [in]string Procedure, [in]object LatestTime, [in]object Schedule) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnTime(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnTime (EarliestTime As Object, Procedure As String, Optional LatestTime As Object, Optional Schedule As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(624)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EarliestTime" Type="System.Object" />
        <Parameter Name="Procedure" Type="System.String" />
        <Parameter Name="LatestTime" Type="System.Object" />
        <Parameter Name="Schedule" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EarliestTime">
          <b>Objet</b>obligatoire. Heure à laquelle vous voulez que la procédure s'exécute.</param>
        <param name="Procedure">
          <b>String</b>obligatoire. Nom de la procédure à exécuter.</param>
        <param name="LatestTime">Facultatif <b>Object</b>. La dernière heure à laquelle la procédure peut être exécutée. Par exemple, si <paramref name="LatestTime" /> est défini sur <paramref name="EarliestTime" /> + 30 et Microsoft Excel n’est pas en mode Ready, Copy, Cut ou rechercher à <paramref name="EarliestTime" /> , car une autre procédure est en cours d’exécution, Microsoft Excel attendra 30 secondes pour la première procédure. Si Microsoft Excel n’est pas en mode Ready dans les 30 secondes, la procédure ne sera pas exécutée. Si cet argument est omis, Microsoft Excel attendra jusqu'à ce que la procédure peut être exécutée.</param>
        <param name="Schedule">Facultatif <b>Object</b>. <b>True</b> pour programmer une nouvelle procédure <b>OnTime</b> . <b>False</b> pour effacer définie précédemment procédure. La valeur par défaut est <b>True</b>.</param>
        <summary>Cette méthode programme l'exécution d'une procédure à un moment précis (soit à une heure précise soit après l'écoulement d'un délai précis).</summary>
        <remarks>
          <para>Now+TimeValue(time) utilisés pour programmer une procédure à exécuter lorsqu’une durée spécifique (à partir de maintenant) s’est écoulé. Utilisez TimeValue pour programmer une procédure à exécuter à un moment précis.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUndo">
      <MemberSignature Language="C#" Value="public void OnUndo (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUndo([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnUndo (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnUndo(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">
          <b>String</b>obligatoire. Texte qui apparaît avec la commande Annuler (menu Edition).</param>
        <param name="Procedure">
          <b>String</b>obligatoire. Nom de la procédure exécutée si vous sélectionnez la commande Annuler (menu Edition).</param>
        <summary>Définit le texte de la commande de menu Annuler et le nom de la procédure exécutée lorsque vous sélectionnez la commande Annuler (menu Edition) après l’exécution de la procédure qui définit cette propriété.</summary>
        <remarks>
          <para>Si une procédure n’utilise pas la méthode <b>OnUndo</b> , la commande Undo est désactivée.</para>
          <para>La procédure doit utiliser le <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> et méthodes <b>OnUndo</b> dernier pour éviter la répétition et d’annulation par les actions suivantes de la procédure de remplacement des procédures de.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le nom de la procédure exécutée lorsque vous activez une fenêtre.</summary>
        <value>To be added.</value>
        <remarks>
          <para>La procédure spécifiée par cette propriété n’est pas exécutée lorsque d’autres procédures basculent vers la fenêtre ou de la commande pour basculer vers une fenêtre est reçue via un canal DDE. Au lieu de cela, la procédure répond aux actions de l’utilisateur, par exemple cliquer sur une fenêtre avec la souris, cliquez sur Atteindre dans le menu Edition et ainsi de suite.</para>
          <para>Si une feuille de calcul ou une feuille macro a une macro Auto_Activate ou Auto_Deactivate est définie, cette macro sera exécutée après la procédure spécifiée par la propriété <b>OnWindow</b> .</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatingSystem">
      <MemberSignature Language="C#" Value="public string OperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatingSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperatingSystem As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OperatingSystem { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le nom et numéro de version du système d’exploitation actuel, par exemple, « Windows (32 bits) 4.00 » ou « Macintosh 7.00 ».</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizationName">
      <MemberSignature Language="C#" Value="public string OrganizationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OrganizationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrganizationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le nom enregistré de l’organisation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Parent { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie l'objet parent de l'objet spécifié.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le chemin d’accès complet à l’application, à l’exclusion du séparateur final et du nom de l’application.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le caractère séparateur de chemin d’accès («\").</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableSelection">
      <MemberSignature Language="C#" Value="public bool PivotTableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PivotTableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PivotTableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotTableSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PivotTableSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les rapports de tableau croisé dynamique utilisent une sélection structurée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSelections">
      <MemberSignature Language="C#" Value="public object PreviousSelections[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PreviousSelections(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSelections(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PreviousSelections[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">Facultatif <b>Object</b>. Numéro d'index (1 à 4) de la plage ou du nom précédent.</param>
        <summary>Renvoie un tableau des quatre derniers noms ou plages sélectionnés. Chaque élément du tableau est un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Chaque fois que vous accédez à une plage ou de la cellule à l’aide de la zone Nom ou la commande Atteindre (menu Edition), ou chaque fois qu’une macro appelle le <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> méthode, la plage précédente est ajoutée au tableau comme l’élément numéro 1 et les autres éléments du tableau sont déplacés vers le bas.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintCommunication">
      <MemberSignature Language="C#" Value="public bool PrintCommunication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintCommunication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintCommunication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintCommunication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si la communication avec l’imprimante est activée.</summary>
        <value>
          <b>true</b> si la communication avec l’imprimante est activée ; Sinon, <b>false</b>.</value>
        <remarks>
          <para>
            <b>Boolean</b> En lecture-écriture.</para>
          <para>Set la <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> propriété sur <b>false</b> pour accélérer l’exécution de code qui définit les propriétés PageSetup. Définir le <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> propriété <b>la valeur true</b> après la définition de propriétés à valider toutes les mises en cache des commandes PageSetup.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductCode">
      <MemberSignature Language="C#" Value="public string ProductCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProductCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie l’identificateur global unique (GUID) de Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptForSummaryInfo">
      <MemberSignature Language="C#" Value="public bool PromptForSummaryInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PromptForSummaryInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PromptForSummaryInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptForSummaryInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PromptForSummaryInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si Microsoft Excel demande un résumé lorsque les fichiers sont d’abord enregistrés pour.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedViewWindows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProtectedViewWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedViewWindows As ProtectedViewWindows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ ProtectedViewWindows { Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection qui représente toutes les fenêtres mode protégé qui sont ouvertes dans l’application.</summary>
        <value>A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection qui représente toutes les fenêtres mode protégé qui sont ouvertes dans l’application.</value>
        <remarks>
          <para>En lecture seule.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAnalysis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.QuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuickAnalysis As QuickAnalysis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QuickAnalysis ^ QuickAnalysis { Microsoft::Office::Interop::Excel::QuickAnalysis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QuickAnalysis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> object qui représente les options d’analyse rapide de l’application.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public void Quit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Quit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Quit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Quit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Quit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode quitte Microsoft Excel.</summary>
        <remarks>
          <para>Si des classeurs non enregistrés sont ouverts lorsque vous utilisez cette méthode, Microsoft Excel affiche une boîte de dialogue vous demandant si vous souhaitez enregistrer les modifications. Vous pouvez éviter cela en enregistrant tous les classeurs avant d’utiliser la méthode <b>Quit</b> ou en définissant le <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> propriété la <b>valeur False</b>. Lorsque cette propriété a la <b>valeur False</b>, Microsoft Excel n’affiche la boîte de dialogue lorsque vous quittez des classeurs non enregistrés ; elle se ferme sans les enregistrer.</para>
          <para>Si vous définissez le <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> à la propriété <b>la valeur True</b> sans enregistrer le classeur sur le disque, Microsoft Excel se ferme sans demander d’enregistrer le classeur.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Quitting">
      <MemberSignature Language="C#" Value="public bool Quitting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Quitting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Quitting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Quitting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Quitting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>Cette propriété renvoie <see cref="T:System.Boolean" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <b>Objet</b>obligatoire. Nom de la plage. Ce doit être une référence de style A1 dans la langue de la macro. Il peut inclure l’opérateur de plage (le signe deux-points), l’opérateur d’intersection (un espace) ou l’opérateur union (une virgule). Il peut également inclure des signes dollar, mais ils sont ignorés. Vous pouvez utiliser un nom local défini dans n’importe quelle partie de la plage. Si vous utilisez un nom, le nom est supposé pour être dans la langue de la macro.</param>
        <param name="Cell2">Facultatif <b>Object</b>. La cellule dans le coin supérieur gauche et inférieur droit de la plage. Peut être un objet <b>Range</b> qui contient une seule cellule, une colonne entière ou une ligne entière, ou il peut être une chaîne qui nomme une seule cellule dans la langue de la macro.</param>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente une cellule ou une plage de cellules.</summary>
        <value>To be added.</value>
        <remarks>
          <para>La propriété est par rapport à l’objet <b>Range</b> . Par exemple, si la sélection est la cellule C3, puis Selection.Range("B1") renvoie la cellule D3, car elle est liée à l’objet <b>Range</b> renvoyé par la <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> propriété. En revanche, le code ActiveSheet.Range("B1") renvoie toujours la cellule B1.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ready">
      <MemberSignature Language="C#" Value="public bool Ready { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ready" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Ready" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ready As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ready { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie <b>la valeur True</b> lorsque l’application Microsoft Excel est prête ; <b>False</b> lorsque l’application Excel n’est pas prête.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RecentFiles RecentFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RecentFiles RecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecentFiles As RecentFiles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RecentFiles ^ RecentFiles { Microsoft::Office::Interop::Excel::RecentFiles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RecentFiles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> collection qui représente la liste des derniers fichiers utilisés.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordMacro">
      <MemberSignature Language="C#" Value="public void RecordMacro (object BasicCode, object XlmCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordMacro([in]object BasicCode, [in]object XlmCode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RecordMacro(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordMacro (Optional BasicCode As Object, Optional XlmCode As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BasicCode" Type="System.Object" />
        <Parameter Name="XlmCode" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="BasicCode">Facultatif <b>Object</b>. Chaîne qui spécifie le code Visual Basic enregistré si l’enregistreur de macro enregistre dans un module Visual Basic. La chaîne sera enregistrée sur une ligne. Si la chaîne contient un retour chariot (caractère ASCII 10 ou Chr$(10) dans le code), elle sera enregistrée sur plusieurs lignes.</param>
        <param name="XlmCode">Facultatif <b>Object</b>. Argument ignoré.</param>
        <summary>Cette méthode enregistre le code si l'enregistreur de macro est activé.</summary>
        <remarks>
          <para>La méthode <b>RecordMacro</b> ne peut pas enregistrer dans le module actif (le module dans lequel la méthode <b>RecordMacro</b> existe).</para>
          <para>Pour empêcher l’enregistrement (par exemple, si l’utilisateur annule votre boîte de dialogue), appelez cette fonction avec deux chaînes vides.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordRelative">
      <MemberSignature Language="C#" Value="public bool RecordRelative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecordRelative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecordRelative" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordRelative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecordRelative { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les macros sont enregistrées à l’aide de références relatives ; <b>False</b> si l’enregistrement est absolue.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReferenceStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceStyle As XlReferenceStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle { Microsoft::Office::Interop::Excel::XlReferenceStyle get(); void set(Microsoft::Office::Interop::Excel::XlReferenceStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlReferenceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit comment Microsoft Excel affiche des références de cellules et des en-têtes de ligne et de colonne dans le style de référence A1 ou R1C1. En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>XlReferenceStyle</b> peut être une de ces constantes <b>XlReferenceStyle</b> :</para>
          <para>
            <b>xlA1</b>
          </para>
          <para>
            <b>xlR1C1</b>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredFunctions">
      <MemberSignature Language="C#" Value="public object RegisteredFunctions[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RegisteredFunctions(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RegisteredFunctions(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredFunctions(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RegisteredFunctions[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">Facultatif <b>Object</b>. Nom de la bibliothèque DLL ou de la ressource de code.</param>
        <param name="Index2">Facultatif <b>Object</b>. Nom de la fonction.</param>
        <summary>Retourne des informations sur les fonctions de deux bibliothèques de liens dynamiques (DLL) ou de ressources qui ont été enregistrés avec les fonctions de macro REGISTER ou Registre de code.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Si vous ne spécifiez pas les arguments, cette propriété renvoie un tableau qui contient une liste de toutes les fonctions enregistrées. Chaque ligne du tableau contient des informations sur une seule fonction, comme indiqué dans le tableau suivant.</para>
          <item>
            <term>1</term>
            <description>le nom de la DLL ou ressource de code</description>
          </item>
          <list type="table">
            <item>
              <term>2</term>
              <description>le nom de la procédure dans la DLL ou ressource de code</description>
            </item>
            <item>
              <term>3</term>
              <description>chaînes de caractères spécifiant les types de données des types de valeurs et le nombre et les données renvoyées les arguments</description>
            </item>
          </list>
          <para>s’il n’existe aucune inscrite, cette propriété renvoie <b>Null</b>.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterXLL">
      <MemberSignature Language="C#" Value="public bool RegisterXLL (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterXLL([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RegisterXLL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterXLL (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RegisterXLL(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <b>String</b>obligatoire. Spécifie le nom de la ressource XLL à charger.</param>
        <summary>Cette méthode charge une ressource de code XLL et enregistre automatiquement les fonctions et les commandes contenues dans la ressource.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Cette méthode renvoie <b>la valeur True</b> si la ressource de code n’est pas chargée correctement ; sinon, la méthode renvoie la <b>valeur False</b>.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public void Repeat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Repeat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Repeat" />
      <MemberSignature Language="VB.NET" Value="Public Sub Repeat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Repeat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Répète la dernière action de l’interface utilisateur.</summary>
        <remarks>
          <para>Cette méthode répète la dernière action effectuée par l’utilisateur avant d’exécuter la procédure. Elle doit être la première ligne de la procédure.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplaceFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ ReplaceFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit les critères de remplacement à utiliser lors du remplacement des formats de cellule. Les critères de remplacement est ensuite utilisée dans un appel suivant à la <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> méthode de la <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTipWizard">
      <MemberSignature Language="C#" Value="public void ResetTipWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTipWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ResetTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTipWizard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTipWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode rétablit le bordereau de routage de façon à ce qu'une nouvelle distribution puisse commencer avec le même bordereau (en utilisant la même liste de destinataires et les mêmes informations de distribution). Vous ne pouvez utiliser cette méthode que lorsque la distribution est terminée. En d'autres circonstances, elle génère une erreur.</summary>
        <remarks>To be added.</remarks>
        <example>
          <para>Cet exemple montre comment rétablit le bordereau de routage du classeur Book1.xls si le routage est terminé.</para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
        </example>
        <example>
          <para>Cet exemple montre comment rétablit le bordereau de routage du classeur Book1.xls si le routage est terminé.</para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
        </example>
        <example>
          <para>Cet exemple montre comment rétablit le bordereau de routage du classeur Book1.xls si le routage est terminé.</para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="RollZoom">
      <MemberSignature Language="C#" Value="public bool RollZoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RollZoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RollZoom" />
      <MemberSignature Language="VB.NET" Value="Public Property RollZoom As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RollZoom { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si IntelliMouse effectue un zoom plutôt qu’un défilement.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object qui représente toutes les lignes de la feuille de calcul active. Si le document actif n’est pas une feuille de calcul, la propriété <b>Rows</b> échoue.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Lorsqu’elle est appliquée à un objet <b>Range</b> qui est une sélection multiple, cette propriété renvoie des lignes de la première zone de la plage uniquement. Par exemple, si l’objet <b>Range</b> comporte deux zones : a1 : B2 et C3 : D4, Selection.Rows.Count renvoie 2, pas 4. Pour utiliser cette propriété sur une plage qui peut contenir une sélection multiple, testez <b>Areas.Count</b> afin de déterminer si la plage est une sélection multiple. S’il s’agit, une boucle sur chaque zone de la plage.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RTD RTD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RTD RTD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RTD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RTD As RTD" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RTD ^ RTD { Microsoft::Office::Interop::Excel::RTD ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RTD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> objet.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">Facultatif <b>Object</b>. La macro à exécuter. Il peut s’agir soit d’une chaîne avec le nom de la macro, un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet indiquant où la fonction ou un ID de Registre pour une fonction DLL (XLL) enregistrée. Si une chaîne est utilisée, la chaîne sera évaluée dans le contexte de la feuille active.</param>
        <param name="Arg1">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg2">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg3">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg4">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg5">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg6">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg7">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg8">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg9">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg10">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg11">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg12">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg13">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg14">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg15">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg16">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg17">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg18">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg19">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg20">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg21">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg22">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg23">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg24">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg25">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg26">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg27">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg28">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg29">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <param name="Arg30">Facultatif <b>Object</b>. Arguments à transmettre à la fonction.</param>
        <summary>Exécute une macro ou appelle une fonction.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Vous ne pouvez pas utiliser les arguments nommés avec cette méthode. Les arguments doivent être passés par sa position.</para> Méthode 
          <para><b>exécuter</b> renvoie ce que la macro appelée renvoie. Objets transmis en tant qu’arguments à la macro sont convertis en valeurs (en appliquant la <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> propriété à l’objet). Cela signifie que vous ne pouvez pas passer d’objets aux macros à l’aide de la méthode <b>Run</b> .</para><para></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary>Cette méthode enregistre les modifications apportées au classeur spécifié.</summary>
        <remarks>
          <para>Pour ouvrir un fichier classeur, utilisez la <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> méthode.</para>
          <para></para>
          <para>Pour marquer le classeur comme enregistré, sans l’enregistrer sur un disque, définissez sa <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> propriété la <b>valeur True</b>.</para>
          <para></para>
          <para>La première fois que vous enregistrez un classeur, utilisez la <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> méthode pour spécifier un nom pour le fichier.</para>
          <para></para>
        </remarks>
        <example>
          <para>Cet exemple montre comment enregistre le classeur actif.</para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para>Cet exemple montre comment enregistrer tous les classeurs ouverts, puis fermer Microsoft Excel.</para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
        </example>
        <example>
          <para>Cet exemple montre comment enregistre le classeur actif.</para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para>Cet exemple montre comment enregistrer tous les classeurs ouverts, puis fermer Microsoft Excel.</para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
        </example>
        <example>
          <para>Cet exemple montre comment enregistre le classeur actif.</para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para>Cet exemple montre comment enregistrer tous les classeurs ouverts, puis fermer Microsoft Excel.</para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SaveISO8601Dates">
      <MemberSignature Language="C#" Value="public bool SaveISO8601Dates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveISO8601Dates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SaveISO8601Dates" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveISO8601Dates As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveISO8601Dates { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkspace">
      <MemberSignature Language="C#" Value="public void SaveWorkspace (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveWorkspace([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SaveWorkspace(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkspace (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary>Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenUpdating">
      <MemberSignature Language="C#" Value="public bool ScreenUpdating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScreenUpdating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Property ScreenUpdating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScreenUpdating { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si la mise à jour de l'écran est activée.</summary>
        <value>To be added.</value>
        <remarks>Écran <para>Activer la mise à jour d’accélération de votre code. Vous ne pourrez pas voir ce que fait le code, mais il s’exécute plus rapidement.</para><para>N’oubliez pas de définir la propriété <b>ScreenUpdating</b> à <b>True</b> lorsque votre code se termine.</para><para></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie l’objet sélectionné dans la fenêtre active.</summary>
        <value>To be added.</value>
        <remarks>Type d’objet <para>retourné dépend de la sélection en cours (par exemple, si une cellule est sélectionnée, cette propriété renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet). La propriété <b>Selection</b> renvoie <b>Nothing</b> si rien n’est sélectionné.</para><para></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (object Keys, object Wait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeys([in]object Keys, [in]object Wait) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As Object, Optional Wait As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.Object" />
        <Parameter Name="Wait" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Keys">
          <b>Objet</b>obligatoire. La touche ou combinaison de touches que vous souhaitez envoyer à l’application en tant que texte.</param>
        <param name="Wait">Facultatif <b>Object</b>. <b>True</b> pour que Microsoft Excel pour les touches à traiter avant de rendre le contrôle à la macro. <b>False</b> (ou omis) pour poursuivre l’exécution de la macro sans attendre que les traitement des touches.</param>
        <summary>Envoie des séquences de touches à l’application active.</summary>
        <remarks>
          <para>Cette méthode place les touches dans un mémoire tampon de clé. Dans certains cas, vous devez appeler cette méthode avant d’appeler la méthode qui utilise la séquence de touches. Par exemple, pour envoyer un mot de passe à une boîte de dialogue, vous devez appeler la méthode <b>SendKeys</b> avant d’afficher la boîte de dialogue.</para>
          <para>La <paramref name="Keys" /> argument peut spécifier n’importe quelle touche unique ou n’importe quelle touche combinée avec ALT, CTRL ou MAJ (ou n’importe quelle combinaison de ces touches). Chaque clé est représenté par un ou plusieurs caractères, tel que « a » pour le caractère un, ou « {ENTER} » pour la touche ENTRÉE.</para>
          <para>Pour spécifier des caractères qui ne sont pas affichés lorsque vous appuyez sur la touche correspondante (par exemple, entrée ou TAB), utilisez les codes listés dans le tableau suivant. Chaque code de la table représente une touche du clavier.</para>
          <list type="table">
            <item>
              <term>Retour arrière</term>
              <description>{BACKSPACE} ou {BS}</description>
            </item>
            <item>
              <term>arrêt</term>
              <description>{arrêt}</description>
            </item>
            <item>
              <term>Verr.MAJ</term>
              <description>{CAPSLOCK}</description>
            </item>
            <item>
              <term>clair</term>
              <description>{clair}</description>
            </item>
            <item>
              <term>Supprimer ou Suppr</term>
              <description>{DELETE} ou {DEL}</description>
            </item>
            <item>
              <term>Flèche vers le bas</term>
              <description>{vers le bas}</description>
            </item>
            <item>
              <term>Fin</term>
              <description>{fin}</description>
            </item>
            <item>
              <term>Entrée</term>
              <description>~ (tilde)</description>
            </item>
            <item>
              <term>Entrée (pavé numérique)</term>
              <description>{entrée}</description>
            </item>
            <item>
              <term>ÉCHAP</term>
              <description>{ESCAPE} ou {ESC}</description>
            </item>
            <item>
              <term>F1 à F15</term>
              <description>{F1} à {F15}</description>
            </item>
            <item>
              <term>Aide</term>
              <description>{aide}</description>
            </item>
            <item>
              <term>Accueil</term>
              <description>{accueil}</description>
            </item>
            <item>
              <term>INS</term>
              <description>{Insérer}</description>
            </item>
            <item>
              <term>Flèche gauche</term>
              <description>{LEFT}</description>
            </item>
            <item>
              <term>Le verrouillage du</term>
              <description>{NUMLOCK}</description>
            </item>
            <item>
              <term>Vers le bas de PAGE</term>
              <description>{PG}</description>
            </item>
            <item>
              <term>PAGE précédente</term>
              <description>{page précédente}</description>
            </item>
            <item>
              <term>Renvoyer</term>
              <description>{RETURN}</description>
            </item>
            <item>
              <term>Flèche vers la droite</term>
              <description>{RIGHT}</description>
            </item>
            <item>
              <term>Arrêt défil</term>
              <description>{Arrêt défil}</description>
            </item>
            <item>
              <term>Onglet</term>
              <description>{onglet}</description>
            </item>
            <item>
              <term>Flèche vers le haut</term>
              <description>{UP}</description>
            </item>
          </list>
          <para>Vous pouvez également spécifier des touches combinées avec MAJ, CTRL ou ALT. Pour spécifier une touche combinée à une autre ou les clés, utilisez le tableau suivant.</para>
          <list type="table">
            <item>
              <term>MAJ</term>
              <description>+ (signe plus)</description>
            </item>
            <item>
              <term>CTRL</term>
              <description>^ (accent circonflexe)</description>
            </item>
            <item>
              <term>ALT</term>
              <description>% (signe pourcentage)</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object FormatName, object Gallery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object FormatName, [in]object Gallery) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SetDefaultChart(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Optional FormatName As Object, Optional Gallery As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormatName" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FormatName">Facultatif <b>Object</b>. Spécifie le nom de la mise en forme automatique personnalisée. Ce nom peut être une chaîne désignant une mise en forme automatique personnalisée, ou elle peut être la constante spéciale <b>xlBuiltIn</b> pour spécifier le modèle de graphique intégrée.</param>
        <param name="Gallery">Objet facultatif. Spécifie le nom de la galerie.</param>
        <summary>Spécifie le nom du modèle de graphique que Microsoft Excel utilise lors de la création de graphiques.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharePointVersion">
      <MemberSignature Language="C#" Value="public int SharePointVersion (string bstrUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SharePointVersion([in]string bstrUrl) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SharePointVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SharePointVersion (bstrUrl As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SharePointVersion(System::String ^ bstrUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrUrl">URL du site à vérifier.</param>
        <summary>Renvoie le numéro de version de SharePoint Foundation s’exécutant sur le site pour l’URL spécifiée.</summary>
        <returns>
          <b>Integer</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles du classeur actif.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetsInNewWorkbook">
      <MemberSignature Language="C#" Value="public int SheetsInNewWorkbook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SheetsInNewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SheetsInNewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public Property SheetsInNewWorkbook As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SheetsInNewWorkbook { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le nombre de feuilles que Microsoft Excel insère automatiquement dans les nouveaux classeurs.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutMenus">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Menu ShortcutMenus[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Menu ShortcutMenus(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShortcutMenus(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShortcutMenus(Index As Integer) As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Menu ^ ShortcutMenus[int] { Microsoft::Office::Interop::Excel::Menu ^ get(int Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Menu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipNames">
      <MemberSignature Language="C#" Value="public bool ShowChartTipNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les graphiques affichent des noms des info-bulle du graphique. La valeur par défaut est <b>True</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipValues">
      <MemberSignature Language="C#" Value="public bool ShowChartTipValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les graphiques montrent les valeurs info-bulle. La valeur par défaut est <b>True</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDevTools">
      <MemberSignature Language="C#" Value="public bool ShowDevTools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDevTools" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowDevTools" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDevTools As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDevTools { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique si l’onglet Développeur est affichée dans le ruban. Lecture/écriture.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>
          <para>Cette propriété correspond à l’afficher l’onglet Développeur dans la case à cocher du ruban dans la boîte de dialogue Options Excel.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMenuFloaties">
      <MemberSignature Language="C#" Value="public bool ShowMenuFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowMenuFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowMenuFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowMenuFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowMenuFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique s’il faut afficher la Mini barre d’outils lorsque l’utilisateur clique dans la fenêtre du classeur. Lecture/écriture.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowQuickAnalysis">
      <MemberSignature Language="C#" Value="public bool ShowQuickAnalysis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowQuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowQuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowQuickAnalysis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowQuickAnalysis { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contrôle l’affichage de l’interface utilisateur contextuelle analyse rapide sur la sélection. <b>TRUE</b> signifie qu'affiche le bouton analyse rapide. Correspond aux options Afficher l’analyse rapide sur la case à cocher sélection située dans le fichier menu, <b>Options, Options Excel</b>et onglet puis général en lecture-écriture. <b>Boolean</b> (<b>bool</b> en c#).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionFloaties">
      <MemberSignature Language="C#" Value="public bool ShowSelectionFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowSelectionFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique si la Mini barre d’outils affiche lorsqu’un utilisateur sélectionne le texte. Lecture/écriture.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>
          <para>Correspond à la case à cocher de sélection dans la boîte de dialogue Options Excel afficher la minibarre.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowStartupDialog">
      <MemberSignature Language="C#" Value="public bool ShowStartupDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowStartupDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowStartupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowStartupDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowStartupDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie <b>la valeur True</b> (valeur par défaut) lorsque le volet Nouveau classeur s’affiche pour une application Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowToolTips">
      <MemberSignature Language="C#" Value="public bool ShowToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les info-bulles sont activées.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindowsInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowWindowsInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindowsInTaskbar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowWindowsInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindowsInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindowsInTaskbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtColors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtColors SmartArtColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtColors SmartArtColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtColors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtColors As SmartArtColors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtColors ^ SmartArtColors { Microsoft::Office::Core::SmartArtColors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtColors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le jeu de styles de couleurs qui sont actuellement chargées dans l’application.</summary>
        <value>Le jeu de styles de couleur qui sont actuellement chargées dans l’application.</value>
        <remarks>
          <para>En lecture seule.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtLayouts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtLayouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtLayouts As SmartArtLayouts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtLayouts ^ SmartArtLayouts { Microsoft::Office::Core::SmartArtLayouts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtLayouts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’ensemble des mises en page SmartArt qui sont actuellement chargées dans l’application.</summary>
        <value>L’ensemble des mises en page SmartArt qui sont actuellement chargées dans l’application.</value>
        <remarks>
          <para>En lecture seule.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtQuickStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtQuickStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtQuickStyles As SmartArtQuickStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtQuickStyles ^ SmartArtQuickStyles { Microsoft::Office::Core::SmartArtQuickStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtQuickStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le jeu de styles rapides SmartArt qui sont actuellement chargées dans l’application.</summary>
        <value>Le jeu de styles rapides SmartArt qui sont actuellement chargées dans l’application.</value>
        <remarks>
          <para>En lecture seule.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRecognizers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartTagRecognizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagRecognizers As SmartTagRecognizers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ SmartTagRecognizers { Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagRecognizers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> collection pour une application.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speech">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Speech Speech { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Speech Speech" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Speech" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Speech As Speech" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Speech ^ Speech { Microsoft::Office::Interop::Excel::Speech ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Speech</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> objet.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellingOptions As SpellingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SpellingOptions ^ SpellingOptions { Microsoft::Office::Interop::Excel::SpellingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SpellingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> object qui représente les options d’orthographe de l’application.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFont">
      <MemberSignature Language="C#" Value="public string StandardFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFont" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFont As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardFont { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le nom de la police standard.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Si vous modifiez la police standard en utilisant cette propriété, la modification prend effet qu’après avoir redémarré Microsoft Excel.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFontSize">
      <MemberSignature Language="C#" Value="public double StandardFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardFontSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardFontSize { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit la taille de police standard, en points.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Si vous modifiez la taille de police standard en utilisant cette propriété, la modification prend effet qu’après avoir redémarré Microsoft Excel.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartupPath">
      <MemberSignature Language="C#" Value="public string StartupPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StartupPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartupPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le chemin d’accès complet du dossier de démarrage à l’exclusion du séparateur final.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public object StatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object StatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusBar As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ StatusBar { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le texte dans la barre d’état.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Cette propriété renvoie <b>False</b> si Microsoft Excel possède un contrôle de la barre d’état. Pour restaurer le texte par défaut, définissez la propriété sur <b>False</b>. Cette méthode fonctionne même si la barre d’état est masquée.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Support">
      <MemberSignature Language="C#" Value="public object Support (object Object, int ID, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Support([in]object Object, [in]int32 ID, [in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Support(System.Object,System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Object" Type="System.Object" />
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Object">To be added.</param>
        <param name="ID">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatesPath">
      <MemberSignature Language="C#" Value="public string TemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le chemin d’accès local où les modèles sont stockés.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ThisCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ThisCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ThisCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie la cellule de la fonction définie par l’utilisateur est appelée en tant que depuis un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Les utilisateurs ne doivent pas accéder aux propriétés ou méthodes de l’objet <b>Range</b> dans la fonction définie par l’utilisateur. Les utilisateurs peuvent mettre en cache l’objet <b>Range</b> pour une utilisation ultérieure et effectuer d’autres actions lorsque le recalcul est terminé.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ThisWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ThisWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ThisWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objet qui représente le classeur sur lequel s’exécute le code de macro en cours.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Utilisez cette propriété pour faire référence au classeur qui contient le code de votre macro. <b>ThisWorkbook</b> est la seule façon pour faire référence à un classeur macro complémentaire à partir à l’intérieur de la macro complémentaire proprement dit. La propriété <b>ActiveWorkbook</b> ne renvoie pas le classeur macro complémentaire ; elle renvoie le classeur qui appelle la macro complémentaire. Le <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> propriété peut échouer, car le nom du classeur probablement modifié lorsque vous avez créé le complément et <b>ThisWorkbook</b> renvoie toujours le classeur dans lequel le code est en cours d’exécution.</para>
          <para>Cette propriété peut être utilisée uniquement à partir de l’intérieur d’Excel. Vous ne pouvez pas l’utiliser pour accéder à un classeur à partir de n’importe quelle autre application.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public string ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit ou renvoie le caractère utilisé pour les milliers séparateur sous forme de <b>chaîne</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toolbars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Toolbars Toolbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Toolbars Toolbars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Toolbars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Toolbars As Toolbars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Toolbars ^ Toolbars { Microsoft::Office::Interop::Excel::Toolbars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Toolbars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Distance, en points, entre le bord supérieur de l’écran et le bord supérieur de la fenêtre Microsoft Excel principale. Si la fenêtre d'application est réduite, cette propriété contrôle la position de l'icône de la fenêtre (n'importe où sur l'écran).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKey">
      <MemberSignature Language="C#" Value="public string TransitionMenuKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransitionMenuKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransitionMenuKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie ou définit l’autre touche de menu ou d’aide Microsoft Excel, généralement « / ».</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKeyAction">
      <MemberSignature Language="C#" Value="public int TransitionMenuKeyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransitionMenuKeyAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKeyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKeyAction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TransitionMenuKeyAction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit l’action entreprise lorsque la touche menu Microsoft Excel. Peut être <b>xlExcelMenus</b> ou <b>xlLotusHelp</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionNavigKeys">
      <MemberSignature Language="C#" Value="public bool TransitionNavigKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionNavigKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionNavigKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionNavigKeys { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur true</b> si les touches de déplacement sont actives.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UILanguage">
      <MemberSignature Language="C#" Value="public int UILanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UILanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UILanguage" />
      <MemberSignature Language="VB.NET" Value="Public Property UILanguage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UILanguage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à une utilisation interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Undo() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule la dernière action de l’interface utilisateur.</summary>
        <remarks>
          <para>Cette méthode annule la dernière action effectuée par l’utilisateur avant d’exécuter la procédure. Elle doit être la première ligne de la procédure.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Union (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Union([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">
          <b>Objet Range</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg2">
          <b>Objet Range</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg3">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg4">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg5">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg6">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg7">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg8">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg9">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg10">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg11">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg12">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg13">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg14">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg15">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg16">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg17">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg18">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg19">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg20">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg21">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg22">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg23">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg24">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg25">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg26">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg27">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg28">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg29">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <param name="Arg30">
          <b>Objet</b>obligatoire. Au moins deux objets <b>Range</b> doivent être spécifiés.</param>
        <summary>Cette méthode renvoie l'union d'au moins deux plages.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie la hauteur maximale de l’espace qu’une fenêtre peut occuper dans la zone de fenêtre d’application, en points.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie la largeur maximale de l’espace qu’une fenêtre peut occuper dans la zone de fenêtre d’application en points.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseClusterConnector">
      <MemberSignature Language="C#" Value="public bool UseClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property UseClusterConnector As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseClusterConnector { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si Microsoft Excel autorise des fonctions définies par l’utilisateur dans les compléments XLL à exécuter sur un cluster de calcul.</summary>
        <value>
          <b>true</b> si Excel autorise les fonctions définies par l’utilisateur dans les compléments XLL à exécuter sur un cluster de calcul ; Sinon, <b>false</b>.</value>
        <remarks>
          <para>En lecture-écriture.</para>
          <para>
            <b>true</b> si Excel autorise des fonctions définies par l’utilisateur dans les compléments XLL à exécuter sur un cluster de calcul, sinon <b>false</b>. Le paramètre de la <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> propriété correspond aux fonctions XLL autoriser définies par l’utilisateur à exécuter sur une compute cluster case sous formules dans la catégorie Avancé de la boîte de dialogue Options Excel.</para>
          <para>
            <b>Remarque</b>: pour activer la <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> propriété, vous devez installer un connecteur de Cluster HPC High Performance Computing (). Un connecteur de Cluster permet d’exécuter les fonctions XLL sécurisées pour le cluster à distance sur un cluster HPC pour améliorer les performances.</para>
          <para>Après avoir défini les <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> propriété, utilisez la <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> propriété pour spécifier le connecteur de Cluster HPC à utiliser.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.UsedObjects UsedObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.UsedObjects UsedObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsedObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedObjects As UsedObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::UsedObjects ^ UsedObjects { Microsoft::Office::Interop::Excel::UsedObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.UsedObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> objet représentant des objets alloués dans un classeur.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si l’application est visible ou si elle a été créée ou démarrée par l’utilisateur. <b>False</b> si vous avez créé ou démarrée par programmation à l’application en utilisant les fonctions <b>CreateObject</b> ou <b>GetObject</b> et l’application est masquée.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Lorsque la propriété <b>UserControl</b> a la <b>valeur False</b> pour un objet, cet objet est supprimé lorsque la dernière référence de programmation à l’objet est supprimée. Si cette propriété a la <b>valeur False</b>, Microsoft Excel se ferme lorsque le dernier objet de la session est libéré.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLibraryPath">
      <MemberSignature Language="C#" Value="public string UserLibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserLibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserLibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserLibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le chemin d’accès à l’emplacement sur l’ordinateur où les compléments COM sont installés.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le nom de l’utilisateur actuel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSystemSeparators">
      <MemberSignature Language="C#" Value="public bool UseSystemSeparators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemSeparators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseSystemSeparators" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemSeparators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemSeparators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>La valeur True</b> (valeur par défaut) si les séparateurs système de Microsoft Excel sont activés.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie « Microsoft Excel ».</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBE">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBE VBE { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBE VBE" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.VBE" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBE As VBE" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBE ^ VBE { Microsoft::Vbe::Interop::VBE ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBE</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un objet <b>VBE</b> représentant Visual Basic Editor.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le numéro de version de Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si l’objet est visible.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volatile">
      <MemberSignature Language="C#" Value="public void Volatile (object Volatile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Volatile([in]object Volatile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Volatile(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Volatile (Optional Volatile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Volatile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Volatile">Facultatif <b>Object</b>. <b>True</b> pour marquer la fonction comme volatile. <b>False</b> pour marquer la fonction comme non volatiles. La valeur par défaut est <b>True</b>.</param>
        <summary>Marque comme volatile une fonction personnalisée. Une fonction volatile doit être recalculée chaque fois qu’un calcul est effectué dans une cellule quelconque de la feuille de calcul. Une fonction non volatile n’est recalculée qu’en cas de changement des variables d’entrée. Cette méthode est sans effet si elle ne se trouve pas à l’intérieur d’une fonction définie par l’utilisateur utilisée pour calculer une cellule de feuille de calcul.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (Time As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">
          <b>Objet</b>obligatoire. Le moment auquel vous souhaitez que la macro doit reprendre au format de date Microsoft Excel.</param>
        <summary>Suspend l'exécution d'une macro jusqu'à une heure spécifiée. Renvoie  <b>True</b>  si l'heure spécifiée est atteinte.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Important</b>: la méthode <b>Wait</b> suspend toute activité de Microsoft Excel et peut vous empêcher d’effectuer d’autres opérations sur votre ordinateur <b>pendant en vigueur</b> . Toutefois, en arrière-plan traite telles que l’impression et le recalcul continuent.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WarnOnFunctionNameConflict">
      <MemberSignature Language="C#" Value="public bool WarnOnFunctionNameConflict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WarnOnFunctionNameConflict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" />
      <MemberSignature Language="VB.NET" Value="Public Property WarnOnFunctionNameConflict As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WarnOnFunctionNameConflict { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Le <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> propriété, la valeur <b>True</b>, déclenche une alerte si un développeur tente de créer une nouvelle fonction à l’aide du nom d’une fonction. Type de données <b>Boolean</b> en lecture/écriture.</summary>
        <value>
          <b>Boolean</b>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Watches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Watches Watches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Watches Watches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Watches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Watches As Watches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Watches ^ Watches { Microsoft::Office::Interop::Excel::Watches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Watches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> objet représentant une plage qui est suivie lorsque la feuille de calcul est recalculée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Distance, en points, entre le bord gauche de la fenêtre d’application à sa droite. Si la fenêtre est réduite, cette propriété est en lecture seule et renvoie la largeur de l’icône de la fenêtre.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection qui représente toutes les fenêtres dans tous les classeurs.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Cette propriété renvoie une collection de fenêtres visibles et masquées.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForPens">
      <MemberSignature Language="C#" Value="public bool WindowsForPens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WindowsForPens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowsForPens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsForPens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WindowsForPens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b> si l’ordinateur est en cours d’exécution sous Microsoft Windows pour Pen Computing.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit l’état de la fenêtre. En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>XlWindowState</b> peut être une de ces constantes <b>XlWindowState</b> :</para>
          <para>
            <b>xlMaximized</b>
          </para>
          <para>
            <b>xlNormal</b>
          </para>
          <para>
            <b>xlMinimized</b>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Workbooks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbooks Workbooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbooks Workbooks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workbooks As Workbooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbooks ^ Workbooks { Microsoft::Office::Interop::Excel::Workbooks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection qui représente tous les classeurs ouverts.</summary>
        <value>To be added.</value>
        <remarks>
          <para>La collection retournée par la propriété <b>Workbooks</b> n’inclut pas les compléments ouverts, qui sont un type spécifique de classeur masqué. Toutefois, vous pouvez renvoyer une seule macro complémentaire ouverte, si vous connaissez le nom de fichier. Par exemple, Workbooks renverra le complément ouvert « OSCAR.xla » en que d’un objet <b>Workbook</b> .</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorksheetFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WorksheetFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorksheetFunction As WorksheetFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorksheetFunction ^ WorksheetFunction { Microsoft::Office::Interop::Excel::WorksheetFunction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorksheetFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> objet.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles de calcul du classeur actif.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Cette propriété ne renvoie pas les feuilles de macro, utilisez la <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> propriété ou la <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> propriété permet de renvoyer ces feuilles.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>