<Type Name="_Application" FullName="Microsoft.Office.Interop.Excel._Application">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e1779c82659528041c775925bebd417907f8643" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="49999629" /></Metadata><TypeSignature Language="C#" Value="public interface _Application" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Application" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Application" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D5-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e5645-101">Il s'agit d'une interface principale dans une coclasse COM qui est requise par du code managé en vue de son interopérabilité avec l'objet COM correspondant.</span><span class="sxs-lookup"><span data-stu-id="e5645-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="e5645-102">Utilisez cette interface principale uniquement lorsque la méthode que vous voulez utiliser partage le même nom qu'un événement de l'objet COM ; en l'occurrence, effectuez un transtypage vers cette interface pour appeler la méthode et effectuez un transtypage vers la dernière interface d'événements pour vous connecter à l'événement.</span><span class="sxs-lookup"><span data-stu-id="e5645-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="e5645-103">Sinon, utilisez l'interface .NET qui est dérivée de la coclasse COM pour accéder aux méthodes, propriétés et événements de l'objet COM.</span><span class="sxs-lookup"><span data-stu-id="e5645-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="e5645-104">Pour plus d’informations sur l’objet COM, voir <see cref="T:Microsoft.Office.Interop.Excel.Application" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Application" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-105">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="e5645-105">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary><span data-ttu-id="e5645-106">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-106">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_FindFile">
      <MemberSignature Language="C#" Value="public void _FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub _FindFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1068)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-107">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-107">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Run2">
      <MemberSignature Language="C#" Value="public object _Run2 (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Run2([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Run2 (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(31)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="e5645-108">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-108">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Wait">
      <MemberSignature Language="C#" Value="public void _Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Wait (Time As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">To be added.</param>
        <summary><span data-ttu-id="e5645-109">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-109">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="e5645-110">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-110">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateMicrosoftApp">
      <MemberSignature Language="C#" Value="public void ActivateMicrosoftApp (Microsoft.Office.Interop.Excel.XlMSApplication Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateMicrosoftApp([in]valuetype Microsoft.Office.Interop.Excel.XlMSApplication Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateMicrosoftApp (Index As XlMSApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateMicrosoftApp(Microsoft::Office::Interop::Excel::XlMSApplication Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1095)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="Microsoft.Office.Interop.Excel.XlMSApplication" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e5645-111">Obligatoire <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-111">Required <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />.</span></span> <span data-ttu-id="e5645-112">Spécifie l’application Microsoft à activer. <b>XlMSApplication</b> peut être l’une de ces constantes <b>XlMSApplication</b> :<b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b></span><span class="sxs-lookup"><span data-stu-id="e5645-112">Specifies the Microsoft application to activate.<b>XlMSApplication</b> can be one of these <b>XlMSApplication</b> constants:<b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b></span></span></param>
        <summary><span data-ttu-id="e5645-p103">Active une application Microsoft. Si celle-ci est déjà en cours d'exécution, cette méthode l'active. Si tel n'est pas le cas, la méthode démarre une nouvelle instance de l'application.</span><span class="sxs-lookup"><span data-stu-id="e5645-p103">Activates a Microsoft application. If the application is already running, this method activates the running application. If the application isn't running, this method starts a new instance of the application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-116">Renvoie un objet qui représente la cellule active dans la fenêtre active (la fenêtre en haut) ou <see cref="T:Microsoft.Office.Interop.Excel.Range" /> dans la fenêtre spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e5645-116">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window.</span></span> <span data-ttu-id="e5645-117">Si la fenêtre n'affiche aucune feuille de calcul, cette propriété échoue.</span><span class="sxs-lookup"><span data-stu-id="e5645-117">If the window isn't displaying a worksheet, this property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-p105">Veillez à bien différencier la cellule active de la sélection. La cellule active est une cellule unique située au sein de la sélection en cours. Celle-ci peut contenir plusieurs cellules, une seule d'entre elles est active.</span><span class="sxs-lookup"><span data-stu-id="e5645-p105">Be careful to distinguish between the active cell and the selection. The active cell is a single cell inside the current selection. The selection may contain more than one cell, but only one is the active cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-121">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objet qui représente le graphique actif (soit un graphique incorporé, soit une feuille de graphique).</span><span class="sxs-lookup"><span data-stu-id="e5645-121">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span></span> <span data-ttu-id="e5645-122">Un graphique incorporé est considéré comme actif lorsqu'il est sélectionné ou activé.</span><span class="sxs-lookup"><span data-stu-id="e5645-122">An embedded chart is considered active when it's either selected or activated.</span></span> <span data-ttu-id="e5645-123">Lorsqu'aucun graphique n'est actif, cette propriété renvoie la valeur <b>Nothing</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-123">When no chart is active, this property returns <b>Nothing</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveDialog As DialogSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DialogSheet ^ ActiveDialog { Microsoft::Office::Interop::Excel::DialogSheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DialogSheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-124">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-124">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEncryptionSession">
      <MemberSignature Language="C#" Value="public int ActiveEncryptionSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveEncryptionSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveEncryptionSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEncryptionSession As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ActiveEncryptionSession { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-125">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-125">Read-only.</span></span></summary>
        <value><span data-ttu-id="e5645-126"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="e5645-126"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMenuBar">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveMenuBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMenuBar As MenuBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBar ^ ActiveMenuBar { Microsoft::Office::Interop::Excel::MenuBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-127">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-127">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePrinter">
      <MemberSignature Language="C#" Value="public string ActivePrinter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivePrinter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActivePrinter" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivePrinter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivePrinter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-128">Cette propriété renvoie ou définit le nom de l'imprimante active.</span><span class="sxs-lookup"><span data-stu-id="e5645-128">Returns or sets the name of the active printer.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveProtectedViewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveProtectedViewWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveProtectedViewWindow As ProtectedViewWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ ActiveProtectedViewWindow { Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-129">Obtient <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> un objet qui représente la fenêtre en affichage protégé active (celle qui se trouve au-dessus).</span><span class="sxs-lookup"><span data-stu-id="e5645-129">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span></span></summary>
        <value><span data-ttu-id="e5645-130">Objet qui représente la fenêtre active en affichage protégé <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> (fenêtre au-dessus).</span><span class="sxs-lookup"><span data-stu-id="e5645-130">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span></span></value>
        <remarks><para><span data-ttu-id="e5645-131">Renvoie une référence null (Nothing in Visual Basic) si aucune fenêtre en affichage protégé n’est ouverte.</span><span class="sxs-lookup"><span data-stu-id="e5645-131">Returns a null reference (Nothing in Visual Basic) if there are no Protected View windows open.</span></span> <span data-ttu-id="e5645-132">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-132">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-p108">Cette propriété renvoie un objet qui représente la feuille active (feuille au premier plan) dans le classeur actif ou dans la fenêtre ou le classeur spécifié. Renvoie <b>Nothing</b> si aucune feuille n’est active.</span><span class="sxs-lookup"><span data-stu-id="e5645-p108">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook. Returns <b>Nothing</b> if no sheet is active.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-135">Dans le cas où un classeur apparaît dans plusieurs fenêtres, la propriété <b>ActiveSheet</b> peut être différente d’une fenêtre à l’autre.</span><span class="sxs-lookup"><span data-stu-id="e5645-135">If a workbook appears in more than one window, the <b>ActiveSheet</b> property may be different in different windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window ActiveWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window ActiveWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ ActiveWindow { Microsoft::Office::Interop::Excel::Window ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-136">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Window" /> objet qui représente la fenêtre active (la fenêtre au-dessus).</span><span class="sxs-lookup"><span data-stu-id="e5645-136">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object that represents the active window (the window on top).</span></span> <span data-ttu-id="e5645-137">Elle renvoie la valeur <b>Nothing</b> si aucune fenêtre n'est ouverte.</span><span class="sxs-lookup"><span data-stu-id="e5645-137">Returns <b>Nothing</b> if there are no windows open.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ActiveWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-138">Renvoie un objet qui représente le workbook dans la fenêtre <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> active (la fenêtre au-dessus).</span><span class="sxs-lookup"><span data-stu-id="e5645-138">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook in the active window (the window on top).</span></span> <span data-ttu-id="e5645-139">Elle renvoie la valeur <b>Nothing</b> si aucune fenêtre n'est ouverte ou si la fenêtre active est la fenêtre Info ou Presse-papiers.</span><span class="sxs-lookup"><span data-stu-id="e5645-139">Returns <b>Nothing</b> if there are no windows open or if either the Info window or the Clipboard window is the active window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChartAutoFormat">
      <MemberSignature Language="C#" Value="public void AddChartAutoFormat (object Chart, string Name, object Description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChartAutoFormat([in]object Chart, [in]string Name, [in]object Description) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddChartAutoFormat(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChartAutoFormat (Chart As Object, Name As String, Optional Description As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(216)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Chart" Type="System.Object" />
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Chart"><span data-ttu-id="e5645-140">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-140">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-141">Graphique qui contient le format qui sera appliqué lors de l’application de la nouvelle mise en forme automatique du graphique.</span><span class="sxs-lookup"><span data-stu-id="e5645-141">A chart that contains the format that will be applied when the new chart autoformat is applied.</span></span></param>
        <param name="Name"><span data-ttu-id="e5645-142">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-142">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-143">Nom de la mise en forme automatique.</span><span class="sxs-lookup"><span data-stu-id="e5645-143">The name of the autoformat.</span></span></param>
        <param name="Description"><span data-ttu-id="e5645-144">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-144">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-145">Description de la mise en forme automatique personnalisée.</span><span class="sxs-lookup"><span data-stu-id="e5645-145">A description of the custom autoformat.</span></span></param>
        <summary><span data-ttu-id="e5645-146">Ajoute une mise en forme automatique de graphique personnalisée dans la liste des mises en forme automatiques de graphique disponibles.</span><span class="sxs-lookup"><span data-stu-id="e5645-146">Adds a custom chart autoformat to the list of available chart autoformats.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomList">
      <MemberSignature Language="C#" Value="public void AddCustomList (object ListArray, object ByRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCustomList([in]object ListArray, [in]object ByRow) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddCustomList(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomList (ListArray As Object, Optional ByRow As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
        <Parameter Name="ByRow" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray"><span data-ttu-id="e5645-147">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-147">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-148">Spécifie les données sources, sous la mesure d’un tableau de chaînes ou <see cref="T:Microsoft.Office.Interop.Excel.Range" /> d’un objet.</span><span class="sxs-lookup"><span data-stu-id="e5645-148">Specifies the source data, as either an array of strings or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></param>
        <param name="ByRow"><span data-ttu-id="e5645-149">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-149">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-150">Utilisé uniquement <paramref name="ListArray" /> s’il s’agit <b>d’un objet</b> Range.</span><span class="sxs-lookup"><span data-stu-id="e5645-150">Only used if <paramref name="ListArray" /> is a <b>Range</b> object.</span></span> <span data-ttu-id="e5645-151">Affectez-lui la valeur <b>True</b> pour créer une liste personnalisée à partir de chacune des lignes contenues dans la plage.</span><span class="sxs-lookup"><span data-stu-id="e5645-151"><b>True</b> to create a custom list from each row in the range.</span></span> <span data-ttu-id="e5645-152">Affectez-lui la valeur <b>False</b> pour créer une liste personnalisée à partir de chacune des colonnes située dans la plage.</span><span class="sxs-lookup"><span data-stu-id="e5645-152"><b>False</b> to create a custom list from each column in the range.</span></span> <span data-ttu-id="e5645-153">Si vous ne spécifiez pas cet argument et si le nombre de lignes est supérieur ou égal au nombre de colonnes de la plage, Microsoft Excel crée une liste personnalisée à partir de chacune des colonnes de la plage.</span><span class="sxs-lookup"><span data-stu-id="e5645-153">If this argument is omitted and there are more rows than columns (or an equal number of rows and columns) in the range, Microsoft Excel creates a custom list from each column in the range.</span></span> <span data-ttu-id="e5645-154">En revanche, si vous ne spécifiez pas cet argument alors que le nombre de colonnes est supérieur au nombre de lignes, Microsoft Excel crée une liste personnalisée à partir de chacune des lignes de la plage.</span><span class="sxs-lookup"><span data-stu-id="e5645-154">If this argument is omitted and there are more columns than rows in the range, Microsoft Excel creates a custom list from each row in the range.</span></span></param>
        <summary><span data-ttu-id="e5645-155">Ajoute une liste personnalisée pour la recopie incrémentée et/ou le tri personnalisé.</span><span class="sxs-lookup"><span data-stu-id="e5645-155">Adds a custom list for custom autofill and/or custom sort.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-156">Si la liste que vous tentez d'ajouter existe déjà, cette méthode est sans effet.</span><span class="sxs-lookup"><span data-stu-id="e5645-156">If the list you're trying to add already exists, this method does nothing.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns AddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns AddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns As AddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns ^ AddIns { Microsoft::Office::Interop::Excel::AddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-157">Renvoie une collection qui représente tous les add-ins répertoriés dans la boîte de dialogue <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> Add-Ins (menu Outils).</span><span class="sxs-lookup"><span data-stu-id="e5645-157">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> collection that represents all the add-ins listed in the Add-Ins dialog box (Tools menu).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns2 AddIns2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns2 AddIns2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns2 As AddIns2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns2 ^ AddIns2 { Microsoft::Office::Interop::Excel::AddIns2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-158">Obtient une collection d’objets qui représentent tous les modules qui sont actuellement disponibles ou ouverts dans Excel, qu’ils soient <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> installés ou non.</span><span class="sxs-lookup"><span data-stu-id="e5645-158">Gets a collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel, regardless of whether they are installed.</span></span></summary>
        <value><span data-ttu-id="e5645-159">Collection d’objets qui représentent tous les modules qui sont actuellement disponibles ou <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> ouverts dans Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-159">A collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-160">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-160">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertBeforeOverwriting">
      <MemberSignature Language="C#" Value="public bool AlertBeforeOverwriting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlertBeforeOverwriting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlertBeforeOverwriting" />
      <MemberSignature Language="VB.NET" Value="Public Property AlertBeforeOverwriting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlertBeforeOverwriting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-161"><b>True</b> si Microsoft Excel affiche un message avant de remplacer des cellules contenant des données pendant une modification effectuée à l'aide de la fonction Glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="e5645-161"><b>True</b> if Microsoft Excel displays a message before overwriting nonblank cells during a drag-and-drop editing operation.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AltStartupPath">
      <MemberSignature Language="C#" Value="public string AltStartupPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AltStartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AltStartupPath" />
      <MemberSignature Language="VB.NET" Value="Public Property AltStartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AltStartupPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-162">Cette propriété renvoie ou définit le nom de l'autre dossier de démarrage.</span><span class="sxs-lookup"><span data-stu-id="e5645-162">Returns or sets the name of the alternate startup folder.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseClearType">
      <MemberSignature Language="C#" Value="public bool AlwaysUseClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseClearType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlwaysUseClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseClearType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-163">Renvoie ou définit un <b>type Boolean</b> qui représente s’il faut utiliser ClearType pour afficher les polices dans le texte du menu, du Ruban et de la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="e5645-163">Returns or sets a <b>Boolean</b> that represents whether to use ClearType to display fonts in the menu, Ribbon, and dialog box text.</span></span> <span data-ttu-id="e5645-164">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-164">Read/write.</span></span></summary>
        <value><span data-ttu-id="e5645-165"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e5645-165"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="e5645-166">Même si le paramètre Microsoft Windows de ClearType est désactivé, affecter la valeur <b>True</b> à cette propriété remplace le paramètre de Windows et utilise ClearType dans toutes les applications Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="e5645-166">Even if the Microsoft Windows setting for ClearType is turned off, setting this property to <b>True</b> overrides the Windows setting and uses ClearType in all Microsoft Office applications.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.AnswerWizard AnswerWizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.AnswerWizard AnswerWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AnswerWizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnswerWizard As AnswerWizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::AnswerWizard ^ AnswerWizard { Microsoft::Office::Core::AnswerWizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.AnswerWizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-167">Renvoie <see cref="T:Microsoft.Office.Core.AnswerWizard" /> l’objet pour Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-167">Returns the <see cref="T:Microsoft.Office.Core.AnswerWizard" /> object for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-168">Renvoie un objet qui représente le créateur de l’objet spécifié (vous pouvez utiliser cette propriété avec un objet OLE Automation pour renvoyer <see cref="T:Microsoft.Office.Interop.Excel.Application" /> l’application de cet objet).</span><span class="sxs-lookup"><span data-stu-id="e5645-168">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArbitraryXMLSupportAvailable">
      <MemberSignature Language="C#" Value="public bool ArbitraryXMLSupportAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArbitraryXMLSupportAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArbitraryXMLSupportAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-169">Renvoie une valeur de type <b>Boolean</b> qui indique si les fonctionnalités XML de Microsoft Excel sont disponibles.</span><span class="sxs-lookup"><span data-stu-id="e5645-169">Returns a <b>Boolean</b> value that indicates whether the XML features in Microsoft Excel are available.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-170">Les fonctionnalités XML, à l’exception de l’enregistrement de fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professional Edition 2003 et Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="e5645-170">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AskToUpdateLinks">
      <MemberSignature Language="C#" Value="public bool AskToUpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AskToUpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AskToUpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AskToUpdateLinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AskToUpdateLinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-171">Cette propriété a la valeur <b>True</b> si Microsoft Excel invite l'utilisateur à mettre à jour les liaisons lors de l'ouverture d'un fichier en possédant.</span><span class="sxs-lookup"><span data-stu-id="e5645-171"><b>True</b> if Microsoft Excel asks the user to update links when opening files with links.</span></span> <span data-ttu-id="e5645-172">Elle a la valeur <b>False</b> si les liaisons sont automatiquement mises à jour sans affichage d'une boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="e5645-172"><b>False</b> if links are automatically updated with no dialog box.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistance">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IAssistance Assistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IAssistance Assistance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistance As IAssistance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IAssistance ^ Assistance { Microsoft::Office::Core::IAssistance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IAssistance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-173">Renvoie un <see cref="T:Microsoft.Office.Core.IAssistance" /> objet pour short_Excel2007 qui représente la visionneuse d Microsoft Office’aide.</span><span class="sxs-lookup"><span data-stu-id="e5645-173">Returns an <see cref="T:Microsoft.Office.Core.IAssistance" /> object for short_Excel2007 that represents the Microsoft Office Help Viewer.</span></span> <span data-ttu-id="e5645-174">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-174">Read-only.</span></span></summary>
        <value><span data-ttu-id="e5645-175"><b>IAssistance</b></span><span class="sxs-lookup"><span data-stu-id="e5645-175"><b>IAssistance</b></span></span></value>
        <remarks><para><span data-ttu-id="e5645-176">L'objet <b>IAssistance</b> permet aux développeurs d'afficher l'aide personnalisée et l'aide installée avec Office dans la visionneuse de l'aide.</span><span class="sxs-lookup"><span data-stu-id="e5645-176">The <b>IAssistance</b> object allows developers to show custom help and help that is installed with Office in the Office Help Viewer.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistant">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Assistant Assistant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Assistant Assistant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistant As Assistant" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Assistant ^ Assistant { Microsoft::Office::Core::Assistant ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Assistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-177">Renvoie un <see cref="T:Microsoft.Office.Core.Assistant" /> objet pour Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-177">Returns an <see cref="T:Microsoft.Office.Core.Assistant" /> object for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCorrect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoCorrect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoCorrect As AutoCorrect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoCorrect ^ AutoCorrect { Microsoft::Office::Interop::Excel::AutoCorrect ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoCorrect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-178">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> objet qui représente les attributs de lacorrect automatique De Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-178">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> object that represents the Microsoft Excel AutoCorrect attributes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormatAsYouTypeReplaceHyperlinks">
      <MemberSignature Language="C#" Value="public bool AutoFormatAsYouTypeReplaceHyperlinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFormatAsYouTypeReplaceHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFormatAsYouTypeReplaceHyperlinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-179">Cette propriété a la valeur us	<b>True</b> (par défaut) si Microsoft Excel met en forme automatiquement des liens hypertexte à mesure que vous tapez.</span><span class="sxs-lookup"><span data-stu-id="e5645-179"><b>True</b> (default) if Microsoft Excel automatically formats hyperlinks as you type.</span></span> <span data-ttu-id="e5645-180">Elle a la valeur <b>False</b> si Excel ne met pas en forme automatiquement des liens hypertexte à mesure que vous tapez.</span><span class="sxs-lookup"><span data-stu-id="e5645-180"><b>False</b> if Excel does not automatically format hyperlinks as you type.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationSecurity">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationSecurity As MsoAutomationSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutomationSecurity AutomationSecurity { Microsoft::Office::Core::MsoAutomationSecurity get(); void set(Microsoft::Office::Core::MsoAutomationSecurity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutomationSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-181">Renvoie ou définit une constante qui représente le mode de sécurité utilisé par Microsoft Excel lors de l’ouverture de fichiers <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> par programme.</span><span class="sxs-lookup"><span data-stu-id="e5645-181">Returns or sets an <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> constant that represents the security mode Microsoft Excel uses when programmatically opening files.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-182">Cette propriété reçoit automatiquement la valeur <b>msoAutomationSecurityLow</b> au démarrage de l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-182">This property is automatically set to <b>msoAutomationSecurityLow</b> when the application is started.</span></span> <span data-ttu-id="e5645-183">Par conséquent, pour éviter le piratage de solutions s'appuyant uniquement sur le paramètre par défaut, il est conseillé d'attribuer à cette propriété la valeur <b>msoAutomationSecurityLow</b> après avoir ouvert un fichier par programme.</span><span class="sxs-lookup"><span data-stu-id="e5645-183">Therefore, to avoid breaking solutions that rely on the default setting, you should be careful to reset this property to <b>msoAutomationSecurityLow</b> after programmatically opening a file.</span></span> <span data-ttu-id="e5645-184">De même, cette propriété doit être définie immédiatement avant et suivant l'ouverture d'un fichier par programme pour éviter toute action malveillante.</span><span class="sxs-lookup"><span data-stu-id="e5645-184">Also, this property should be set immediately before and after opening a file programmatically to avoid malicious subversion.</span></span></para>
          <para><span data-ttu-id="e5645-185">
            <b>MsoAutomationSecurity</b> peut être une de ces constantes <b>MsoAutomationSecurity</b>:</span><span class="sxs-lookup"><span data-stu-id="e5645-185">
            <b>MsoAutomationSecurity</b> can be one of these <b>MsoAutomationSecurity</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="e5645-186">
                <b>msoAutomationSecurityByUI</b>    Utilise le paramètre de sécurité spécifié dans la boîte <b>de dialogue</b> Sécurité.</span><span class="sxs-lookup"><span data-stu-id="e5645-186">
                <b>msoAutomationSecurityByUI</b>  Uses the security setting specified in the <b>Security</b> dialog box.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-187">
                <b>msoAutomationSecurityForceDisable</b>    Désactive toutes les macros de tous les fichiers ouverts par programme sans afficher d’alertes de sécurité.</span><span class="sxs-lookup"><span data-stu-id="e5645-187">
                <b>msoAutomationSecurityForceDisable</b>  Disables all macros in all files opened programmatically without showing any security alerts.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-188">
                <b>msoAutomationSecurityLow</b>    Active toutes les macros.</span><span class="sxs-lookup"><span data-stu-id="e5645-188">
                <b>msoAutomationSecurityLow</b>  Enables all macros.</span></span> <span data-ttu-id="e5645-189">Correspond à la valeur par défaut au démarrage de l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-189">This is the default value when the application is started.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-190">La définition <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> sur <b>False</b> n’affecte pas les alertes et n’affecte pas les avertissements de sécurité.</span><span class="sxs-lookup"><span data-stu-id="e5645-190">Setting <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> to <b>False</b> does not affect alerts and will not affect security warnings.</span></span> <span data-ttu-id="e5645-191">Le <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> paramètre ne s’applique pas aux avertissements de sécurité.</span><span class="sxs-lookup"><span data-stu-id="e5645-191">The <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> setting will not apply to security warnings.</span></span> <span data-ttu-id="e5645-192">Par exemple, si l’utilisateur définit <b>DisplayAlerts</b> sur <b>False</b> et <b>AutomationSecurity</b> sur <b>msoAutomationSecurityByUI</b>, alors que l’utilisateur se trouve sur un niveau de sécurité moyen, il y aura des avertissements de sécurité pendant l’exécution de la macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-192">For example, if the user sets <b>DisplayAlerts</b> equal to <b>False</b> and <b>AutomationSecurity</b> to <b>msoAutomationSecurityByUI</b>, while the user is on medium security level, then there will be security warnings while the macro is running.</span></span> <span data-ttu-id="e5645-193">Cela permet à la macro d'intercepter des erreurs d'ouverture de fichiers, tout en maintenant l'avertissement affiché si l'ouverture du fichier réussit.</span><span class="sxs-lookup"><span data-stu-id="e5645-193">This allows the macro to trap file open errors, while still showing the security warning if the file open succeeds.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPercentEntry">
      <MemberSignature Language="C#" Value="public bool AutoPercentEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPercentEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoPercentEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPercentEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPercentEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-194">Cette propriété a la valeur <b>True</b> si les entrées des cellules mises au format pourcentage ne sont pas automatiquement multipliées par 100 dès leur saisie.</span><span class="sxs-lookup"><span data-stu-id="e5645-194"><b>True</b> if entries in cells formatted as percentages aren’t automatically multiplied by 100 as soon as they are entered.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoRecover">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoRecover AutoRecover { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoRecover AutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoRecover As AutoRecover" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoRecover ^ AutoRecover { Microsoft::Office::Interop::Excel::AutoRecover ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoRecover</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-195">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> objet, qui permet de back up tous les formats de fichier sur un intervalle de temps.</span><span class="sxs-lookup"><span data-stu-id="e5645-195">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> object, which backs up all file formats on a timed interval.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-196">Les intervalles de temps valides correspondent à des nombres entiers compris entre 1 et 120.</span><span class="sxs-lookup"><span data-stu-id="e5645-196">Valid time intervals are whole numbers from 1 to 120.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-197">Cette propriété renvoie le numéro de build de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-197">Returns the Microsoft Excel build number.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-198">Il est généralement plus sûr de tester la propriété, sauf si vous avez besoin <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> de connaître le numéro de build.</span><span class="sxs-lookup"><span data-stu-id="e5645-198">It’s usually safer to test the <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> property, unless you’re sure you need to know the build number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-199">Calcule tous les workbooks ouverts</span><span class="sxs-lookup"><span data-stu-id="e5645-199">Calculates all open workbooks</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateBeforeSave">
      <MemberSignature Language="C#" Value="public bool CalculateBeforeSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculateBeforeSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculateBeforeSave" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculateBeforeSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculateBeforeSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-200"><b>True</b> si les workbooks sont calculés avant d’être enregistrés sur le disque (si la propriété <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> est définie sur <b>xlManual</b>).</span><span class="sxs-lookup"><span data-stu-id="e5645-200"><b>True</b> if workbooks are calculated before they're saved to disk (if the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property is set to <b>xlManual</b>).</span></span> <span data-ttu-id="e5645-201">Cette propriété est conservée même si vous modifiez la <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="e5645-201">This property is preserved even if you change the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFull">
      <MemberSignature Language="C#" Value="public void CalculateFull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFull() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFull" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-202">Cette méthode provoque un calcul intégral des données dans tous les classeurs ouverts.</span><span class="sxs-lookup"><span data-stu-id="e5645-202">Forces a full calculation of the data in all open workbooks.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFullRebuild">
      <MemberSignature Language="C#" Value="public void CalculateFullRebuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFullRebuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFullRebuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFullRebuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFullRebuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-203">Pour tous les classeurs ouverts, cette méthode provoque un calcul intégral des données et recrée les dépendances.</span><span class="sxs-lookup"><span data-stu-id="e5645-203">For all open workbooks, forces a full calculation of the data and rebuilds the dependencies.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-204">Les dépendances sont les formules qui dépendent d'autres cellules.</span><span class="sxs-lookup"><span data-stu-id="e5645-204">Dependencies are the formulas that depend on other cells.</span></span> <span data-ttu-id="e5645-205">Par exemple, la formule « =A1 » dépend de la celulle A1.</span><span class="sxs-lookup"><span data-stu-id="e5645-205">For example, the formula "=A1" depends on cell A1.</span></span> <span data-ttu-id="e5645-206">La méthode <b>CalculateFullRebuild</b> est similaire à entrer de nouveau toutes les formules.</span><span class="sxs-lookup"><span data-stu-id="e5645-206">The <b>CalculateFullRebuild</b> method is similar to re-entering all formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateUntilAsyncQueriesDone">
      <MemberSignature Language="C#" Value="public void CalculateUntilAsyncQueriesDone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateUntilAsyncQueriesDone() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateUntilAsyncQueriesDone ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateUntilAsyncQueriesDone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-207">Exécute toutes les requêtes en cours sur les sources de données OLEDB et OLAP.</span><span class="sxs-lookup"><span data-stu-id="e5645-207">Runs all pending queries to OLEDB and OLAP data sources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculation Calculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculation Calculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Calculation" />
      <MemberSignature Language="VB.NET" Value="Public Property Calculation As XlCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculation Calculation { Microsoft::Office::Interop::Excel::XlCalculation get(); void set(Microsoft::Office::Interop::Excel::XlCalculation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-208">Renvoie ou définit le mode de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5645-208">Returns or sets the calculation mode.</span></span> <span data-ttu-id="e5645-209">En <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" /> lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="e5645-209">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-210">Dans le cas des sources de données OLAP, cette propriété peut uniquement renvoyer la valeur <b>xlNormal</b> ou avoir cette valeur.</span><span class="sxs-lookup"><span data-stu-id="e5645-210">For OLAP data sources, this property can only return or be set to <b>xlNormal</b>.</span></span></para>
          <para><span data-ttu-id="e5645-211">
            <b>XlCalculation</b> peut être l’une de ces <b>constantes XlCalculation</b> :</span><span class="sxs-lookup"><span data-stu-id="e5645-211">
            <b>XlCalculation</b> can be one of these <b>XlCalculation</b> constants:</span></span></para>
          <para><span data-ttu-id="e5645-212">
            <b>xlCalculationAutomatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-212">
            <b>xlCalculationAutomatic</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-213">
            <b>xlCalculationManual</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-213">
            <b>xlCalculationManual</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-214">
            <b>xlCalculationSutomatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-214">
            <b>xlCalculationSemiautomatic</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationInterruptKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationInterruptKey" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculationInterruptKey As XlCalculationInterruptKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationInterruptKey CalculationInterruptKey { Microsoft::Office::Interop::Excel::XlCalculationInterruptKey get(); void set(Microsoft::Office::Interop::Excel::XlCalculationInterruptKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationInterruptKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-215">Définit ou renvoie une constante qui spécifie la clé qui peut interrompre Microsoft Excel lors <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> des calculs.</span><span class="sxs-lookup"><span data-stu-id="e5645-215">Sets or returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> constant that specifies the key that can interrupt Microsoft Excel when performing calculations.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-216">
            <b>XlCalculationInterruptKey</b> peut être l’une de ces constantes <b>XlCalculationInterruptKey</b> :</span><span class="sxs-lookup"><span data-stu-id="e5645-216">
            <b>XlCalculationInterruptKey</b> can be one of these <b>XlCalculationInterruptKey</b> constants:</span></span></para>
          <para><span data-ttu-id="e5645-217">
            <b>xlAnyKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-217">
            <b>xlAnyKey</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-218">
            <b>xlEscKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-218">
            <b>xlEscKey</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-219">
            <b>xlNoKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-219">
            <b>xlNoKey</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationState CalculationState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationState CalculationState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationState As XlCalculationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationState CalculationState { Microsoft::Office::Interop::Excel::XlCalculationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-220">Renvoie une constante qui indique l’état de calcul de l’application pour les <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> calculs effectués dans Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-220">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> constant that indicates the calculation state of the application for any calculations that are being performed in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-221">
            <b>XlCalculationState</b> peut être l’une de ces <b>constantes XlCalculationState</b> :</span><span class="sxs-lookup"><span data-stu-id="e5645-221">
            <b>XlCalculationState</b> can be one of these <b>XlCalculationState</b> constants:</span></span></para>
          <para><span data-ttu-id="e5645-222">
            <b>xlCalculating</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-222">
            <b>xlCalculating</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-223">
            <b>xlDone</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-223">
            <b>xlDone</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-224">
            <b>xlPending</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-224">
            <b>xlPending</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-225">Cette propriété renvoie un nombre dont les quatre derniers chiffres correspondent au numéro de version du moteur de calcul secondaire, les autres chiffres (à gauche) correspondant à la version principale de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-225">Returns a number whose rightmost four digits are the minor calculation engine version number, and whose other digits (on the left) are the major version of Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-226">Si le workbook a été enregistré dans une version antérieure d’Excel et si ce dernier n’a pas été entièrement recalculé, cette propriété renvoie la valeur 0.</span><span class="sxs-lookup"><span data-stu-id="e5645-226">If the workbook was saved in an earlier version of Excel and if the workbook hasn't been fully recalculated, this property returns 0.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Caller">
      <MemberSignature Language="C#" Value="public object Caller[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caller(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caller(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Caller(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caller[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e5645-227">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-227">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-228">Index du tableau.</span><span class="sxs-lookup"><span data-stu-id="e5645-228">An index to the array.</span></span> <span data-ttu-id="e5645-229">Cet argument est utilisé uniquement lorsque la propriété renvoie un tableau (pour plus d’informations, consultez la section Remarques).</span><span class="sxs-lookup"><span data-stu-id="e5645-229">This argument is used only when the property returns an array (for more information, see the Remarks section).</span></span></param>
        <summary><span data-ttu-id="e5645-230">Renvoie des informations sur la façon dont Visual Basic a été appelé (pour plus d’informations, consultez la section Remarques).</span><span class="sxs-lookup"><span data-stu-id="e5645-230">Returns information about how Visual Basic was called (for more information, see the Remarks section).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-231">Cette propriété renvoie des informations sur la manière dont Visual Basic est appelé, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="e5645-231">This property returns information about how Visual Basic was called, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-232">Fonction personnalisée tapée dans une cellule unique</span><span class="sxs-lookup"><span data-stu-id="e5645-232">A custom function entered in a single cell</span></span></term>
              <description><span data-ttu-id="e5645-233">Objet <see cref="T:Microsoft.Office.Interop.Excel.Range" /> spécifiant cette cellule</span><span class="sxs-lookup"><span data-stu-id="e5645-233">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying that cell</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-234">Fonction personnalisée qui fait partie d’une formule de tableau dans une plage de cellules</span><span class="sxs-lookup"><span data-stu-id="e5645-234">A custom function that is part of an array formula in a range of cells</span></span></term>
              <description><span data-ttu-id="e5645-235">Objet <b>Range</b> spécifiant cette plage de cellules</span><span class="sxs-lookup"><span data-stu-id="e5645-235">A <b>Range</b> object specifying that range of cells</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-236">Macro Auto_Open, Auto_Close, Auto_Activate ou Auto_Deactivate</span><span class="sxs-lookup"><span data-stu-id="e5645-236">An Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro</span></span></term>
              <description><span data-ttu-id="e5645-237">Nom du document sous forme de texte</span><span class="sxs-lookup"><span data-stu-id="e5645-237">The name of the document as text</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-238">Macro définie par l’une <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> ou <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> l’autre des propriétés</span><span class="sxs-lookup"><span data-stu-id="e5645-238">A macro set by either the <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> or <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> property</span></span></term>
              <description><span data-ttu-id="e5645-239">Nom de l’identificateur d’objet graphique ou référence de cellule (si applicable) auquel la macro s’applique</span><span class="sxs-lookup"><span data-stu-id="e5645-239">The name of the chart object identifier or cell reference (if applicable) to which the macro applies</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-240">Boîte de dialogue Macro (menu Outils), ou appelant non décrit plus haut</span><span class="sxs-lookup"><span data-stu-id="e5645-240">The Macro dialog box (Tools menu), or any caller not described above</span></span></term>
              <description><span data-ttu-id="e5645-241">Le #REF !</span><span class="sxs-lookup"><span data-stu-id="e5645-241">The #REF!</span></span> <span data-ttu-id="e5645-242">valeur d’erreur</span><span class="sxs-lookup"><span data-stu-id="e5645-242">error value</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPlaySounds">
      <MemberSignature Language="C#" Value="public bool CanPlaySounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPlaySounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanPlaySounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPlaySounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPlaySounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-243">Cette propriété ne doit pas être utilisée.</span><span class="sxs-lookup"><span data-stu-id="e5645-243">This property should not be used.</span></span> <span data-ttu-id="e5645-244">Les sons ont été supprimés de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-244">Sound notes have been removed from Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRecordSounds">
      <MemberSignature Language="C#" Value="public bool CanRecordSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRecordSounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanRecordSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRecordSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRecordSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-245">Cette propriété ne doit pas être utilisée.</span><span class="sxs-lookup"><span data-stu-id="e5645-245">This property should not be used.</span></span> <span data-ttu-id="e5645-246">Les sons ont été supprimés de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-246">Sound notes have been removed from Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-247">Nom qui apparaît dans la barre de titre de la fenêtre principale de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-247">The name that appears in the title bar of the main Microsoft Excel window.</span></span> <span data-ttu-id="e5645-248">Si vous ne définissez pas de nom ou si vous lui affectez la valeur <b>Empty</b>, cette propriété renvoie « Microsoft Excel ».</span><span class="sxs-lookup"><span data-stu-id="e5645-248">If you don't set a name, or if you set the name to <b>Empty</b>, this property returns "Microsoft Excel".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDragAndDrop">
      <MemberSignature Language="C#" Value="public bool CellDragAndDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CellDragAndDrop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CellDragAndDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property CellDragAndDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CellDragAndDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-249">Cette propriété a la valeur <b>True</b> si la technique Glisser-déplacer est activée pour les cellules.</span><span class="sxs-lookup"><span data-stu-id="e5645-249"><b>True</b> if dragging and dropping cells is enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-250">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente toutes les cellules de la feuille de calcul active.</span><span class="sxs-lookup"><span data-stu-id="e5645-250">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the active worksheet.</span></span> <span data-ttu-id="e5645-251">Si le document actif n’est pas une feuille de calcul, cette propriété échoue.</span><span class="sxs-lookup"><span data-stu-id="e5645-251">If the active document isn’t a worksheet, this property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-252">Étant donné que la propriété est la propriété par défaut de l’objet Range, vous pouvez spécifier l’index de ligne et de colonne immédiatement après le mot clé <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> <b>Cells.</b> <b></b></span><span class="sxs-lookup"><span data-stu-id="e5645-252">Because the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword.</span></span> <span data-ttu-id="e5645-253">Pour plus d’informations, voir la <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="e5645-253">For more information, see the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CentimetersToPoints">
      <MemberSignature Language="C#" Value="public double CentimetersToPoints (double Centimeters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CentimetersToPoints([in]float64 Centimeters) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CentimetersToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CentimetersToPoints (Centimeters As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CentimetersToPoints(double Centimeters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1086)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Centimeters" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Centimeters"><span data-ttu-id="e5645-254">Double <b>obligatoire</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-254">Required <b>Double</b>.</span></span> <span data-ttu-id="e5645-255">Spécifie la valeur en centimètres à convertir en points.</span><span class="sxs-lookup"><span data-stu-id="e5645-255">Specifies the centimeter value to be converted to points.</span></span></param>
        <summary><span data-ttu-id="e5645-256">Cette méthode convertit des centimètres en points (un point est égal à 0,035 centimètres).</span><span class="sxs-lookup"><span data-stu-id="e5645-256">Converts a measurement from centimeters to points (one point equals 0.035 centimeters).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-257"><b>La valeur True</b> entraîne l’utilisation du comportement de suivi des références de cellule pour tous les graphiques des documents nouvellement créés.</span><span class="sxs-lookup"><span data-stu-id="e5645-257"><b>True</b> will cause all charts in newly created documents to use the cell reference tracking behavior.</span></span> <span data-ttu-id="e5645-258"><b>Booléen</b> (booléen en C#).</span><span class="sxs-lookup"><span data-stu-id="e5645-258"><b>Boolean</b> (bool in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-259">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles de graphique dans le workbook actif.</span><span class="sxs-lookup"><span data-stu-id="e5645-259">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAbort">
      <MemberSignature Language="C#" Value="public void CheckAbort (object KeepAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckAbort([in]object KeepAbort) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckAbort(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckAbort (Optional KeepAbort As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="KeepAbort" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="KeepAbort"><span data-ttu-id="e5645-260">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-260">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-261">Permet d’effectuer un recalcul pour une <b>plage.</b></span><span class="sxs-lookup"><span data-stu-id="e5645-261">Allows recalculation to be performed for a <b>Range</b>.</span></span></param>
        <summary><span data-ttu-id="e5645-262">Cette méthode arrête le recalcul dans une application Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-262">Stops recalculation in a Microsoft Excel application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public bool CheckSpelling (string Word, object CustomDictionary, object IgnoreUppercase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSpelling([in]string Word, [in]object CustomDictionary, [in]object IgnoreUppercase) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckSpelling(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Word As String, Optional CustomDictionary As Object, Optional IgnoreUppercase As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Word" Type="System.String" />
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Word"><span data-ttu-id="e5645-263">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-263">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-264">Mot dont vous souhaitez vérifier l'orthographe.</span><span class="sxs-lookup"><span data-stu-id="e5645-264">The word you want to check.</span></span></param>
        <param name="CustomDictionary"><span data-ttu-id="e5645-265">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-265">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-266">Chaîne qui indique le nom de fichier du dictionnaire personnel à examiner si le mot est introuvable dans le dictionnaire principal.</span><span class="sxs-lookup"><span data-stu-id="e5645-266">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span></span> <span data-ttu-id="e5645-267">Si vous ne spécifiez pas cet argument, c'est le dictionnaire actuellement spécifié qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="e5645-267">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="IgnoreUppercase"><span data-ttu-id="e5645-268">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-268">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-269"><b>True</b> pour que Microsoft Excel ignore les mots en majuscules.</span><span class="sxs-lookup"><span data-stu-id="e5645-269"><b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span></span> <span data-ttu-id="e5645-270"><b>False</b> pour que Microsoft Excel vérifie l'orthographe des mots en majuscules.</span><span class="sxs-lookup"><span data-stu-id="e5645-270"><b>False</b> to have Microsoft Excel check words that are all uppercase.</span></span> <span data-ttu-id="e5645-271">Si cet argument est omis, ce sont les paramètres en vigueur qui sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="e5645-271">If this argument is omitted, the current setting will be used.</span></span></param>
        <summary><span data-ttu-id="e5645-272">Cette méthode vérifie l'orthographe d'un seul mot.</span><span class="sxs-lookup"><span data-stu-id="e5645-272">Checks the spelling of a single word.</span></span> <span data-ttu-id="e5645-273">Renvoie la valeur <b>True</b> si le mot est trouvé dans l’un des dictionnaires ; renvoie <b>False</b> si le mot est in found.</span><span class="sxs-lookup"><span data-stu-id="e5645-273">Returns <b>True</b> if the word is found in one of the dictionaries; returns <b>False</b> if the word isn't found.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipboardFormats">
      <MemberSignature Language="C#" Value="public object ClipboardFormats[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ClipboardFormats(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClipboardFormats(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipboardFormats(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ClipboardFormats[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e5645-274">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-274">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-275">Élément du tableau à renvoyer.</span><span class="sxs-lookup"><span data-stu-id="e5645-275">The array element to be returned.</span></span> <span data-ttu-id="e5645-276">Si vous ne spécifiez pas cet argument, la propriété renvoie le tableau entier de formats actuellement dans le Presse-papiers.</span><span class="sxs-lookup"><span data-stu-id="e5645-276">If this argument is omitted, the property returns the entire array of formats that are currently on the Clipboard.</span></span> <span data-ttu-id="e5645-277">Pour plus d'informations, voir la section Note.</span><span class="sxs-lookup"><span data-stu-id="e5645-277">For more information, see the Remarks section.</span></span></param>
        <summary><span data-ttu-id="e5645-278">Renvoie les formats actuellement présents dans le Presse-papiers sous la forme d’un tableau de valeurs numériques.</span><span class="sxs-lookup"><span data-stu-id="e5645-278">Returns the formats that are currently on the Clipboard as an array of numeric values.</span></span> <span data-ttu-id="e5645-279">Pour déterminer si un format particulier se trouve dans le Presse-papiers, comparez chaque élément contenu dans le tableau avec la constante appropriée répertoriée dans la section Note.</span><span class="sxs-lookup"><span data-stu-id="e5645-279">To determine whether a particular format is on the Clipboard, compare each element in the array with the appropriate constant listed in the Remarks section.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-280">Cette propriété renvoie un tableau de valeurs numériques.</span><span class="sxs-lookup"><span data-stu-id="e5645-280">This property returns an array of numeric values.</span></span> <span data-ttu-id="e5645-281">Pour déterminer si un format particulier se trouve dans le Presse-papiers, comparez chaque élément du tableau avec l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> constantes suivantes :</span><span class="sxs-lookup"><span data-stu-id="e5645-281">To determine whether a particular format is on the Clipboard, compare each element of the array with one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> constants:</span></span></para>
          <para><span data-ttu-id="e5645-282">
            <b>xlClipboardFormatBIFF</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-282">
            <b>xlClipboardFormatBIFF</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-283">
            <b>xlClipboardFormatBIFF2</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-283">
            <b>xlClipboardFormatBIFF2</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-284">
            <b>xlClipboardFormatBIFF3</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-284">
            <b>xlClipboardFormatBIFF3</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-285">
            <b>xlClipboardFormatBIFF4</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-285">
            <b>xlClipboardFormatBIFF4</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-286">
            <b>xlClipboardFormatBinary</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-286">
            <b>xlClipboardFormatBinary</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-287">
            <b>xlClipboardFormatBitmap</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-287">
            <b>xlClipboardFormatBitmap</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-288">
            <b>xlClipboardFormatCGM</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-288">
            <b>xlClipboardFormatCGM</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-289">
            <b>xlClipboardFormatCSV</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-289">
            <b>xlClipboardFormatCSV</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-290">
            <b>xlClipboardFormatDIF</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-290">
            <b>xlClipboardFormatDIF</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-291">
            <b>xlClipboardFormatDspText</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-291">
            <b>xlClipboardFormatDspText</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-292">
            <b>xlClipboardFormatEmbeddedObject</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-292">
            <b>xlClipboardFormatEmbeddedObject</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-293">
            <b>xlClipboardFormatEmbedSource</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-293">
            <b>xlClipboardFormatEmbedSource</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-294">
            <b>xlClipboardFormatLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-294">
            <b>xlClipboardFormatLink</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-295">
            <b>xlClipboardFormatLinkSource</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-295">
            <b>xlClipboardFormatLinkSource</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-296">
            <b>xlClipboardFormatLinkSourceDesc</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-296">
            <b>xlClipboardFormatLinkSourceDesc</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-297">
            <b>xlClipboardFormatMovie</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-297">
            <b>xlClipboardFormatMovie</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-298">
            <b>xlClipboardFormatNative</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-298">
            <b>xlClipboardFormatNative</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-299">
            <b>xlClipboardFormatObjectDesc</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-299">
            <b>xlClipboardFormatObjectDesc</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-300">
            <b>xlClipboardFormatObjectLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-300">
            <b>xlClipboardFormatObjectLink</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-301">
            <b>xlClipboardFormatOwnerLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-301">
            <b>xlClipboardFormatOwnerLink</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-302">
            <b>xlClipboardFormatPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-302">
            <b>xlClipboardFormatPICT</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-303">
            <b>xlClipboardFormatPrintPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-303">
            <b>xlClipboardFormatPrintPICT</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-304">
            <b>xlClipboardFormatRTF</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-304">
            <b>xlClipboardFormatRTF</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-305">
            <b>xlClipboardFormatScreenPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-305">
            <b>xlClipboardFormatScreenPICT</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-306">
            <b>xlClipboardFormatStandardFont</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-306">
            <b>xlClipboardFormatStandardFont</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-307">
            <b>xlClipboardFormatStandardScale</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-307">
            <b>xlClipboardFormatStandardScale</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-308">
            <b>xlClipboardFormatSYLK</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-308">
            <b>xlClipboardFormatSYLK</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-309">
            <b>xlClipboardFormatTable</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-309">
            <b>xlClipboardFormatTable</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-310">
            <b>xlClipboardFormatText</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-310">
            <b>xlClipboardFormatText</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-311">
            <b>xlClipboardFormatToolFace</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-311">
            <b>xlClipboardFormatToolFace</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-312">
            <b>xlClipboardFormatToolFacePICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-312">
            <b>xlClipboardFormatToolFacePICT</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-313">
            <b>xlClipboardFormatVALU</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-313">
            <b>xlClipboardFormatVALU</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-314">
            <b>xlClipboardFormatWK1</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-314">
            <b>xlClipboardFormatWK1</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterConnector">
      <MemberSignature Language="C#" Value="public string ClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterConnector As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterConnector { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-315">Obtient ou définit le nom du connecteur de cluster HPC (High Performance Computing) qui est utilisé pour exécuter des fonctions définies par l’utilisateur dans les modules de traitement des données XLL.</span><span class="sxs-lookup"><span data-stu-id="e5645-315">Gets or sets the name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span></span></summary>
        <value><span data-ttu-id="e5645-316">Nom du connecteur de cluster HPC (High Performance Computing) qui est utilisé pour exécuter des fonctions définies par l’utilisateur dans les modules de traitement des données XLL.</span><span class="sxs-lookup"><span data-stu-id="e5645-316">The name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-317">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-317">Read/write.</span></span></para>
          <para><span data-ttu-id="e5645-318">Le paramètre de la propriété correspond à la zone de détail Type de cluster sous Formules dans la catégorie Avancé de la boîte de dialogue <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> Options Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-318">The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property corresponds to the Cluster type drop-down box under Formulas in the Advanced category of the Excel Options dialog box.</span></span></para>
          <para><span data-ttu-id="e5645-319">
            <b>Remarque</b>: pour spécifier la propriété, vous devez installer un connecteur de <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> cluster HPC (High Performance Computing).</span><span class="sxs-lookup"><span data-stu-id="e5645-319">
            <b>Note</b>: To specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector.</span></span> <span data-ttu-id="e5645-320">Un connecteur de cluster vous permet d’exécuter à distance des fonctions XLL sécurisées pour le cluster sur un cluster HPC afin d’optimiser les performances.</span><span class="sxs-lookup"><span data-stu-id="e5645-320">A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</span></span></para>
          <para><span data-ttu-id="e5645-321">Avant de pouvoir spécifier la propriété, vous devez utiliser cette propriété pour permettre à <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> Microsoft Excel 2010 d’exécuter des fonctions définies par l’utilisateur dans des modules de gestion de fichiers <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> XLL.</span><span class="sxs-lookup"><span data-stu-id="e5645-321">Before you can specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property, you must use the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property to allow Microsoft Excel 2010 to run user-defined functions in XLL add-ins.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorButtons">
      <MemberSignature Language="C#" Value="public bool ColorButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColorButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ColorButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColorButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-322">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-322">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-323">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente toutes les colonnes de la feuille de calcul active.</span><span class="sxs-lookup"><span data-stu-id="e5645-323">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the active worksheet.</span></span> <span data-ttu-id="e5645-324">Si le document actif n'est pas une feuille de calcul, la propriété <b>Columns</b> échoue.</span><span class="sxs-lookup"><span data-stu-id="e5645-324">If the active document isn't a worksheet, the <b>Columns</b> property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMAddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.COMAddIns COMAddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.COMAddIns COMAddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.COMAddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property COMAddIns As COMAddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::COMAddIns ^ COMAddIns { Microsoft::Office::Core::COMAddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.COMAddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-325">Renvoie la collection pour Microsoft Excel, qui représente les compl?ments COM actuellement <see cref="T:Microsoft.Office.Core.COMAddIns" /> installés.</span><span class="sxs-lookup"><span data-stu-id="e5645-325">Returns the <see cref="T:Microsoft.Office.Core.COMAddIns" /> collection for Microsoft Excel, which represents the currently installed COM add-ins.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-326">Renvoie un <see cref="T:Microsoft.Office.Core.CommandBars" /> objet qui représente les barres de commandes Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-326">Returns a <see cref="T:Microsoft.Office.Core.CommandBars" /> object that represents the Excel command bars.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-327">Cette propriété renvoie l’ensemble des barres de commandes intégrées et personnalisées disponibles pour l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-327">This property returns the set of built-in and custom command bars available to the application.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandUnderlines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandUnderlines" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandUnderlines As XlCommandUnderlines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommandUnderlines CommandUnderlines { Microsoft::Office::Interop::Excel::XlCommandUnderlines get(); void set(Microsoft::Office::Interop::Excel::XlCommandUnderlines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommandUnderlines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-328">Cette propriété renvoie ou définit l'état des commandes soulignées dans Microsoft Excel pour Macintosh.</span><span class="sxs-lookup"><span data-stu-id="e5645-328">Returns or sets the state of the command underlines in Microsoft Excel for the Macintosh.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-329">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" /> peut être l’une de ces <b>constantes XlCommandUnderlines</b> :</span><span class="sxs-lookup"><span data-stu-id="e5645-329">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" /> can be one of these <b>XlCommandUnderlines</b> constants:</span></span></para>
          <para><span data-ttu-id="e5645-330">
            <b>xlCommandUnderlinesOn</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-330">
            <b>xlCommandUnderlinesOn</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-331">
            <b>xlCommandUnderlinesOff</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-331">
            <b>xlCommandUnderlinesOff</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-332">
            <b>xlCommandUnderlinesAutomatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-332">
            <b>xlCommandUnderlinesAutomatic</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-333">Dans Microsoft Excel pour Windows, la lecture de cette propriété renvoie toujours la valeur <b>xlCommandUnderlinesOn</b>. Une erreur se produit si cette propriété se voit affecter toute autre valeur que <b>xlCommandUnderlinesOn</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-333">In Microsoft Excel for Windows, reading this property always returns <b>xlCommandUnderlinesOn</b>, and setting this property to anything other than <b>xlCommandUnderlinesOn</b> is an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstrainNumeric">
      <MemberSignature Language="C#" Value="public bool ConstrainNumeric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstrainNumeric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ConstrainNumeric" />
      <MemberSignature Language="VB.NET" Value="Public Property ConstrainNumeric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstrainNumeric { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-334">Cette propriété a la valeur <b>True</b> si la reconnaissance de l'écriture manuscrite est limitée aux nombres et à la ponctuation.</span><span class="sxs-lookup"><span data-stu-id="e5645-334"><b>True</b> if handwriting recognition is limited to numbers and punctuation only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-p145">Cette propriété est disponible uniquement si vous utilisez Microsoft Windows pour Pen Computing. Si vous essayez de définir cette propriété sous tout autre système d'exploitation, une erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="e5645-p145">This property is available only if you're using Microsoft Windows for Pen Computing. If you try to set this property under any other operating system, an error occurs.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlCharacters">
      <MemberSignature Language="C#" Value="public bool ControlCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ControlCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-337">Cette propriété a la valeur <b>True</b> si Microsoft Excel affiche des caractères de contrôle pour des langages de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="e5645-337"><b>True</b> if Microsoft Excel displays control characters for right-to-left languages.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-338">Cette propriété ne peut être définie que lorsque la prise en charge des langages de droite à gauche a été installée et sélectionnée.</span><span class="sxs-lookup"><span data-stu-id="e5645-338">This property can be set only when right to left language support has been installed and selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFormula">
      <MemberSignature Language="C#" Value="public object ConvertFormula (object Formula, Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, object ToReferenceStyle, object ToAbsolute, object RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFormula([in]object Formula, [in]valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, [in]object ToReferenceStyle, [in]object ToAbsolute, [in]object RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFormula (Formula As Object, FromReferenceStyle As XlReferenceStyle, Optional ToReferenceStyle As Object, Optional ToAbsolute As Object, Optional RelativeTo As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="FromReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="ToReferenceStyle" Type="System.Object" />
        <Parameter Name="ToAbsolute" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Formula"><span data-ttu-id="e5645-339">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-339">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-340">Chaîne <b>qui</b> contient la formule que vous souhaitez convertir.</span><span class="sxs-lookup"><span data-stu-id="e5645-340">A <b>String</b> that contains the formula you want to convert.</span></span> <span data-ttu-id="e5645-341">Il doit s'agir d'une formule valide et elle doit commencer par un signe égal.</span><span class="sxs-lookup"><span data-stu-id="e5645-341">This must be a valid formula, and it must begin with an equal sign.</span></span></param>
        <param name="FromReferenceStyle"><span data-ttu-id="e5645-342">Obligatoire <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-342">Required <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="e5645-343">Style de référence de la formule. <b>XlReferenceStyle peut</b> être l’une de ces <b>constantes XlReferenceStyle</b> :<b>xlA1</b><b>xlR1C1</b></span><span class="sxs-lookup"><span data-stu-id="e5645-343">The reference style of the formula.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlA1</b><b>xlR1C1</b></span></span></param>
        <param name="ToReferenceStyle"><span data-ttu-id="e5645-344">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-344">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="e5645-345">Style de référence à retourner.</span><span class="sxs-lookup"><span data-stu-id="e5645-345">The reference style you want returned.</span></span> <span data-ttu-id="e5645-346">Si cet argument est omis, le style de référence n’est pas modifié . la formule reste dans le style spécifié par <paramref name="FromReferenceStyle" /> . XlReferenceStyle peut être l’une de ces constantes XlReferenceStyle.</span><span class="sxs-lookup"><span data-stu-id="e5645-346">If this argument is omitted, the reference style isn't changed; the formula stays in the style specified by <paramref name="FromReferenceStyle" />.XlReferenceStyle can be one of these XlReferenceStyle constants.</span></span> <span data-ttu-id="e5645-347"><b>xlA1 </b> <b>xlR1C1</b></span><span class="sxs-lookup"><span data-stu-id="e5645-347"><b>xlA1 </b><b>xlR1C1</b></span></span></param>
        <param name="ToAbsolute"><span data-ttu-id="e5645-348">Facultatif <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-348">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="e5645-349">Spécifie le type de référence convertie.</span><span class="sxs-lookup"><span data-stu-id="e5645-349">Specifies the converted reference type.</span></span> <span data-ttu-id="e5645-350">Si cet argument est omis, le type de référence n’est pas modifié. <b>XlReferenceStyle</b> peut être l’une de ces constantes <b>XlReferenceStyle</b> :<b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span><span class="sxs-lookup"><span data-stu-id="e5645-350">If this argument is omitted, the reference type isn't changed.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span></span></param>
        <param name="RelativeTo"><span data-ttu-id="e5645-351">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-351">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-352">Argument de type <b>Variant</b> facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5645-352">Optional <b>Variant</b>.</span></span> <span data-ttu-id="e5645-353">Objet <see cref="T:Microsoft.Office.Interop.Excel.Range" /> qui contient une cellule.</span><span class="sxs-lookup"><span data-stu-id="e5645-353">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that contains one cell.</span></span> <span data-ttu-id="e5645-354">Les références relatives se rapportent à cette cellule.</span><span class="sxs-lookup"><span data-stu-id="e5645-354">Relative references relate to this cell.</span></span></param>
        <summary><span data-ttu-id="e5645-355">Cette méthode effectue la conversion des références de cellules dans une formule entre les styles de référence A1 et R1C1, entre les références relatives et absolues ou les deux.</span><span class="sxs-lookup"><span data-stu-id="e5645-355">Converts cell references in a formula between the A1 and R1C1 reference styles, between relative and absolute references, or both.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyObjectsWithCells">
      <MemberSignature Language="C#" Value="public bool CopyObjectsWithCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CopyObjectsWithCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CopyObjectsWithCells" />
      <MemberSignature Language="VB.NET" Value="Public Property CopyObjectsWithCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CopyObjectsWithCells { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-356">Cette propriété a la valeur <b>True</b> si les objets sont coupés, copiés, extraits et triés avec les cellules.</span><span class="sxs-lookup"><span data-stu-id="e5645-356"><b>True</b> if objects are cut, copied, extracted, and sorted with cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-357">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span><span class="sxs-lookup"><span data-stu-id="e5645-357">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="e5645-358">Si l'objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, qui équivaut au nombre hexadécimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="e5645-358">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-359">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, dans lequel chaque application possède un code de créateur à quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="e5645-359">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="e5645-360">Par exemple, Microsoft Excel possède le code de créateur XCEL.</span><span class="sxs-lookup"><span data-stu-id="e5645-360">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMousePointer Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMousePointer Cursor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As XlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMousePointer Cursor { Microsoft::Office::Interop::Excel::XlMousePointer get(); void set(Microsoft::Office::Interop::Excel::XlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-361">Cette propriété renvoie ou définit l'apparence du pointeur de la souris dans Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-361">Returns or sets the appearance of the mouse pointer in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-362">
            <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" /> peut être l’une de ces <b>constantes XlMousePointer</b> :</span><span class="sxs-lookup"><span data-stu-id="e5645-362">
            <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" /> can be one of these <b>XlMousePointer</b> constants:</span></span></para>
          <para><span data-ttu-id="e5645-363">
            <b>xlDefault</b> Pointeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="e5645-363">
            <b>xlDefault</b> The default pointer.</span></span></para>
          <para><span data-ttu-id="e5645-364">
            <b>xlIBeam</b> Pointeur en I.</span><span class="sxs-lookup"><span data-stu-id="e5645-364">
            <b>xlIBeam</b> The I-beam pointer.</span></span></para>
          <para><span data-ttu-id="e5645-365">
            <b>xlNorthwestArrow</b> Pointeur de flèche nord-ouest.</span><span class="sxs-lookup"><span data-stu-id="e5645-365">
            <b>xlNorthwestArrow</b> The northwest arrow pointer.</span></span></para>
          <para><span data-ttu-id="e5645-366">
            <b>xlWait</b> Sablier.</span><span class="sxs-lookup"><span data-stu-id="e5645-366">
            <b>xlWait</b> The hourglass pointer.</span></span></para>
          <para><span data-ttu-id="e5645-367">La propriété <b>Cursor</b> n’est pas réinitialisée automatiquement lorsque l’exécution de la macro est interrompue.</span><span class="sxs-lookup"><span data-stu-id="e5645-367">The <b>Cursor</b> property isn't reset automatically when the macro stops running.</span></span> <span data-ttu-id="e5645-368">Réinitialisez le pointeur à la valeur <b>xlDefault</b> avant que l’exécution de la macro soit interrompue.</span><span class="sxs-lookup"><span data-stu-id="e5645-368">You should reset the pointer to <b>xlDefault</b> before your macro stops running.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorMovement">
      <MemberSignature Language="C#" Value="public int CursorMovement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CursorMovement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CursorMovement" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorMovement As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CursorMovement { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-369">Cette propriété renvoie ou définit une valeur qui indique si un curseur visuel ou logique est utilisé.</span><span class="sxs-lookup"><span data-stu-id="e5645-369">Returns or sets a value that indicates whether a visual cursor or a logical cursor is used.</span></span> <span data-ttu-id="e5645-370">Il peut s'agir de l'une des constantes suivantes : <b>xlVisualCursor</b> ou <b>xlLogicalCursor</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-370">Can be one of the following constants: <b>xlVisualCursor</b> or <b>xlLogicalCursor</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-371">Certaines de ces constantes ne seront peut-être pas disponibles, en fonction de la langue sélectionnée ou installée (par exemple, le français).</span><span class="sxs-lookup"><span data-stu-id="e5645-371">These constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomListCount">
      <MemberSignature Language="C#" Value="public int CustomListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CustomListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CustomListCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-372">Cette propriété renvoie le nombre de listes personnalisées définies (y compris les listes prédéfinies).</span><span class="sxs-lookup"><span data-stu-id="e5645-372">Returns the number of defined custom lists (including built-in lists).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CutCopyMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CutCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CutCopyMode As XlCutCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCutCopyMode CutCopyMode { Microsoft::Office::Interop::Excel::XlCutCopyMode get(); void set(Microsoft::Office::Interop::Excel::XlCutCopyMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCutCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-373">Cette propriété renvoie ou définit l'état du mode Couper ou Copier.</span><span class="sxs-lookup"><span data-stu-id="e5645-373">Returns or sets the status of Cut or Copy mode.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-374">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" />peut être l’une de <b>ces constantes XlCutCopyMode.</b></span><span class="sxs-lookup"><span data-stu-id="e5645-374">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" /> can be one of these <b>XlCutCopyMode</b> constants.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-375">
                <b>False</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-375">
                <b>False</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-376">Pas en mode Couper ou Copier</span><span class="sxs-lookup"><span data-stu-id="e5645-376">Not in Cut or Copy mode</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-377">
                <b>xlCopy</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-377">
                <b>xlCopy</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-378">Mode de copie</span><span class="sxs-lookup"><span data-stu-id="e5645-378">In Copy mode</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-379">
                <b>xlCut</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-379">
                <b>xlCut</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-380">Mode de coupe</span><span class="sxs-lookup"><span data-stu-id="e5645-380">In Cut mode</span></span></description>
            </item>
          </list>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-381">
                <b>False</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-381">
                <b>False</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-382">Annule le mode Couper ou Copier et supprime la marque de sélection.</span><span class="sxs-lookup"><span data-stu-id="e5645-382">Cancels Cut or Copy mode and removes the moving border.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-383">
                <b>True</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-383">
                <b>True</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-384">Annule le mode Couper ou Copier et supprime la marque de sélection.</span><span class="sxs-lookup"><span data-stu-id="e5645-384">Cancels Cut or Copy mode and removes the moving border.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataEntryMode">
      <MemberSignature Language="C#" Value="public int DataEntryMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataEntryMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DataEntryMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataEntryMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataEntryMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-385">Renvoie ou définit le mode d’entrée de données, comme indiqué dans le tableau ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="e5645-385">Returns or sets Data Entry mode, as shown in the table below.</span></span> <span data-ttu-id="e5645-386">Ce mode, quand il est activé, vous permet d'entrer des données uniquement dans les cellules non verrouillées de la plage actuellement sélectionnée.</span><span class="sxs-lookup"><span data-stu-id="e5645-386">When in Data Entry mode, you can enter data only in the unlocked cells in the currently selected range.</span></span></summary>
        <value>To be added.</value>
        <remarks><list type="table">
            <item>
              <term><span data-ttu-id="e5645-387">
                <b>xlOn</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-387">
                <b>xlOn</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-388">Mode saisie de donnée activé.</span><span class="sxs-lookup"><span data-stu-id="e5645-388">Data Entry mode is turned on.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-389">
                <b>xlOff</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-389">
                <b>xlOff</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-390">Mode saisie de donnée désactivé.</span><span class="sxs-lookup"><span data-stu-id="e5645-390">Data Entry mode is turned off.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-391">
                <b>xlStrict</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-391">
                <b>xlStrict</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-392">Le mode Entrée de données est allumé et le fait d’appuyer sur ÉCHAP ne le désactivera pas.</span><span class="sxs-lookup"><span data-stu-id="e5645-392">Data Entry mode is turned on and pressing ESC won't turn it off.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEAppReturnCode">
      <MemberSignature Language="C#" Value="public int DDEAppReturnCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DDEAppReturnCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DDEAppReturnCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DDEAppReturnCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DDEAppReturnCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-393">Renvoie le code de retour DDE propre à l’application qui était contenu dans le dernier message d’accusé de réception DDE reçu par Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-393">Returns the application-specific DDE return code that was contained in the last DDE acknowledge message received by Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEExecute">
      <MemberSignature Language="C#" Value="public void DDEExecute (int Channel, string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEExecute([in]int32 Channel, [in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEExecute(System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEExecute(int Channel, System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(333)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="e5645-394">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-394">Required <b>Integer</b>.</span></span> <span data-ttu-id="e5645-395">Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</span><span class="sxs-lookup"><span data-stu-id="e5645-395">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="String"><span data-ttu-id="e5645-396">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-396">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-397">Message défini dans l'application réceptrice.</span><span class="sxs-lookup"><span data-stu-id="e5645-397">The message defined in the receiving application.</span></span></param>
        <summary><span data-ttu-id="e5645-398">Cette méthode exécute une commande ou d'autres actions dans une autre application, par l'entremise du canal DDE spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5645-398">Runs a command or performs some other action or actions in another application by way of the specified DDE channel.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-399">La méthode <b>DDEExecute</b> est conçue pour envoyer des commandes à une autre application.</span><span class="sxs-lookup"><span data-stu-id="e5645-399">The <b>DDEExecute</b> method is designed to send commands to another application.</span></span> <span data-ttu-id="e5645-400">Vous pouvez également l’utiliser pour envoyer des frappes de touches à une autre application, bien que la méthode soit la méthode préférée pour envoyer <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> des frappes de touches.</span><span class="sxs-lookup"><span data-stu-id="e5645-400">You can also use it to send keystrokes to another application, although the <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> method is the preferred way to send keystrokes.</span></span> <span data-ttu-id="e5645-401">L’argument peut spécifier n’importe quelle touche unique combinée <paramref name="String" /> avec ALT, Ctrl ou SHIFT, ou toute combinaison de ces touches.</span><span class="sxs-lookup"><span data-stu-id="e5645-401">The <paramref name="String" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of those keys.</span></span> <span data-ttu-id="e5645-402">Chaque touche est représentée par un ou plusieurs caractères, tels que « a » pour la lettre a ou « {ENTER} » pour la touche ENTRÉE.</span><span class="sxs-lookup"><span data-stu-id="e5645-402">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="e5645-p159">Pour spécifier des caractères non affichés lorsque vous appuyez sur la touche correspondante (par exemple ENTER ou TAB), utilisez les codes listés dans la table suivante. Chaque code de la table représente une touche du clavier.</span><span class="sxs-lookup"><span data-stu-id="e5645-p159">To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-405">Retour arrière</span><span class="sxs-lookup"><span data-stu-id="e5645-405">BACKSPACE</span></span></term>
              <description><span data-ttu-id="e5645-406">{BACKSPACE} ou {BS}</span><span class="sxs-lookup"><span data-stu-id="e5645-406">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-407">Attn</span><span class="sxs-lookup"><span data-stu-id="e5645-407">BREAK</span></span></term>
              <description><span data-ttu-id="e5645-408">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="e5645-408">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-409">Verr. maj</span><span class="sxs-lookup"><span data-stu-id="e5645-409">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="e5645-410">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="e5645-410">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-411">EFFACER</span><span class="sxs-lookup"><span data-stu-id="e5645-411">CLEAR</span></span></term>
              <description><span data-ttu-id="e5645-412">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="e5645-412">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-413">SUPPRIMER ou Suppr</span><span class="sxs-lookup"><span data-stu-id="e5645-413">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="e5645-414">{DELETE} ou {DEL}</span><span class="sxs-lookup"><span data-stu-id="e5645-414">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-415">Bas</span><span class="sxs-lookup"><span data-stu-id="e5645-415">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="e5645-416">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="e5645-416">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-417">Fin</span><span class="sxs-lookup"><span data-stu-id="e5645-417">END</span></span></term>
              <description><span data-ttu-id="e5645-418">{END}</span><span class="sxs-lookup"><span data-stu-id="e5645-418">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-419">Entrée</span><span class="sxs-lookup"><span data-stu-id="e5645-419">ENTER</span></span></term>
              <description><span data-ttu-id="e5645-420">~ (tilde)</span><span class="sxs-lookup"><span data-stu-id="e5645-420">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-421">Entrée (pavé numérique)</span><span class="sxs-lookup"><span data-stu-id="e5645-421">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="e5645-422">{Enter}</span><span class="sxs-lookup"><span data-stu-id="e5645-422">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-423">Échap</span><span class="sxs-lookup"><span data-stu-id="e5645-423">ESC</span></span></term>
              <description><span data-ttu-id="e5645-424">{ESCAPE} ou {ESC}</span><span class="sxs-lookup"><span data-stu-id="e5645-424">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-425">F1 à F15</span><span class="sxs-lookup"><span data-stu-id="e5645-425">F1 through F15</span></span></term>
              <description><span data-ttu-id="e5645-426">{F1} à {F15}</span><span class="sxs-lookup"><span data-stu-id="e5645-426">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-427">Aide</span><span class="sxs-lookup"><span data-stu-id="e5645-427">HELP</span></span></term>
              <description><span data-ttu-id="e5645-428">{HELP}</span><span class="sxs-lookup"><span data-stu-id="e5645-428">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-429">Début</span><span class="sxs-lookup"><span data-stu-id="e5645-429">HOME</span></span></term>
              <description><span data-ttu-id="e5645-430">{HOME}</span><span class="sxs-lookup"><span data-stu-id="e5645-430">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-431">Inser</span><span class="sxs-lookup"><span data-stu-id="e5645-431">INS</span></span></term>
              <description><span data-ttu-id="e5645-432">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="e5645-432">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-433">Gauche</span><span class="sxs-lookup"><span data-stu-id="e5645-433">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="e5645-434">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="e5645-434">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-435">Verr. num</span><span class="sxs-lookup"><span data-stu-id="e5645-435">NUM LOCK</span></span></term>
              <description><span data-ttu-id="e5645-436">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="e5645-436">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-437">Pg. suiv</span><span class="sxs-lookup"><span data-stu-id="e5645-437">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="e5645-438">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="e5645-438">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-439">Pg. préc</span><span class="sxs-lookup"><span data-stu-id="e5645-439">PAGE UP</span></span></term>
              <description><span data-ttu-id="e5645-440">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="e5645-440">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-441">RETOUR</span><span class="sxs-lookup"><span data-stu-id="e5645-441">RETURN</span></span></term>
              <description><span data-ttu-id="e5645-442">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="e5645-442">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-443">Droite</span><span class="sxs-lookup"><span data-stu-id="e5645-443">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="e5645-444">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="e5645-444">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-445">Arrêt défil</span><span class="sxs-lookup"><span data-stu-id="e5645-445">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="e5645-446">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="e5645-446">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-447">Tab</span><span class="sxs-lookup"><span data-stu-id="e5645-447">TAB</span></span></term>
              <description><span data-ttu-id="e5645-448">{TAB}</span><span class="sxs-lookup"><span data-stu-id="e5645-448">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-449">Haut</span><span class="sxs-lookup"><span data-stu-id="e5645-449">UP ARROW</span></span></term>
              <description><span data-ttu-id="e5645-450">{UP}</span><span class="sxs-lookup"><span data-stu-id="e5645-450">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-p160">Vous pouvez également spécifier des touches combinées avec MAJ et/ou CTRL et/ou ALT. Pour spécifier une touche combinée avec une ou plusieurs de ces touches, consultez le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="e5645-p160">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with one or more of the keys just mentioned, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-453">MAJ</span><span class="sxs-lookup"><span data-stu-id="e5645-453">SHIFT</span></span></term>
              <description><span data-ttu-id="e5645-454">+ (signe plus)</span><span class="sxs-lookup"><span data-stu-id="e5645-454">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-455">Ctrl</span><span class="sxs-lookup"><span data-stu-id="e5645-455">CTRL</span></span></term>
              <description><span data-ttu-id="e5645-456">^ (attention)</span><span class="sxs-lookup"><span data-stu-id="e5645-456">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-457">ALT</span><span class="sxs-lookup"><span data-stu-id="e5645-457">ALT</span></span></term>
              <description><span data-ttu-id="e5645-458">% (signe de pourcentage)</span><span class="sxs-lookup"><span data-stu-id="e5645-458">% (percent sign)</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEInitiate">
      <MemberSignature Language="C#" Value="public int DDEInitiate (string App, string Topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DDEInitiate([in]string App, [in]string Topic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDEInitiate (App As String, Topic As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DDEInitiate(System::String ^ App, System::String ^ Topic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="App" Type="System.String" />
        <Parameter Name="Topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="App"><span data-ttu-id="e5645-459">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-459">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-460">Nom de l'application.</span><span class="sxs-lookup"><span data-stu-id="e5645-460">The application name.</span></span></param>
        <param name="Topic"><span data-ttu-id="e5645-461">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-461">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-462">Décrit quelque chose dans l'application vers laquelle vous ouvrez un canal. Il s'agit généralement d'un document de cette application.</span><span class="sxs-lookup"><span data-stu-id="e5645-462">Describes something in the application to which you're opening a channel — usually a document of that application.</span></span></param>
        <summary><span data-ttu-id="e5645-463">Cette méthode ouvre un canal DDE vers une application.</span><span class="sxs-lookup"><span data-stu-id="e5645-463">Opens a DDE channel to an application.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e5645-464">Si son exécution réussit, la méthode <b>DDEInitiate</b> renvoie le numéro du canal ouvert.</span><span class="sxs-lookup"><span data-stu-id="e5645-464">If successful, the <b>DDEInitiate</b> method returns the number of the open channel.</span></span> <span data-ttu-id="e5645-465">Toutes les fonctions DDE ultérieures utilisent ce numéro pour spécifier le canal d'échange.</span><span class="sxs-lookup"><span data-stu-id="e5645-465">All subsequent DDE functions use this number to specify the channel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEPoke">
      <MemberSignature Language="C#" Value="public void DDEPoke (int Channel, object Item, object Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEPoke([in]int32 Channel, [in]object Item, [in]object Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEPoke(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDEPoke (Channel As Integer, Item As Object, Data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEPoke(int Channel, System::Object ^ Item, System::Object ^ Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="e5645-466">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-466">Required <b>Integer</b>.</span></span> <span data-ttu-id="e5645-467">Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</span><span class="sxs-lookup"><span data-stu-id="e5645-467">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="Item"><span data-ttu-id="e5645-468">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-468">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-469">Élément vers lequel les données doivent être envoyées.</span><span class="sxs-lookup"><span data-stu-id="e5645-469">The item to which the data is to be sent.</span></span></param>
        <param name="Data"><span data-ttu-id="e5645-470">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-470">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-471">Données à envoyer à l'application.</span><span class="sxs-lookup"><span data-stu-id="e5645-471">The data to be sent to the application.</span></span></param>
        <summary><span data-ttu-id="e5645-472">Cette méthode envoie des données à une application.</span><span class="sxs-lookup"><span data-stu-id="e5645-472">Sends data to an application.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-473">L'échec de l'appel de la méthode engendre une erreur.</span><span class="sxs-lookup"><span data-stu-id="e5645-473">An error occurs if the method call doesn't succeed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDERequest">
      <MemberSignature Language="C#" Value="public object DDERequest (int Channel, string Item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DDERequest([in]int32 Channel, [in]string Item) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDERequest(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDERequest (Channel As Integer, Item As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DDERequest(int Channel, System::String ^ Item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="e5645-474">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-474">Required <b>Integer</b>.</span></span> <span data-ttu-id="e5645-475">Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</span><span class="sxs-lookup"><span data-stu-id="e5645-475">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="Item"><span data-ttu-id="e5645-476">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-476">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-477">Élément à requérir.</span><span class="sxs-lookup"><span data-stu-id="e5645-477">The item to be requested.</span></span></param>
        <summary><span data-ttu-id="e5645-478">Cette méthode demande des informations à l'application spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e5645-478">Requests information from the specified application.</span></span> <span data-ttu-id="e5645-479">Cette méthode renvoie toujours un tableau.</span><span class="sxs-lookup"><span data-stu-id="e5645-479">This method always returns an array.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDETerminate">
      <MemberSignature Language="C#" Value="public void DDETerminate (int Channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDETerminate([in]int32 Channel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDETerminate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDETerminate (Channel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDETerminate(int Channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="e5645-480">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-480">Required <b>Integer</b>.</span></span> <span data-ttu-id="e5645-481">Numéro de canal renvoyé par la <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> méthode.</span><span class="sxs-lookup"><span data-stu-id="e5645-481">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <summary><span data-ttu-id="e5645-482">Cette méthode ferme un canal vers une autre application.</span><span class="sxs-lookup"><span data-stu-id="e5645-482">Closes a channel to another application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalSeparator">
      <MemberSignature Language="C#" Value="public string DecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-483">Cette propriété renvoie ou définit le caractère utilisé en tant que séparateur décimal comme un objet de type <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-483">Sets or returns the character used for the decimal separator as a <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFilePath">
      <MemberSignature Language="C#" Value="public string DefaultFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-484">Cette propriété renvoie ou définit le chemin par défaut utilisé par Microsoft Excel à l'ouverture des fichiers.</span><span class="sxs-lookup"><span data-stu-id="e5645-484">Returns or sets the default path that Microsoft Excel uses when it opens files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSaveFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSaveFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSaveFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat DefaultSaveFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); void set(Microsoft::Office::Interop::Excel::XlFileFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-485">Cette propriété renvoie ou définit le format d'enregistrement par défaut des fichiers.</span><span class="sxs-lookup"><span data-stu-id="e5645-485">Returns or sets the default format for saving files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSheetDirection">
      <MemberSignature Language="C#" Value="public int DefaultSheetDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSheetDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSheetDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSheetDirection As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSheetDirection { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-486">Cette propriété renvoie ou définit le sens par défaut dans lequel Microsoft Excel affiche de nouvelles fenêtres et de nouvelles feuilles de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5645-486">Returns or sets the default direction in which Microsoft Excel displays new windows and worksheets.</span></span> <span data-ttu-id="e5645-487">Il peut s'agir de l'une des constantes suivantes : <b>xlRTL</b> (de droite à gauche) ou <b>xlLTR</b> (de gauche à droite).</span><span class="sxs-lookup"><span data-stu-id="e5645-487">Can be one of the following constants: <b>xlRTL</b> (right to left) or <b>xlLTR</b> (left to right).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-488">Certaines de ces constantes ne seront peut-être pas disponibles, en fonction de la langue sélectionnée ou installée (par exemple, le français).</span><span class="sxs-lookup"><span data-stu-id="e5645-488">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultWebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultWebOptions As DefaultWebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DefaultWebOptions ^ DefaultWebOptions { Microsoft::Office::Interop::Excel::DefaultWebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DefaultWebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-489">Renvoie l’objet qui contient les attributs globaux de niveau application utilisés par Microsoft Excel chaque fois que vous enregistrez un document en tant que page Web ou que <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> vous ouvrez une page Web.</span><span class="sxs-lookup"><span data-stu-id="e5645-489">Returns the <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> object that contains global application-level attributes used by Microsoft Excel whenever you save a document as a Web page or open a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferAsyncQueries">
      <MemberSignature Language="C#" Value="public bool DeferAsyncQueries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferAsyncQueries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DeferAsyncQueries" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferAsyncQueries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferAsyncQueries { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-490">Récupère ou définit si des requêtes asynchrones sont exécutées sur des sources de données OLAP lorsqu'une feuille de calcul est calculée par du code VBA.</span><span class="sxs-lookup"><span data-stu-id="e5645-490">Gets or sets whether asychronous queries to OLAP data sources are executed when a worksheet is calculated by VBA code.</span></span> <span data-ttu-id="e5645-491">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-491">Read/write.</span></span></summary>
        <value><span data-ttu-id="e5645-492"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e5645-492"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="e5645-493">La définition <b>de la propriété DeferAsyncQueries</b> sur <b>True</b> empêche l’exécution des requêtes asynchrones tant que la méthode <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> n’est pas appelée.</span><span class="sxs-lookup"><span data-stu-id="e5645-493">Setting the <b>DeferAsyncQueries</b> property to <b>True</b> prevents any asynchronous queries form executing until the <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> method is called.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteChartAutoFormat">
      <MemberSignature Language="C#" Value="public void DeleteChartAutoFormat (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteChartAutoFormat([in]string Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteChartAutoFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteChartAutoFormat (Name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteChartAutoFormat(System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="e5645-494">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-494">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-495">Le nom de la mise en forme personnalisée à supprimer.</span><span class="sxs-lookup"><span data-stu-id="e5645-495">The name of the custom autoformat to be removed.</span></span></param>
        <summary><span data-ttu-id="e5645-496">Supprime de la liste des formats automatiques de graphique disponibles une mise en forme automatique de graphique personnalisée.</span><span class="sxs-lookup"><span data-stu-id="e5645-496">Removes a custom chart autoformat from the list of available chart autoformats.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCustomList">
      <MemberSignature Language="C#" Value="public void DeleteCustomList (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteCustomList([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteCustomList(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteCustomList (ListNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteCustomList(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum"><span data-ttu-id="e5645-497">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-497">Required <b>Integer</b>.</span></span> <span data-ttu-id="e5645-498">Numéro de la liste personnalisée.</span><span class="sxs-lookup"><span data-stu-id="e5645-498">The custom list number.</span></span> <span data-ttu-id="e5645-499">Ce numéro doit être supérieur ou égal à cinq (Microsoft Excel est fourni avec quatre listes personnalisées intégrées qui ne peuvent pas être supprimées).</span><span class="sxs-lookup"><span data-stu-id="e5645-499">This number must be greater than or equal to 5 (Microsoft Excel has four built-in custom lists that cannot be deleted).</span></span></param>
        <summary><span data-ttu-id="e5645-500">Cette méthode supprime une liste personnalisée.</span><span class="sxs-lookup"><span data-stu-id="e5645-500">Deletes a custom list.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-501">Cette méthode génère une erreur si le numéro de liste est inférieur à cinq ou s'il n'existe pas de liste personnalisée correspondant au numéro spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5645-501">This method generates an error if the list number is less than 5 or if there's no matching custom list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dialogs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Dialogs Dialogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Dialogs Dialogs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dialogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dialogs As Dialogs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Dialogs ^ Dialogs { Microsoft::Office::Interop::Excel::Dialogs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Dialogs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-502">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> collection qui représente toutes les boîtes de dialogue intégrées.</span><span class="sxs-lookup"><span data-stu-id="e5645-502">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> collection that represents all built-in dialog boxes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-503">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-503">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAlerts">
      <MemberSignature Language="C#" Value="public bool DisplayAlerts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAlerts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAlerts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAlerts { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-504"><b>True</b> si Microsoft Excel affiche des alertes et messages lors de l'exécution d'une macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-504"><b>True</b> if Microsoft Excel displays certain alerts and messages while a macro is running.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-505">La valeur par défaut est <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-505">The default value is <b>True</b>.</span></span> <span data-ttu-id="e5645-506">Définissez cette propriété sur <b>False</b> si vous ne voulez pas être déranger par les invites et les messages d’alerte pendant l’exécution d’un programme . Chaque fois qu’un message nécessite une réponse, Microsoft Excel choisit la réponse par défaut.</span><span class="sxs-lookup"><span data-stu-id="e5645-506">Set this property to <b>False</b> if you don’t want to be disturbed by prompts and alert messages while a program is running; any time a message requires a response, Microsoft Excel chooses the default response.</span></span></para>
          <para><span data-ttu-id="e5645-507">Si vous définissez cette propriété sur <b>False,</b>Microsoft Excel définit cette propriété sur <b>True</b> lorsque le code est terminé, sauf si vous exécutez du code entre processus.</span><span class="sxs-lookup"><span data-stu-id="e5645-507">If you set this property to <b>False</b>, Microsoft Excel sets this property to <b>True</b> when the code is finished, unless you are running cross process code.</span></span></para>
          <para><span data-ttu-id="e5645-508">Lorsque vous utilisez la méthode utilisée pour les classeur pour réécrire un fichier existant, l’alerte « Overwrite » a la valeur par défaut « Non » alors que la réponse « Oui » est sélectionnée par Excel lorsque la propriété <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <b>DisplayAlerts</b> a la valeur <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-508">When using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method for workbooks to overwrite an existing file, the 'Overwrite' alert has a default of 'No', while the 'Yes' response is selected by Excel when the <b>DisplayAlerts</b> property is set to <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayClipboardWindow">
      <MemberSignature Language="C#" Value="public bool DisplayClipboardWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayClipboardWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayClipboardWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayClipboardWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayClipboardWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-509">Cette propriété renvoie la valeur <b>True</b> si le Presse-papiers de Microsoft Office peut être affiché.</span><span class="sxs-lookup"><span data-stu-id="e5645-509">Returns <b>True</b> if the Microsoft Office Clipboard can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCommentIndicator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayCommentIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayCommentIndicator As XlCommentDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommentDisplayMode DisplayCommentIndicator { Microsoft::Office::Interop::Excel::XlCommentDisplayMode get(); void set(Microsoft::Office::Interop::Excel::XlCommentDisplayMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommentDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-510">Cette propriété renvoie
 ou définit la façon dont les cellules affichent les commentaires et les indicateurs.</span><span class="sxs-lookup"><span data-stu-id="e5645-510">Returns or sets the way cells display comments and indicators.</span></span> <span data-ttu-id="e5645-511">Il peut s’agit de l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constantes suivantes : <b>xlNoIndicator,</b> <b>xlCommentIndicatorOnly</b>ou <b>xlCommentAndIndicator</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-511">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constants: <b>xlNoIndicator</b>, <b>xlCommentIndicatorOnly</b>, or <b>xlCommentAndIndicator</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentActionTaskPane">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentActionTaskPane { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentActionTaskPane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentActionTaskPane" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentActionTaskPane As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentActionTaskPane { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-512">Définissez ce dernier <b>sur True</b> pour afficher le volet Des actions de document ; définie sur <b>False pour</b> masquer le volet Des actions de document.</span><span class="sxs-lookup"><span data-stu-id="e5645-512">Set to <b>True</b> to display the Document Actions task pane; set to <b>False</b> to hide the Document Actions task pane.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-513">L'attribution de la valeur <b>True</b> à cette propriété engendre une erreur d'exécution si le classeur actif n'est pas un document dynamique.</span><span class="sxs-lookup"><span data-stu-id="e5645-513">Setting this property to <b>True</b> will result in a run-time error if the active workbook is not a smart document.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentInformationPanel">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentInformationPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentInformationPanel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentInformationPanel" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentInformationPanel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentInformationPanel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-514">Cette propriété renvoie ou définit un <b>type Boolean</b> qui indique si le panneau de propriétés de document est affiché.</span><span class="sxs-lookup"><span data-stu-id="e5645-514">Returns or sets a <b>Boolean</b> that represents whether the document properties panel is displayed.</span></span> <span data-ttu-id="e5645-515">En lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="e5645-515">Read/write.</span></span></summary>
        <value><span data-ttu-id="e5645-516"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e5645-516"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExcel4Menus">
      <MemberSignature Language="C#" Value="public bool DisplayExcel4Menus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayExcel4Menus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayExcel4Menus" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExcel4Menus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayExcel4Menus { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-517">Cette propriété a la valeur <b>True</b> si Microsoft Excel affiche les barres de menu de la version 4.0.</span><span class="sxs-lookup"><span data-stu-id="e5645-517"><b>True</b> if Microsoft Excel displays version 4.0 menu bars.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaAutoComplete">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-518">Récupère ou définit si une liste de fonctions pertinentes et de noms définis doit s'afficher lorsque des formules de cellule sont créées.</span><span class="sxs-lookup"><span data-stu-id="e5645-518">Gets or sets whether to show a list of relevant functions and defined names when building cell formulas.</span></span> <span data-ttu-id="e5645-519">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-519">Read/write.</span></span></summary>
        <value><span data-ttu-id="e5645-520"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e5645-520"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaBar">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-521"><b>True</b> si la barre de formule est affichée.</span><span class="sxs-lookup"><span data-stu-id="e5645-521"><b>True</b> if the formula bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFullScreen">
      <MemberSignature Language="C#" Value="public bool DisplayFullScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFullScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFullScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFullScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFullScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-522">Cette propriété a la valeur <b>True</b> si Microsoft Excel fonctionne en mode plein écran.</span><span class="sxs-lookup"><span data-stu-id="e5645-522"><b>True</b> if Microsoft Excel is in full-screen mode.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-p179">Le mode plein écran agrandit la fenêtre d'application sur la totalité de l'écran et masque la barre de titre de l'application. Les barres d'outils, la barre d'état et la barre de formule conservent des paramètres d'affichage distincts en mode plein écran et en mode normal.</span><span class="sxs-lookup"><span data-stu-id="e5645-p179">Full-screen mode maximizes the application window so that it fills the entire screen and hides the application title bar. Toolbars, the status bar, and the formula bar maintain separate display settings for full-screen mode and normal mode.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFunctionToolTips">
      <MemberSignature Language="C#" Value="public bool DisplayFunctionToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFunctionToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFunctionToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFunctionToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFunctionToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-525">Cette propriété a la valeur <b>True</b> si des info-bulles de fonction peuvent être affichées.</span><span class="sxs-lookup"><span data-stu-id="e5645-525"><b>True</b> if function ToolTips can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInfoWindow">
      <MemberSignature Language="C#" Value="public bool DisplayInfoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInfoWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInfoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInfoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInfoWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-526">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-526">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInsertOptions">
      <MemberSignature Language="C#" Value="public bool DisplayInsertOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInsertOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInsertOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInsertOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInsertOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-527"><b>True</b> si le bouton Insérer des options doit être affiché.</span><span class="sxs-lookup"><span data-stu-id="e5645-527"><b>True</b> if the Insert Options button should be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNoteIndicator">
      <MemberSignature Language="C#" Value="public bool DisplayNoteIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayNoteIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayNoteIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayNoteIndicator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayNoteIndicator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-528">Cette propriété a la valeur <b>True</b> si les cellules comportant des annotations affichent des info-bulles et contiennent des indicateurs d'annotations (petits points dans leur coin supérieur droit).</span><span class="sxs-lookup"><span data-stu-id="e5645-528"><b>True</b> if cells containing notes display cell tips and contain note indicators (small dots in their upper-right corners).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPasteOptions">
      <MemberSignature Language="C#" Value="public bool DisplayPasteOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPasteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayPasteOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPasteOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPasteOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-529"><b>True</b> si le bouton Options de coller peut être affiché.</span><span class="sxs-lookup"><span data-stu-id="e5645-529"><b>True</b> if the Paste Options button can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-530">Il s'agit d'un paramètre Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="e5645-530">This is a Microsoft Office-wide setting.</span></span> <span data-ttu-id="e5645-531">Ce paramètre a une incidence sur toutes les autres applications Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="e5645-531">This setting affects all other Microsoft Office applications.</span></span> <span data-ttu-id="e5645-532">La définition <b>de la propriété DisplayPasteOptions</b> sur <b>True</b> permet de couper le bouton Options de remplissage automatique dans Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-532">Setting the <b>DisplayPasteOptions</b> property to <b>True</b> turns off the Auto Fill Options button in Microsoft Excel.</span></span> <span data-ttu-id="e5645-533">Le bouton <b>Options de recopie incrémentée</b> est propre à Excel, mais le bouton Options de collage apparaît dans toutes les autres applications Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="e5645-533">The <b>Auto Fill Options</b> button is only in Excel, but the Paste Options button is in all the other Microsoft Office applications.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRecentFiles">
      <MemberSignature Language="C#" Value="public bool DisplayRecentFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayRecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRecentFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRecentFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-534"><b>True</b> si la liste des derniers fichiers utilisés est affichée dans le menu Fichier.</span><span class="sxs-lookup"><span data-stu-id="e5645-534"><b>True</b> if the list of recently used files is displayed on the File menu.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayScrollBars">
      <MemberSignature Language="C#" Value="public bool DisplayScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayScrollBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayScrollBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayScrollBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-535">Cette propriété a la valeur <b>True</b> si les barres de défilement de tous les classeurs sont visibles.</span><span class="sxs-lookup"><span data-stu-id="e5645-535"><b>True</b> if scroll bars are visible for all workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStatusBar">
      <MemberSignature Language="C#" Value="public bool DisplayStatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayStatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayStatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStatusBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayStatusBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-536">Cette propriété a la valeur <b>True</b> si la barre d’état est affichée.</span><span class="sxs-lookup"><span data-stu-id="e5645-536"><b>True</b> if the status bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayXMLSourcePane">
      <MemberSignature Language="C#" Value="public void DisplayXMLSourcePane (object XmlMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayXMLSourcePane([in]object XmlMap) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DisplayXMLSourcePane(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayXMLSourcePane (Optional XmlMap As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlMap" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlMap"><span data-ttu-id="e5645-537">Objet <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> facultatif.</span><span class="sxs-lookup"><span data-stu-id="e5645-537">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="e5645-538">Le mappage XML à afficher dans le volet Office.</span><span class="sxs-lookup"><span data-stu-id="e5645-538">The XML map to display in the task pane.</span></span></param>
        <summary><span data-ttu-id="e5645-539">Ouvre le volet Des tâches source XML et affiche le map m moire XML spécifié par l <paramref name="XmlMap" /> argument.</span><span class="sxs-lookup"><span data-stu-id="e5645-539">Opens the XML Source task pane and displays the XML map specified by the <paramref name="XmlMap" /> argument.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-540">Les fonctionnalités XML, à l’exception de l’enregistrement de fichiers au format feuille de calcul XML, sont disponibles uniquement dans Microsoft Office Professional Edition 2003 et Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="e5645-540">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public void DoubleClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoubleClick() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoubleClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoubleClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-541">Cette méthode équivaut à double-cliquer sur la cellule active.</span><span class="sxs-lookup"><span data-stu-id="e5645-541">Equivalent to double-clicking the active cell.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy1">
      <MemberSignature Language="C#" Value="public object Dummy1 (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy1([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy1(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy1 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <summary><span data-ttu-id="e5645-542">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="e5645-542">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy10">
      <MemberSignature Language="C#" Value="public bool Dummy10 (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Dummy10([in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy10 (Optional arg As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary><span data-ttu-id="e5645-543">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-543">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy101">
      <MemberSignature Language="C#" Value="public object Dummy101 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Dummy101" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy101" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dummy101 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Dummy101 { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-544">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-544">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy11">
      <MemberSignature Language="C#" Value="public void Dummy11 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy11() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy11" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy11 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy11();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-545">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-545">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy12">
      <MemberSignature Language="C#" Value="public void Dummy12 (Microsoft.Office.Interop.Excel.PivotTable p1, Microsoft.Office.Interop.Excel.PivotTable p2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy12([in]class Microsoft.Office.Interop.Excel.PivotTable p1, [in]class Microsoft.Office.Interop.Excel.PivotTable p2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy12 (p1 As PivotTable, p2 As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy12(Microsoft::Office::Interop::Excel::PivotTable ^ p1, Microsoft::Office::Interop::Excel::PivotTable ^ p2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="p2" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary><span data-ttu-id="e5645-546">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-546">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy13">
      <MemberSignature Language="C#" Value="public object Dummy13 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy13([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy13 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="e5645-547">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-547">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy14">
      <MemberSignature Language="C#" Value="public void Dummy14 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy14() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy14" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy14 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy14();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-548">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-548">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy2">
      <MemberSignature Language="C#" Value="public object Dummy2 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy2([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy2 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <summary><span data-ttu-id="e5645-549">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-549">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy20">
      <MemberSignature Language="C#" Value="public object Dummy20 (int grfCompareFunctions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy20([in]int32 grfCompareFunctions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy20(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy20 (grfCompareFunctions As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy20(int grfCompareFunctions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCompareFunctions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="grfCompareFunctions">To be added.</param>
        <summary><span data-ttu-id="e5645-550">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-550">Reserved for internal use.</span></span></summary>
        <returns><span data-ttu-id="e5645-551"><b>s</b></span><span class="sxs-lookup"><span data-stu-id="e5645-551"><b>s</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy22">
      <MemberSignature Language="C#" Value="public bool Dummy22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy22" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy22" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy22 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy22 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy23">
      <MemberSignature Language="C#" Value="public bool Dummy23 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy23" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy23 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy23 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy3">
      <MemberSignature Language="C#" Value="public object Dummy3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy3() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy3" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy3 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-552">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="e5645-552">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy4">
      <MemberSignature Language="C#" Value="public object Dummy4 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy4([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy4 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <summary><span data-ttu-id="e5645-553">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-553">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy5">
      <MemberSignature Language="C#" Value="public object Dummy5 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy5([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy5 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <summary><span data-ttu-id="e5645-554">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-554">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy6">
      <MemberSignature Language="C#" Value="public object Dummy6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy6() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy6" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy6 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-555">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-555">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy7">
      <MemberSignature Language="C#" Value="public object Dummy7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy7() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy7" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy7 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-556">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-556">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy8">
      <MemberSignature Language="C#" Value="public object Dummy8 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy8([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy8(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy8 (Optional Arg1 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="e5645-557">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-557">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy9">
      <MemberSignature Language="C#" Value="public object Dummy9 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy9() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy9" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy9 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy9();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-558">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-558">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditDirectlyInCell">
      <MemberSignature Language="C#" Value="public bool EditDirectlyInCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditDirectlyInCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EditDirectlyInCell" />
      <MemberSignature Language="VB.NET" Value="Public Property EditDirectlyInCell As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditDirectlyInCell { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-559">Cette propriété a la valeur <b>True</b> si Microsoft Excel autorise la modification directement dans les cellules.</span><span class="sxs-lookup"><span data-stu-id="e5645-559"><b>True</b> if Microsoft Excel allows editing in cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAnimations">
      <MemberSignature Language="C#" Value="public bool EnableAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-560">Cet objet, ce membre ou cette énumération est déconseillé et n’est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="e5645-560">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoComplete">
      <MemberSignature Language="C#" Value="public bool EnableAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-561">Cette propriété a la valeur <b>True</b> si la fonction de saisie semi-automatique est activée.</span><span class="sxs-lookup"><span data-stu-id="e5645-561"><b>True</b> if the AutoComplete feature is enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCancelKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCancelKey" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCancelKey As XlEnableCancelKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableCancelKey EnableCancelKey { Microsoft::Office::Interop::Excel::XlEnableCancelKey get(); void set(Microsoft::Office::Interop::Excel::XlEnableCancelKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableCancelKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-562">Cette propriété contrôle la façon dont Microsoft Excel gère les interruptions CTRL+PAUSE (ou ÉCHAP ou COMMANDE+POINT) effectuées par des utilisateurs pendant une procédure en cours.</span><span class="sxs-lookup"><span data-stu-id="e5645-562">Controls how Microsoft Excel handles CTRL+BREAK (or ESC or COMMAND+PERIOD) user interruptions to the running procedure.</span></span> <span data-ttu-id="e5645-563">En <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" /> lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="e5645-563">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-564">
            <b>XlEnableCancelKey peut</b> être l’une de ces constantes <b>XlEnableCancelKey</b> :</span><span class="sxs-lookup"><span data-stu-id="e5645-564">
            <b>XlEnableCancelKey</b> can be one of these <b>XlEnableCancelKey</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="e5645-565">
                <b>xlDisabled</b>    La récupération de touche d’annulation est complètement désactivée.</span><span class="sxs-lookup"><span data-stu-id="e5645-565">
                <b>xlDisabled</b>  Cancel key trapping is completely disabled.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-566">
                <b>xlErrorHandler</b>    L’interruption est envoyée à la procédure en cours d’exécution en tant qu’erreur, piégeable par un responsable de traitement d’erreurs qui est installé avec une instruction On Error GoTo.</span><span class="sxs-lookup"><span data-stu-id="e5645-566">
                <b>xlErrorHandler</b>  The interrupt is sent to the running procedure as an error, trappable by an error handler set up with an On Error GoTo statement.</span></span> <span data-ttu-id="e5645-567">Le code de cette erreur pouvant être interceptée est le 18.</span><span class="sxs-lookup"><span data-stu-id="e5645-567">The trappable error code is 18.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-568">
                <b>xlInterrupt</b>    La procédure en cours est interrompue et l’utilisateur peut déboguer ou mettre fin à la procédure.</span><span class="sxs-lookup"><span data-stu-id="e5645-568">
                <b>xlInterrupt</b>  The current procedure is interrupted, and the user can debug or end the procedure.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-569">Soyez prudent lorsque vous utilisez cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e5645-569">Use this property very carefully.</span></span> <span data-ttu-id="e5645-570">Si vous utilisez <b>xlDisabled,</b>il n’existe aucun moyen d’interrompre une boucle d’interruption ou tout autre code qui n’est pas auto-terminaison.</span><span class="sxs-lookup"><span data-stu-id="e5645-570">If you use <b>xlDisabled</b>, there's no way to interrupt a runaway loop or other code that is not self-terminating.</span></span> <span data-ttu-id="e5645-571">Si vous utilisez la constante <b>xlErrorHandler</b> et que votre gestionnaire d'erreurs se termine toujours par l'instruction <b>Resume</b>, il est impossible d'interrompre du code dont l'exécution se poursuit indéfiniment.</span><span class="sxs-lookup"><span data-stu-id="e5645-571">Likewise, if you use <b>xlErrorHandler</b> but your error handler always returns using the <b>Resume</b> statement, there's no way to stop runaway code.</span></span></para>
          <para><span data-ttu-id="e5645-572">La propriété <b>EnableCancelKey</b> reprend toujours la valeur <b>xlInterrupt</b> chaque fois que Microsoft Excel redevient inactif et qu'aucun code n'est exécuté.</span><span class="sxs-lookup"><span data-stu-id="e5645-572">The <b>EnableCancelKey</b> property is always reset to <b>xlInterrupt</b> whenever Microsoft Excel returns to the idle state and there's no code running.</span></span> <span data-ttu-id="e5645-573">Pour intercepter ou désactiver l'annulation dans votre procédure, vous devez modifier explicitement la propriété <b>EnableCancelKey</b> chaque fois que la procédure est appelée.</span><span class="sxs-lookup"><span data-stu-id="e5645-573">To trap or disable cancellation in your procedure, you must explicitly change the <b>EnableCancelKey</b> property every time the procedure is called.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCheckFileExtensions">
      <MemberSignature Language="C#" Value="public bool EnableCheckFileExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCheckFileExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCheckFileExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCheckFileExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCheckFileExtensions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-574">True pour activer la boîte de dialogue Me dire si Microsoft Excel n’est pas le programme par défaut pour l’affichage et la modification de feuilles de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5645-574">True to enable the Tell me if Microsoft Excel isn't the default program for viewing and editing spreadsheets dialog box.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public bool EnableEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-575"><b>True</b> si les événements sont activés pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5645-575"><b>True</b> if events are enabled for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLargeOperationAlert">
      <MemberSignature Language="C#" Value="public bool EnableLargeOperationAlert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLargeOperationAlert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLargeOperationAlert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLargeOperationAlert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLargeOperationAlert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-576">Cette propriété renvoie ou définit une valeur de type <b>Boolean</b> qui indique s'il faut afficher un message d'alerte lorsqu'un utilisateur tente d'effectuer une opération qui affecte plus de cellules que ne le spécifie l'interface utilisateur du centre Office.</span><span class="sxs-lookup"><span data-stu-id="e5645-576">Sets or returns a <b>Boolean</b> that represents whether to display an alert message when a user attempts to perform an operation that affects a larger number of cells than is specified in the Office center UI.</span></span> <span data-ttu-id="e5645-577">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-577">Read/write.</span></span></summary>
        <value><span data-ttu-id="e5645-578"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e5645-578"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="e5645-579">La valeur par défaut de cette propriété est <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-579">The default value of this property is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLivePreview">
      <MemberSignature Language="C#" Value="public bool EnableLivePreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLivePreview" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLivePreview" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLivePreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLivePreview { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-580">Définit ou renvoie un <b>Boolean</b> qui indique s'il faut afficher ou masquer les aperçus qui s'affichent lorsque vous utilisez des galeries qui prise en charge les aperçus.</span><span class="sxs-lookup"><span data-stu-id="e5645-580">Sets or returns a <b>Boolean</b> that represents whether to show or hide gallery previews that appear when using galleries that support previewing.</span></span> <span data-ttu-id="e5645-581">Si cette propriété a la valeur <b>True</b>, elle affiche un aperçu de votre classeur avant d'appliquer la commande.</span><span class="sxs-lookup"><span data-stu-id="e5645-581">Setting this property to <b>True</b> shows a preview of your workbook before applying the command.</span></span> <span data-ttu-id="e5645-582">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-582">Read/write.</span></span></summary>
        <value><span data-ttu-id="e5645-583"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e5645-583"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="e5645-584">Cette propriété correspond à la case à cocher Activer l'aperçu instantané de la boîte de dialogue Options Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-584">This property corresponds to the Enable Live Preview check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMacroAnimations">
      <MemberSignature Language="C#" Value="public bool EnableMacroAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableMacroAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableMacroAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMacroAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableMacroAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-585">Contrôle si les animations de macro sont activées.</span><span class="sxs-lookup"><span data-stu-id="e5645-585">Controls whether macro animations are enabled.</span></span> <span data-ttu-id="e5645-586"><b>Cette valeur a la</b> valeur True si les animations de l’interface utilisateur ou les animations de graphique sont activées.</span><span class="sxs-lookup"><span data-stu-id="e5645-586"><b>True</b> if user interface animations or chart animations are enabled.</span></span> <span data-ttu-id="e5645-587">Est définie sur <b>False</b> (aucune animation) par défaut.</span><span class="sxs-lookup"><span data-stu-id="e5645-587">Is set to <b>False</b> (no animation) by default.</span></span> <span data-ttu-id="e5645-588">Si elle est définie sur <b>True</b> pendant l’exécution d’une macro, elle active l’animation, puis la réinitialise sur <b>False</b> après l’exécution de la macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-588">If it is set to <b>True</b> during the running of a macro, it will enable animation and then will reset to <b>False</b> after the macro runs.</span></span> <span data-ttu-id="e5645-589">Booléen en <b>lecture/écriture</b> <b>(booléen</b> en C#).</span><span class="sxs-lookup"><span data-stu-id="e5645-589">Read/write <b>Boolean</b> (<b>bool</b> in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSound">
      <MemberSignature Language="C#" Value="public bool EnableSound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableSound" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSound { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-590">Cette propriété a la valeur <b>True</b> si le son est activé dans Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="e5645-590"><b>True</b> if sound is enabled for Microsoft Office.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTipWizard">
      <MemberSignature Language="C#" Value="public bool EnableTipWizard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTipWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableTipWizard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableTipWizard { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-591">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-591">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCheckingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ErrorCheckingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCheckingOptions As ErrorCheckingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ ErrorCheckingOptions { Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorCheckingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-592">Renvoie un objet, qui représente les options de vérification des <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> erreurs pour une application.</span><span class="sxs-lookup"><span data-stu-id="e5645-592">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> object, which represents the error checking options for an application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="e5645-593">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-593">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-594">Nom de l'objet, selon les conventions de dénomination de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-594">The name of the object, using the naming convention of Microsoft Excel.</span></span></param>
        <summary><span data-ttu-id="e5645-595">Cette méthode convertit un nom Microsoft Excel en un objet ou une valeur.</span><span class="sxs-lookup"><span data-stu-id="e5645-595">Converts a Microsoft Excel name to an object or a value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e5645-596">Les types de noms suivants peuvent être utilisés dans Microsoft Excel avec cette méthode :</span><span class="sxs-lookup"><span data-stu-id="e5645-596">The following types of names in Microsoft Excel can be used with this method:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="e5645-p190">Références de type A1. Toute référence à une seule cellule au moyen de la notation A1. Toutes les références sont considérées comme absolues.</span><span class="sxs-lookup"><span data-stu-id="e5645-p190">A1-style references. You can use any reference to a single cell in A1-style notation. All references are considered to be absolute references.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-p191">Plages. Vous pouvez utiliser les opérateurs de plage, d'intersection et d'union (deux points, espace et virgule respectivement) avec des références.</span><span class="sxs-lookup"><span data-stu-id="e5645-p191">Ranges. You can use the range, intersect, and union operators (colon, space, and comma, respectively) with references.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-p192">Noms définis. Vous pouvez spécifier un nom quelconque dans le langage de la macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-p192">Defined names. You can specify any name in the language of the macro.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-604">Références externes.</span><span class="sxs-lookup"><span data-stu-id="e5645-604">External references.</span></span> <span data-ttu-id="e5645-605">Vous pouvez utiliser le !</span><span class="sxs-lookup"><span data-stu-id="e5645-605">You can use the !</span></span> <span data-ttu-id="e5645-606">(point d'exclamation) pour faire référence à une cellule ou à un nom défini dans un autre classeur, par exemple Evaluate("[BOOK1.XLS]Sheet1!A1").</span><span class="sxs-lookup"><span data-stu-id="e5645-606">operator to refer to a cell or to a name defined in another workbook — for example, Evaluate("[BOOK1.XLS]Sheet1!A1").</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-607">
            <b>Remarque</b>: l’utilisation de crochets (par exemple, « [A1:C5] ») est identique à l’appel de la méthode <b>Evaluate</b> avec un argument de chaîne.</span><span class="sxs-lookup"><span data-stu-id="e5645-607">
            <b>Note</b>: Using square brackets (for example, "[A1:C5]") is identical to calling the <b>Evaluate</b> method with a string argument.</span></span> <span data-ttu-id="e5645-608">L'avantage des crochets droits réside dans la plus grande concision du code.</span><span class="sxs-lookup"><span data-stu-id="e5645-608">The advantage of using square brackets is that the code is shorter.</span></span> <span data-ttu-id="e5645-609">L’avantage de l’utilisation de <b>Evaluate</b> est que l’argument est une chaîne, de sorte que vous pouvez construire la chaîne dans votre code ou utiliser une variable.</span><span class="sxs-lookup"><span data-stu-id="e5645-609">The advantage of using <b>Evaluate</b> is that the argument is a string, so you can either construct the string in your code or use a variable.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-610">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles de macros internationales Microsoft Excel 4.0 dans le livre de calcul spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5645-610">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-611">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles de macro Microsoft Excel 4.0 dans le livre de calcul spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5645-611">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteExcel4Macro">
      <MemberSignature Language="C#" Value="public object ExecuteExcel4Macro (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteExcel4Macro([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ExecuteExcel4Macro(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteExcel4Macro(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="e5645-612">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-612">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-613">Fonction de langage macro Microsoft Excel 4.0 sans signe égal.</span><span class="sxs-lookup"><span data-stu-id="e5645-613">A Microsoft Excel 4.0 macro language function without the equal sign.</span></span> <span data-ttu-id="e5645-614">Toutes les références doivent être données en tant que chaînes R1C1.</span><span class="sxs-lookup"><span data-stu-id="e5645-614">All references must be given as R1C1 strings.</span></span> <span data-ttu-id="e5645-615">Si <paramref name="String" /> elle contient des guillemets doubles incorporés, vous devez les doubler.</span><span class="sxs-lookup"><span data-stu-id="e5645-615">If <paramref name="String" /> contains embedded double quotation marks, you must double them.</span></span> <span data-ttu-id="e5645-616">Par exemple, pour exécuter la fonction de macro =MID(« sometext »,1,4), doit être <paramref name="String" /> « MID(« "sometext" »,1,4) ».</span><span class="sxs-lookup"><span data-stu-id="e5645-616">For example, to run the macro function =MID("sometext",1,4), <paramref name="String" /> would have to be "MID(""sometext"",1,4)".</span></span></param>
        <summary><span data-ttu-id="e5645-617">Exécute une fonction de macro Microsoft Excel 4.0, puis renvoie le résultat de la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-617">Runs a Microsoft Excel 4.0 macro function, and then returns the result of the function.</span></span> <span data-ttu-id="e5645-618">Le type renvoyé dépend de la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-618">The return type depends on the function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e5645-619">La macro Microsoft Excel 4.0 n’est pas évaluée dans le contexte du manuel ou de la feuille en cours.</span><span class="sxs-lookup"><span data-stu-id="e5645-619">The Microsoft Excel 4.0 macro isn't evaluated in the context of the current workbook or sheet.</span></span> <span data-ttu-id="e5645-620">Cela signifie que toutes les références doivent être externes et doivent spécifier un nom de workbook explicite.</span><span class="sxs-lookup"><span data-stu-id="e5645-620">This means that any references should be external and should specify an explicit workbook name.</span></span> <span data-ttu-id="e5645-621">Par exemple, pour exécuter la macro Microsoft Excel 4.0 « My_Macro » dans Le Livre1, vous devez utiliser « Book1 ! My_Macro() ».</span><span class="sxs-lookup"><span data-stu-id="e5645-621">For example, to run the Microsoft Excel 4.0 macro "My_Macro" in Book1, you must use "Book1!My_Macro()".</span></span> <span data-ttu-id="e5645-622">Si vous ne spécifiez pas le nom du workbook, cette méthode échoue.</span><span class="sxs-lookup"><span data-stu-id="e5645-622">If you don't specify the workbook name, this method fails.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendList">
      <MemberSignature Language="C#" Value="public bool ExtendList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtendList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ExtendList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExtendList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-623">Cette propriété a la valeur <b>True</b> si Microsoft Excel étend automatiquement les formats et les formules aux nouvelles données ajoutées à une liste.</span><span class="sxs-lookup"><span data-stu-id="e5645-623"><b>True</b> if Microsoft Excel automatically extends formatting and formulas to new data that is added to a list.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-624">Pour permettre une extension, les formats et formules doivent figurer au minimum dans trois des cinq lignes ou colonnes de la liste qui précèdent la nouvelle ligne ou colonne. De plus, vous devez ajouter les données au bas de la liste ou sur son côté droit.</span><span class="sxs-lookup"><span data-stu-id="e5645-624">To be extended, formats and formulas must appear in at least three of the five list rows or columns preceding the new row or column, and you must add the data to the bottom or to the right-hand side of the list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureInstall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFeatureInstall FeatureInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFeatureInstall FeatureInstall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FeatureInstall" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureInstall As MsoFeatureInstall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFeatureInstall FeatureInstall { Microsoft::Office::Core::MsoFeatureInstall get(); void set(Microsoft::Office::Core::MsoFeatureInstall value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFeatureInstall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-625">Cette propriété renvoie ou définit une valeur (constante) qui indique comment Microsoft Excel gère les appels des méthodes et propriétés nécessitant des fonctionnalités qui ne sont pas encore installées.</span><span class="sxs-lookup"><span data-stu-id="e5645-625">Returns or sets a value (constant) that specifies how Microsoft Excel handles calls to methods and properties that require features that aren’t yet installed.</span></span> <span data-ttu-id="e5645-626">En <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" /> lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="e5645-626">Read/write <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-627">
            <b>MsoFeatureInstall</b> peut être l’une de <b>ces constantes MsoFeatureInstall</b> :</span><span class="sxs-lookup"><span data-stu-id="e5645-627">
            <b>MsoFeatureInstall</b> can be one of these <b>MsoFeatureInstall</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="e5645-628">
                <b>msoFeatureInstallNone</b>    Génère une erreur Automation générique au moment de l’utilisation lorsque des fonctionnalités désinstallées sont appelées.</span><span class="sxs-lookup"><span data-stu-id="e5645-628">
                <b>msoFeatureInstallNone</b>  Generates a generic Automation error at run time when uninstalled features are called.</span></span> <span data-ttu-id="e5645-629">Il s'agit de la constante par défaut.</span><span class="sxs-lookup"><span data-stu-id="e5645-629">This is the default constant.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-630">
                <b>msoFeatureInstallOnDemand</b>    Invite l’utilisateur à installer de nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="e5645-630">
                <b>msoFeatureInstallOnDemand</b>  Prompts the user to install new features.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-631">
                <b>msoFeatureInstallOnDemandWithUI</b>    Affiche une jauge de progression pendant l’installation ; n’invite pas l’utilisateur à installer de nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="e5645-631">
                <b>msoFeatureInstallOnDemandWithUI</b>  Displays a progress meter during installation; doesn’t prompt the user to install new features.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-632">Vous pouvez utiliser la constante <b>msoFeatureInstallOnDemandWithUI</b> pour éviter aux utilisateurs de penser que l'application ne répond pas lors de l'installation d'une fonctionnalité.</span><span class="sxs-lookup"><span data-stu-id="e5645-632">You can use the <b>msoFeatureInstallOnDemandWithUI</b> constant to prevent users from thinking that the application isn't responding while a feature is being installed.</span></span> <span data-ttu-id="e5645-633">Utilisez la constante <b>msoFeatureInstallNone</b> si vous souhaitez que le développeur soit le seul à peut installer des fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="e5645-633">Use the <b>msoFeatureInstallNone</b> constant if you want the developer to be the only one who can install features.</span></span></para>
          <para><span data-ttu-id="e5645-634">Si vous avez la propriété définie sur False , les utilisateurs ne seront pas invités à installer de nouvelles fonctionnalités, même si la propriété FeatureInstall est définie sur <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> <b>msoFeatureInstallOnDemand</b>. <b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="e5645-634">If you have the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property set to <b>False</b>, users won’t be prompted to install new features even if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>.</span></span> <span data-ttu-id="e5645-635">Si la propriété est définie sur True , une jauge de progression de l’installation s’affiche si la propriété FeatureInstall est définie sur <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> <b>msoFeatureInstallOnDemand</b>. <b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="e5645-635">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is set to <b>True</b>, an installation progress meter will appear if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileConverters">
      <MemberSignature Language="C#" Value="public object FileConverters[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FileConverters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileConverters(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FileConverters[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1"><span data-ttu-id="e5645-636">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-636">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-637">Nom long du convertisseur, y compris la chaîne de recherche de type fichier dans Windows, par exemple, « Lotus 1-2-3 Files (*.wk*) ».</span><span class="sxs-lookup"><span data-stu-id="e5645-637">The long name of the converter, including the file-type search string in Windows, for example, "Lotus 1-2-3 Files (*.wk*)".</span></span></param>
        <param name="Index2"><span data-ttu-id="e5645-638">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-638">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-639">Chemin d’accès de la ressource du code ou de la bibliothèque DLL du convertisseur.</span><span class="sxs-lookup"><span data-stu-id="e5645-639">The path of the converter DLL or code resource.</span></span></param>
        <summary><span data-ttu-id="e5645-640">Renvoie des informations relatives aux convertisseurs de fichiers installés.</span><span class="sxs-lookup"><span data-stu-id="e5645-640">Returns information about installed file converters.</span></span> <span data-ttu-id="e5645-641">Renvoie <b>la valeur Null</b> si aucun convertisseur n’est installé.</span><span class="sxs-lookup"><span data-stu-id="e5645-641">Returns <b>Null</b> if there are no converters installed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-642">Si vous ne spécifiez pas d’arguments, cette propriété renvoie un tableau qui contient des informations sur tous les convertisseurs de fichiers installés.</span><span class="sxs-lookup"><span data-stu-id="e5645-642">If you don’t specify arguments, this property returns an array that contains information about all the installed file converters.</span></span> <span data-ttu-id="e5645-643">Chaque ligne du tableau contient des informations sur un convertisseur de fichier unique, comme illustré dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="e5645-643">Each row in the array contains information about a single file converter, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-644">1 </span><span class="sxs-lookup"><span data-stu-id="e5645-644">1</span></span></term>
              <description><span data-ttu-id="e5645-645">Nom complet du convertisseur</span><span class="sxs-lookup"><span data-stu-id="e5645-645">The long name of the converter</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-646">2 </span><span class="sxs-lookup"><span data-stu-id="e5645-646">2</span></span></term>
              <description><span data-ttu-id="e5645-647">Chemin d’accès de la ressource du code ou de la bibliothèque DLL du convertisseur</span><span class="sxs-lookup"><span data-stu-id="e5645-647">The path of the converter DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-648">3</span><span class="sxs-lookup"><span data-stu-id="e5645-648">3</span></span></term>
              <description><span data-ttu-id="e5645-649">Chaîne de caractères de recherche de l’extension de fichier</span><span class="sxs-lookup"><span data-stu-id="e5645-649">The file-extension search string</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileDialog FileDialog[Microsoft.Office.Core.MsoFileDialogType fileDialogType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileDialog FileDialog(valuetype Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileDialog(Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDialog(fileDialogType As MsoFileDialogType) As FileDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileDialog ^ FileDialog[Microsoft::Office::Core::MsoFileDialogType] { Microsoft::Office::Core::FileDialog ^ get(Microsoft::Office::Core::MsoFileDialogType fileDialogType); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDialogType" Type="Microsoft.Office.Core.MsoFileDialogType" />
      </Parameters>
      <Docs>
        <param name="fileDialogType"><span data-ttu-id="e5645-650">Obligatoire <see cref="T:Microsoft.Office.Core.MsoFileDialogType" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-650">Required <see cref="T:Microsoft.Office.Core.MsoFileDialogType" />.</span></span> <span data-ttu-id="e5645-651">Type de boîte de dialogue fichier. <b>MsoFileDialogType</b> peut être l’une de ces constantes <b>MsoFileDialogType</b> :<b>msoFileDialogFilePicker</b> Permet à l’utilisateur de sélectionner un fichier. <b>msoFileDialogFolderPicker</b> Permet à l’utilisateur de sélectionner un dossier. <b>msoFileDialogOpen</b> Permet à l’utilisateur d’ouvrir un fichier. <b>msoFileDialogSaveAs</b> Permet à l’utilisateur d’enregistrer un fichier.</span><span class="sxs-lookup"><span data-stu-id="e5645-651">The type of file dialog.<b>MsoFileDialogType</b> can be one of these <b>MsoFileDialogType</b> constants:<b>msoFileDialogFilePicker</b> Allows user to select a file.<b>msoFileDialogFolderPicker</b> Allows user to select a folder.<b>msoFileDialogOpen</b> Allows user to open a file.<b>msoFileDialogSaveAs</b> Allows user to save a file.</span></span></param>
        <summary><span data-ttu-id="e5645-652">Renvoie un <see cref="T:Microsoft.Office.Core.FileDialog" /> objet représentant une instance de la boîte de dialogue de fichier.</span><span class="sxs-lookup"><span data-stu-id="e5645-652">Returns a <see cref="T:Microsoft.Office.Core.FileDialog" /> object representing an instance of the file dialog.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExportConverters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileExportConverters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExportConverters As FileExportConverters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FileExportConverters ^ FileExportConverters { Microsoft::Office::Interop::Excel::FileExportConverters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FileExportConverters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-653">Renvoie une collection qui représente tous les convertisseurs de fichiers pour <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> l’enregistrement des fichiers disponibles dans Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-653">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> collection that represents all the file converters for saving files available to Microsoft Excel.</span></span> <span data-ttu-id="e5645-654">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-654">Read-only.</span></span></summary>
        <value><span data-ttu-id="e5645-655">Renvoie <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-655">Returns <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFind">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IFind FileFind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IFind FileFind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileFind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFind As IFind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IFind ^ FileFind { Microsoft::Office::Core::IFind ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IFind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-p208">Vous avez demandé de l'aide sur un mot clé Visual Basic utilisé uniquement pour les Macintosh. Pour plus d'informations sur ce mot clé, consultez l'Aide fournie avec l'édition de Microsoft Office pour Macintosh</span><span class="sxs-lookup"><span data-stu-id="e5645-p208">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileSearch">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileSearch FileSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileSearch FileSearch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSearch As FileSearch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileSearch ^ FileSearch { Microsoft::Office::Core::FileSearch ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileSearch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-658">Renvoie un <see cref="T:Microsoft.Office.Core.FileSearch" /> objet à utiliser avec les recherches de fichiers.</span><span class="sxs-lookup"><span data-stu-id="e5645-658">Returns a <see cref="T:Microsoft.Office.Core.FileSearch" /> object for use with file searches.</span></span> <span data-ttu-id="e5645-659">Cette propriété est disponible uniquement dans Microsoft Windows.</span><span class="sxs-lookup"><span data-stu-id="e5645-659">This property is available only in Microsoft Windows.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFileValidationMode FileValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFileValidationMode FileValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidation As MsoFileValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFileValidationMode FileValidation { Microsoft::Office::Core::MsoFileValidationMode get(); void set(Microsoft::Office::Core::MsoFileValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFileValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-660">Obtient ou définit la façon dont Microsoft Excel valide les fichiers avant de les ouvrir.</span><span class="sxs-lookup"><span data-stu-id="e5645-660">Gets or sets how Microsoft Excel will validate files before opening them.</span></span></summary>
        <value><span data-ttu-id="e5645-661">Objet <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" />.</span><span class="sxs-lookup"><span data-stu-id="e5645-661">A <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-662">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-662">Read/write.</span></span></para>
          <para><span data-ttu-id="e5645-663">Les fichiers qui ne passent pas de validation seront ouvert dans une fenêtre en mode protégé.</span><span class="sxs-lookup"><span data-stu-id="e5645-663">Files that do not pass validation will be opened in a Protected View window.</span></span> <span data-ttu-id="e5645-664">Si vous définissez la propriété, ce paramètre reste en vigueur pour l’ensemble de la session que <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> l’application est ouverte.</span><span class="sxs-lookup"><span data-stu-id="e5645-664">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> property, that setting will remain in effect for the entire session the application is open.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidationPivot">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidationPivot As XlFileValidationPivotMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileValidationPivotMode FileValidationPivot { Microsoft::Office::Interop::Excel::XlFileValidationPivotMode get(); void set(Microsoft::Office::Interop::Excel::XlFileValidationPivotMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileValidationPivotMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-665">Obtient ou définit la façon dont Microsoft Excel valide le contenu des caches de données pour les rapports de tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="e5645-665">Gets or sets how Microsoft Excel will validate the contents of the data caches for PivotTable reports.</span></span></summary>
        <value><span data-ttu-id="e5645-666">Objet <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" />.</span><span class="sxs-lookup"><span data-stu-id="e5645-666">A <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-667">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-667">Read/write.</span></span></para>
          <para><span data-ttu-id="e5645-668">Les fichiers qui contiennent des caches de données dont la validation échoue sont ouverts dans une fenêtre Mode protégé.</span><span class="sxs-lookup"><span data-stu-id="e5645-668">Files that contain data caches that do not validate will be opened in a Protected View window.</span></span> <span data-ttu-id="e5645-669">Si vous définissez la propriété, ce paramètre reste en vigueur pour l’ensemble de la session que <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> l’application est ouverte.</span><span class="sxs-lookup"><span data-stu-id="e5645-669">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> property, that setting will remain in effect for the entire session the application is open.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFile">
      <MemberSignature Language="C#" Value="public bool FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FindFile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-670">Affiche la boîte de dialogue Ouvrir.</span><span class="sxs-lookup"><span data-stu-id="e5645-670">Displays the Open dialog box.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e5645-671">Cette méthode affiche la boîte de dialogue Ouvrir et permet à l’utilisateur d’ouvrir un fichier.</span><span class="sxs-lookup"><span data-stu-id="e5645-671">This method displays the Open dialog box and allows the user to open a file.</span></span> <span data-ttu-id="e5645-672">Si un nouveau fichier est ouvert, cette méthode renvoie la valeur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-672">If a new file is opened successfully, this method returns <b>True</b>.</span></span> <span data-ttu-id="e5645-673">Si l'utilisateur annule la boîte de dialogue, cette méthode renvoie la valeur <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-673">If the user cancels the dialog box, this method returns <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat FindFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat FindFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FindFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property FindFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ FindFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-674">Cette propriété renvoie ou définit les critères de recherche pour le type de format de cellule à trouver.</span><span class="sxs-lookup"><span data-stu-id="e5645-674">Sets or returns the search criteria for the type of cell formats to find.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimal">
      <MemberSignature Language="C#" Value="public bool FixedDecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedDecimal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedDecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-675">Toutes les données entrées après que cette propriété a la valeur <b>True</b> seront formatées avec le nombre de décimales fixes définie par la <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="e5645-675">All data entered after this property is set to <b>True</b> will be formatted with the number of fixed decimal places set by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> property.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimalPlaces">
      <MemberSignature Language="C#" Value="public int FixedDecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FixedDecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FixedDecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-676">Cette propriété renvoie ou définit le nombre de décimales fixes utilisées lorsque la propriété <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> est définie sur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-676">Returns or sets the number of fixed decimal places used when the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> property is set to <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public bool FlashFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-677"><b>TRUE</b> indique que la fonctionnalité Remplissage flash Excel a été activée et active.</span><span class="sxs-lookup"><span data-stu-id="e5645-677"><b>TRUE</b> indicates that the Excel Flash Fill feature has been enabled and active.</span></span> <span data-ttu-id="e5645-678"><b>Booléen</b> <b>(booléen</b> en C#) En lecture-écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-678"><b>Boolean</b> (<b>bool</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-679">Flash Fill détecte lorsque vous modifiez des données adaptées à un modèle qui peut être rempli et appliqué à des données supplémentaires dans le workbook, puis remplit automatiquement la colonne avec les résultats.</span><span class="sxs-lookup"><span data-stu-id="e5645-679">Flash Fill detects when you are modifying data that fits a pattern which can be filled down and applied to additional data in the workbook, and then automatically fills down the column with the results.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFillMode">
      <MemberSignature Language="C#" Value="public bool FlashFillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFillMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFillMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFillMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-680"><b>True</b> si la fonctionnalité Remplissage flash est activée.</span><span class="sxs-lookup"><span data-stu-id="e5645-680"><b>True</b> if the Flash Fill feature is enabled.</span></span> <span data-ttu-id="e5645-681"><b>Booléen</b> <b>(booléen</b> en C#) En lecture-écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-681"><b>Boolean</b> (<b>bool</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaBarHeight">
      <MemberSignature Language="C#" Value="public int FormulaBarHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FormulaBarHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FormulaBarHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaBarHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FormulaBarHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-682">Cette propriété permet à l'utilisateur de spécifier la hauteur de la barre de formule en lignes.</span><span class="sxs-lookup"><span data-stu-id="e5645-682">Allows the user to specify the height of the formula bar in lines.</span></span> <span data-ttu-id="e5645-683">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-683">Read/write.</span></span></summary>
        <value><span data-ttu-id="e5645-684"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="e5645-684"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="e5645-685">Si la valeur spécifiée de <b>FormulaBarHeight</b> est supérieure à l’espace d’affichage de la fenêtre, la barre de formule est reserée pour être égale à la hauteur de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="e5645-685">If the specified value of <b>FormulaBarHeight</b> is greater than the viewable window space, the formula bar is  resized to be equal to the window height.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateGetPivotData">
      <MemberSignature Language="C#" Value="public bool GenerateGetPivotData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateGetPivotData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateGetPivotData" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateGetPivotData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateGetPivotData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-686">Cette propriété renvoie la valeur <b>True</b> lorsque Microsoft Excel peut obtenir des données de rapport de tableau croisé dynamique.</span><span class="sxs-lookup"><span data-stu-id="e5645-686">Returns <b>True</b> when Microsoft Excel can get PivotTable report data.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTableRefs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateTableRefs As XlGenerateTableRefs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlGenerateTableRefs GenerateTableRefs { Microsoft::Office::Interop::Excel::XlGenerateTableRefs get(); void set(Microsoft::Office::Interop::Excel::XlGenerateTableRefs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlGenerateTableRefs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-687">La propriété détermine si la méthode de notation traditionnelle ou la nouvelle méthode de notation de référencement structurée est utilisée pour faire référence à des <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> tableaux dans des formules.</span><span class="sxs-lookup"><span data-stu-id="e5645-687">The <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> property determines whether the traditional notation method or the new structured referencing notation method is used for referencing tables in formulas.</span></span> <span data-ttu-id="e5645-688">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-688">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlGenerateTableRefs" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListContents">
      <MemberSignature Language="C#" Value="public object GetCustomListContents (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomListContents([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListContents(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListContents (ListNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomListContents(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum"><span data-ttu-id="e5645-689">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-689">Required <b>Integer</b>.</span></span> <span data-ttu-id="e5645-690">Numéro de la liste.</span><span class="sxs-lookup"><span data-stu-id="e5645-690">The list number.</span></span></param>
        <summary><span data-ttu-id="e5645-691">Cette méthode renvoie une liste personnalisée (tableau de chaînes de caractères).</span><span class="sxs-lookup"><span data-stu-id="e5645-691">Returns a custom list (an array of strings).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListNum">
      <MemberSignature Language="C#" Value="public int GetCustomListNum (object ListArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCustomListNum([in]object ListArray) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListNum(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListNum (ListArray As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCustomListNum(System::Object ^ ListArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray"><span data-ttu-id="e5645-692">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-692">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-693">Tableau de chaînes de caractères.</span><span class="sxs-lookup"><span data-stu-id="e5645-693">An array of strings.</span></span></param>
        <summary><span data-ttu-id="e5645-694">Cette méthode renvoie le numéro de la liste personnalisée correspondant à un tableau de chaînes de caractères.</span><span class="sxs-lookup"><span data-stu-id="e5645-694">Returns the custom list number for an array of strings.</span></span> <span data-ttu-id="e5645-695">Vous pouvez utiliser cette méthode pour faire correspondre à la fois les listes prédéfinies et les listes personnalisées.</span><span class="sxs-lookup"><span data-stu-id="e5645-695">You can use this method to match both built-in lists and custom-defined lists.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e5645-696">Cette méthode génère une erreur s'il n'existe pas de liste correspondante.</span><span class="sxs-lookup"><span data-stu-id="e5645-696">This method generates an error if there's no corresponding list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenFilename">
      <MemberSignature Language="C#" Value="public object GetOpenFilename (object FileFilter, object FilterIndex, object Title, object ButtonText, object MultiSelect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOpenFilename([in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText, [in]object MultiSelect) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOpenFilename (Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object, Optional MultiSelect As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1075)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
        <Parameter Name="MultiSelect" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileFilter"><span data-ttu-id="e5645-697">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-697">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-698">Chaîne spécifiant les critères de filtrage des fichiers. Cette chaîne se compose de paires de chaînes de filtre de fichiers suivies de la spécification de filtre de fichier générique MS-DOS, chaque partie et chaque paire sont séparées par des virgules.</span><span class="sxs-lookup"><span data-stu-id="e5645-698">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span></span> <span data-ttu-id="e5645-699">Chaque paire est répertoriée dans la zone de liste déroulante Type de fichiers.</span><span class="sxs-lookup"><span data-stu-id="e5645-699">Each separate pair is listed in the Files of type drop-down list box.</span></span> <span data-ttu-id="e5645-700">Par exemple, la chaîne suivante spécifie deux filtres de fichiers : texte et addin : « Text Files (*.txt),*.txt,Add-In Files (*.xla),*.xla ». Pour utiliser plusieurs expressions génériques MS-DOS pour un seul type de filtre de fichier, séparez les expressions génériques par des points-virgules, par exemple, « Visual Basic Files (*.bas ; *.txt),*.bas;*. txt ». S’il est omis, cet argument a la valeur par défaut « Tous les fichiers (*.*),*...*».</span><span class="sxs-lookup"><span data-stu-id="e5645-700">For example, the following string specifies two file filters — text and addin: "Text Files (*.txt),*.txt,Add-In Files (*.xla),*.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span></span></param>
        <param name="FilterIndex"><span data-ttu-id="e5645-701">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-701">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-702">Spécifie les numéros d’index des critères de filtrage de fichiers par défaut, de 1 au nombre de filtres spécifié dans <paramref name="FileFilter" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-702">Specifies the index numbers of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span></span> <span data-ttu-id="e5645-703">Si cet argument est omis ou si la valeur est supérieure au nombre de filtres présents, le premier filtre de fichier est utilisé.</span><span class="sxs-lookup"><span data-stu-id="e5645-703">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span></span></param>
        <param name="Title"><span data-ttu-id="e5645-704">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-704">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-705">Spécifie le titre du nouveau site.</span><span class="sxs-lookup"><span data-stu-id="e5645-705">Specifies the title of the dialog box.</span></span> <span data-ttu-id="e5645-706">Si cet argument est omis, le titre est « Ouvrir ».</span><span class="sxs-lookup"><span data-stu-id="e5645-706">If this argument is omitted, the title is "Open."</span></span></param>
        <param name="ButtonText"><span data-ttu-id="e5645-707">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-707">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-708">Macintosh uniquement.</span><span class="sxs-lookup"><span data-stu-id="e5645-708">Macintosh only.</span></span></param>
        <param name="MultiSelect"><span data-ttu-id="e5645-709">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-709">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-710"><b>True</b> pour autoriser plusieurs noms de fichiers.</span><span class="sxs-lookup"><span data-stu-id="e5645-710"><b>True</b> to allow multiple file names to be selected.</span></span> <span data-ttu-id="e5645-711"><b>Faux</b> pour n'autoriser qu’un seul nom de fichier impérativement être sélectionnées.</span><span class="sxs-lookup"><span data-stu-id="e5645-711"><b>False</b> to allow only one file name to be selected.</span></span> <span data-ttu-id="e5645-712">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-712">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="e5645-713">Affiche la boîte de dialogue Ouvrir standard, et obtient un nom de fichier de l'utilisateur sans réellement ouvrir aucun fichier.</span><span class="sxs-lookup"><span data-stu-id="e5645-713">Displays the standard Open dialog box and gets a file name from the user without actually opening any files.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e5645-714">Cette méthode renvoie le nom de fichier sélectionné ou le nom entré par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5645-714">This method returns the selected file name or the name entered by the user.</span></span> <span data-ttu-id="e5645-715">Le nom renvoyé peut inclure une spécification du chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="e5645-715">The returned name may include a path specification.</span></span> <span data-ttu-id="e5645-716">Si <paramref name="MultiSelect" /> la valeur est <b>True,</b>la valeur de retour est un tableau des noms de fichiers sélectionnés (même si un seul nom de fichier est sélectionné).</span><span class="sxs-lookup"><span data-stu-id="e5645-716">If <paramref name="MultiSelect" /> is <b>True</b>, the return value is an array of the selected file names (even if only one filename is selected).</span></span> <span data-ttu-id="e5645-717">Renvoie <b>False</b> si l’utilisateur annule la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="e5645-717">Returns <b>False</b> if the user cancels the dialog box.</span></span></para>
          <para><span data-ttu-id="e5645-718">Cette méthode peut changer le lecteur en cours ou le dossier.</span><span class="sxs-lookup"><span data-stu-id="e5645-718">This method may change the current drive or folder.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhonetic">
      <MemberSignature Language="C#" Value="public string GetPhonetic (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPhonetic([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetPhonetic(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPhonetic (Optional Text As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="e5645-719">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-719">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-720">Indique le texte à convertir en texte phonétique.</span><span class="sxs-lookup"><span data-stu-id="e5645-720">Specifies the text to be converted to phonetic text.</span></span> <span data-ttu-id="e5645-721">Si vous omettez cet argument, la prochaine chaîne de texte phonétique possible (le cas caser) de l’argument précédemment <paramref name="Text" /> spécifié est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="e5645-721">If you omit this argument, the next possible phonetic text string (if any) of the previously specified <paramref name="Text" /> is returned.</span></span> <span data-ttu-id="e5645-722">S'il n'y a plus de chaînes de texte phonétiques possibles, une chaîne vide est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="e5645-722">If there are no more possible phonetic text strings, an empty string is returned.</span></span></param>
        <summary><span data-ttu-id="e5645-p227">Cette méthode renvoie le texte phonétique japonais de la chaîne de texte spécifiée. Elle est disponible uniquement si vous avez sélectionné ou installé la prise en charge linguistique du japonais pour Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="e5645-p227">Returns the Japanese phonetic text of the specified text string. This method is available to you only if you have selected or installed Japanese language support for Microsoft Office.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSaveAsFilename">
      <MemberSignature Language="C#" Value="public object GetSaveAsFilename (object InitialFilename, object FileFilter, object FilterIndex, object Title, object ButtonText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSaveAsFilename([in]object InitialFilename, [in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSaveAsFilename (Optional InitialFilename As Object, Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1076)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InitialFilename" Type="System.Object" />
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="InitialFilename"><span data-ttu-id="e5645-725">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-725">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-726">Spécifie le nom de fichier suggéré.</span><span class="sxs-lookup"><span data-stu-id="e5645-726">Specifies the suggested file name.</span></span> <span data-ttu-id="e5645-727">Si cet argument est omis, Microsoft Excel utilise le nom du classeur actif.</span><span class="sxs-lookup"><span data-stu-id="e5645-727">If this argument is omitted, Microsoft Excel uses the active workbook's name.</span></span></param>
        <param name="FileFilter"><span data-ttu-id="e5645-728">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-728">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-729">Chaîne spécifiant les critères de filtrage des fichiers. Cette chaîne se compose de paires de chaînes de filtre de fichiers suivies de la spécification de filtre de fichier générique MS-DOS, chaque partie et chaque paire sont séparées par des virgules.</span><span class="sxs-lookup"><span data-stu-id="e5645-729">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span></span> <span data-ttu-id="e5645-730">Chaque paire est répertoriée dans la zone de liste déroulante Type de fichiers.</span><span class="sxs-lookup"><span data-stu-id="e5645-730">Each separate pair is listed in the Files of type drop-down list box.</span></span> <span data-ttu-id="e5645-731">Par exemple, la chaîne suivante spécifie deux filtres de fichiers, texte et addin : « Text Files (\**.txt), .txt, Add-In Files (*.xla), *.xla ». Pour* utiliser plusieurs expressions génériques MS-DOS pour un seul type de filtre de fichier, séparez les expressions génériques par des points-virgules, par exemple, « Visual Basic Files ( .bas; *.txt),*.bas;*. txt ». S’il est omis, cet argument a la valeur par défaut « Tous les fichiers (*.*),*...\*».</span><span class="sxs-lookup"><span data-stu-id="e5645-731">For example, the following string specifies two file filters, text and addin: "Text Files (*.txt), *.txt, Add-In Files (*.xla), *.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span></span></param>
        <param name="FilterIndex"><span data-ttu-id="e5645-732">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-732">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-733">Spécifie le numéro d’index des critères de filtrage de fichiers par défaut, de 1 au nombre de filtres spécifié dans <paramref name="FileFilter" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-733">Specifies the index number of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span></span> <span data-ttu-id="e5645-734">Si cet argument est omis ou si la valeur est supérieure au nombre de filtres présents, le premier filtre de fichier est utilisé.</span><span class="sxs-lookup"><span data-stu-id="e5645-734">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span></span></param>
        <param name="Title"><span data-ttu-id="e5645-735">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-735">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-736">Spécifie le titre du nouveau site.</span><span class="sxs-lookup"><span data-stu-id="e5645-736">Specifies the title of the dialog box.</span></span> <span data-ttu-id="e5645-737">Si cet argument est omis, le titre par défaut est utilisé.</span><span class="sxs-lookup"><span data-stu-id="e5645-737">If this argument is omitted, the default title is used.</span></span></param>
        <param name="ButtonText"><span data-ttu-id="e5645-738">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-738">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-739">Macintosh uniquement.</span><span class="sxs-lookup"><span data-stu-id="e5645-739">Macintosh only.</span></span></param>
        <summary><span data-ttu-id="e5645-740">Affiche la boîte de dialogue Enregistrer sous standard et obtient un nom de fichier de l’utilisateur sans enregistrer réellement les fichiers.</span><span class="sxs-lookup"><span data-stu-id="e5645-740">Displays the standard Save As dialog box and gets a file name from the user without actually saving any files.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e5645-p233">Cette méthode renvoie le nom de fichier sélectionné ou le nom entré par l’utilisateur. Le nom renvoyé peut inclure une spécification de chemin d’accès. Renvoie <b>False</b> si l’utilisateur annule la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="e5645-p233">This method returns the selected file name or the name entered by the user. The returned name may include a path specification. Returns <b>False</b> if the user cancels the dialog box.</span></span></para>
          <para><span data-ttu-id="e5645-744">Cette méthode peut changer le lecteur en cours ou le dossier.</span><span class="sxs-lookup"><span data-stu-id="e5645-744">This method may change the current drive or folder.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public void Goto (object Reference, object Scroll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Goto([in]object Reference, [in]object Scroll) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Goto (Optional Reference As Object, Optional Scroll As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(475)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Scroll" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Reference"><span data-ttu-id="e5645-745">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-745">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-746">Destination.</span><span class="sxs-lookup"><span data-stu-id="e5645-746">The destination.</span></span> <span data-ttu-id="e5645-747">Il peut s’agit d’un objet, d’une chaîne qui contient une référence de cellule en notation de style R1C1 ou d’une chaîne contenant un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> nom Visual Basic procédure.</span><span class="sxs-lookup"><span data-stu-id="e5645-747">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, a string that contains a cell reference in R1C1-style notation, or a string that contains a Visual Basic procedure name.</span></span> <span data-ttu-id="e5645-748">Si cet argument est omis, la destination correspond à la dernière plage pour laquelle vous avez utilisé la méthode <b>Goto</b> à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="e5645-748">If this argument is omitted, the destination is the last range you used the <b>Goto</b> method to select.</span></span></param>
        <param name="Scroll"><span data-ttu-id="e5645-749">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-749">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-750"><b>True</b> pour faire défiler la fenêtre pour que le coin supérieur gauche de la plage apparaisse dans le coin supérieur gauche de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="e5645-750"><b>True</b> to scroll through the window so that the upper-left corner of the range appears in the upper-left corner of the window.</span></span> <span data-ttu-id="e5645-751"><b>False</b> pour ne pas faire défiler la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="e5645-751"><b>False</b> to not scroll through the window.</span></span> <span data-ttu-id="e5645-752">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-752">The default is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="e5645-753">Sélectionne n’importe quelle plage ou Visual Basic procédure dans un workbook et active ce dernier s’il n’est pas déjà actif.</span><span class="sxs-lookup"><span data-stu-id="e5645-753">Selects any range or Visual Basic procedure in any workbook and activates that workbook if it’s not already active.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-754">Cette méthode diffère de la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> méthode des manières suivantes :</span><span class="sxs-lookup"><span data-stu-id="e5645-754">This method differs from the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> method in the following ways:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="e5645-p236">Si vous spécifiez une plage d’une feuille qui n’est pas située en haut, Microsoft Excel bascule vers cette feuille avant de procéder à la sélection. Si vous utilisez <b>Select</b> avec une plage d’une feuille qui n’est pas située en haut, la plage est sélectionnée, mais la feuille n’est pas activée.</span><span class="sxs-lookup"><span data-stu-id="e5645-p236">If you specify a range on a sheet that’s not on top, Microsoft Excel will switch to that sheet before selecting. (If you use <b>Select</b> with a range on a sheet that’s not on top, the range will be selected but the sheet won’t be activated).</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-757">Cette méthode possède un <paramref name="Scroll" /> argument qui vous permet de faire défiler la fenêtre de destination.</span><span class="sxs-lookup"><span data-stu-id="e5645-757">This method has a <paramref name="Scroll" /> argument that lets you scroll through the destination window.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-758">Lorsque vous utilisez la méthode <b>Goto,</b> la sélection précédente (avant l’utilisation de la méthode <b>Goto)</b> est ajoutée au tableau des sélections précédentes (pour plus d’informations, voir la <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> propriété).</span><span class="sxs-lookup"><span data-stu-id="e5645-758">When you use the <b>Goto</b> method, the previous selection (before the <b>Goto</b> method runs) is added to the array of previous selections (for more information, see the <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> property).</span></span> <span data-ttu-id="e5645-759">Cette fonctionnalité permet de passer rapidement d’une sélection à l’autre (jusqu’à 4).</span><span class="sxs-lookup"><span data-stu-id="e5645-759">You can use this feature to quickly jump between as many as four selections.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e5645-760">La <b>méthode Select</b> a un argument , ce qui <paramref name="Replace" /> n’est pas le cas de la méthode <b>Goto.</b></span><span class="sxs-lookup"><span data-stu-id="e5645-760">The <b>Select</b> method has a <paramref name="Replace" /> argument; the <b>Goto</b> method doesn’t.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-761">Hauteur, en points, de la fenêtre principale de l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-761">The height, in points, of the main application window.</span></span> <span data-ttu-id="e5645-762">Si la fenêtre est réduite, cette propriété est en lecture seule et fait référence à la hauteur de l’icône.</span><span class="sxs-lookup"><span data-stu-id="e5645-762">If the window is minimized, this property is read-only and refers to the height of the icon.</span></span> <span data-ttu-id="e5645-763">Si la fenêtre est agrandie, cette propriété ne peut être définie.</span><span class="sxs-lookup"><span data-stu-id="e5645-763">If the window is maximized, this property cannot be set.</span></span> <span data-ttu-id="e5645-764">Utilisez la <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> propriété pour déterminer l’état de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="e5645-764">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> property to determine the window state.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public void Help (object HelpFile, object HelpContextID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Help([in]object HelpFile, [in]object HelpContextID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Help(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Help (Optional HelpFile As Object, Optional HelpContextID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(354)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="HelpFile"><span data-ttu-id="e5645-765">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-765">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-766">Nom du fichier d'aide en ligne que vous souhaitez afficher.</span><span class="sxs-lookup"><span data-stu-id="e5645-766">The name of the online Help file you want to display.</span></span> <span data-ttu-id="e5645-767">Si cet argument n'est pas spécifié, le fichier d'aide de Microsoft Excel est automatiquement utilisé.</span><span class="sxs-lookup"><span data-stu-id="e5645-767">If this argument isn't specified, Microsoft Excel Help is used.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="e5645-768">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-768">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-769">Spécifie le numéro d'identificateur contextuel de la rubrique d'aide.</span><span class="sxs-lookup"><span data-stu-id="e5645-769">Specifies the context ID number for the Help topic.</span></span> <span data-ttu-id="e5645-770">Si cet argument n'est pas spécifié, la boîte de dialogue Rubriques d'aide est affichée.</span><span class="sxs-lookup"><span data-stu-id="e5645-770">If this argument isn't specified, the Help Topics dialog box is displayed.</span></span></param>
        <summary><span data-ttu-id="e5645-771">Cette méthode affiche une rubrique d'aide.</span><span class="sxs-lookup"><span data-stu-id="e5645-771">Displays a Help topic.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighQualityModeForGraphics">
      <MemberSignature Language="C#" Value="public bool HighQualityModeForGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighQualityModeForGraphics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HighQualityModeForGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Property HighQualityModeForGraphics As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighQualityModeForGraphics { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-772">Obtient ou définit si Excel utilise le mode haute qualité pour imprimer des graphiques.</span><span class="sxs-lookup"><span data-stu-id="e5645-772">Gets or sets whether Excel uses high quality mode to print graphics.</span></span></summary>
        <value><span data-ttu-id="e5645-773"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e5645-773"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="e5645-774">Cette propriété correspond au paramètre de la case à cocher Mode haute qualité pour les graphiques de la section Imprimer de la catégorie Avancé de la boîte de dialogue Options Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-774">This property corresponds to the setting of the High quality mode for graphics check box in the Print section of the Advanced category of the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hinstance">
      <MemberSignature Language="C#" Value="public int Hinstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hinstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hinstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hinstance As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hinstance { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-775">Renvoie le handle d’instance de l’instance qui appelle Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-775">Returns the instance handle of the instance that is calling Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HinstancePtr">
      <MemberSignature Language="C#" Value="public object HinstancePtr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HinstancePtr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HinstancePtr" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HinstancePtr As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HinstancePtr { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-776">Obtient un handle vers l’instance de Microsoft Excel 2010 représentée par l’objet <see cref="T:Microsoft.Office.Interop.Excel._Application" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5645-776">Gets a handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span></span></summary>
        <value><span data-ttu-id="e5645-777">Handle vers l’instance de Microsoft Excel 2010 représentée par l’objet <see cref="T:Microsoft.Office.Interop.Excel._Application" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5645-777">A handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-778"><b>Variant</b> en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-778">Read-only <b>Variant</b>.</span></span></para>
          <para><span data-ttu-id="e5645-779">Cette propriété renvoie un handle correct dans les versions 32 et 64 bits d’Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-779">This property returns a correct handle in both the 32- and 64-bit versions of Excel.</span></span> <span data-ttu-id="e5645-780">Il étend la fonctionnalité de la propriété de l’objet, qui fonctionne uniquement correctement dans la <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> <see cref="T:Microsoft.Office.Interop.Excel._Application" /> version 32 bits d’Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-780">It extends the functionality of the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object, which only works correctly in the 32-bit version of Excel.</span></span></para>
          <para><span data-ttu-id="e5645-781">Le type de données idéal à utiliser avec cette propriété est le type de données <b>LongPtr</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-781">The ideal data type to use with this property is the <b>LongPtr</b> data type.</span></span> <span data-ttu-id="e5645-782">L’affectation de la valeur renvoyée par cette propriété à une variable <b>LongPtr</b> fonctionne normalement dans les versions 32 bits et 64 bits d’Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-782">Assigning the value returned by this property to a <b>LongPtr</b> variable will work as expected in both 32- and 64-bit versions of Excel.</span></span> <span data-ttu-id="e5645-783">La propriété est définie en tant que <b>Variant</b> pour des raisons d’implémentation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-783">The property is defined as <b>Variant</b> for internal implementation reasons.</span></span> <span data-ttu-id="e5645-784">Cependant, elle renvoie toujours une valeur 32 bits sur des systèmes 32 bits et une valeur 64 bits sur des systèmes 64 bits.</span><span class="sxs-lookup"><span data-stu-id="e5645-784">However, it always returns a 32-bit value on 32-bit systems and a 64-bit value on 64-bit systems.</span></span></para>
          <para><span data-ttu-id="e5645-785">Cette propriété fonctionne uniquement à partir d’Excel 2010 et n’est requise qu’avec la version 64 bits d’Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-785">This property only works starting with Excel 2010, and is only required with the 64-bit version of Excel.</span></span> <span data-ttu-id="e5645-786">Si vous devez écrire du code qui fonctionne également avec des versions antérieures d’Excel, afin d’éviter les erreurs de compilation, lisez cette propriété sous une directive de compilation conditionnelle Win64 #if et utilisez la propriété sous la <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> directive #else.</span><span class="sxs-lookup"><span data-stu-id="e5645-786">If you must write code that will also work with earlier versions of Excel, in order to avoid compilation errors, read this property under an #if Win64 conditional compilation directive, and use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property under the #else directive.</span></span></para>
          <para><span data-ttu-id="e5645-787">
            <b>Remarque</b>: cette propriété fonctionne parfaitement dans les environnements 32 et 64 bits à partir d’Excel 2010.</span><span class="sxs-lookup"><span data-stu-id="e5645-787">
            <b>Note</b>: This property works fine in both 32- and 64-bit environments starting with Excel 2010.</span></span> <span data-ttu-id="e5645-788">Par conséquent, si votre code est destiné à être utilisé uniquement avec Excel 2010 ou une ultérieure, 32 ou 64 bits, il peut lire cette propriété sans compilation conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="e5645-788">Therefore, if your code is intended to be used only with Excel 2010 or later, either 32- or 64-bit, it can read this property without conditional compilation.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-789">Renvoie un <b>nombre integer</b> indiquant le handle de fenêtre de niveau supérieur de la fenêtre Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-789">Returns an <b>Integer</b> indicating the top-level window handle of the Microsoft Excel window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreRemoteRequests">
      <MemberSignature Language="C#" Value="public bool IgnoreRemoteRequests { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreRemoteRequests" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IgnoreRemoteRequests" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreRemoteRequests As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreRemoteRequests { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-790">Cette propriété a la valeur <b>True</b> si les requêtes DDE hors programme sont ignorées.</span><span class="sxs-lookup"><span data-stu-id="e5645-790"><b>True</b> if remote DDE requests are ignored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InchesToPoints">
      <MemberSignature Language="C#" Value="public double InchesToPoints (double Inches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 InchesToPoints([in]float64 Inches) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InchesToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InchesToPoints (Inches As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InchesToPoints(double Inches);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1087)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Inches" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Inches"><span data-ttu-id="e5645-791">Double <b>obligatoire</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-791">Required <b>Double</b>.</span></span> <span data-ttu-id="e5645-792">Spécifie la valeur en pouces à convertir en points.</span><span class="sxs-lookup"><span data-stu-id="e5645-792">Specifies the inch value to be converted to points.</span></span></param>
        <summary><span data-ttu-id="e5645-793">Cette méthode convertit une mesure en pouces en une mesure en points.</span><span class="sxs-lookup"><span data-stu-id="e5645-793">Converts a measurement from inches to points.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public object InputBox (string Prompt, object Title, object Default, object Left, object Top, object HelpFile, object HelpContextID, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InputBox([in]string Prompt, [in]object Title, [in]object Default, [in]object Left, [in]object Top, [in]object HelpFile, [in]object HelpContextID, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As Object, Optional Default As Object, Optional Left As Object, Optional Top As Object, Optional HelpFile As Object, Optional HelpContextID As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(357)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="Default" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Prompt"><span data-ttu-id="e5645-794">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-794">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-795">Message à afficher dans la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="e5645-795">The message to be displayed in the dialog box.</span></span> <span data-ttu-id="e5645-796">Il peut s’agit d’une chaîne, d’un nombre, d’une date ou d’une <b>valeur boolé</b> américaine.</span><span class="sxs-lookup"><span data-stu-id="e5645-796">This can be a string, a number, a date, or a <b>Boolean</b> value.</span></span></param>
        <param name="Title"><span data-ttu-id="e5645-797">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-797">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-798">Titre de la zone d'entrée.</span><span class="sxs-lookup"><span data-stu-id="e5645-798">The title for the input box.</span></span> <span data-ttu-id="e5645-799">Si vous ne spécifiez pas cet argument, le titre par défaut est « Entrée ».</span><span class="sxs-lookup"><span data-stu-id="e5645-799">If this argument is omitted, the default title is "Input."</span></span></param>
        <param name="Default"><span data-ttu-id="e5645-800">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-800">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-801">Spécifie une valeur qui apparaît dans la zone de texte quand la boîte de dialogue s’affiche.</span><span class="sxs-lookup"><span data-stu-id="e5645-801">Specifies a value that will appear in the text box when the dialog box is initially displayed.</span></span> <span data-ttu-id="e5645-802">Si cet argument est omis, la zone de texte reste vide.</span><span class="sxs-lookup"><span data-stu-id="e5645-802">If this argument is omitted, the text box is left empty.</span></span> <span data-ttu-id="e5645-803">Cette valeur peut être un objet <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-803">This value can be a <b>Range</b> object.</span></span></param>
        <param name="Left"><span data-ttu-id="e5645-804">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-804">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-805">Spécifie une position x pour la boîte de dialogue par rapport au coin supérieur gauche de l’écran en points.</span><span class="sxs-lookup"><span data-stu-id="e5645-805">Specifies an x position for the dialog box in relation to the upper-left corner of the screen in points.</span></span></param>
        <param name="Top"><span data-ttu-id="e5645-806">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-806">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-807">Spécifie une position y pour la boîte de dialogue par rapport au coin supérieur gauche de l’écran en points.</span><span class="sxs-lookup"><span data-stu-id="e5645-807">Specifies a y position for the dialog box in relation to the upper-left corner of the screen in points.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="e5645-808">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-808">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-809">Nom du fichier d’aide pour cette zone d’entrée.</span><span class="sxs-lookup"><span data-stu-id="e5645-809">The name of the Help file for this input box.</span></span> <span data-ttu-id="e5645-810">Si les <paramref name="HelpFile" /> <paramref name="HelpContextID" /> arguments et les arguments sont présents, un bouton Aide apparaît dans la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="e5645-810">If the <paramref name="HelpFile" /> and <paramref name="HelpContextID" /> arguments are present, a Help button will appear in the dialog box.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="e5645-811">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-811">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-812">Numéro d’ID de contexte de la rubrique d’aide dans <paramref name="HelpFile" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-812">The context ID number of the Help topic in <paramref name="HelpFile" />.</span></span></param>
        <param name="Type"><span data-ttu-id="e5645-813">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-813">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-814">Spécifie le type des données renvoyées.</span><span class="sxs-lookup"><span data-stu-id="e5645-814">Specifies the return data type.</span></span> <span data-ttu-id="e5645-815">Si vous ne spécifiez pas cet argument, la boîte de dialogue renvoie du texte.</span><span class="sxs-lookup"><span data-stu-id="e5645-815">If this argument is omitted, the dialog box returns text.</span></span> <span data-ttu-id="e5645-816">Il peut s’agit d’une valeur ou d’une somme des valeurs suivantes. Vous pouvez utiliser la somme des valeurs permises pour <paramref name="Type" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-816">Can be one or a sum of the following values.You can use the sum of the allowable values for <paramref name="Type" />.</span></span> <span data-ttu-id="e5645-817">Par exemple, pour une zone d’entrée qui peut accepter du texte et des nombres, <paramref name="Type" /> définissez-la sur 1 + 2.</span><span class="sxs-lookup"><span data-stu-id="e5645-817">For example, for an input box that can accept both text and numbers, set <paramref name="Type" /> to 1 + 2.</span></span></param>
        <summary><span data-ttu-id="e5645-818">Cette méthode affiche une boîte de dialogue dans laquelle l'utilisateur peut saisir des données.</span><span class="sxs-lookup"><span data-stu-id="e5645-818">Displays a dialog box for user input.</span></span> <span data-ttu-id="e5645-819">Elle renvoie les informations saisies dans la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="e5645-819">Returns the information entered in the dialog box.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e5645-820">Utilisez <b>InputBox</b> pour afficher une boîte de dialogue où entrer les informations à utiliser dans une macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-820">Use <b>InputBox</b> to display a simple dialog box so that you can enter information to be used in a macro.</span></span> <span data-ttu-id="e5645-821">La boîte de dialogue est dotée d’un bouton OK et d’un bouton Annuler.</span><span class="sxs-lookup"><span data-stu-id="e5645-821">The dialog box has an OK button and a Cancel button.</span></span> <span data-ttu-id="e5645-822">Si vous cliquez sur le bouton OK, la méthode <b>InputBox</b> renvoie la valeur entrée dans la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="e5645-822">If you choose the OK button, <b>InputBox</b> returns the value entered in the dialog box.</span></span> <span data-ttu-id="e5645-823">Si vous cliquez sur le bouton Annuler, la méthode <b>InputBox</b> renvoie la valeur <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-823">If you click the Cancel button, <b>InputBox</b> returns <b>False</b>.</span></span></para>
          <para><span data-ttu-id="e5645-824">Si la valeur est 0, InputBox renvoie la formule sous la forme d’un texte ( par <paramref name="Type" /> exemple, « <b></b> =2\*PI()/360 ».</span><span class="sxs-lookup"><span data-stu-id="e5645-824">If <paramref name="Type" /> is 0, <b>InputBox</b> returns the formula in the form of text — for example, "=2\*PI()/360".</span></span> <span data-ttu-id="e5645-825">Si la formule contient des références, celles-ci sont renvoyées sous forme de références de style A1.</span><span class="sxs-lookup"><span data-stu-id="e5645-825">If there are any references in the formula, they are returned as A1-style references.</span></span> <span data-ttu-id="e5645-826">(À utiliser <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> pour convertir entre les styles de référence.)</span><span class="sxs-lookup"><span data-stu-id="e5645-826">(Use <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> to convert between reference styles.)</span></span></para>
          <para><span data-ttu-id="e5645-827">Si <paramref name="Type" /> la plage est 8, <b>InputBox</b> renvoie un <b>objet Range.</b></span><span class="sxs-lookup"><span data-stu-id="e5645-827">If <paramref name="Type" /> is 8, <b>InputBox</b> returns a <b>Range</b> object.</span></span></para>
          <para><span data-ttu-id="e5645-828">Si vous utilisez la méthode <b>InputBox</b> pour demander une formule à l’utilisateur, vous devez utiliser la propriété pour affecter la formule <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> à un objet <b>Range.</b></span><span class="sxs-lookup"><span data-stu-id="e5645-828">If you use the <b>InputBox</b> method to ask the user for a formula, you must use the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> property to assign the formula to a <b>Range</b> object.</span></span> <span data-ttu-id="e5645-829">La formule d’entrée est dans la langue de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5645-829">The input formula will be in the user's language.</span></span></para>
          <para><span data-ttu-id="e5645-830">La méthode <b>InputBox</b> diffère de la fonction <b>InputBox</b> en ce qu’elle permet la validation sélective de l’entrée de l’utilisateur et elle peut être utilisée avec des objets, des valeurs d’erreur et des formules Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-830">The <b>InputBox</b> method differs from the <b>InputBox</b> function in that it allows selective validation of the user's input, and it can be used with Microsoft Excel objects, error values, and formulas.</span></span> <span data-ttu-id="e5645-831">InputBox sans qualificateur d’objet appelle la <b>fonction InputBox.</b></span><span class="sxs-lookup"><span data-stu-id="e5645-831">InputBox with no object qualifier calls the <b>InputBox</b> function.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="public bool Interactive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Interactive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Interactive" />
      <MemberSignature Language="VB.NET" Value="Public Property Interactive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Interactive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-832"><b>True</b> si Microsoft Excel est en mode interactif ; cette propriété a généralement la <b>valeur True</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-832"><b>True</b> if Microsoft Excel is in interactive mode; this property is usually <b>True</b>.</span></span> <span data-ttu-id="e5645-833">Si vous définissez cette propriété sur <b>False,</b>Microsoft Excel bloque toutes les entrées du clavier et de la souris (à l’exception des entrées dans les boîtes de dialogue affichées par votre code).</span><span class="sxs-lookup"><span data-stu-id="e5645-833">If you set this property to <b>False</b>, Microsoft Excel will block all input from the keyboard and mouse (except input to dialog boxes that are displayed by your code).</span></span> <span data-ttu-id="e5645-834">Le blocage de l’entrée utilisateur empêche l’utilisateur d’interférer avec le code lors du déplacement ou de l’activation d’objets Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-834">Blocking user input will prevent the user from interfering with the code as it moves or activates Microsoft Excel objects.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-835">Cette propriété est utile si vous écrivez du code pour communiquer avec Microsoft Excel à partir d’une autre application.</span><span class="sxs-lookup"><span data-stu-id="e5645-835">This property is useful if you're writing code to communicate with Microsoft Excel from another application.</span></span></para>
          <para><span data-ttu-id="e5645-836">Si vous affectez la valeur <b>False</b> à cette propriété, n'oubliez pas de rétablir la valeur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-836">If you set this property to <b>False</b>, don't forget to set it back to <b>True</b>.</span></span> <span data-ttu-id="e5645-837">Microsoft Excel ne réessais pas automatiquement cette propriété sur <b>True</b> lorsque votre code cesse de s’exécute.</span><span class="sxs-lookup"><span data-stu-id="e5645-837">Microsoft Excel won't automatically set this property back to <b>True</b> when your code stops running.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="International">
      <MemberSignature Language="C#" Value="public object International[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object International(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.International(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property International(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ International[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e5645-838">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-838">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-839">Paramètre à renvoyer.</span><span class="sxs-lookup"><span data-stu-id="e5645-839">The setting to be returned.</span></span> <span data-ttu-id="e5645-840">Il peut s’y trouver <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> l’une des constantes répertoriées dans les tableaux suivants.</span><span class="sxs-lookup"><span data-stu-id="e5645-840">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> constants listed in the following tables.</span></span></param>
        <summary><span data-ttu-id="e5645-841">Retourne des informations sur le pays/la région et les paramètres internationaux.</span><span class="sxs-lookup"><span data-stu-id="e5645-841">Returns information about the current country/region and international settings.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-842">Accolades et crochets</span><span class="sxs-lookup"><span data-stu-id="e5645-842">Brackets and Braces</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-843">
                <b>xlLeftBrace</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-843">
                <b>xlLeftBrace</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-844">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-844">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-845">Caractère utilisé à la place de l'accolade gauche ({) dans les littérales de tableaux.</span><span class="sxs-lookup"><span data-stu-id="e5645-845">Character used instead of the left brace ({) in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-846">
                <b>xlLeftBracket</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-846">
                <b>xlLeftBracket</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-847">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-847">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-848">Caractère utilisé à la place du crochet gauche ([) dans les références relatives de style R1C1.</span><span class="sxs-lookup"><span data-stu-id="e5645-848">Character used instead of the left bracket ([) in R1C1-style relative references.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-849">
                <b>xlLowerCaseColumnLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-849">
                <b>xlLowerCaseColumnLetter</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-850">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-850">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-851">Référence de colonne en minuscules.</span><span class="sxs-lookup"><span data-stu-id="e5645-851">Lowercase column letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-852">
                <b>xlLowerCaseRowLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-852">
                <b>xlLowerCaseRowLetter</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-853">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-853">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-854">Référence de ligne en minuscules.</span><span class="sxs-lookup"><span data-stu-id="e5645-854">Lowercase row letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-855">
                <b>xlRightBrace</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-855">
                <b>xlRightBrace</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-856">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-856">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-857">Caractère utilisé à la place de l'accolade droite (}) dans les littérales de tableaux.</span><span class="sxs-lookup"><span data-stu-id="e5645-857">Character used instead of the right brace (}) in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-858">
                <b>xlRightBracket</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-858">
                <b>xlRightBracket</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-859">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-859">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-860">Caractère utilisé à la place du crochet gauche (]) dans les références relatives de style R1C1.</span><span class="sxs-lookup"><span data-stu-id="e5645-860">Character used instead of the right bracket (]) in R1C1-style references.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-861">
                <b>xlUpperCaseColumnLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-861">
                <b>xlUpperCaseColumnLetter</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-862">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-862">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-863">Référence de colonne en majuscules.</span><span class="sxs-lookup"><span data-stu-id="e5645-863">Uppercase column letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-864">
                <b>xlUpperCaseRowLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-864">
                <b>xlUpperCaseRowLetter</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-865">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-865">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-866">Référence de ligne en majuscules (pour les références de style R1C1).</span><span class="sxs-lookup"><span data-stu-id="e5645-866">Uppercase row letter (for R1C1-style references).</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-867">Paramètres de pays/région</span><span class="sxs-lookup"><span data-stu-id="e5645-867">Country/Region Settings</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-868">
                <b>xlCountryCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-868">
                <b>xlCountryCode</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-869">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-869">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-870">Version de pays/région de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-870">Country/Region version of Microsoft Excel.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-871">
                <b>xlCountrySetting</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-871">
                <b>xlCountrySetting</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-872">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-872">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-873">Paramètre de pays/région sélectionné dans le Panneau de configuration Windows.</span><span class="sxs-lookup"><span data-stu-id="e5645-873">Current country/region setting in the Windows Control Panel.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-874">
                <b>xlGeneralFormatName</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-874">
                <b>xlGeneralFormatName</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-875">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-875">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-876">Nom du format numérique Standard.</span><span class="sxs-lookup"><span data-stu-id="e5645-876">Name of the General number format.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-877">Devise</span><span class="sxs-lookup"><span data-stu-id="e5645-877">Currency</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-878">
                <b>xlCurrencyBefore</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-878">
                <b>xlCurrencyBefore</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-879">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-879">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-880">
                <b>True</b> si le symbole monétaire précède la valeur, <b>False</b> s'il suit la valeur.</span><span class="sxs-lookup"><span data-stu-id="e5645-880">
                <b>True</b> if the currency symbol precedes the currency values; <b>False</b> if it follows them.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-881">
                <b>xlCurrencyCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-881">
                <b>xlCurrencyCode</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-882">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-882">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-883">Symbole monétaire.</span><span class="sxs-lookup"><span data-stu-id="e5645-883">Currency symbol.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-884">
                <b>xlCurrencyDigits</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-884">
                <b>xlCurrencyDigits</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-885">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-885">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-886">Nombre de décimales à utiliser dans les formats monétaires.</span><span class="sxs-lookup"><span data-stu-id="e5645-886">Number of decimal digits to be used in currency formats.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-887">
                <b>xlCurrencyLeadingZeros</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-887">
                <b>xlCurrencyLeadingZeros</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-888">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-888">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-889">
                <b>True</b> si des zéros sont affichés à gauche pour des valeurs monétaires nulles.</span><span class="sxs-lookup"><span data-stu-id="e5645-889">
                <b>True</b> if leading zeros are displayed for zero currency values.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-890">
                <b>xlCurrencyMinusSign</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-890">
                <b>xlCurrencyMinusSign</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-891">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-891">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-892">
                <b>True</b> si vous utilisez un signe moins pour les nombres négatifs ; <b>False</b> si vous utilisez des parenthèses.</span><span class="sxs-lookup"><span data-stu-id="e5645-892">
                <b>True</b> if you’re using a minus sign for negative numbers; <b>False</b> if you’re using parentheses.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-893">
                <b>xlCurrencyNegative</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-893">
                <b>xlCurrencyNegative</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-894">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-894">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-895">Format monétaire pour les valeurs monétaires négatives : 0 = ( symbolex) ou (x  symbole) 1 = - symbolex ou -x symbole 2 =  symbole-x ou x- symbole 3 =  symbolex- ou x symbole- où symbole correspond au symbole monétaire du pays ou de la région.</span><span class="sxs-lookup"><span data-stu-id="e5645-895">Currency format for negative currency values:0 = (symbolx) or (xsymbol)1 = -symbolx or -xsymbol2 = symbol-x or x-symbol3 = symbolx- or xsymbol-where symbol is the currency symbol of the country or region.</span></span> <span data-ttu-id="e5645-896">La position du symbole monétaire est déterminée par la variable <b>xICurrencyBefore</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-896">Note that the position of the currency symbol is determined by <b>xlCurrencyBefore</b>.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-897">
                <b>xlCurrencySpaceBefore</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-897">
                <b>xlCurrencySpaceBefore</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-898">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-898">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-899">
                <b>True</b> si un espace est ajouté devant le symbole monétaire.</span><span class="sxs-lookup"><span data-stu-id="e5645-899">
                <b>True</b> if a space is added before the currency symbol.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-900">
                <b>xlCurrencyTrailingZeros</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-900">
                <b>xlCurrencyTrailingZeros</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-901">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-901">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-902">
                <b>True</b> si des zéros sont affichés à droite pour des valeurs monétaires nulles.</span><span class="sxs-lookup"><span data-stu-id="e5645-902">
                <b>True</b> if trailing zeros are displayed for zero currency values.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-903">
                <b>xlNoncurrencyDigits</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-903">
                <b>xlNoncurrencyDigits</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-904">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-904">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-905">Nombre de décimales à utiliser dans des formats non monétaires.</span><span class="sxs-lookup"><span data-stu-id="e5645-905">Number of decimal digits to be used in non-currency formats.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-906">Date et heure</span><span class="sxs-lookup"><span data-stu-id="e5645-906">Date and Time</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-907">
                <b>xl24HourClock</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-907">
                <b>xl24HourClock</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-908">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-908">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-909">
                <b>True</b> si vous utilisez l’heure 24 heures ; <b>False</b> si vous utilisez l’heure de 12 heures.</span><span class="sxs-lookup"><span data-stu-id="e5645-909">
                <b>True</b> if you’re using 24-hour time; <b>False</b> if you’re using 12-hour time.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-910">
                <b>xl4DigitYears</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-910">
                <b>xl4DigitYears</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-911">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-911">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-912">
                <b>True</b> si vous utilisez des années à quatre chiffres ; <b>False</b> si vous utilisez des années à deux chiffres.</span><span class="sxs-lookup"><span data-stu-id="e5645-912">
                <b>True</b> if you’re using four-digit years; <b>False</b> if you’re using two-digit years.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-913">
                <b>xlDateOrder</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-913">
                <b>xlDateOrder</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-914">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-914">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-915">Ordre des éléments de la date : 0 = mois-jour-année1 = jour-mois-année2 = année-mois-jour</span><span class="sxs-lookup"><span data-stu-id="e5645-915">Order of date elements:0 = month-day-year1 = day-month-year2 = year-month-day</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-916">
                <b>xlDateSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-916">
                <b>xlDateSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-917">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-917">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-918">Séparateur de date (/).</span><span class="sxs-lookup"><span data-stu-id="e5645-918">Date separator (/).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-919">
                <b>xlDayCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-919">
                <b>xlDayCode</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-920">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-920">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-921">Symbole du jour (j).</span><span class="sxs-lookup"><span data-stu-id="e5645-921">Day symbol (d).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-922">
                <b>xlDayLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-922">
                <b>xlDayLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-923">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-923">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-924">True si un zéro est affiché à gauche dans les jours.</span><span class="sxs-lookup"><span data-stu-id="e5645-924">True if a leading zero is displayed in days.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-925">
                <b>xlHourCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-925">
                <b>xlHourCode</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-926">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-926">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-927">Symbole des heures (h).</span><span class="sxs-lookup"><span data-stu-id="e5645-927">Hour symbol (h).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-928">
                <b>xlMDY</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-928">
                <b>xlMDY</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-929">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-929">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-930">
                <b>True</b> si la date complète utilise l'ordre mois-jour-année, <b>False</b> si elle utilise l'ordre jour-mois-année.</span><span class="sxs-lookup"><span data-stu-id="e5645-930">
                <b>True</b> if the date order is month-day-year for dates displayed in the long form; <b>False</b> if the date order is day-month-year.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-931">
                <b>xlMinuteCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-931">
                <b>xlMinuteCode</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-932">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-932">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-933">Symbole des minutes (m).</span><span class="sxs-lookup"><span data-stu-id="e5645-933">Minute symbol (m).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-934">
                <b>xlMonthCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-934">
                <b>xlMonthCode</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-935">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-935">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-936">Symbole du mois (m).</span><span class="sxs-lookup"><span data-stu-id="e5645-936">Month symbol (m).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-937">
                <b>xlMonthLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-937">
                <b>xlMonthLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-938">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-938">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-939">
                <b>True</b> si un zéro est affiché à gauche dans les mois (lorsque les mois sont affichés sous forme numérique).</span><span class="sxs-lookup"><span data-stu-id="e5645-939">
                <b>True</b> if a leading zero is displayed in months (when months are displayed as numbers).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-940">
                <b>xlMonthNameChars</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-940">
                <b>xlMonthNameChars</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-941">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-941">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-942">Cette propriété renvoie toujours trois caractères pour la compatibilité amont.</span><span class="sxs-lookup"><span data-stu-id="e5645-942">Always returns three characters for backward compatibility.</span></span> <span data-ttu-id="e5645-943">Les noms de mois courts sont lus à partir de Microsoft Windows et peuvent avoir n'importe quelle longueur.</span><span class="sxs-lookup"><span data-stu-id="e5645-943">Abbreviated month names are read from Microsoft Windows and can be any length.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-944">
                <b>xlSecondCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-944">
                <b>xlSecondCode</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-945">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-945">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-946">Symbole des secondes (s).</span><span class="sxs-lookup"><span data-stu-id="e5645-946">Second symbol (s).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-947">
                <b>xlTimeSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-947">
                <b>xlTimeSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-948">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-948">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-949">Séparateur d'heure (:).</span><span class="sxs-lookup"><span data-stu-id="e5645-949">Time separator (:).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-950">
                <b>xlTimeLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-950">
                <b>xlTimeLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-951">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-951">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-952">
                <b>True</b> si un zéro est affiché à gauche dans l'heure.</span><span class="sxs-lookup"><span data-stu-id="e5645-952">
                <b>True</b> if a leading zero is displayed in times.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-953">
                <b>xlWeekdayNameChars</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-953">
                <b>xlWeekdayNameChars</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-954">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-954">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-955">Cette propriété renvoie toujours trois caractères pour la compatibilité amont.</span><span class="sxs-lookup"><span data-stu-id="e5645-955">Always returns three characters for backward compatibility.</span></span> <span data-ttu-id="e5645-956">Les noms de jours courts sont lus à partir de Microsoft Windows et peuvent avoir n'importe quelle longueur.</span><span class="sxs-lookup"><span data-stu-id="e5645-956">Abbreviated weekday names are read from Microsoft Windows and can be any length.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-957">
                <b>xlYearCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-957">
                <b>xlYearCode</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-958">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-958">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-959">Symbole de l'année dans les formats numériques (a).</span><span class="sxs-lookup"><span data-stu-id="e5645-959">Year symbol in number formats (y).</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-960">Systèmes de mesure</span><span class="sxs-lookup"><span data-stu-id="e5645-960">Measurement Systems</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-961">
                <b>xlMetric</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-961">
                <b>xlMetric</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-962">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-962">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-963">
                <b>True</b> si vous utilisez le système métrique ; <b>False</b> si vous utilisez le système de mesure anglais.</span><span class="sxs-lookup"><span data-stu-id="e5645-963">
                <b>True</b> if you’re using the metric system; <b>False</b> if you’re using the English measurement system.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-964">
                <b>xlNonEnglishFunctions</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-964">
                <b>xlNonEnglishFunctions</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-965">
                <b>Booléen</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-965">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-966">
                <b>True</b> si vous n’affichez pas de fonctions en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5645-966">
                <b>True</b> if you’re not displaying functions in English.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-967">Séparateurs</span><span class="sxs-lookup"><span data-stu-id="e5645-967">Separators</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-968">
                <b>xlAlternateArraySeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-968">
                <b>xlAlternateArraySeparator</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-969">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-969">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-970">Autre séparateur d'éléments de tableaux à utiliser si le séparateur courant est identique au séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="e5645-970">Alternate array item separator to be used if the current array separator is the same as the decimal separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-971">
                <b>xlColumnSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-971">
                <b>xlColumnSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-972">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-972">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-973">Caractère utilisé pour séparer les colonnes dans les littérales de tableaux.</span><span class="sxs-lookup"><span data-stu-id="e5645-973">Character used to separate columns in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-974">
                <b>xlDecimalSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-974">
                <b>xlDecimalSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-975">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-975">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-976">Séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="e5645-976">Decimal separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-977">
                <b>xlListSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-977">
                <b>xlListSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-978">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-978">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-979">Séparateur de listes.</span><span class="sxs-lookup"><span data-stu-id="e5645-979">List separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-980">
                <b>xlRowSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-980">
                <b>xlRowSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-981">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-981">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-982">Caractère utilisé pour séparer les lignes dans les littérales de tableaux.</span><span class="sxs-lookup"><span data-stu-id="e5645-982">Character used to separate rows in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-983">
                <b>xlThousandsSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-983">
                <b>xlThousandsSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="e5645-984">
                <b>Chaîne</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-984">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="e5645-985">Zéro ou séparateur de milliers.</span><span class="sxs-lookup"><span data-stu-id="e5645-985">Zero or thousands separator.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-986">Les symboles, les séparateurs et les formats monétaires indiqués dans le tableau précédent peuvent différer de ceux utilisés dans votre langue ou votre emplacement géographique et peuvent ne pas être disponibles, selon la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</span><span class="sxs-lookup"><span data-stu-id="e5645-986">Symbols, separators, and currency formats shown in the preceding table may differ from those used in your language or geographic location and may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Intersect (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Intersect([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(766)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="e5645-987">Plage <b>obligatoire</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-987">Required <b>Range</b>.</span></span> <span data-ttu-id="e5645-988">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-988">The intersecting ranges.</span></span> <span data-ttu-id="e5645-989">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-989">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg2"><span data-ttu-id="e5645-990">Plage <b>obligatoire</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-990">Required <b>Range</b>.</span></span> <span data-ttu-id="e5645-991">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-991">The intersecting ranges.</span></span> <span data-ttu-id="e5645-992">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-992">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg3"><span data-ttu-id="e5645-993">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-993">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-994">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-994">The intersecting ranges.</span></span> <span data-ttu-id="e5645-995">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-995">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg4"><span data-ttu-id="e5645-996">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-996">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-997">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-997">The intersecting ranges.</span></span> <span data-ttu-id="e5645-998">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-998">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg5"><span data-ttu-id="e5645-999">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-999">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1000">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1000">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1001">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1001">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg6"><span data-ttu-id="e5645-1002">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1002">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1003">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1003">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1004">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1004">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg7"><span data-ttu-id="e5645-1005">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1005">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1006">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1006">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1007">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1007">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg8"><span data-ttu-id="e5645-1008">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1008">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1009">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1009">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1010">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1010">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg9"><span data-ttu-id="e5645-1011">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1011">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1012">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1012">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1013">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1013">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg10"><span data-ttu-id="e5645-1014">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1014">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1015">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1015">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1016">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1016">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg11"><span data-ttu-id="e5645-1017">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1017">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1018">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1018">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1019">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1019">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg12"><span data-ttu-id="e5645-1020">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1020">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1021">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1021">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1022">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1022">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg13"><span data-ttu-id="e5645-1023">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1023">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1024">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1024">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1025">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1025">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg14"><span data-ttu-id="e5645-1026">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1026">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1027">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1027">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1028">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1028">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg15"><span data-ttu-id="e5645-1029">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1029">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1030">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1030">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1031">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1031">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg16"><span data-ttu-id="e5645-1032">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1032">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1033">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1033">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1034">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1034">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg17"><span data-ttu-id="e5645-1035">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1035">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1036">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1036">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1037">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1037">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg18"><span data-ttu-id="e5645-1038">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1038">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1039">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1039">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1040">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1040">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg19"><span data-ttu-id="e5645-1041">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1041">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1042">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1042">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1043">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1043">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg20"><span data-ttu-id="e5645-1044">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1044">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1045">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1045">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1046">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1046">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg21"><span data-ttu-id="e5645-1047">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1047">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1048">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1048">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1049">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1049">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg22"><span data-ttu-id="e5645-1050">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1050">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1051">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1051">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1052">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1052">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg23"><span data-ttu-id="e5645-1053">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1053">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1054">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1054">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1055">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1055">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg24"><span data-ttu-id="e5645-1056">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1056">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1057">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1057">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1058">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1058">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg25"><span data-ttu-id="e5645-1059">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1059">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1060">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1060">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1061">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1061">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg26"><span data-ttu-id="e5645-1062">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1062">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1063">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1063">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1064">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1064">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg27"><span data-ttu-id="e5645-1065">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1065">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1066">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1066">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1067">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1067">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg28"><span data-ttu-id="e5645-1068">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1068">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1069">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1069">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1070">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1070">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg29"><span data-ttu-id="e5645-1071">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1071">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1072">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1072">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1073">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1073">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg30"><span data-ttu-id="e5645-1074">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1074">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1075">Plages ayant une intersection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1075">The intersecting ranges.</span></span> <span data-ttu-id="e5645-1076">Au moins deux objets <b>Plage</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1076">At least two <b>Range</b> objects must be specified.</span></span></param>
        <summary><span data-ttu-id="e5645-1077">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente l’intersection rectangulaire de deux plages ou plus.</span><span class="sxs-lookup"><span data-stu-id="e5645-1077">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rectangular intersection of two or more ranges.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSandboxed">
      <MemberSignature Language="C#" Value="public bool IsSandboxed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSandboxed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSandboxed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSandboxed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1078">Indique si le livre de travail spécifié est ouvert dans une fenêtre en affichage protégé.</span><span class="sxs-lookup"><span data-stu-id="e5645-1078">Gets whether the specified workbook is open in a Protected View window.</span></span></summary>
        <value><span data-ttu-id="e5645-1079"><b>true</b> si le workbook spécifié est ouvert dans une fenêtre en affichage protégé ; sinon, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1079"><b>true</b> if the specified workbook is open in a Protected View window; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-1080">Lecture seule</span><span class="sxs-lookup"><span data-stu-id="e5645-1080">Read-only</span></span></para>
          <para><span data-ttu-id="e5645-1081">Utilisez la <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> propriété pour déterminer si un workbook est ouvert dans une fenêtre en affichage protégé.</span><span class="sxs-lookup"><span data-stu-id="e5645-1081">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> property to determine if a workbook is open in a Protected View window.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public bool Iteration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Iteration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Iteration" />
      <MemberSignature Language="VB.NET" Value="Public Property Iteration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Iteration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1082">Cette propriété a la valeur <b>True</b> si Microsoft Excel utilise l'itération pour résoudre des références circulaires.</span><span class="sxs-lookup"><span data-stu-id="e5645-1082"><b>True</b> if Microsoft Excel will use iteration to resolve circular references.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.LanguageSettings LanguageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.LanguageSettings LanguageSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LanguageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageSettings As LanguageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::LanguageSettings ^ LanguageSettings { Microsoft::Office::Core::LanguageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.LanguageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1083">Renvoie <see cref="T:Microsoft.Office.Core.LanguageSettings" /> l’objet, qui contient des informations sur les paramètres de langue dans Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1083">Returns the <see cref="T:Microsoft.Office.Core.LanguageSettings" /> object, which contains information about the language settings in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeButtons">
      <MemberSignature Language="C#" Value="public bool LargeButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LargeButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LargeButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1084">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1084">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeOperationCellThousandCount">
      <MemberSignature Language="C#" Value="public int LargeOperationCellThousandCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeOperationCellThousandCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeOperationCellThousandCount" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeOperationCellThousandCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LargeOperationCellThousandCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1085">Cette propriété renvoie ou définit le nombre maximal de cellules nécessaires dans une opération au-delà de laquelle une alerte est déclenchée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1085">Returns or sets the maximum number of cells needed in an operation beyond which an alert  is triggered.</span></span> <span data-ttu-id="e5645-1086">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-1086">Read/write.</span></span></summary>
        <value><span data-ttu-id="e5645-1087"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="e5645-1087"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1088">Distance, en points, entre le bord gauche de l’écran et le bord gauche de la fenêtre principale de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1088">The distance, in points, from the left edge of the screen to the left edge of the main Microsoft Excel window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1089">Si la fenêtre est agrandie, cette propriété renvoie un nombre négatif qui varie en fonction de la largeur de la bordure de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="e5645-1089">If the window is maximized, this property returns a negative number that varies based on the width of the window border.</span></span> <span data-ttu-id="e5645-1090">Si cette propriété est 0 (zéro), la fenêtre sera légèrement plus petite que si elle était agrandie.</span><span class="sxs-lookup"><span data-stu-id="e5645-1090">Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized.</span></span> <span data-ttu-id="e5645-1091">En d’autres termes, si cette propriété a la valeur 0 (zéro), la bordure gauche de la fenêtre principale de Microsoft Excel sera à peine visible à l’écran.</span><span class="sxs-lookup"><span data-stu-id="e5645-1091">In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LibraryPath">
      <MemberSignature Language="C#" Value="public string LibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1092">Renvoie le chemin d’accès au dossier Bibliothèque, mais sans le séparateur final.</span><span class="sxs-lookup"><span data-stu-id="e5645-1092">Returns the path to the Library folder but without the final separator.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions">
      <MemberSignature Language="C#" Value="public void MacroOptions (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1135)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro"><span data-ttu-id="e5645-1093">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1093">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1094">Nom de la macro ou de la fonction définie par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5645-1094">The macro name or the name of a user defined function (UDF).</span></span></param>
        <param name="Description"><span data-ttu-id="e5645-1095">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1095">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1096">Description de la macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-1096">The macro description.</span></span></param>
        <param name="HasMenu"><span data-ttu-id="e5645-1097">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1097">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1098">Argument ignoré.</span><span class="sxs-lookup"><span data-stu-id="e5645-1098">This argument is ignored.</span></span></param>
        <param name="MenuText"><span data-ttu-id="e5645-1099">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1099">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1100">Argument ignoré.</span><span class="sxs-lookup"><span data-stu-id="e5645-1100">This argument is ignored.</span></span></param>
        <param name="HasShortcutKey"><span data-ttu-id="e5645-1101">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1101">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1102"><b>True</b> pour affecter une touche de raccourci à la macro <paramref name="ShortcutKey" /> (doit également être spécifié).</span><span class="sxs-lookup"><span data-stu-id="e5645-1102"><b>True</b> to assign a shortcut key to the macro (<paramref name="ShortcutKey" /> must also be specified).</span></span> <span data-ttu-id="e5645-1103">Si cet argument a la valeur <b>False</b>, aucune touche de raccourci n'est assignée à la macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-1103">If this argument is <b>False</b>, no shortcut key is assigned to the macro.</span></span> <span data-ttu-id="e5645-1104">Si la macro a déjà une touche de raccourci, affectez la valeur <b>False</b> à cet argument pour supprimer la touche de raccourci.</span><span class="sxs-lookup"><span data-stu-id="e5645-1104">If the macro already has a shortcut key, setting this argument to <b>False</b> removes the shortcut key.</span></span> <span data-ttu-id="e5645-1105">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1105">The default value is <b>False</b>.</span></span></param>
        <param name="ShortcutKey"><span data-ttu-id="e5645-1106">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1106">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1107">Obligatoire si <paramref name="HasShortcutKey" /> la valeur est <b>True</b>; ignoré dans le cas contraire.</span><span class="sxs-lookup"><span data-stu-id="e5645-1107">Required if <paramref name="HasShortcutKey" /> is <b>True</b>; ignored otherwise.</span></span> <span data-ttu-id="e5645-1108">Touche de raccourci.</span><span class="sxs-lookup"><span data-stu-id="e5645-1108">The shortcut key.</span></span></param>
        <param name="Category"><span data-ttu-id="e5645-1109">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1109">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1110">An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example).</span><span class="sxs-lookup"><span data-stu-id="e5645-1110">An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example).</span></span> <span data-ttu-id="e5645-1111">Consultez la section remarques pour déterminer les nombres integers qui sont mappés aux catégories intégrées.</span><span class="sxs-lookup"><span data-stu-id="e5645-1111">See the remarks section to determine the integers that are mapped to the built-in categories.</span></span> <span data-ttu-id="e5645-1112">You can also specify a string for a custom category.</span><span class="sxs-lookup"><span data-stu-id="e5645-1112">You can also specify a string for a custom category.</span></span> <span data-ttu-id="e5645-1113">Si vous fournissez une chaîne, elle sera traitée comme le nom de catégorie affiché dans la boîte de dialogue Insérer une fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1113">If you provide a string, it will be treated as the category name that is displayed in the Insert Function dialog box.</span></span> <span data-ttu-id="e5645-1114">If the category name has never been used, a new category is defined with that name.</span><span class="sxs-lookup"><span data-stu-id="e5645-1114">If the category name has never been used, a new category is defined with that name.</span></span> <span data-ttu-id="e5645-1115">Si vous utilisez un nom de catégorie identique à un nom intégré, Excel masera la fonction définie par l’utilisateur à cette catégorie intégrée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1115">If you use a category name that is that same as a built-in name, Excel will map the user defined function to that built-in category.</span></span></param>
        <param name="StatusBar"><span data-ttu-id="e5645-1116">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1116">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1117">Texte de la barre d'état de la macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-1117">The status bar text for the macro.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="e5645-1118">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1118">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1119">Nombre entier qui spécifie l'identificateur contextuel de la rubrique d'aide assignée à la macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-1119">An integer that specifies the context ID for the Help topic assigned to the macro.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="e5645-1120">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1120">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1121">Nom du fichier d’aide qui contient la rubrique d’aide définie par <paramref name="HelpContextId" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-1121">The name of the Help file that contains the Help topic defined by <paramref name="HelpContextId" />.</span></span></param>
        <summary><span data-ttu-id="e5645-1122">Correspond aux options de la boîte de dialogue Options des macros.</span><span class="sxs-lookup"><span data-stu-id="e5645-1122">Corresponds to options in the Macro Options dialog box.</span></span> <span data-ttu-id="e5645-1123">Vous pouvez également l'utiliser pour afficher une fonction définie par l'utilisateur dans une catégorie prédéfinie ou nouvelle dans la boîte de dialogue  Insérer une fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1123">You can also use this method to display a user defined function (UDF) in a built-in or new category within the Insert Function dialog box.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-1124">Le tableau suivant répertorie les integers qui sont mappés aux catégories intégrées qui peuvent être utilisées dans le paramètre Category.</span><span class="sxs-lookup"><span data-stu-id="e5645-1124">The following table lists which integers are mapped to the built-in categories that can be used in the Category parameter.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-1125">1 </span><span class="sxs-lookup"><span data-stu-id="e5645-1125">1</span></span></term>
              <description><span data-ttu-id="e5645-1126">
                <b>Financier</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1126">
                <b>Financial</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1127">2 </span><span class="sxs-lookup"><span data-stu-id="e5645-1127">2</span></span></term>
              <description><span data-ttu-id="e5645-1128">
                <b>Heure de &amp; la date</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1128">
                <b>Date &amp; Time</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1129">3</span><span class="sxs-lookup"><span data-stu-id="e5645-1129">3</span></span></term>
              <description><span data-ttu-id="e5645-1130">
                <b>Math &amp; Trig</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1130">
                <b>Math &amp; Trig</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1131">4 </span><span class="sxs-lookup"><span data-stu-id="e5645-1131">4</span></span></term>
              <description><span data-ttu-id="e5645-1132">
                <b>Statistiques</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1132">
                <b>Statistical</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1133">5 </span><span class="sxs-lookup"><span data-stu-id="e5645-1133">5</span></span></term>
              <description><span data-ttu-id="e5645-1134">
                <b>Référence de &amp; recherche</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1134">
                <b>Lookup &amp; Reference</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1135">6 </span><span class="sxs-lookup"><span data-stu-id="e5645-1135">6</span></span></term>
              <description><span data-ttu-id="e5645-1136">
                <b>Base de données</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1136">
                <b>Database</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1137">7 </span><span class="sxs-lookup"><span data-stu-id="e5645-1137">7</span></span></term>
              <description><span data-ttu-id="e5645-1138">
                <b>Texte</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1138">
                <b>Text</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1139">8 </span><span class="sxs-lookup"><span data-stu-id="e5645-1139">8</span></span></term>
              <description><span data-ttu-id="e5645-1140">
                <b>Logical</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1140">
                <b>Logical</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1141">9 </span><span class="sxs-lookup"><span data-stu-id="e5645-1141">9</span></span></term>
              <description><span data-ttu-id="e5645-1142">
                <b>Informations</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1142">
                <b>Information</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1143">10 </span><span class="sxs-lookup"><span data-stu-id="e5645-1143">10</span></span></term>
              <description><span data-ttu-id="e5645-1144">
                <b>Commandes</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1144">
                <b>Commands</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1145">11 </span><span class="sxs-lookup"><span data-stu-id="e5645-1145">11</span></span></term>
              <description><span data-ttu-id="e5645-1146">
                <b>Personnalisation</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1146">
                <b>Customizing</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1147">12 </span><span class="sxs-lookup"><span data-stu-id="e5645-1147">12</span></span></term>
              <description><span data-ttu-id="e5645-1148">
                <b>Contrôle macro</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1148">
                <b>Macro Control</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1149">13 </span><span class="sxs-lookup"><span data-stu-id="e5645-1149">13</span></span></term>
              <description><span data-ttu-id="e5645-1150">
                <b>DDE/Externe</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1150">
                <b>DDE/External</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1151">14 </span><span class="sxs-lookup"><span data-stu-id="e5645-1151">14</span></span></term>
              <description><span data-ttu-id="e5645-1152">
                <b>Défini par l’utilisateur</b>
              </span><span class="sxs-lookup"><span data-stu-id="e5645-1152">
                <b>User Defined</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1153">15 </span><span class="sxs-lookup"><span data-stu-id="e5645-1153">15</span></span></term>
              <description><span data-ttu-id="e5645-1154">Première catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1154">First custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1155">16 </span><span class="sxs-lookup"><span data-stu-id="e5645-1155">16</span></span></term>
              <description><span data-ttu-id="e5645-1156">Deuxième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1156">Second custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1157">17 </span><span class="sxs-lookup"><span data-stu-id="e5645-1157">17</span></span></term>
              <description><span data-ttu-id="e5645-1158">Troisième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1158">Third custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1159">18 </span><span class="sxs-lookup"><span data-stu-id="e5645-1159">18</span></span></term>
              <description><span data-ttu-id="e5645-1160">Quatrième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1160">Fourth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1161">19</span><span class="sxs-lookup"><span data-stu-id="e5645-1161">19</span></span></term>
              <description><span data-ttu-id="e5645-1162">Cinquième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1162">Fifth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1163">20</span><span class="sxs-lookup"><span data-stu-id="e5645-1163">20</span></span></term>
              <description><span data-ttu-id="e5645-1164">Sixième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1164">Sixth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1165"> 21</span><span class="sxs-lookup"><span data-stu-id="e5645-1165">21</span></span></term>
              <description><span data-ttu-id="e5645-1166">Septième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1166">Seventh custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1167">22</span><span class="sxs-lookup"><span data-stu-id="e5645-1167">22</span></span></term>
              <description><span data-ttu-id="e5645-1168">Huitième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1168">Eighth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1169">23</span><span class="sxs-lookup"><span data-stu-id="e5645-1169">23</span></span></term>
              <description><span data-ttu-id="e5645-1170">Neuvième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1170">Ninth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1171">24</span><span class="sxs-lookup"><span data-stu-id="e5645-1171">24</span></span></term>
              <description><span data-ttu-id="e5645-1172">Dixième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1172">Tenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1173">25</span><span class="sxs-lookup"><span data-stu-id="e5645-1173">25</span></span></term>
              <description><span data-ttu-id="e5645-1174">Onzième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1174">Eleventh custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1175">26</span><span class="sxs-lookup"><span data-stu-id="e5645-1175">26</span></span></term>
              <description><span data-ttu-id="e5645-1176">Douzième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1176">Twelfth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1177">27</span><span class="sxs-lookup"><span data-stu-id="e5645-1177">27</span></span></term>
              <description><span data-ttu-id="e5645-1178">Treizième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1178">Thirteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1179">28</span><span class="sxs-lookup"><span data-stu-id="e5645-1179">28</span></span></term>
              <description><span data-ttu-id="e5645-1180">Quatorzième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1180">Fourteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1181">29</span><span class="sxs-lookup"><span data-stu-id="e5645-1181">29</span></span></term>
              <description><span data-ttu-id="e5645-1182">Quinzième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1182">Fifteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1183">30</span><span class="sxs-lookup"><span data-stu-id="e5645-1183">30</span></span></term>
              <description><span data-ttu-id="e5645-1184">Seizième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1184">Sixteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1185">31</span><span class="sxs-lookup"><span data-stu-id="e5645-1185">31</span></span></term>
              <description><span data-ttu-id="e5645-1186">Dix-septième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1186">Seventeenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1187">32</span><span class="sxs-lookup"><span data-stu-id="e5645-1187">32</span></span></term>
              <description><span data-ttu-id="e5645-1188">Dix-huitième catégorie personnalisée</span><span class="sxs-lookup"><span data-stu-id="e5645-1188">Eighteenth custom category</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions2">
      <MemberSignature Language="C#" Value="public void MacroOptions2 (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile, object ArgumentDescriptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions2([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile, [in]object ArgumentDescriptions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions2 (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object, Optional ArgumentDescriptions As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="ArgumentDescriptions" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Description">To be added.</param>
        <param name="HasMenu">To be added.</param>
        <param name="MenuText">To be added.</param>
        <param name="HasShortcutKey">To be added.</param>
        <param name="ShortcutKey">To be added.</param>
        <param name="Category">To be added.</param>
        <param name="StatusBar">To be added.</param>
        <param name="HelpContextID">To be added.</param>
        <param name="HelpFile">To be added.</param>
        <param name="ArgumentDescriptions">To be added.</param>
        <summary><span data-ttu-id="e5645-1189">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1189">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogoff">
      <MemberSignature Language="C#" Value="public void MailLogoff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogoff() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogoff" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogoff ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MailLogoff();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-1190">Cette méthode ferme une session de messagerie MAPI ouverte par Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1190">Closes a MAPI mail session established by Microsoft Excel.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogon">
      <MemberSignature Language="C#" Value="public void MailLogon (object Name, object Password, object DownloadNewMail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogon([in]object Name, [in]object Password, [in]object DownloadNewMail) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogon(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogon (Optional Name As Object, Optional Password As Object, Optional DownloadNewMail As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DownloadNewMail" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="e5645-1191">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1191">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1192">Nom du compte de messagerie ou nom du profil Microsoft Exchange.</span><span class="sxs-lookup"><span data-stu-id="e5645-1192">The mail account name or Microsoft Exchange profile name.</span></span> <span data-ttu-id="e5645-1193">Si vous ne spécifiez pas cet argument, le nom du compte de messagerie par défaut est utilisé.</span><span class="sxs-lookup"><span data-stu-id="e5645-1193">If this argument is omitted, the default mail account name is used.</span></span></param>
        <param name="Password"><span data-ttu-id="e5645-1194">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1194">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1195">Mot de passe du compte de messagerie.</span><span class="sxs-lookup"><span data-stu-id="e5645-1195">The mail account password.</span></span> <span data-ttu-id="e5645-1196">Microsoft Exchange ne tient pas compte de cet argument.</span><span class="sxs-lookup"><span data-stu-id="e5645-1196">This argument is ignored in Microsoft Exchange.</span></span></param>
        <param name="DownloadNewMail"><span data-ttu-id="e5645-1197">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1197">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1198"><b>True</b> pour télécharger immédiatement les nouveaux messages.</span><span class="sxs-lookup"><span data-stu-id="e5645-1198"><b>True</b> to download new mail immediately.</span></span></param>
        <summary><span data-ttu-id="e5645-p311">Cette méthode se connecte et ouvre une session de messagerie MAPI ou Microsoft Exchange. Si Microsoft Mail n'est pas déjà démarré, vous devez utiliser cette méthode pour établir une session de messagerie afin de permettre l'utilisation de fonctions de distribution de documents ou de messages.</span><span class="sxs-lookup"><span data-stu-id="e5645-p311">Logs in to MAPI Mail or Microsoft Exchange and establishes a mail session. If Microsoft Mail isn't already running, you must use this method to establish a mail session before mail or document routing functions can be used.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-1201">Les sessions de messagerie précédemment ouvertes par Microsoft Excel sont déconnectées avant toute tentative d'ouverture de la nouvelle session.</span><span class="sxs-lookup"><span data-stu-id="e5645-1201">Microsoft Excel logs off any mail sessions it previously established before attempting to establish the new session.</span></span></para>
          <para><span data-ttu-id="e5645-1202">Omettez les paramètres name et password pour utiliser la session de messagerie par défaut du système.</span><span class="sxs-lookup"><span data-stu-id="e5645-1202">To piggyback on the system default mail session, omit both the name and password parameters.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSession">
      <MemberSignature Language="C#" Value="public object MailSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MailSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSession As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MailSession { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1203">Renvoie le numéro de session de messagerie MAPI en tant que chaîne hexadécimale (s’il existe une session active) ou renvoie la valeur <b>Null</b> s’il n’y a pas de session.</span><span class="sxs-lookup"><span data-stu-id="e5645-1203">Returns the MAPI mail session number as a hexadecimal string (if there's an active session), or returns <b>Null</b> if there's no session.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1204">Cette propriété ne s'applique qu'aux sessions de messagerie créées par Microsoft Excel (elle ne renvoie pas les numéros de session de messagerie de Microsoft Mail).</span><span class="sxs-lookup"><span data-stu-id="e5645-1204">This property applies only to mail sessions created by Microsoft Excel (it doesn't return a mail session number for Microsoft Mail).</span></span></para>
          <para><span data-ttu-id="e5645-1205">Cette propriété n'est pas utilisée dans les systèmes de messagerie PowerTalk.</span><span class="sxs-lookup"><span data-stu-id="e5645-1205">This property isn't used on PowerTalk mail systems.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSystem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMailSystem MailSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMailSystem MailSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSystem As XlMailSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMailSystem MailSystem { Microsoft::Office::Interop::Excel::XlMailSystem get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMailSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1206">Cette propriété renvoie le système de messagerie installé sur la machine hôte.</span><span class="sxs-lookup"><span data-stu-id="e5645-1206">Returns the mail system that's installed on the host machine.</span></span> <span data-ttu-id="e5645-1207">En lecture <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" /> seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-1207">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1208">
            <b>XlMailSystem peut</b> être l’une de ces <b>constantes XlMailSystem</b> :</span><span class="sxs-lookup"><span data-stu-id="e5645-1208">
            <b>XlMailSystem</b> can be one of these <b>XlMailSystem</b> constants:</span></span></para>
          <para><span data-ttu-id="e5645-1209">
            <b>xlMAPI</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1209">
            <b>xlMAPI</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-1210">
            <b>xlNoMailSystem</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1210">
            <b>xlNoMailSystem</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-1211">
            <b>xlPowerTalk</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1211">
            <b>xlPowerTalk</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPaperSize">
      <MemberSignature Language="C#" Value="public bool MapPaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapPaperSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MapPaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MapPaperSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapPaperSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1212">Cette propriété a la valeur <b>True</b> si des documents mis en forme pour la taille de papier standard d'un autre pays ou d'une autre région (par exemple, Lettre US) sont automatiquement ajustés pour être imprimés correctement sur le papier de taille standard de votre pays/région (par exemple, A4).</span><span class="sxs-lookup"><span data-stu-id="e5645-1212"><b>True</b> if documents formatted for the standard paper size of another country/region (for example, A4) are automatically adjusted so that they're printed correctly on the standard paper size (for example, Letter) of your country/region.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathCoprocessorAvailable">
      <MemberSignature Language="C#" Value="public bool MathCoprocessorAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathCoprocessorAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MathCoprocessorAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MathCoprocessorAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MathCoprocessorAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1213">Cette propriété a la valeur <b>True</b> si un coprocesseur arithmétique est disponible.</span><span class="sxs-lookup"><span data-stu-id="e5645-1213"><b>True</b> if a math coprocessor is available.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxChange">
      <MemberSignature Language="C#" Value="public double MaxChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxChange" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxChange { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1214">Cette propriété renvoie ou définit l'écart maximal utilisé pour chaque itération pendant que Microsoft Excel résout des références circulaires.</span><span class="sxs-lookup"><span data-stu-id="e5645-1214">Returns or sets the maximum amount of change between each iteration as Microsoft Excel resolves circular references.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1215">La propriété définit le nombre maximal d’itérations que Microsoft Excel peut utiliser lors de la résolution de <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> références circulaires.</span><span class="sxs-lookup"><span data-stu-id="e5645-1215">The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> property sets the maximum number of iterations that Microsoft Excel can use when resolving circular references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIterations">
      <MemberSignature Language="C#" Value="public int MaxIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIterations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIterations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1216">Cette propriété renvoie ou définit le nombre maximal d'itérations que Microsoft Excel peut utiliser pour résoudre une référence circulaire.</span><span class="sxs-lookup"><span data-stu-id="e5645-1216">Returns or sets the maximum number of iterations that Microsoft Excel can use to resolve a circular reference.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1217">La propriété définit la quantité maximale de modification entre chaque itération lorsque Microsoft Excel résolvant <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> des références circulaires.</span><span class="sxs-lookup"><span data-stu-id="e5645-1217">The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> property sets the maximum amount of change between each iteration when Microsoft Excel is resolving circular references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementUnit">
      <MemberSignature Language="C#" Value="public int MeasurementUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasurementUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MeasurementUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property MeasurementUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasurementUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1218">Cette propriété spécifie l'unité de mesure utilisée dans l'application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1218">Specifies the measurement unit used in the application.</span></span> <span data-ttu-id="e5645-1219">Valeur <b>integer en lecture-écriture</b> correspondant aux constantes de l’éumération. <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /></span><span class="sxs-lookup"><span data-stu-id="e5645-1219">Read/write <b>Integer</b> value corresponding to the constants in the <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="e5645-1220"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="e5645-1220"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryFree">
      <MemberSignature Language="C#" Value="public int MemoryFree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryFree" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryFree" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryFree As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryFree { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1221">Renvoie la quantité de mémoire que Microsoft Excel peut encore utiliser, en octets.</span><span class="sxs-lookup"><span data-stu-id="e5645-1221">Returns the amount of memory that's still available for Microsoft Excel to use, in bytes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryTotal">
      <MemberSignature Language="C#" Value="public int MemoryTotal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryTotal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryTotal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryTotal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryTotal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1222">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="e5645-1222">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryUsed">
      <MemberSignature Language="C#" Value="public int MemoryUsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryUsed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryUsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryUsed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryUsed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1223">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1223">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBars MenuBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBars MenuBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MenuBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuBars As MenuBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBars ^ MenuBars { Microsoft::Office::Interop::Excel::MenuBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1224">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1224">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeInstances">
      <MemberSignature Language="C#" Value="public bool MergeInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MergeInstances" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MergeInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MergeInstances { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1225">True pour fusionner plusieurs instances de l’application en une seule instance.</span><span class="sxs-lookup"><span data-stu-id="e5645-1225">True to merge multiple instances of the application into a single instance.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Modules Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Modules Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Modules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Modules ^ Modules { Microsoft::Office::Interop::Excel::Modules ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Modules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1226">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1226">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseAvailable">
      <MemberSignature Language="C#" Value="public bool MouseAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MouseAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MouseAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MouseAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1227">Cette propriété a la valeur <b>True</b> si une souris est disponible.</span><span class="sxs-lookup"><span data-stu-id="e5645-1227"><b>True</b> if a mouse is available.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturn">
      <MemberSignature Language="C#" Value="public bool MoveAfterReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveAfterReturn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveAfterReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1228">Cette propriété a la valeur <b>True</b> si la cellule active est déplacée dès que l'utilisateur appuie sur la touche ENTRÉE (RETOUR).</span><span class="sxs-lookup"><span data-stu-id="e5645-1228"><b>True</b> if the active cell will be moved as soon as the ENTER (RETURN) key is pressed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1229">Utilisez la propriété pour spécifier la direction dans laquelle la cellule <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> active doit être déplacée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1229">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> property to specify the direction in which the active cell is to be moved.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturnDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturnDirection As XlDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDirection MoveAfterReturnDirection { Microsoft::Office::Interop::Excel::XlDirection get(); void set(Microsoft::Office::Interop::Excel::XlDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1230">Cette propriété renvoie ou définit la direction dans laquelle la cellule active est déplacée lorsque l'utilisateur appuie sur Entrée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1230">Returns or sets the direction in which the active cell is moved when the user presses ENTER.</span></span> <span data-ttu-id="e5645-1231">En <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" /> lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="e5645-1231">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1232">
            <b>XlDirection peut</b> être l’une de ces <b>constantes XlDirection</b> :</span><span class="sxs-lookup"><span data-stu-id="e5645-1232">
            <b>XlDirection</b> can be one of these <b>XlDirection</b> constants:</span></span></para>
          <para><span data-ttu-id="e5645-1233">
            <b>xlDown</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1233">
            <b>xlDown</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-1234">
            <b>xlToLeft</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1234">
            <b>xlToLeft</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-1235">
            <b>xlToRight</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1235">
            <b>xlToRight</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-1236">
            <b>xlUp</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1236">
            <b>xlUp</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-1237">Si la propriété a la valeur False, la sélection ne se déplace pas du tout, quelle que soit la façon dont la propriété <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> <b>MoveAfterReturnDirection</b> est définie. <b></b></span><span class="sxs-lookup"><span data-stu-id="e5645-1237">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> property is <b>False</b>, the selection doesn’t move at all, regardless of how the <b>MoveAfterReturnDirection</b> property is set.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiThreadedCalculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MultiThreadedCalculation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiThreadedCalculation As MultiThreadedCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ MultiThreadedCalculation { Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MultiThreadedCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1238">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> objet qui contrôle les paramètres de recalcul multi-threads qui sont nouveaux dans Excel 2007.</span><span class="sxs-lookup"><span data-stu-id="e5645-1238">Returns a <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> object that controls the multi-threaded recalculation settings that are new in Excel 2007.</span></span> <span data-ttu-id="e5645-1239">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-1239">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1240">Renvoie le nom de l'objet.</span><span class="sxs-lookup"><span data-stu-id="e5645-1240">Returns the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1241">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection qui représente tous les noms du livre de travail actif.</span><span class="sxs-lookup"><span data-stu-id="e5645-1241">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkTemplatesPath">
      <MemberSignature Language="C#" Value="public string NetworkTemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NetworkTemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NetworkTemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkTemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NetworkTemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1242">Cette propriété renvoie le chemin d'accès réseau où les modèles sont stockés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1242">Returns the network path where templates are stored.</span></span> <span data-ttu-id="e5645-1243">Si ce chemin n'existe pas, la propriété renvoie une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="e5645-1243">If the network path doesn’t exist, this property returns an empty string.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.NewFile NewWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.NewFile NewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewWorkbook As NewFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::NewFile ^ NewWorkbook { Microsoft::Office::Core::NewFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.NewFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1244">Renvoie un <b>objet NewFile.</b></span><span class="sxs-lookup"><span data-stu-id="e5645-1244">Returns a <b>NewFile</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextLetter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook NextLetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook NextLetter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.NextLetter" />
      <MemberSignature Language="VB.NET" Value="Public Function NextLetter () As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Workbook ^ NextLetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(972)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-p317">Vous avez demandé de l'aide sur un mot clé Visual Basic utilisé uniquement pour les Macintosh. Pour plus d'informations sur ce mot clé, consultez l'Aide fournie avec l'édition de Microsoft Office pour Macintosh</span><span class="sxs-lookup"><span data-stu-id="e5645-p317">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ODBCErrors As ODBCErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ODBCErrors ^ ODBCErrors { Microsoft::Office::Interop::Excel::ODBCErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ODBCErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1247">Renvoie une collection qui contient toutes les erreurs ODBC générées par la table de requête ou l’opération de rapport de tableau croisé dynamique la <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> plus récente.</span><span class="sxs-lookup"><span data-stu-id="e5645-1247">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection that contains all the ODBC errors generated by the most recent query table or PivotTable report operation.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1248">Si plusieurs requêtes s’exécutent en même temps, la collection contient les erreurs ODBC de la requête terminée <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> en dernier.</span><span class="sxs-lookup"><span data-stu-id="e5645-1248">If there’s more than one query running at the same time, the <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection contains the ODBC errors from the query that’s finished last.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCTimeout">
      <MemberSignature Language="C#" Value="public int ODBCTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ODBCTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ODBCTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ODBCTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1249">Renvoie ou définit la limite de temps de requête ODBC en secondes.</span><span class="sxs-lookup"><span data-stu-id="e5645-1249">Returns or sets the ODBC query time limit in seconds.</span></span> <span data-ttu-id="e5645-1250">La valeur par défaut est 45 secondes.</span><span class="sxs-lookup"><span data-stu-id="e5645-1250">The default value is 45 seconds.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1251">La valeur 0 (zéro) indique une limite de temps d'exécution indéterminée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1251">The value 0 (zero) indicates an indefinite time limit.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEDBErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OLEDBErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEDBErrors As OLEDBErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEDBErrors ^ OLEDBErrors { Microsoft::Office::Interop::Excel::OLEDBErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEDBErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1252">Renvoie la <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> collection, qui représente les informations d’erreur renvoyées par la requête OLE DB la plus récente.</span><span class="sxs-lookup"><span data-stu-id="e5645-1252">Returns the <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> collection, which represents the error information returned by the most recent OLE DB query.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1253">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="e5645-1253">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1254">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1254">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1255">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1255">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1256">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1256">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKey">
      <MemberSignature Language="C#" Value="public void OnKey (string Key, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnKey([in]string Key, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnKey (Key As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Key"><span data-ttu-id="e5645-1257">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-1257">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-1258">Chaîne indiquant la touche sur laquelle appuyer.</span><span class="sxs-lookup"><span data-stu-id="e5645-1258">A string indicating the key to be pressed.</span></span></param>
        <param name="Procedure"><span data-ttu-id="e5645-1259">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1259">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1260">Une chaîne indiquant le nom de la procédure à exécuter.</span><span class="sxs-lookup"><span data-stu-id="e5645-1260">A string indicating the name of the procedure to be run.</span></span> <span data-ttu-id="e5645-1261"><paramref name="Procedure" />S’il s’agit de « » (texte vide), rien ne se produit lorsque <paramref name="Key" /> l’on appuie sur ce dernier.</span><span class="sxs-lookup"><span data-stu-id="e5645-1261">If <paramref name="Procedure" /> is "" (empty text), nothing happens when <paramref name="Key" /> is pressed.</span></span> <span data-ttu-id="e5645-1262">Cette forme de  <b>OnKey</b> modifie la concordance des touches dans Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1262">This form of <b>OnKey</b> changes the normal result of keystrokes in Microsoft Excel.</span></span> <span data-ttu-id="e5645-1263">S’il est omis, il revient à son résultat normal dans Microsoft Excel et toutes les affectations de touches spéciales réalisées avec les méthodes <paramref name="Procedure" /> <paramref name="Key" /> <b>OnKey</b> précédentes sont effacées.</span><span class="sxs-lookup"><span data-stu-id="e5645-1263">If <paramref name="Procedure" /> is omitted, <paramref name="Key" /> reverts to its normal result in Microsoft Excel, and any special key assignments made with previous <b>OnKey</b> methods are cleared.</span></span></param>
        <summary><span data-ttu-id="e5645-1264">Exécute une procédure spécifiée lorsque l'utilisateur appuie sur une touche ou une combinaison de touches particulière.</span><span class="sxs-lookup"><span data-stu-id="e5645-1264">Runs a specified procedure when a particular key or key combination is pressed.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-1265">L’argument peut spécifier n’importe quelle touche unique combinée <paramref name="Key" /> avec ALT, Ctrl ou Shift, ou toute combinaison de ces touches.</span><span class="sxs-lookup"><span data-stu-id="e5645-1265">The <paramref name="Key" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of these keys.</span></span> <span data-ttu-id="e5645-1266">Chaque touche est représentée par un ou plusieurs caractères, par exemple, "a" pour la lettre a, ou "{ENTER}" pour la touche Entrée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1266">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="e5645-p322">Pour spécifier des caractères qui ne s'affichent pas quand vous appuyez sur la touche correspondante (par exemple, Entrée ou Tabulation), utilisez les codes répertoriés dans le tableau suivant. Chaque code correspond à une touche du clavier.</span><span class="sxs-lookup"><span data-stu-id="e5645-p322">To specify characters that aren't displayed when you press the corresponding key (ENTER or TAB, for example), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-1269">Retour arrière</span><span class="sxs-lookup"><span data-stu-id="e5645-1269">BACKSPACE</span></span></term>
              <description><span data-ttu-id="e5645-1270">{BACKSPACE} ou {BS}</span><span class="sxs-lookup"><span data-stu-id="e5645-1270">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1271">Attn</span><span class="sxs-lookup"><span data-stu-id="e5645-1271">BREAK</span></span></term>
              <description><span data-ttu-id="e5645-1272">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="e5645-1272">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1273">Verr. maj</span><span class="sxs-lookup"><span data-stu-id="e5645-1273">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="e5645-1274">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="e5645-1274">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1275">EFFACER</span><span class="sxs-lookup"><span data-stu-id="e5645-1275">CLEAR</span></span></term>
              <description><span data-ttu-id="e5645-1276">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="e5645-1276">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1277">SUPPRIMER ou Suppr</span><span class="sxs-lookup"><span data-stu-id="e5645-1277">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="e5645-1278">{DELETE} ou {DEL}</span><span class="sxs-lookup"><span data-stu-id="e5645-1278">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1279">Bas</span><span class="sxs-lookup"><span data-stu-id="e5645-1279">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="e5645-1280">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="e5645-1280">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1281">Fin</span><span class="sxs-lookup"><span data-stu-id="e5645-1281">END</span></span></term>
              <description><span data-ttu-id="e5645-1282">{END}</span><span class="sxs-lookup"><span data-stu-id="e5645-1282">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1283">Entrée</span><span class="sxs-lookup"><span data-stu-id="e5645-1283">ENTER</span></span></term>
              <description><span data-ttu-id="e5645-1284">~ (tilde)</span><span class="sxs-lookup"><span data-stu-id="e5645-1284">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1285">Entrée (pavé numérique)</span><span class="sxs-lookup"><span data-stu-id="e5645-1285">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="e5645-1286">{Enter}</span><span class="sxs-lookup"><span data-stu-id="e5645-1286">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1287">Échap</span><span class="sxs-lookup"><span data-stu-id="e5645-1287">ESC</span></span></term>
              <description><span data-ttu-id="e5645-1288">{ESCAPE} ou {ESC}</span><span class="sxs-lookup"><span data-stu-id="e5645-1288">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1289">F1 à F15</span><span class="sxs-lookup"><span data-stu-id="e5645-1289">F1 through F15</span></span></term>
              <description><span data-ttu-id="e5645-1290">{F1} à {F15}</span><span class="sxs-lookup"><span data-stu-id="e5645-1290">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1291">Aide</span><span class="sxs-lookup"><span data-stu-id="e5645-1291">HELP</span></span></term>
              <description><span data-ttu-id="e5645-1292">{HELP}</span><span class="sxs-lookup"><span data-stu-id="e5645-1292">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1293">Début</span><span class="sxs-lookup"><span data-stu-id="e5645-1293">HOME</span></span></term>
              <description><span data-ttu-id="e5645-1294">{HOME}</span><span class="sxs-lookup"><span data-stu-id="e5645-1294">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1295">Inser</span><span class="sxs-lookup"><span data-stu-id="e5645-1295">INS</span></span></term>
              <description><span data-ttu-id="e5645-1296">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="e5645-1296">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1297">Gauche</span><span class="sxs-lookup"><span data-stu-id="e5645-1297">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="e5645-1298">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="e5645-1298">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1299">Verr. num</span><span class="sxs-lookup"><span data-stu-id="e5645-1299">NUM LOCK</span></span></term>
              <description><span data-ttu-id="e5645-1300">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="e5645-1300">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1301">Pg. suiv</span><span class="sxs-lookup"><span data-stu-id="e5645-1301">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="e5645-1302">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="e5645-1302">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1303">Pg. préc</span><span class="sxs-lookup"><span data-stu-id="e5645-1303">PAGE UP</span></span></term>
              <description><span data-ttu-id="e5645-1304">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="e5645-1304">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1305">RETOUR</span><span class="sxs-lookup"><span data-stu-id="e5645-1305">RETURN</span></span></term>
              <description><span data-ttu-id="e5645-1306">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="e5645-1306">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1307">Droite</span><span class="sxs-lookup"><span data-stu-id="e5645-1307">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="e5645-1308">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="e5645-1308">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1309">Arrêt défil</span><span class="sxs-lookup"><span data-stu-id="e5645-1309">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="e5645-1310">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="e5645-1310">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1311">Tab</span><span class="sxs-lookup"><span data-stu-id="e5645-1311">TAB</span></span></term>
              <description><span data-ttu-id="e5645-1312">{TAB}</span><span class="sxs-lookup"><span data-stu-id="e5645-1312">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1313">Haut</span><span class="sxs-lookup"><span data-stu-id="e5645-1313">UP ARROW</span></span></term>
              <description><span data-ttu-id="e5645-1314">{UP}</span><span class="sxs-lookup"><span data-stu-id="e5645-1314">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-p323">Vous pouvez également spécifier des touches combinées avec MAJ et/ou CTRL et/ou ALT. Pour spécifier une touche combinée avec une ou plusieurs autres touches, utilisez le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="e5645-p323">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-1317">MAJ</span><span class="sxs-lookup"><span data-stu-id="e5645-1317">SHIFT</span></span></term>
              <description><span data-ttu-id="e5645-1318">+ (signe plus)</span><span class="sxs-lookup"><span data-stu-id="e5645-1318">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1319">Ctrl</span><span class="sxs-lookup"><span data-stu-id="e5645-1319">CTRL</span></span></term>
              <description><span data-ttu-id="e5645-1320">^ (attention)</span><span class="sxs-lookup"><span data-stu-id="e5645-1320">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1321">ALT</span><span class="sxs-lookup"><span data-stu-id="e5645-1321">ALT</span></span></term>
              <description><span data-ttu-id="e5645-1322">% (signe de pourcentage)</span><span class="sxs-lookup"><span data-stu-id="e5645-1322">% (percent sign)</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-1323">Pour associer une procédure à l'un des caractères spéciaux (+, ^, %, etc.), mettez le caractère entre accolades.</span><span class="sxs-lookup"><span data-stu-id="e5645-1323">To assign a procedure to one of the special characters (+, ^, %, and so on), enclose the character in braces.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRepeat">
      <MemberSignature Language="C#" Value="public void OnRepeat (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRepeat([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRepeat (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRepeat(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="e5645-1324">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-1324">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-1325">Texte qui apparaît avec la commande Répéter (menu Edition).</span><span class="sxs-lookup"><span data-stu-id="e5645-1325">The text that appears with the Repeat command (Edit menu).</span></span></param>
        <param name="Procedure"><span data-ttu-id="e5645-1326">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-1326">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-1327">Nom de la procédure exécutée lorsque vous choisissez la commande Répéter (menu Edition).</span><span class="sxs-lookup"><span data-stu-id="e5645-1327">The name of the procedure that will be run when you choose the Repeat command (Edit menu).</span></span></param>
        <summary><span data-ttu-id="e5645-1328">Cette méthode définit la commande de menu Répéter et le nom de la procédure exécutée lorsque vous sélectionnez la commande Rétablir (menu Edition) après l'exécution de la procédure qui définit cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e5645-1328">Sets the Repeat menu item and the name of the procedure that will run if you choose the Repeat command (Edit menu) after running the procedure that sets this property.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-1329">Si une procédure n’utilise pas la méthode <b>OnRepeat,</b> la commande Répéter répète la procédure qui a été exécuté le plus récemment.</span><span class="sxs-lookup"><span data-stu-id="e5645-1329">If a procedure doesn’t use the <b>OnRepeat</b> method, the Repeat command repeats the procedure that was run most recently.</span></span></para>
          <para><span data-ttu-id="e5645-1330">La procédure doit utiliser <b>onRepeat</b> et les méthodes en dernier, pour empêcher que les procédures de répétition et d’annuler ne soit écrasées par les actions suivantes <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> dans la procédure.</span><span class="sxs-lookup"><span data-stu-id="e5645-1330">The procedure must use the <b>OnRepeat</b> and <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1331">Réservé à un usage interne. </span><span class="sxs-lookup"><span data-stu-id="e5645-1331">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1332">Réservé à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1332">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTime">
      <MemberSignature Language="C#" Value="public void OnTime (object EarliestTime, string Procedure, object LatestTime, object Schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTime([in]object EarliestTime, [in]string Procedure, [in]object LatestTime, [in]object Schedule) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnTime(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnTime (EarliestTime As Object, Procedure As String, Optional LatestTime As Object, Optional Schedule As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(624)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EarliestTime" Type="System.Object" />
        <Parameter Name="Procedure" Type="System.String" />
        <Parameter Name="LatestTime" Type="System.Object" />
        <Parameter Name="Schedule" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EarliestTime"><span data-ttu-id="e5645-1333">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1333">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1334">Heure à laquelle vous voulez que la procédure s'exécute.</span><span class="sxs-lookup"><span data-stu-id="e5645-1334">The time when you want this procedure to be run.</span></span></param>
        <param name="Procedure"><span data-ttu-id="e5645-1335">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-1335">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-1336">Nom de la procédure à exécuter.</span><span class="sxs-lookup"><span data-stu-id="e5645-1336">The name of the procedure to be run.</span></span></param>
        <param name="LatestTime"><span data-ttu-id="e5645-1337">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1337">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1338">Toute dernière heure à laquelle la procédure peut être exécutée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1338">The latest time at which the procedure can be run.</span></span> <span data-ttu-id="e5645-1339">Par exemple, si la taille est définie sur + 30 et que Microsoft Excel n’est pas en mode Prêt, Copier, Couper ou Rechercher, car une autre procédure est en cours d’exécution, Microsoft Excel attend <paramref name="LatestTime" /> 30 secondes avant la fin de la première <paramref name="EarliestTime" /> <paramref name="EarliestTime" /> procédure.</span><span class="sxs-lookup"><span data-stu-id="e5645-1339">For example, if <paramref name="LatestTime" /> is set to <paramref name="EarliestTime" /> + 30 and Microsoft Excel is not in Ready, Copy, Cut, or Find mode at <paramref name="EarliestTime" /> because another procedure is running, Microsoft Excel will wait 30 seconds for the first procedure to complete.</span></span> <span data-ttu-id="e5645-1340">Si Microsoft Excel n’est pas en mode Prêt dans un délai de 30 secondes, la procédure ne sera pas exécuté.</span><span class="sxs-lookup"><span data-stu-id="e5645-1340">If Microsoft Excel is not in Ready mode within 30 seconds, the procedure won’t be run.</span></span> <span data-ttu-id="e5645-1341">Si cet argument est omis, Microsoft Excel attend jusqu'à ce que la procédure puisse être exécutée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1341">If this argument is omitted, Microsoft Excel will wait until the procedure can be run.</span></span></param>
        <param name="Schedule"><span data-ttu-id="e5645-1342">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1342">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1343"><b>True</b> pour planifier une <b>nouvelle procédure OnTime.</b></span><span class="sxs-lookup"><span data-stu-id="e5645-1343"><b>True</b> to schedule a new <b>OnTime</b> procedure.</span></span> <span data-ttu-id="e5645-1344">Il a la valeur <b>False</b> pour effacer une procédure précédemment définie.</span><span class="sxs-lookup"><span data-stu-id="e5645-1344"><b>False</b> to clear a previously set procedure.</span></span> <span data-ttu-id="e5645-1345">La valeur par défaut est <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1345">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="e5645-1346">Cette méthode programme l'exécution d'une procédure à un moment précis (soit à une heure précise soit après l'écoulement d'un délai précis).</span><span class="sxs-lookup"><span data-stu-id="e5645-1346">Schedules a procedure to be run at a specified time in the future (either at a specific time of day or after a specific amount of time has passed).</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-1347">Utilisez Now+TimeValue(time) pour planifier quelque chose à exécuter lorsqu’un laps de temps spécifique (à partir de maintenant) s’est écoulé.</span><span class="sxs-lookup"><span data-stu-id="e5645-1347">Use Now+TimeValue(time) to schedule something to be run when a specific amount of time (counting from now) has elapsed.</span></span> <span data-ttu-id="e5645-1348">Utilisez TimeValue(time) pour programmer une procédure à exécuter à un moment précis.</span><span class="sxs-lookup"><span data-stu-id="e5645-1348">Use TimeValue(time) to schedule something to be run a specific time.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUndo">
      <MemberSignature Language="C#" Value="public void OnUndo (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUndo([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnUndo (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnUndo(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="e5645-1349">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-1349">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-1350">Texte qui apparaît avec la commande Annuler (menu Edition).</span><span class="sxs-lookup"><span data-stu-id="e5645-1350">The text that appears with the Undo command (Edit menu).</span></span></param>
        <param name="Procedure"><span data-ttu-id="e5645-1351">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-1351">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-1352">Nom de la procédure exécutée si vous sélectionnez la commande Annuler (menu Edition).</span><span class="sxs-lookup"><span data-stu-id="e5645-1352">The name of the procedure that’s run when you choose the Undo command (Edit menu).</span></span></param>
        <summary><span data-ttu-id="e5645-1353">Cette méthode définit le texte de la commande de menu Annuler et le nom de la procédure exécutée lorsque vous sélectionnez la commande Annuler (menu Edition) après l'exécution de la procédure qui définit cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e5645-1353">Sets the text of the Undo and the name of the procedure that’s run if you choose the Undo command (Edit menu) after running the procedure that sets this property.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-1354">Si une procédure n’utilise pas la méthode <b>OnUndo,</b> la commande Annuler est désactivée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1354">If a procedure doesn’t use the <b>OnUndo</b> method, the Undo command is disabled.</span></span></para>
          <para><span data-ttu-id="e5645-1355">La procédure doit utiliser les méthodes OnUndo en dernier, pour éviter que les procédures de répétition et d’annuler ne soit écrasées par les actions suivantes <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> de la procédure. <b></b></span><span class="sxs-lookup"><span data-stu-id="e5645-1355">The procedure must use the <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> and <b>OnUndo</b> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1356">Cette propriété renvoie ou définit le nom de la procédure exécutée quand vous activez une fenêtre.</span><span class="sxs-lookup"><span data-stu-id="e5645-1356">Returns or sets the name of the procedure that’s run whenever you activate a window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1357">La procédure spécifiée par cette propriété n’est pas exécuté lorsque d’autres procédures basculent vers la fenêtre ou lorsqu’une commande de basculement vers une fenêtre est reçue via un canal DDE.</span><span class="sxs-lookup"><span data-stu-id="e5645-1357">The procedure specified by this property isn’t run when other procedures switch to the window or when a command to switch to a window is received through a DDE channel.</span></span> <span data-ttu-id="e5645-1358">Au lieu de cela, la procédure répond aux actions de l’utilisateur, telles que cliquer sur une fenêtre avec la souris, cliquer sur Aller à dans le menu Modifier, etc.</span><span class="sxs-lookup"><span data-stu-id="e5645-1358">Instead, the procedure responds to the user's actions, such as clicking a window with the mouse, clicking Go To on the Edit menu, and so on.</span></span></para>
          <para><span data-ttu-id="e5645-1359">Si une macro Auto_Activate ou Auto_Deactivate est définie pour une feuille de calcul ou une feuille macro, cette macro sera exécutée après la procédure spécifiée par la propriété <b>OnWindow</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1359">If a worksheet or macro sheet has an Auto_Activate or Auto_Deactivate macro defined for it, those macros will be run after the procedure specified by the <b>OnWindow</b> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatingSystem">
      <MemberSignature Language="C#" Value="public string OperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatingSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperatingSystem As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OperatingSystem { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1360">Renvoie le nom et le numéro de version du système d’exploitation actuel, par exemple, « Windows (32 bits) 4.00 » ou « Macintosh 7.00 ».</span><span class="sxs-lookup"><span data-stu-id="e5645-1360">Returns the name and version number of the current operating system, for example, "Windows (32-bit) 4.00" or "Macintosh 7.00".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizationName">
      <MemberSignature Language="C#" Value="public string OrganizationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OrganizationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrganizationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1361">Cette propriété renvoie le nom d'organisation enregistré.</span><span class="sxs-lookup"><span data-stu-id="e5645-1361">Returns the registered organization name.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Parent { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1362">Renvoie l’objet parent pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5645-1362">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1363">Renvoie le chemin d’accès complet à l’application, à l’exclusion du séparateur final et du nom de l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1363">Returns the complete path to the application, excluding the final separator and name of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1364">Renvoie le caractère séparateur de chemin d’accès ( » \" ).</span><span class="sxs-lookup"><span data-stu-id="e5645-1364">Returns the path separator character ("\").</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableSelection">
      <MemberSignature Language="C#" Value="public bool PivotTableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PivotTableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PivotTableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotTableSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PivotTableSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1365">Cette propriété a la valeur <b>True</b> si les rapports de tableaux croisés dynamiques utilisent une sélection structurée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1365"><b>True</b> if PivotTable reports use structured selection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSelections">
      <MemberSignature Language="C#" Value="public object PreviousSelections[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PreviousSelections(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSelections(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PreviousSelections[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e5645-1366">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1366">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1367">Numéro d'index (1 à 4) de la plage ou du nom précédent.</span><span class="sxs-lookup"><span data-stu-id="e5645-1367">The index number (from 1 to 4) of the previous range or name.</span></span></param>
        <summary><span data-ttu-id="e5645-1368">Cette propriété renvoie un tableau contenant les quatre derniers noms ou plages sélectionnés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1368">Returns an array of the last four ranges or names selected.</span></span> <span data-ttu-id="e5645-1369">Chaque élément du tableau est un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet.</span><span class="sxs-lookup"><span data-stu-id="e5645-1369">Each element in the array is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1370">Chaque fois que vous allez à une plage ou une cellule à l’aide de la zone Nom ou de la commande Go To (menu Édition), ou chaque fois qu’une macro appelle la méthode, la plage précédente est ajoutée à ce tableau en tant qu’élément numéro 1 et les autres éléments du tableau sont déplacés vers le <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> bas.</span><span class="sxs-lookup"><span data-stu-id="e5645-1370">Each time you go to a range or cell by using the Name box or the Go To command (Edit menu), or each time a macro calls the <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> method, the previous range is added to this array as element number 1, and the other items in the array are moved down.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintCommunication">
      <MemberSignature Language="C#" Value="public bool PrintCommunication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintCommunication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintCommunication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintCommunication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1371">Obtient ou définit si la communication avec l’imprimante est allumée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1371">Gets or sets whether communication with the printer is turned on.</span></span></summary>
        <value><span data-ttu-id="e5645-1372"><b>true si</b> la communication avec l’imprimante est allumée ; sinon, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1372"><b>true</b> if communication with the printer is turned on; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-1373">
            <b>booléen</b> En lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="e5645-1373">
            <b>boolean</b> Read/write.</span></span></para>
          <para><span data-ttu-id="e5645-1374">Définissez la propriété sur false pour accélérer l’exécution du <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> code qui définit les propriétés PageSetup. <b></b></span><span class="sxs-lookup"><span data-stu-id="e5645-1374">Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>false</b> to speed up the execution of code that sets PageSetup properties.</span></span> <span data-ttu-id="e5645-1375">Définissez la propriété sur true après avoir définie les propriétés pour valider toutes les commandes <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> PageSetup mises <b></b> en cache.</span><span class="sxs-lookup"><span data-stu-id="e5645-1375">Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>true</b> after setting properties to commit all cached PageSetup commands.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductCode">
      <MemberSignature Language="C#" Value="public string ProductCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProductCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1376">Cette propriété renvoie l'identificateur global unique (GUID, Globally Unique Identifier) de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1376">Returns the globally unique identifier (GUID) for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptForSummaryInfo">
      <MemberSignature Language="C#" Value="public bool PromptForSummaryInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PromptForSummaryInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PromptForSummaryInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptForSummaryInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PromptForSummaryInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1377">Cette propriété a la valeur <b>True</b> lorsque Microsoft Excel demande un résumé au moment où des fichiers sont enregistrés pour la première fois.</span><span class="sxs-lookup"><span data-stu-id="e5645-1377"><b>True</b> if Microsoft Excel asks for summary information when files are first saved.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedViewWindows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProtectedViewWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedViewWindows As ProtectedViewWindows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ ProtectedViewWindows { Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1378">Obtient une collection qui représente toutes les fenêtres en affichage protégé <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> qui sont ouvertes dans l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1378">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span></span></summary>
        <value><span data-ttu-id="e5645-1379">Collection qui représente toutes les fenêtres en affichage protégé <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> ouvertes dans l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1379">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-1380">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-1380">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAnalysis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.QuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuickAnalysis As QuickAnalysis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QuickAnalysis ^ QuickAnalysis { Microsoft::Office::Interop::Excel::QuickAnalysis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QuickAnalysis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1381">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> objet qui représente les options d’analyse rapide de l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1381">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> object that represents the Quick Analysis options of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public void Quit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Quit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Quit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Quit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Quit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-1382">Cette méthode quitte Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1382">Quits Microsoft Excel.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-1383">Si des classeurs non enregistrés sont ouverts lorsque vous utilisez cette méthode, Microsoft Excel affiche une boîte de dialogue vous demandant si vous souhaitez enregistrer les modifications.</span><span class="sxs-lookup"><span data-stu-id="e5645-1383">If unsaved workbooks are open when you use this method, Microsoft Excel displays a dialog box asking whether you want to save the changes.</span></span> <span data-ttu-id="e5645-1384">Pour éviter cela, vous pouvez enregistrer tous les workbooks avant d’utiliser la méthode <b>Quit</b> ou en lui fixant <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> la valeur <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1384">You can prevent this by saving all workbooks before using the <b>Quit</b> method or by setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>.</span></span> <span data-ttu-id="e5645-1385">Si cette propriété a la valeur <b>False</b>, Microsoft Excel n’affiche pas de boîte de dialogue lorsque vous quittez des classeurs non enregistrés (Excel se ferme sans les enregistrer).</span><span class="sxs-lookup"><span data-stu-id="e5645-1385">When this property is <b>False</b>, Microsoft Excel doesn’t display the dialog box when you quit with unsaved workbooks; it quits without saving them.</span></span></para>
          <para><span data-ttu-id="e5645-1386">Si vous définissez la propriété d’un workbook sur True sans enregistrer le workbook sur le disque, Microsoft Excel se quittera sans vous demander <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> d’enregistrer le workbook. <b></b></span><span class="sxs-lookup"><span data-stu-id="e5645-1386">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property for a workbook to <b>True</b> without saving the workbook to the disk, Microsoft Excel will quit without asking you to save the workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quitting">
      <MemberSignature Language="C#" Value="public bool Quitting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Quitting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Quitting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Quitting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Quitting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1387">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1387">Reserved for internal use.</span></span></summary>
        <value><span data-ttu-id="e5645-1388">Renvoie <see cref="T:System.Boolean" /> .</span><span class="sxs-lookup"><span data-stu-id="e5645-1388">Returns <see cref="T:System.Boolean" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1"><span data-ttu-id="e5645-1389">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1389">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1390">Nom de la plage.</span><span class="sxs-lookup"><span data-stu-id="e5645-1390">The name of the range.</span></span> <span data-ttu-id="e5645-1391">Il doit s'agir d'une référence de style A1 dans le langage de la macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-1391">This must be an A1-style reference in the language of the macro.</span></span> <span data-ttu-id="e5645-1392">Elle peut inclure l'opérateur de plage (signe deux points), l'opérateur d'intersection (espace) ou l'opérateur d'union (virgule).</span><span class="sxs-lookup"><span data-stu-id="e5645-1392">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="e5645-1393">Elle peut également inclure des signes dollar, mais ils sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1393">It can also include dollar signs, but they’re ignored.</span></span> <span data-ttu-id="e5645-1394">Vous pouvez utiliser un nom défini en local dans n'importe quelle partie de la plage.</span><span class="sxs-lookup"><span data-stu-id="e5645-1394">You can use a local defined name in any part of the range.</span></span> <span data-ttu-id="e5645-1395">Si vous utilisez un nom, celui-ci est supposé être dans le langage de la macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-1395">If you use a name, the name is assumed to be in the language of the macro.</span></span></param>
        <param name="Cell2"><span data-ttu-id="e5645-1396">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1396">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1397">Cellule dans les angles supérieur gauche et inférieur droit de la plage.</span><span class="sxs-lookup"><span data-stu-id="e5645-1397">The cell in the upper-left and lower-right corner of the range.</span></span> <span data-ttu-id="e5645-1398">Il peut s'agir d'un objet <b>Range</b> contenant une seule cellule, une colonne entière ou une ligne entière, ou d'une chaîne qui nomme une cellule dans le langage de la macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-1398">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span></span></param>
        <summary><span data-ttu-id="e5645-1399">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente une cellule ou une plage de cellules.</span><span class="sxs-lookup"><span data-stu-id="e5645-1399">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1400">La propriété est relative à <b>l’objet Range.</b></span><span class="sxs-lookup"><span data-stu-id="e5645-1400">The property is relative to the <b>Range</b> object.</span></span> <span data-ttu-id="e5645-1401">Par exemple, si la sélection est la cellule C3, Alors Selection.Range(« B1 ») renvoie la cellule D3, car elle est relative à l’objet <b>Range</b> renvoyé par la <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="e5645-1401">For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property.</span></span> <span data-ttu-id="e5645-1402">Par ailleurs, le code ActiveSheet.Range("B1") renvoie toujours la cellule B1.</span><span class="sxs-lookup"><span data-stu-id="e5645-1402">On the other hand, the code ActiveSheet.Range("B1") always returns cell B1.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ready">
      <MemberSignature Language="C#" Value="public bool Ready { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ready" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Ready" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ready As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ready { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1403">Cette propriété renvoie la valeur <b>True</b> lorsque l'application Microsoft Excel est prête ou <b>False</b> dans le cas contraire.</span><span class="sxs-lookup"><span data-stu-id="e5645-1403">Returns <b>True</b> when the Microsoft Excel application is ready; <b>False</b> when the Excel application is not ready.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RecentFiles RecentFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RecentFiles RecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecentFiles As RecentFiles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RecentFiles ^ RecentFiles { Microsoft::Office::Interop::Excel::RecentFiles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RecentFiles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1404">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> collection qui représente la liste des derniers fichiers utilisés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1404">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> collection that represents the list of recently used files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordMacro">
      <MemberSignature Language="C#" Value="public void RecordMacro (object BasicCode, object XlmCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordMacro([in]object BasicCode, [in]object XlmCode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RecordMacro(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordMacro (Optional BasicCode As Object, Optional XlmCode As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BasicCode" Type="System.Object" />
        <Parameter Name="XlmCode" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="BasicCode"><span data-ttu-id="e5645-1405">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1405">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1406">Chaîne qui spécifie le code Visual Basic enregistré si l'enregistreur de macro enregistre dans un module Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="e5645-1406">A string that specifies the Visual Basic code that will be recorded if the macro recorder is recording into a Visual Basic module.</span></span> <span data-ttu-id="e5645-1407">La chaîne sera enregistrée sur une ligne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1407">The string will be recorded on one line.</span></span> <span data-ttu-id="e5645-1408">Si la chaîne contient un retour chariot (le caractère ASCII 10 ou Chr$(10) dans le code), elle sera enregistrée sur plusieurs lignes.</span><span class="sxs-lookup"><span data-stu-id="e5645-1408">If the string contains a carriage return (ASCII character 10, or Chr$(10) in code), it will be recorded on more than one line.</span></span></param>
        <param name="XlmCode"><span data-ttu-id="e5645-1409">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1409">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1410">Argument ignoré.</span><span class="sxs-lookup"><span data-stu-id="e5645-1410">This argument is ignored.</span></span></param>
        <summary><span data-ttu-id="e5645-1411">Cette méthode enregistre le code si l'enregistreur de macro est activé.</span><span class="sxs-lookup"><span data-stu-id="e5645-1411">Records code if the macro recorder is on.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-1412">La méthode <b>RecordMacro</b> ne peut pas enregistrer dans le module actif (celui dans lequel la méthode <b>RecordMacro</b> existe).</span><span class="sxs-lookup"><span data-stu-id="e5645-1412">The <b>RecordMacro</b> method cannot record into the active module (the module in which the <b>RecordMacro</b> method exists).</span></span></para>
          <para><span data-ttu-id="e5645-1413">Pour empêcher l'enregistrement (par exemple lorsque l'utilisateur annule votre boîte de dialogue), appelez cette fonction avec deux chaînes vides.</span><span class="sxs-lookup"><span data-stu-id="e5645-1413">To prevent recording (for example, if the user cancels your dialog box), call this function with two empty strings.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordRelative">
      <MemberSignature Language="C#" Value="public bool RecordRelative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecordRelative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecordRelative" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordRelative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecordRelative { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1414">Cette propriété a la valeur <b>True</b> si les macros sont enregistrées en utilisant des références relatives, et la valeur <b>False</b> s'il s'agit de références absolues.</span><span class="sxs-lookup"><span data-stu-id="e5645-1414"><b>True</b> if macros are recorded using relative references; <b>False</b> if recording is absolute.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReferenceStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceStyle As XlReferenceStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle { Microsoft::Office::Interop::Excel::XlReferenceStyle get(); void set(Microsoft::Office::Interop::Excel::XlReferenceStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlReferenceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1415">Cette propriété renvoie ou définit comment Microsoft Excel affiche des références de cellule et des en-têtes de ligne et de colonne dans les styles de référence A1 ou R1C1.</span><span class="sxs-lookup"><span data-stu-id="e5645-1415">Returns or sets how Microsoft Excel displays cell references and row and column headings in either A1 or R1C1 reference style.</span></span> <span data-ttu-id="e5645-1416">En <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="e5645-1416">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1417">
            <b>XlReferenceStyle peut</b> être l’une de ces <b>constantes XlReferenceStyle</b> :</span><span class="sxs-lookup"><span data-stu-id="e5645-1417">
            <b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:</span></span></para>
          <para><span data-ttu-id="e5645-1418">
            <b>xlA1</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1418">
            <b>xlA1</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-1419">
            <b>xlR1C1</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1419">
            <b>xlR1C1</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredFunctions">
      <MemberSignature Language="C#" Value="public object RegisteredFunctions[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RegisteredFunctions(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RegisteredFunctions(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredFunctions(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RegisteredFunctions[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1"><span data-ttu-id="e5645-1420">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1420">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1421">Nom de la bibliothèque DLL ou de la ressource de code.</span><span class="sxs-lookup"><span data-stu-id="e5645-1421">The name of the DLL or code resource.</span></span></param>
        <param name="Index2"><span data-ttu-id="e5645-1422">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1422">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1423">Nom de la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1423">The name of the function.</span></span></param>
        <summary><span data-ttu-id="e5645-1424">Cette propriété renvoie des informations concernant des fonctions contenues dans des bibliothèques DLL (Dynamic-Link Library) ou dans des ressources de code inscrites dans le Registre à l'aide des fonctions de macro REGISTER ou REGISTER.ID.</span><span class="sxs-lookup"><span data-stu-id="e5645-1424">Returns information about functions in either dynamic-link libraries (DLLs) or code resources that were registered with the REGISTER or REGISTER.ID macro functions.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1425">Si vous ne spécifiez pas ces arguments, cette propriété renvoie un tableau qui contient la liste de toutes les fonctions inscrites.</span><span class="sxs-lookup"><span data-stu-id="e5645-1425">If you don’t specify these arguments, this property returns an array that contains a list of all registered functions.</span></span> <span data-ttu-id="e5645-1426">Chaque ligne du tableau contient les informations correspondant à une seule fonction, comme indiqué ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="e5645-1426">Each row in the array contains information about a single function, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-1427">1 </span><span class="sxs-lookup"><span data-stu-id="e5645-1427">1</span></span></term>
              <description><span data-ttu-id="e5645-1428">Nom de la bibliothèque DLL ou de la ressource de code</span><span class="sxs-lookup"><span data-stu-id="e5645-1428">The name of the DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1429">2 </span><span class="sxs-lookup"><span data-stu-id="e5645-1429">2</span></span></term>
              <description><span data-ttu-id="e5645-1430">Nom de la procédure dans la bibliothèque DLL ou la ressource de code</span><span class="sxs-lookup"><span data-stu-id="e5645-1430">The name of the procedure in the DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1431">3</span><span class="sxs-lookup"><span data-stu-id="e5645-1431">3</span></span></term>
              <description><span data-ttu-id="e5645-1432">Chaînes spécifiant les types de données des valeurs de retour et le nombre et les types de données des arguments</span><span class="sxs-lookup"><span data-stu-id="e5645-1432">Strings specifying the data types of the return values and the number and data types of the arguments</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-1433">S’il n’existe aucune fonction inscrite, cette propriété renvoie <b>la valeur Null</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1433">If there are no registered functions, this property returns <b>Null</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterXLL">
      <MemberSignature Language="C#" Value="public bool RegisterXLL (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterXLL([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RegisterXLL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterXLL (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RegisterXLL(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="e5645-1434">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="e5645-1434">Required <b>String</b>.</span></span> <span data-ttu-id="e5645-1435">Spécifie le nom de la ressource XLL à charger.</span><span class="sxs-lookup"><span data-stu-id="e5645-1435">Specifies the name of the XLL to be loaded.</span></span></param>
        <summary><span data-ttu-id="e5645-1436">Cette méthode charge une ressource de code XLL et enregistre automatiquement les fonctions et les commandes contenues dans la ressource.</span><span class="sxs-lookup"><span data-stu-id="e5645-1436">Loads an XLL code resource and automatically registers the functions and commands contained in the resource.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e5645-1437">Cette méthode renvoie la valeur <b>True</b> si le chargement de la ressource de code a réussi. Si ce n'est pas le cas, elle renvoie la valeur <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1437">This method returns <b>True</b> if the code resource is successfully loaded; otherwise, the method returns <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public void Repeat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Repeat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Repeat" />
      <MemberSignature Language="VB.NET" Value="Public Sub Repeat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Repeat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-1438">Répète la dernière action de l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5645-1438">Repeats the last user interface action.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-1439">Cette méthode répète uniquement la dernière action de l’utilisateur avant l’exécution de la procédure.</span><span class="sxs-lookup"><span data-stu-id="e5645-1439">This method repeats only the last action taken by the user before running the procedure.</span></span> <span data-ttu-id="e5645-1440">Il doit s’agit de la première ligne de la procédure.</span><span class="sxs-lookup"><span data-stu-id="e5645-1440">It must be the first line in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplaceFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ ReplaceFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1441">Définit le critère de remplacement utilisé lors du remplacement des formats de cellule.</span><span class="sxs-lookup"><span data-stu-id="e5645-1441">Sets the replacement criteria to use in replacing cell formats.</span></span> <span data-ttu-id="e5645-1442">Les critères de remplacement sont ensuite utilisés dans un appel ultérieur à <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> la méthode de <see cref="T:Microsoft.Office.Interop.Excel.Range" /> l’objet.</span><span class="sxs-lookup"><span data-stu-id="e5645-1442">The replacement criteria is then used in a subsequent call to the <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTipWizard">
      <MemberSignature Language="C#" Value="public void ResetTipWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTipWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ResetTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTipWizard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTipWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-p350">Cette méthode rétablit le bordereau de routage de façon à ce qu'une nouvelle distribution puisse commencer avec le même bordereau (en utilisant la même liste de destinataires et les mêmes informations de distribution). Vous ne pouvez utiliser cette méthode que lorsque la distribution est terminée. En d'autres circonstances, elle génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="e5645-p350">Resets the routing slip so that a new routing can be initiated with the same slip (using the same recipient list and delivery information). The routing must be completed before you use this method. Using this method at other times causes an error.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><para><span data-ttu-id="e5645-1446">Cet exemple montre comment rétablir le bordereau de routage du classeur Book1.xls si la distribution est terminée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1446">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="e5645-1447">Cet exemple montre comment rétablir le bordereau de routage du classeur Book1.xls si la distribution est terminée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1447">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="e5645-1448">Cet exemple montre comment rétablir le bordereau de routage du classeur Book1.xls si la distribution est terminée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1448">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="RollZoom">
      <MemberSignature Language="C#" Value="public bool RollZoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RollZoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RollZoom" />
      <MemberSignature Language="VB.NET" Value="Public Property RollZoom As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RollZoom { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1449">Cette propriété a la valeur <b>True</b> si IntelliMouse effectue un zoom plutôt qu'un défilement.</span><span class="sxs-lookup"><span data-stu-id="e5645-1449"><b>True</b> if the IntelliMouse zooms instead of scrolling.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1450">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente toutes les lignes de la feuille de calcul active.</span><span class="sxs-lookup"><span data-stu-id="e5645-1450">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the active worksheet.</span></span> <span data-ttu-id="e5645-1451">Si le document actif n’est pas une feuille de calcul, la propriété <b>Rows</b> échoue.</span><span class="sxs-lookup"><span data-stu-id="e5645-1451">If the active document isn’t a worksheet, the <b>Rows</b> property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1452">Appliquée à un objet <b>Range</b> correspondant à une sélection de plusieurs zones, cette propriété renvoie des lignes à partir de la première zone de la plage uniquement.</span><span class="sxs-lookup"><span data-stu-id="e5645-1452">When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range.</span></span> <span data-ttu-id="e5645-1453">Par exemple, si l’objet <b>Range</b> comporte deux zones : A1:B2 et C3:D4, Selection.Rows.Count renvoie 2, mais pas 4.</span><span class="sxs-lookup"><span data-stu-id="e5645-1453">For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — Selection.Rows.Count returns 2, not 4.</span></span> <span data-ttu-id="e5645-1454">Pour utiliser cette propriété dans une plage pouvant contenir une sélection de plusieurs zones, testez <b>Areas.Count</b> afin de déterminer si la plage contient plusieurs zones.</span><span class="sxs-lookup"><span data-stu-id="e5645-1454">To use this property on a range that may contain a multiple selection, test <b>Areas.Count</b> to determine whether the range is a multiple selection.</span></span> <span data-ttu-id="e5645-1455">Si c’est le cas, bouclez sur chaque zone de la plage.</span><span class="sxs-lookup"><span data-stu-id="e5645-1455">If it is, loop over each area in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RTD RTD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RTD RTD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RTD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RTD As RTD" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RTD ^ RTD { Microsoft::Office::Interop::Excel::RTD ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RTD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1456">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> objet.</span><span class="sxs-lookup"><span data-stu-id="e5645-1456">Returns an <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro"><span data-ttu-id="e5645-1457">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1457">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1458">Macro à exécuter.</span><span class="sxs-lookup"><span data-stu-id="e5645-1458">The macro to run.</span></span> <span data-ttu-id="e5645-1459">Il peut s’agit d’une chaîne avec le nom de la macro, d’un objet indiquant l’endroit où se trouve la fonction ou d’un ID de registre pour une fonction <see cref="T:Microsoft.Office.Interop.Excel.Range" /> DLL (XLL) inscrite.</span><span class="sxs-lookup"><span data-stu-id="e5645-1459">This can be either a string with the macro name, a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object indicating where the function is, or a register ID for a registered DLL (XLL) function.</span></span> <span data-ttu-id="e5645-1460">Si une chaîne est utilisée, elle sera évaluée dans le contexte de la feuille active.</span><span class="sxs-lookup"><span data-stu-id="e5645-1460">If a string is used, the string will be evaluated in the context of the active sheet.</span></span></param>
        <param name="Arg1"><span data-ttu-id="e5645-1461">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1461">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1462">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1462">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="e5645-1463">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1463">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1464">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1464">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg3"><span data-ttu-id="e5645-1465">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1465">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1466">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1466">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg4"><span data-ttu-id="e5645-1467">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1467">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1468">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1468">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg5"><span data-ttu-id="e5645-1469">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1469">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1470">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1470">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg6"><span data-ttu-id="e5645-1471">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1471">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1472">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1472">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg7"><span data-ttu-id="e5645-1473">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1473">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1474">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1474">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg8"><span data-ttu-id="e5645-1475">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1475">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1476">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1476">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg9"><span data-ttu-id="e5645-1477">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1477">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1478">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1478">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg10"><span data-ttu-id="e5645-1479">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1479">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1480">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1480">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg11"><span data-ttu-id="e5645-1481">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1481">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1482">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1482">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg12"><span data-ttu-id="e5645-1483">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1483">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1484">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1484">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg13"><span data-ttu-id="e5645-1485">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1485">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1486">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1486">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg14"><span data-ttu-id="e5645-1487">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1487">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1488">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1488">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg15"><span data-ttu-id="e5645-1489">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1489">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1490">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1490">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg16"><span data-ttu-id="e5645-1491">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1491">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1492">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1492">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg17"><span data-ttu-id="e5645-1493">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1493">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1494">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1494">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg18"><span data-ttu-id="e5645-1495">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1495">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1496">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1496">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg19"><span data-ttu-id="e5645-1497">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1497">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1498">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1498">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg20"><span data-ttu-id="e5645-1499">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1499">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1500">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1500">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg21"><span data-ttu-id="e5645-1501">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1501">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1502">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1502">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg22"><span data-ttu-id="e5645-1503">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1503">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1504">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1504">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg23"><span data-ttu-id="e5645-1505">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1505">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1506">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1506">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg24"><span data-ttu-id="e5645-1507">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1507">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1508">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1508">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg25"><span data-ttu-id="e5645-1509">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1509">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1510">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1510">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg26"><span data-ttu-id="e5645-1511">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1511">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1512">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1512">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg27"><span data-ttu-id="e5645-1513">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1513">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1514">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1514">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg28"><span data-ttu-id="e5645-1515">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1515">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1516">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1516">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg29"><span data-ttu-id="e5645-1517">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1517">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1518">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1518">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg30"><span data-ttu-id="e5645-1519">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1519">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1520">Arguments à transmettre à la fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1520">The arguments that should be passed to the function.</span></span></param>
        <summary><span data-ttu-id="e5645-1521">Cette méthode exécute une macro ou appelle une fonction.</span><span class="sxs-lookup"><span data-stu-id="e5645-1521">Runs a macro or calls a function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e5645-1522">Vous ne pouvez pas utiliser d'arguments nommés avec cette méthode.</span><span class="sxs-lookup"><span data-stu-id="e5645-1522">You cannot use named arguments with this method.</span></span> <span data-ttu-id="e5645-1523">Ils doivent être transmis par position.</span><span class="sxs-lookup"><span data-stu-id="e5645-1523">Arguments must be passed by position.</span></span></para>
          <para><span data-ttu-id="e5645-1524">La méthode <b>Run</b> renvoie la valeur renvoyée par la macro appelée. </span><span class="sxs-lookup"><span data-stu-id="e5645-1524">The <b>Run</b> method returns whatever the called macro returns.</span></span> <span data-ttu-id="e5645-1525">Les objets transmis en tant qu’arguments à la macro sont convertis en valeurs (en appliquant la propriété <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> à l’objet).</span><span class="sxs-lookup"><span data-stu-id="e5645-1525">Objects passed as arguments to the macro are converted to values (by applying the <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> property to the object).</span></span> <span data-ttu-id="e5645-1526">Cela signifie que vous ne pouvez pas passer d’objets aux macros à l’aide de la méthode <b>Run</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1526">This means that you cannot pass objects to macros by using the <b>Run</b> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary><span data-ttu-id="e5645-1527">Cette méthode enregistre les modifications apportées au classeur spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5645-1527">Saves changes to the specified workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-1528">Pour ouvrir un fichier de classer, utilisez la <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> méthode.</span><span class="sxs-lookup"><span data-stu-id="e5645-1528">To open a workbook file, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> method.</span></span></para>
          <para> </para>
          <para><span data-ttu-id="e5645-1529">Pour marquer un workbook comme enregistré sans l’écrire sur un disque, définissez sa <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> propriété sur <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1529">To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> property to <b>True</b>.</span></span></para>
          <para> </para>
          <para><span data-ttu-id="e5645-1530">La première fois que vous enregistrez un classez, utilisez la <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> méthode pour spécifier un nom pour le fichier.</span><span class="sxs-lookup"><span data-stu-id="e5645-1530">The first time you save a workbook, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> method to specify a name for the file.</span></span></para>
          <para> </para></remarks>
        <example><para><span data-ttu-id="e5645-1531">Cet exemple montre comment enregistrer le classeur actif.</span><span class="sxs-lookup"><span data-stu-id="e5645-1531">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="e5645-1532">Cet exemple montre comment enregistrer tous les classeurs ouverts, puis fermer Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1532">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="e5645-1533">Cet exemple montre comment enregistrer le classeur actif.</span><span class="sxs-lookup"><span data-stu-id="e5645-1533">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="e5645-1534">Cet exemple montre comment enregistrer tous les classeurs ouverts, puis fermer Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1534">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="e5645-1535">Cet exemple montre comment enregistrer le classeur actif.</span><span class="sxs-lookup"><span data-stu-id="e5645-1535">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="e5645-1536">Cet exemple montre comment enregistrer tous les classeurs ouverts, puis fermer Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1536">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="SaveISO8601Dates">
      <MemberSignature Language="C#" Value="public bool SaveISO8601Dates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveISO8601Dates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SaveISO8601Dates" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveISO8601Dates As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveISO8601Dates { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1537">Cet objet, ce membre ou cette énumération est déconseillé et n’est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="e5645-1537">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkspace">
      <MemberSignature Language="C#" Value="public void SaveWorkspace (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveWorkspace([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SaveWorkspace(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkspace (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary><span data-ttu-id="e5645-1538">Cet objet, ce membre ou cette énumération est déconseillé et n’est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="e5645-1538">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenUpdating">
      <MemberSignature Language="C#" Value="public bool ScreenUpdating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScreenUpdating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Property ScreenUpdating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScreenUpdating { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1539"><b>True</b> si la mise à jour de l'écran est activée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1539"><b>True</b> if screen updating is turned on.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1540">Désactiver la mise à jour de l’écran pour accélérer votre code.</span><span class="sxs-lookup"><span data-stu-id="e5645-1540">Turn screen updating off to speed up your code.</span></span> <span data-ttu-id="e5645-1541">Vous ne pourrez pas voir ce que fait le code, mais il s’exécutera plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="e5645-1541">You won't be able to see what the code is doing, but it will run faster.</span></span></para>
          <para><span data-ttu-id="e5645-1542">N’oubliez pas de définir la <b>propriété ScreenUpdating</b> sur <b>True</b> à la fin de votre code.</span><span class="sxs-lookup"><span data-stu-id="e5645-1542">Remember to set the <b>ScreenUpdating</b> property back to <b>True</b> when your code ends.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1543">Renvoie l’objet sélectionné dans la fenêtre active.</span><span class="sxs-lookup"><span data-stu-id="e5645-1543">Returns the selected object in the active window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1544">Le type d’objet renvoyé dépend de la sélection actuelle (par exemple, si une cellule est sélectionnée, cette propriété renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet).</span><span class="sxs-lookup"><span data-stu-id="e5645-1544">The returned object type depends on the current selection (for example, if a cell is selected, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object).</span></span> <span data-ttu-id="e5645-1545">La propriété <b>Selection</b> renvoie <b>Nothing</b> si rien n'est sélectionné.</span><span class="sxs-lookup"><span data-stu-id="e5645-1545">The <b>Selection</b> property returns <b>Nothing</b> if nothing is selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (object Keys, object Wait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeys([in]object Keys, [in]object Wait) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As Object, Optional Wait As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.Object" />
        <Parameter Name="Wait" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Keys"><span data-ttu-id="e5645-1546">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1546">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1547">Combinaison de touches ou de touches que vous souhaitez envoyer à l’application en tant que texte.</span><span class="sxs-lookup"><span data-stu-id="e5645-1547">The key or key combination you want to send to the application as text.</span></span></param>
        <param name="Wait"><span data-ttu-id="e5645-1548">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1548">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1549"><b>True</b> pour que Microsoft Excel attende que les touches soient traitées avant de renvoyer le contrôle à la macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-1549"><b>True</b> to have Microsoft Excel wait for the keys to be processed before returning control to the macro.</span></span> <span data-ttu-id="e5645-1550"><b>False</b> (ou omis) pour continuer à exécuter la macro sans attendre le traitement des touches.</span><span class="sxs-lookup"><span data-stu-id="e5645-1550"><b>False</b> (or omitted) to continue running the macro without waiting for the keys to be processed.</span></span></param>
        <summary><span data-ttu-id="e5645-1551">Envoie des séquences de touches à l’application active.</span><span class="sxs-lookup"><span data-stu-id="e5645-1551">Sends keystrokes to the active application.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-p390">Cette méthode place les touches dans une mémoire tampon de touches. Dans certains cas, vous devez appeler cette méthode avant d’appeler la méthode qui utilisera les touches. Par exemple, pour envoyer un mot de passe à une boîte de dialogue, vous devez appeler la méthode <b>SendKeys</b> avant d’afficher la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="e5645-p390">This method places keystrokes in a key buffer. In some cases, you must call this method before you call the method that will use the keystrokes. For example, to send a password to a dialog box, you must call the <b>SendKeys</b> method before you display the dialog box.</span></span></para>
          <para><span data-ttu-id="e5645-1555">L’argument peut spécifier n’importe quelle touche unique ou toute touche combinée avec ALT, Ctrl ou Shift (ou toute combinaison <paramref name="Keys" /> de ces touches).</span><span class="sxs-lookup"><span data-stu-id="e5645-1555">The <paramref name="Keys" /> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).</span></span> <span data-ttu-id="e5645-1556">Chaque touche est représentée par un ou plusieurs caractères, tels que « a » pour la lettre a ou « {ENTER} » pour la touche ENTRÉE.</span><span class="sxs-lookup"><span data-stu-id="e5645-1556">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="e5645-p392">Pour spécifier des caractères non affichés lorsque vous appuyez sur la touche correspondante (par exemple ENTER ou TAB), utilisez les codes listés dans la table suivante. Chaque code de la table représente une touche du clavier.</span><span class="sxs-lookup"><span data-stu-id="e5645-p392">To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-1559">Retour arrière</span><span class="sxs-lookup"><span data-stu-id="e5645-1559">BACKSPACE</span></span></term>
              <description><span data-ttu-id="e5645-1560">{BACKSPACE} ou {BS}</span><span class="sxs-lookup"><span data-stu-id="e5645-1560">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1561">Attn</span><span class="sxs-lookup"><span data-stu-id="e5645-1561">BREAK</span></span></term>
              <description><span data-ttu-id="e5645-1562">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="e5645-1562">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1563">Verr. maj</span><span class="sxs-lookup"><span data-stu-id="e5645-1563">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="e5645-1564">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="e5645-1564">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1565">EFFACER</span><span class="sxs-lookup"><span data-stu-id="e5645-1565">CLEAR</span></span></term>
              <description><span data-ttu-id="e5645-1566">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="e5645-1566">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1567">SUPPRIMER ou Suppr</span><span class="sxs-lookup"><span data-stu-id="e5645-1567">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="e5645-1568">{DELETE} ou {DEL}</span><span class="sxs-lookup"><span data-stu-id="e5645-1568">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1569">Bas</span><span class="sxs-lookup"><span data-stu-id="e5645-1569">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="e5645-1570">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="e5645-1570">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1571">Fin</span><span class="sxs-lookup"><span data-stu-id="e5645-1571">END</span></span></term>
              <description><span data-ttu-id="e5645-1572">{END}</span><span class="sxs-lookup"><span data-stu-id="e5645-1572">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1573">Entrée</span><span class="sxs-lookup"><span data-stu-id="e5645-1573">ENTER</span></span></term>
              <description><span data-ttu-id="e5645-1574">~ (tilde)</span><span class="sxs-lookup"><span data-stu-id="e5645-1574">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1575">Entrée (pavé numérique)</span><span class="sxs-lookup"><span data-stu-id="e5645-1575">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="e5645-1576">{Enter}</span><span class="sxs-lookup"><span data-stu-id="e5645-1576">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1577">Échap</span><span class="sxs-lookup"><span data-stu-id="e5645-1577">ESC</span></span></term>
              <description><span data-ttu-id="e5645-1578">{ESCAPE} ou {ESC}</span><span class="sxs-lookup"><span data-stu-id="e5645-1578">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1579">F1 à F15</span><span class="sxs-lookup"><span data-stu-id="e5645-1579">F1 through F15</span></span></term>
              <description><span data-ttu-id="e5645-1580">{F1} à {F15}</span><span class="sxs-lookup"><span data-stu-id="e5645-1580">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1581">Aide</span><span class="sxs-lookup"><span data-stu-id="e5645-1581">HELP</span></span></term>
              <description><span data-ttu-id="e5645-1582">{HELP}</span><span class="sxs-lookup"><span data-stu-id="e5645-1582">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1583">Début</span><span class="sxs-lookup"><span data-stu-id="e5645-1583">HOME</span></span></term>
              <description><span data-ttu-id="e5645-1584">{HOME}</span><span class="sxs-lookup"><span data-stu-id="e5645-1584">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1585">Inser</span><span class="sxs-lookup"><span data-stu-id="e5645-1585">INS</span></span></term>
              <description><span data-ttu-id="e5645-1586">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="e5645-1586">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1587">Gauche</span><span class="sxs-lookup"><span data-stu-id="e5645-1587">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="e5645-1588">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="e5645-1588">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1589">Verr. num</span><span class="sxs-lookup"><span data-stu-id="e5645-1589">NUM LOCK</span></span></term>
              <description><span data-ttu-id="e5645-1590">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="e5645-1590">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1591">Pg. suiv</span><span class="sxs-lookup"><span data-stu-id="e5645-1591">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="e5645-1592">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="e5645-1592">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1593">Pg. préc</span><span class="sxs-lookup"><span data-stu-id="e5645-1593">PAGE UP</span></span></term>
              <description><span data-ttu-id="e5645-1594">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="e5645-1594">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1595">RETOUR</span><span class="sxs-lookup"><span data-stu-id="e5645-1595">RETURN</span></span></term>
              <description><span data-ttu-id="e5645-1596">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="e5645-1596">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1597">Droite</span><span class="sxs-lookup"><span data-stu-id="e5645-1597">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="e5645-1598">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="e5645-1598">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1599">Arrêt défil</span><span class="sxs-lookup"><span data-stu-id="e5645-1599">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="e5645-1600">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="e5645-1600">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1601">Tab</span><span class="sxs-lookup"><span data-stu-id="e5645-1601">TAB</span></span></term>
              <description><span data-ttu-id="e5645-1602">{TAB}</span><span class="sxs-lookup"><span data-stu-id="e5645-1602">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1603">Haut</span><span class="sxs-lookup"><span data-stu-id="e5645-1603">UP ARROW</span></span></term>
              <description><span data-ttu-id="e5645-1604">{UP}</span><span class="sxs-lookup"><span data-stu-id="e5645-1604">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e5645-p393">Vous pouvez également spécifier des touches combinées avec MAJ et/ou CTRL et/ou ALT. Pour spécifier une touche combinée avec une ou plusieurs autres touches, utilisez le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="e5645-p393">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e5645-1607">MAJ</span><span class="sxs-lookup"><span data-stu-id="e5645-1607">SHIFT</span></span></term>
              <description><span data-ttu-id="e5645-1608">+ (signe plus)</span><span class="sxs-lookup"><span data-stu-id="e5645-1608">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1609">Ctrl</span><span class="sxs-lookup"><span data-stu-id="e5645-1609">CTRL</span></span></term>
              <description><span data-ttu-id="e5645-1610">^ (caret)</span><span class="sxs-lookup"><span data-stu-id="e5645-1610">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e5645-1611">ALT</span><span class="sxs-lookup"><span data-stu-id="e5645-1611">ALT</span></span></term>
              <description><span data-ttu-id="e5645-1612">% (signe de pourcentage)</span><span class="sxs-lookup"><span data-stu-id="e5645-1612">% (percent sign)</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object FormatName, object Gallery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object FormatName, [in]object Gallery) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SetDefaultChart(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Optional FormatName As Object, Optional Gallery As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormatName" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FormatName"><span data-ttu-id="e5645-1613">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1613">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1614">Spécifie le nom d’une mise en forme automatique personnalisée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1614">Specifies the name of a custom autoformat.</span></span> <span data-ttu-id="e5645-1615">Ce nom peut être une chaîne nommant une mise en forme automatique personnalisée, ou il peut s’agit de la constante <b>spéciale xlBuiltIn</b> pour spécifier le modèle de graphique intégré.</span><span class="sxs-lookup"><span data-stu-id="e5645-1615">This name can be a string naming a custom autoformat, or it can be the special constant <b>xlBuiltIn</b> to specify the built-in chart template.</span></span></param>
        <param name="Gallery"><span data-ttu-id="e5645-1616">Optional, objet.</span><span class="sxs-lookup"><span data-stu-id="e5645-1616">Optional Object.</span></span> <span data-ttu-id="e5645-1617">Spécifie le nom d’une galerie.</span><span class="sxs-lookup"><span data-stu-id="e5645-1617">Specifies the name of a gallery.</span></span></param>
        <summary><span data-ttu-id="e5645-1618">Spécifie le nom du modèle de graphique que Microsoft Excel utilisera lors de la création de nouveaux graphiques.</span><span class="sxs-lookup"><span data-stu-id="e5645-1618">Specifies the name of the chart template that Microsoft Excel will use when creating new charts.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharePointVersion">
      <MemberSignature Language="C#" Value="public int SharePointVersion (string bstrUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SharePointVersion([in]string bstrUrl) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SharePointVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SharePointVersion (bstrUrl As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SharePointVersion(System::String ^ bstrUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrUrl"><span data-ttu-id="e5645-1619">URL du site à vérifier.</span><span class="sxs-lookup"><span data-stu-id="e5645-1619">The URL of site to check.</span></span></param>
        <summary><span data-ttu-id="e5645-1620">Renvoie le numéro de version de SharePoint Foundation s’exécutant sur le site pour l’URL spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1620">Returns the version number of SharePoint Foundation instances running at site for the specified URL.</span></span></summary>
        <returns><span data-ttu-id="e5645-1621"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="e5645-1621"><b>Integer</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1622">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles du manuel actif.</span><span class="sxs-lookup"><span data-stu-id="e5645-1622">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetsInNewWorkbook">
      <MemberSignature Language="C#" Value="public int SheetsInNewWorkbook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SheetsInNewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SheetsInNewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public Property SheetsInNewWorkbook As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SheetsInNewWorkbook { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1623">Cette propriété renvoie ou définit le nombre de feuilles que Microsoft Excel insère automatiquement dans les nouveaux classeurs.</span><span class="sxs-lookup"><span data-stu-id="e5645-1623">Returns or sets the number of sheets that Microsoft Excel automatically inserts into new workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutMenus">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Menu ShortcutMenus[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Menu ShortcutMenus(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShortcutMenus(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShortcutMenus(Index As Integer) As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Menu ^ ShortcutMenus[int] { Microsoft::Office::Interop::Excel::Menu ^ get(int Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Menu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="e5645-1624">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1624">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipNames">
      <MemberSignature Language="C#" Value="public bool ShowChartTipNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1625">Cette propriété a la valeur <b>True</b> si les graphiques affichent les intitulés des conseils à propos des graphiques.</span><span class="sxs-lookup"><span data-stu-id="e5645-1625"><b>True</b> if charts show chart tip names.</span></span> <span data-ttu-id="e5645-1626">Valeur par défaut : <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1626">The default value is <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipValues">
      <MemberSignature Language="C#" Value="public bool ShowChartTipValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1627">Cette propriété a la valeur <b>True</b> si les graphiques affichent les valeurs des conseils à propos des graphiques.</span><span class="sxs-lookup"><span data-stu-id="e5645-1627"><b>True</b> if charts show chart tip values.</span></span> <span data-ttu-id="e5645-1628">Valeur par défaut : <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1628">The default value is <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDevTools">
      <MemberSignature Language="C#" Value="public bool ShowDevTools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDevTools" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowDevTools" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDevTools As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDevTools { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1629">Renvoie ou définit un <b>booléen</b> qui représente si l’onglet Développeur est affiché dans le Ruban.</span><span class="sxs-lookup"><span data-stu-id="e5645-1629">Returns or sets a <b>Boolean</b> that represents whether the Developer tab is displayed in the Ribbon.</span></span> <span data-ttu-id="e5645-1630">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-1630">Read/write.</span></span></summary>
        <value><span data-ttu-id="e5645-1631"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e5645-1631"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="e5645-1632">Cette propriété correspond à la case à cocher Afficher l’onglet Développeur dans le Ruban de la boîte de dialogue Options Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1632">This property corresponds to the Show Developer tab in the Ribbon check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMenuFloaties">
      <MemberSignature Language="C#" Value="public bool ShowMenuFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowMenuFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowMenuFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowMenuFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowMenuFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1633">Renvoie ou définit un <b>booléen</b> qui représente s’il faut afficher les barres d’outils Mini lorsque l’utilisateur clique avec le bouton droit dans la fenêtre dubook.</span><span class="sxs-lookup"><span data-stu-id="e5645-1633">Returns or sets a <b>Boolean</b> that represents whether to display Mini toolbars when the user right-clicks in the workbook window.</span></span> <span data-ttu-id="e5645-1634">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-1634">Read/write.</span></span></summary>
        <value><span data-ttu-id="e5645-1635"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e5645-1635"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowQuickAnalysis">
      <MemberSignature Language="C#" Value="public bool ShowQuickAnalysis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowQuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowQuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowQuickAnalysis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowQuickAnalysis { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1636">Contrôle si l’interface utilisateur contextuelle analyse rapide est affichée sur la sélection.</span><span class="sxs-lookup"><span data-stu-id="e5645-1636">Controls whether the Quick Analysis contextual user interface is displayed on selection.</span></span> <span data-ttu-id="e5645-1637"><b>TRUE</b> signifie que le bouton Analyse rapide s’affiche.</span><span class="sxs-lookup"><span data-stu-id="e5645-1637"><b>TRUE</b> means the Quick Analysis button will show.</span></span> <span data-ttu-id="e5645-1638">Correspond aux options Afficher l’analyse rapide dans la case à cocher Sélection située dans le menu <b>Fichier, Options, Options Excel,</b>puis onglet Général. En lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="e5645-1638">Corresponds to the Show Quick Analysis options on selection checkbox located in the File menu, <b>Options, Excel Options</b>, and then General tab. Read/Write.</span></span> <span data-ttu-id="e5645-1639"><b>Booléen</b> <b>(booléen</b> en C#).</span><span class="sxs-lookup"><span data-stu-id="e5645-1639"><b>Boolean</b> (<b>bool</b> in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionFloaties">
      <MemberSignature Language="C#" Value="public bool ShowSelectionFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowSelectionFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1640">Renvoie ou définit un <b>booléen</b> qui représente si les barres d’outils Mini s’affichent lorsqu’un utilisateur sélectionne du texte.</span><span class="sxs-lookup"><span data-stu-id="e5645-1640">Returns or sets a <b>Boolean</b> that represents whether Mini toolbars displays when a user selects text.</span></span> <span data-ttu-id="e5645-1641">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-1641">Read/write.</span></span></summary>
        <value><span data-ttu-id="e5645-1642"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e5645-1642"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="e5645-1643">Cette propriété correspond à la case à cocher Afficher la mini barre d'outils lors de la sélection de la boîte de dialogue Options Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1643">Corresponds with the Show MiniBar on selection check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowStartupDialog">
      <MemberSignature Language="C#" Value="public bool ShowStartupDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowStartupDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowStartupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowStartupDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowStartupDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1644">Renvoie <b>la valeur True</b> (par défaut) lorsque le volet Nouveau workbook s’affiche pour une application Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1644">Returns <b>True</b> (default) when the New Workbook task pane appears for a Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowToolTips">
      <MemberSignature Language="C#" Value="public bool ShowToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1645">Cette propriété a la valeur <b>True</b> si les info-bulles sont activées.</span><span class="sxs-lookup"><span data-stu-id="e5645-1645"><b>True</b> if ToolTips are turned on.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindowsInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowWindowsInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindowsInTaskbar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowWindowsInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindowsInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindowsInTaskbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1646">Cet objet, ce membre ou cette énumération est déconseillé et n’est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="e5645-1646">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtColors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtColors SmartArtColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtColors SmartArtColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtColors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtColors As SmartArtColors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtColors ^ SmartArtColors { Microsoft::Office::Core::SmartArtColors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtColors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1647">Obtient l’ensemble des styles de couleur actuellement chargés dans l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1647">Gets the set of color styles that are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="e5645-1648">Ensemble de styles de couleurs actuellement chargés dans l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1648">The set of color styles that are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-1649">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-1649">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtLayouts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtLayouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtLayouts As SmartArtLayouts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtLayouts ^ SmartArtLayouts { Microsoft::Office::Core::SmartArtLayouts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtLayouts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1650">Obtient l’ensemble des dispositions SmartArt actuellement chargées dans l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1650">Gets the set of SmartArt layouts that are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="e5645-1651">Ensemble de dispositions SmartArt actuellement chargées dans l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1651">The set of SmartArt layouts that are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-1652">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-1652">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtQuickStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtQuickStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtQuickStyles As SmartArtQuickStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtQuickStyles ^ SmartArtQuickStyles { Microsoft::Office::Core::SmartArtQuickStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtQuickStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1653">Obtient l’ensemble des styles rapides SmartArt actuellement chargés dans l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1653">Gets the set of SmartArt quick styles which are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="e5645-1654">Ensemble de styles rapides SmartArt actuellement chargés dans l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1654">The set of SmartArt quick styles which are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-1655">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e5645-1655">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRecognizers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartTagRecognizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagRecognizers As SmartTagRecognizers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ SmartTagRecognizers { Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagRecognizers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1656">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> collection pour une application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1656">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> collection for an application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speech">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Speech Speech { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Speech Speech" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Speech" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Speech As Speech" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Speech ^ Speech { Microsoft::Office::Interop::Excel::Speech ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Speech</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1657">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> objet.</span><span class="sxs-lookup"><span data-stu-id="e5645-1657">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellingOptions As SpellingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SpellingOptions ^ SpellingOptions { Microsoft::Office::Interop::Excel::SpellingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SpellingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1658">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> objet qui représente les options orthographiques de l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1658">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> object that represents the spelling options of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFont">
      <MemberSignature Language="C#" Value="public string StandardFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFont" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFont As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardFont { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1659">Cette propriété renvoie ou définit le nom de la police standard.</span><span class="sxs-lookup"><span data-stu-id="e5645-1659">Returns or sets the name of the standard font.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1660">Si vous changez de police standard en utilisant cette propriété, cette modification n'est prise en compte qu'après avoir redémarré Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1660">If you change the standard font by using this property, the change doesn't take effect until you restart Microsoft Excel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFontSize">
      <MemberSignature Language="C#" Value="public double StandardFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardFontSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardFontSize { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1661">Cette propriété renvoie ou définit la taille, exprimée en points, de la police standard.</span><span class="sxs-lookup"><span data-stu-id="e5645-1661">Returns or sets the standard font size, in points.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1662">Si vous changez la taille de la police standard en utilisant cette propriété, cette modification n'est prise en compte qu'après avoir redémarré Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1662">If you change the standard font size by using this property, the change doesn't take effect until you restart Microsoft Excel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StartupPath">
      <MemberSignature Language="C#" Value="public string StartupPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StartupPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartupPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1663">Renvoie le chemin d’accès complet du dossier de démarrage à l’exclusion du séparateur final.</span><span class="sxs-lookup"><span data-stu-id="e5645-1663">Returns the complete path of the startup folder excluding the final separator.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public object StatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object StatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusBar As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ StatusBar { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1664">Renvoie ou définit le texte dans la barre d’état.</span><span class="sxs-lookup"><span data-stu-id="e5645-1664">Returns or sets the text in the status bar.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-p402">Cette propriété renvoie la valeur  <b>False</b> si Microsoft Excel a le contrôle de la barre d’état. Pour restaurer le texte par défaut de la barre d’état, définissez la propriété sur <b>False</b> ; cela fonctionne même si la barre d’état est masquée.</span><span class="sxs-lookup"><span data-stu-id="e5645-p402">This property returns <b>False</b> if Microsoft Excel has control of the status bar. To restore the default status bar text, set the property to <b>False</b>; this works even if the status bar is hidden.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Support">
      <MemberSignature Language="C#" Value="public object Support (object Object, int ID, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Support([in]object Object, [in]int32 ID, [in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Support(System.Object,System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Object" Type="System.Object" />
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Object">To be added.</param>
        <param name="ID">To be added.</param>
        <param name="arg">To be added.</param>
        <summary><span data-ttu-id="e5645-1667">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1667">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatesPath">
      <MemberSignature Language="C#" Value="public string TemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1668">Cette propriété renvoie le chemin d'accès local où les modèles sont stockés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1668">Returns the local path where templates are stored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ThisCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ThisCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ThisCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1669">Renvoie la cellule à partir de la fonction définie par l’utilisateur qui est appelée en tant <see cref="T:Microsoft.Office.Interop.Excel.Range" /> qu’objet.</span><span class="sxs-lookup"><span data-stu-id="e5645-1669">Returns the cell the user-defined function is being called from as a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1670">Les utilisateurs ne doivent pas accéder aux propriétés ni aux méthodes de l'objet <b>Range</b> à partir de la fonction définie par un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5645-1670">Users should not access properties or methods on the <b>Range</b> object when inside the user-defined function.</span></span> <span data-ttu-id="e5645-1671">Ils peuvent mettre l'objet <b>Range</b> en cache pour une utilisation ultérieure et effectuer d'autres actions lorsque le recalcul est terminé.</span><span class="sxs-lookup"><span data-stu-id="e5645-1671">Users can cache the <b>Range</b> object for later use and perform additional actions when the recalculation is finished.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ThisWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ThisWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ThisWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1672">Renvoie un objet qui représente le workbook dans lequel <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> le code de macro actuel est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="e5645-1672">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook where the current macro code is running.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1673">Utilisez cette propriété pour faire référence au classeur qui contient le code de votre macro.</span><span class="sxs-lookup"><span data-stu-id="e5645-1673">Use this property to refer to the workbook that contains your macro code.</span></span> <span data-ttu-id="e5645-1674">Il est impossible de faire référence à un classeur de macro complémentaire à partir de la macro complémentaire même sans utiliser  <b>ThisWorkbook</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1674"><b>ThisWorkbook</b> is the only way to refer to an add-in workbook from inside the add-in itself.</span></span> <span data-ttu-id="e5645-1675">La propriété <b>ActiveWorkbook</b> renvoie le classeur appelant la macro complémentaire et non pas le classeur de macro complémentaire.</span><span class="sxs-lookup"><span data-stu-id="e5645-1675">The <b>ActiveWorkbook</b> property doesn't return the add-in workbook; it returns the workbook that's calling the add-in.</span></span> <span data-ttu-id="e5645-1676">La propriété peut échouer, car le nom du workbook a probablement changé lors <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> de la création du module.</span><span class="sxs-lookup"><span data-stu-id="e5645-1676">The <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property may fail, because the workbook name probably changed when you created the add-in.</span></span> <span data-ttu-id="e5645-1677">La propriété <b>ThisWorkbook</b> renvoie toujours le classeur dans lequel le code s'exécute.</span><span class="sxs-lookup"><span data-stu-id="e5645-1677"><b>ThisWorkbook</b> always returns the workbook in which the code is running.</span></span></para>
          <para><span data-ttu-id="e5645-1678">Cette propriété ne peut être utilisée qu’à partir d’Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1678">This property can be used only from inside Excel.</span></span> <span data-ttu-id="e5645-1679">Il est impossible de l'utiliser pour accéder à un classeur à partir d'une autre application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1679">You cannot use it to access a workbook from any other application.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public string ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1680">Cette propriété renvoie ou définit le caractère utilisé comme séparateur de milliers sous forme de chaîne (type <b>String</b>).</span><span class="sxs-lookup"><span data-stu-id="e5645-1680">Sets or returns the character used for the thousands separator as a <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toolbars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Toolbars Toolbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Toolbars Toolbars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Toolbars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Toolbars As Toolbars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Toolbars ^ Toolbars { Microsoft::Office::Interop::Excel::Toolbars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Toolbars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1681">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1681">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1682">Distance, en points, entre le bord supérieur de l’écran et le bord supérieur de la fenêtre principale de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1682">The distance, in points, from the top edge of the screen to the top edge of the main Microsoft Excel window.</span></span> <span data-ttu-id="e5645-1683">Si la fenêtre d'application est réduite, cette propriété contrôle la position de l'icône de la fenêtre (n'importe où sur l'écran).</span><span class="sxs-lookup"><span data-stu-id="e5645-1683">If the application window is minimized, this property controls the position of the window icon (anywhere on the screen).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKey">
      <MemberSignature Language="C#" Value="public string TransitionMenuKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransitionMenuKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransitionMenuKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1684">Cette propriété renvoie ou définit la touche Aide ou d'accès au menu Microsoft Excel, généralement « / ».</span><span class="sxs-lookup"><span data-stu-id="e5645-1684">Returns or sets the Microsoft Excel menu or help key, which is usually "/".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKeyAction">
      <MemberSignature Language="C#" Value="public int TransitionMenuKeyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransitionMenuKeyAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKeyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKeyAction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TransitionMenuKeyAction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1685">Cette propriété renvoie ou définit l'action effectuée lorsque la touche d'accès au menu Microsoft Excel est appuyée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1685">Returns or sets the action taken when the Microsoft Excel menu key is pressed.</span></span> <span data-ttu-id="e5645-1686">Cette propriété peut avoir la valeur <b>xlExcelMenus</b> ou <b>xlLotusHelp</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1686">Can be either <b>xlExcelMenus</b> or <b>xlLotusHelp</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionNavigKeys">
      <MemberSignature Language="C#" Value="public bool TransitionNavigKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionNavigKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionNavigKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionNavigKeys { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1687">Cette propriété a la valeur <b>True</b> si les touches alternatives de déplacement sont actives.</span><span class="sxs-lookup"><span data-stu-id="e5645-1687"><b>True</b> if transition navigation keys are active.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UILanguage">
      <MemberSignature Language="C#" Value="public int UILanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UILanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UILanguage" />
      <MemberSignature Language="VB.NET" Value="Public Property UILanguage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UILanguage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1688">Réservé à une utilisation interne.</span><span class="sxs-lookup"><span data-stu-id="e5645-1688">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Undo() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5645-1689">Annule la dernière action de l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5645-1689">Cancels the last user interface action.</span></span></summary>
        <remarks><para><span data-ttu-id="e5645-1690">Cette méthode n’annulera que la dernière action de l’utilisateur avant l’exécution de la procédure.</span><span class="sxs-lookup"><span data-stu-id="e5645-1690">This method undoes only the last action taken by the user before running the procedure.</span></span> <span data-ttu-id="e5645-1691">Il doit s’agit de la première ligne de la procédure.</span><span class="sxs-lookup"><span data-stu-id="e5645-1691">It must be the first line in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Union (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Union([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="e5645-1692">Plage <b>requise</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1692">Required <b>Range</b>.</span></span> <span data-ttu-id="e5645-1693">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1693">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg2"><span data-ttu-id="e5645-1694">Plage <b>requise</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1694">Required <b>Range</b>.</span></span> <span data-ttu-id="e5645-1695">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1695">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg3"><span data-ttu-id="e5645-1696">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1696">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1697">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1697">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg4"><span data-ttu-id="e5645-1698">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1698">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1699">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1699">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg5"><span data-ttu-id="e5645-1700">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1700">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1701">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1701">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg6"><span data-ttu-id="e5645-1702">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1702">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1703">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1703">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg7"><span data-ttu-id="e5645-1704">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1704">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1705">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1705">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg8"><span data-ttu-id="e5645-1706">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1706">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1707">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1707">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg9"><span data-ttu-id="e5645-1708">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1708">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1709">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1709">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg10"><span data-ttu-id="e5645-1710">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1710">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1711">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1711">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg11"><span data-ttu-id="e5645-1712">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1712">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1713">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1713">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg12"><span data-ttu-id="e5645-1714">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1714">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1715">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1715">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg13"><span data-ttu-id="e5645-1716">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1716">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1717">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1717">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg14"><span data-ttu-id="e5645-1718">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1718">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1719">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1719">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg15"><span data-ttu-id="e5645-1720">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1720">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1721">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1721">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg16"><span data-ttu-id="e5645-1722">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1722">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1723">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1723">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg17"><span data-ttu-id="e5645-1724">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1724">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1725">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1725">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg18"><span data-ttu-id="e5645-1726">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1726">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1727">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1727">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg19"><span data-ttu-id="e5645-1728">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1728">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1729">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1729">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg20"><span data-ttu-id="e5645-1730">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1730">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1731">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1731">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg21"><span data-ttu-id="e5645-1732">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1732">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1733">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1733">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg22"><span data-ttu-id="e5645-1734">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1734">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1735">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1735">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg23"><span data-ttu-id="e5645-1736">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1736">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1737">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1737">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg24"><span data-ttu-id="e5645-1738">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1738">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1739">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1739">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg25"><span data-ttu-id="e5645-1740">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1740">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1741">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1741">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg26"><span data-ttu-id="e5645-1742">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1742">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1743">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1743">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg27"><span data-ttu-id="e5645-1744">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1744">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1745">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1745">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg28"><span data-ttu-id="e5645-1746">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1746">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1747">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1747">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg29"><span data-ttu-id="e5645-1748">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1748">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1749">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1749">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg30"><span data-ttu-id="e5645-1750">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1750">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1751">Au moins deux objets <b>Range</b> doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1751">At least two <b>Range</b> objects must be specified.</span></span></param>
        <summary><span data-ttu-id="e5645-1752">Cette méthode renvoie l'union d'au moins deux plages.</span><span class="sxs-lookup"><span data-stu-id="e5645-1752">Returns the union of two or more ranges.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1753">Cette propriété renvoie la hauteur maximale, exprimée en points, de l'espace pouvant être occupé par une fenêtre dans l'espace de travail de l'application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1753">Returns the maximum height of the space that a window can occupy in the application window area, in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1754">Renvoie la largeur maximale en points de l’espace qu’une fenêtre peut occuper dans la zone de fenêtre de l’application.</span><span class="sxs-lookup"><span data-stu-id="e5645-1754">Returns the maximum width of the space that a window can occupy in the application window area in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseClusterConnector">
      <MemberSignature Language="C#" Value="public bool UseClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property UseClusterConnector As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseClusterConnector { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1755">Obtient ou définit une valeur qui permet à Microsoft Excel d’exécuter des fonctions définies par l’utilisateur dans des add-ins XLL sur un cluster de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5645-1755">Gets or sets whether Microsoft Excel allows user-defined functions in XLL add-ins to be run on a compute cluster.</span></span></summary>
        <value><span data-ttu-id="e5645-1756"><b>true</b> si Excel autorise l’exécuter sur un cluster de calcul des fonctions définies par l’utilisateur dans les add-ins XLL ; sinon, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1756"><b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="e5645-1757">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="e5645-1757">Read/write.</span></span></para>
          <para><span data-ttu-id="e5645-1758">
            <b>true</b> si Excel autorise l’exécuter sur un cluster de calcul des fonctions définies par l’utilisateur dans les add-ins XLL ; sinon <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1758">
            <b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise <b>false</b>.</span></span> <span data-ttu-id="e5645-1759">Le paramètre de la propriété correspond à autoriser les fonctions XLL définies par l’utilisateur à s’exécuter sur une case à cocher de cluster de calcul sous Formules dans la catégorie Avancé de la boîte de dialogue <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> Options Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1759">The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property corresponds to the Allow user-defined XLL functions to run on a compute cluster check box under Formulas in the Advanced category of the Excel Options dialog box.</span></span></para>
          <para><span data-ttu-id="e5645-1760">
            <b>Remarque</b>: pour activer la propriété, vous devez installer un connecteur de <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> cluster HPC (High Performance Computing).</span><span class="sxs-lookup"><span data-stu-id="e5645-1760">
            <b>Note</b>: To enable the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector.</span></span> <span data-ttu-id="e5645-1761">Un connecteur de cluster vous permet d’exécuter à distance des fonctions XLL sécurisées pour le cluster sur un cluster HPC afin d’optimiser les performances.</span><span class="sxs-lookup"><span data-stu-id="e5645-1761">A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</span></span></para>
          <para><span data-ttu-id="e5645-1762">Après avoir spécifié <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> la propriété, utilisez-la pour spécifier le connecteur de <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> cluster HPC à utiliser.</span><span class="sxs-lookup"><span data-stu-id="e5645-1762">After setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property, use the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property to specify the HPC Cluster Connector to use.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.UsedObjects UsedObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.UsedObjects UsedObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsedObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedObjects As UsedObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::UsedObjects ^ UsedObjects { Microsoft::Office::Interop::Excel::UsedObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.UsedObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1763">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> objet représentant des objets alloués dans un workbook.</span><span class="sxs-lookup"><span data-stu-id="e5645-1763">Returns a <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> object representing objects allocated in a workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1764">Cette propriété a la valeur <b>True</b> si l'application est visible ou si elle a été créée ou démarrée par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5645-1764"><b>True</b> if the application is visible or if it was created or started by the user.</span></span> <span data-ttu-id="e5645-1765"><b>False</b> si vous avez créé ou démarré l’application par programme à l’aide des fonctions <b>CreateObject</b> ou <b>GetObject</b> et que l’application est masquée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1765"><b>False</b> if you created or started the application programmatically by using the <b>CreateObject</b> or <b>GetObject</b> functions and the application is hidden.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1766">Lorsque la propriété <b>UserControl</b> d'un objet a la valeur <b>False</b>, cet objet est libéré lorsque la dernière référence à cet objet au sein du programme est elle-même libérée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1766">When the <b>UserControl</b> property is <b>False</b> for an object, that object is released when the last programmatic reference to the object is released.</span></span> <span data-ttu-id="e5645-1767">Si cette propriété a la valeur <b>False</b>, Microsoft Excel se ferme lorsque le dernier objet de la session est libéré.</span><span class="sxs-lookup"><span data-stu-id="e5645-1767">If this property is <b>False</b>, Microsoft Excel quits when the last object in the session is released.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLibraryPath">
      <MemberSignature Language="C#" Value="public string UserLibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserLibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserLibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserLibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1768">Cette propriété renvoie le chemin d'accès menant à l'emplacement d'installation des compléments COM sur l'ordinateur de l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5645-1768">Returns the path to the location on the user’s computer where the COM add-ins are installed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1769">Renvoie ou définit le nom de l'utilisateur actuel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1769">Returns or sets the name of the current user.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSystemSeparators">
      <MemberSignature Language="C#" Value="public bool UseSystemSeparators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemSeparators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseSystemSeparators" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemSeparators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemSeparators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1770">Cette propriété a la valeur <b>True</b> (par défaut) si les séparateurs système de Microsoft Excel sont activés.</span><span class="sxs-lookup"><span data-stu-id="e5645-1770"><b>True</b> (default) if the system separators of Microsoft Excel are enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1771">Renvoie « Microsoft Excel ».</span><span class="sxs-lookup"><span data-stu-id="e5645-1771">Returns "Microsoft Excel".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBE">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBE VBE { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBE VBE" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.VBE" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBE As VBE" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBE ^ VBE { Microsoft::Vbe::Interop::VBE ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBE</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1772">Renvoie un objet <b>VBE</b> représentant Visual Basic Editor.</span><span class="sxs-lookup"><span data-stu-id="e5645-1772">Returns a <b>VBE</b> object that represents the Visual Basic Editor.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1773">Renvoie le numéro de version de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1773">Returns the Microsoft Excel version number.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1774">Cette propriété détermine si l'objet est visible.</span><span class="sxs-lookup"><span data-stu-id="e5645-1774">Determines whether the object is visible.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volatile">
      <MemberSignature Language="C#" Value="public void Volatile (object Volatile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Volatile([in]object Volatile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Volatile(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Volatile (Optional Volatile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Volatile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Volatile"><span data-ttu-id="e5645-1775">Objet <b>facultatif</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1775">Optional <b>Object</b>.</span></span> <span data-ttu-id="e5645-1776"><b>True</b> pour marquer la fonction comme volatile.</span><span class="sxs-lookup"><span data-stu-id="e5645-1776"><b>True</b> to mark the function as volatile.</span></span> <span data-ttu-id="e5645-1777"><b>False</b> pour marquer la fonction comme non volatile.</span><span class="sxs-lookup"><span data-stu-id="e5645-1777"><b>False</b> to mark the function as nonvolatile.</span></span> <span data-ttu-id="e5645-1778">La valeur par défaut est <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1778">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="e5645-p444">Marque comme volatile une fonction définie par l’utilisateur. Une fonction volatile doit être recalculée chaque fois qu’un calcul se produit dans des cellules de la feuille de calcul. Une fonction non volatile est recalculée uniquement lorsque les variables d’entrée changent. Cette méthode n’a aucun effet si elle n’est pas située dans une fonction définie par l’utilisateur servant à calculer une cellule de feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="e5645-p444">Marks a user-defined function as volatile. A volatile function must be recalculated whenever calculation occurs in any cells on the worksheet. A nonvolatile function is recalculated only when the input variables change. This method has no effect if it's not inside a user-defined function used to calculate a worksheet cell.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (Time As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time"><span data-ttu-id="e5645-1783">Required, <b>objet</b>.</span><span class="sxs-lookup"><span data-stu-id="e5645-1783">Required <b>Object</b>.</span></span> <span data-ttu-id="e5645-1784">Heure à laquelle vous souhaitez que la macro reprenne au format de date Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e5645-1784">The time at which you want the macro to resume in Microsoft Excel date format.</span></span></param>
        <summary><span data-ttu-id="e5645-1785">Interrompt une macro en cours d’exécution jusqu'à une heure spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1785">Pauses a running macro until a specified time.</span></span> <span data-ttu-id="e5645-1786">Renvoie  <b>True</b>  si l'heure spécifiée est atteinte.</span><span class="sxs-lookup"><span data-stu-id="e5645-1786">Returns <b>True</b> if the specified time has arrived.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e5645-1787">
            <b>Important</b>: la <b>méthode Wait</b> suspend toutes les activités de Microsoft Excel et peut vous empêcher d’effectuer d’autres opérations sur votre ordinateur pendant que <b>l’attente</b> est en vigueur.</span><span class="sxs-lookup"><span data-stu-id="e5645-1787">
            <b>Important</b>: The <b>Wait</b> method suspends all Microsoft Excel activity and may prevent you from performing other operations on your computer while <b>Wait</b> is in effect.</span></span> <span data-ttu-id="e5645-1788">Toutefois, l’arrière-plan traite afin que l’impression et le recalcul continuent.</span><span class="sxs-lookup"><span data-stu-id="e5645-1788">However, background processes such as printing and recalculation continue.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WarnOnFunctionNameConflict">
      <MemberSignature Language="C#" Value="public bool WarnOnFunctionNameConflict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WarnOnFunctionNameConflict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" />
      <MemberSignature Language="VB.NET" Value="Public Property WarnOnFunctionNameConflict As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WarnOnFunctionNameConflict { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1789">La propriété, lorsqu’elle est définie sur True, lève une alerte si un développeur tente de créer une fonction à l’aide d’un <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> nom de fonction existant. <b></b></span><span class="sxs-lookup"><span data-stu-id="e5645-1789">The <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> property, when set to <b>True</b>, raises an alert if a developer tries to create a new function using an existing function name.</span></span> <span data-ttu-id="e5645-1790"><b>Boolean</b> (en lecture/écriture).</span><span class="sxs-lookup"><span data-stu-id="e5645-1790">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="e5645-1791"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e5645-1791"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Watches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Watches Watches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Watches Watches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Watches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Watches As Watches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Watches ^ Watches { Microsoft::Office::Interop::Excel::Watches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Watches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1792">Renvoie un objet représentant une plage qui est suivi lorsque la feuille de calcul <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> est recalculée.</span><span class="sxs-lookup"><span data-stu-id="e5645-1792">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> object representing a range which is tracked when the worksheet is recalculated.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1793">Distance, en points, entre le bord gauche de la fenêtre de l’application et son bord droit.</span><span class="sxs-lookup"><span data-stu-id="e5645-1793">The distance, in points, from the left edge of the application window to its right edge.</span></span> <span data-ttu-id="e5645-1794">Si la fenêtre est réduite, cette propriété est en lecture seule et renvoie la largeur de l’icône de fenêtre.</span><span class="sxs-lookup"><span data-stu-id="e5645-1794">If the window is minimized, this property is read-only and returns the width of the window icon.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1795">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection qui représente toutes les fenêtres de tous les workbooks.</span><span class="sxs-lookup"><span data-stu-id="e5645-1795">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in all the workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1796">Cette propriété renvoie une collection de fenêtres visibles et masquées.</span><span class="sxs-lookup"><span data-stu-id="e5645-1796">This property returns a collection of both visible and hidden windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForPens">
      <MemberSignature Language="C#" Value="public bool WindowsForPens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WindowsForPens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowsForPens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsForPens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WindowsForPens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1797">Cette propriété a la valeur <b>True</b> si l'ordinateur fonctionne sous Microsoft Windows pour Pen Computing.</span><span class="sxs-lookup"><span data-stu-id="e5645-1797"><b>True</b> if the computer is running under Microsoft Windows for Pen Computing.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1798">Cette propriété renvoie ou définit l'état de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="e5645-1798">Returns or sets the state of the window.</span></span> <span data-ttu-id="e5645-1799">En <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" /> lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="e5645-1799">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1800">
            <b>XlWindowState</b> peut être l’une de ces <b>constantes XlWindowState</b> :</span><span class="sxs-lookup"><span data-stu-id="e5645-1800">
            <b>XlWindowState</b> can be one of these <b>XlWindowState</b> constants:</span></span></para>
          <para><span data-ttu-id="e5645-1801">
            <b>xlMaximized</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1801">
            <b>xlMaximized</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-1802">
            <b>xlNormal</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1802">
            <b>xlNormal</b>
          </span></span></para>
          <para><span data-ttu-id="e5645-1803">
            <b>xlMinimized</b>
          </span><span class="sxs-lookup"><span data-stu-id="e5645-1803">
            <b>xlMinimized</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Workbooks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbooks Workbooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbooks Workbooks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workbooks As Workbooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbooks ^ Workbooks { Microsoft::Office::Interop::Excel::Workbooks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1804">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection qui représente tous les workbooks ouverts.</span><span class="sxs-lookup"><span data-stu-id="e5645-1804">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection that represents all the open workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1805">La collection renvoyée par la propriété <b>Workbooks</b> ne comprend pas de macro complémentaire ouverte qui constitue un type spécifique de classeur masqué.</span><span class="sxs-lookup"><span data-stu-id="e5645-1805">The collection returned by the <b>Workbooks</b> property doesn’t include open add-ins, which are a special kind of hidden workbook.</span></span> <span data-ttu-id="e5645-1806">Toutefois, vous pouvez renvoyer une seule macro complémentaire ouverte si vous en connaissez le nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="e5645-1806">You can, however, return a single open add-in if you know the file name.</span></span> <span data-ttu-id="e5645-1807">Par exemple, Workbooks(« Oscar.xla ») retourne le module de recherche ouvert nommé « Oscar.xla » en tant <b>qu’objet Workbook.</b></span><span class="sxs-lookup"><span data-stu-id="e5645-1807">For example, Workbooks("Oscar.xla") will return the open add-in named "Oscar.xla" as a <b>Workbook</b> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorksheetFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WorksheetFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorksheetFunction As WorksheetFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorksheetFunction ^ WorksheetFunction { Microsoft::Office::Interop::Excel::WorksheetFunction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorksheetFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1808">Renvoie <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> l’objet.</span><span class="sxs-lookup"><span data-stu-id="e5645-1808">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5645-1809">Renvoie une <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection qui représente toutes les feuilles de calcul du manuel actif.</span><span class="sxs-lookup"><span data-stu-id="e5645-1809">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e5645-1810">Cette propriété ne retourne pas de feuilles macro ; utilisez la <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> propriété ou la propriété pour <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> renvoyer ces feuilles.</span><span class="sxs-lookup"><span data-stu-id="e5645-1810">This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> property to return those sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
