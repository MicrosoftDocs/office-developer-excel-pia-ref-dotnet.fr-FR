<Type Name="TickLabels" FullName="Microsoft.Office.Interop.Excel.TickLabels">
  <Metadata><Meta Name="ms.openlocfilehash" Value="80b3e086ba4d3ed73fe6b8241b450f89bafae6e6" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009617" /></Metadata><TypeSignature Language="C#" Value="public interface TickLabels" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract TickLabels" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.TickLabels" />
  <TypeSignature Language="VB.NET" Value="Public Interface TickLabels" />
  <TypeSignature Language="C++ CLI" Value="public interface class TickLabels" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208C9-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5a951-101">Représente les étiquettes de coche associées à des marques de tick sur un axe de graphique.</span><span class="sxs-lookup"><span data-stu-id="5a951-101">Represents the tick mark labels associated with tick marks on a chart axis.</span></span></summary>
    <remarks><para><span data-ttu-id="5a951-102">Il n'existe pas d'objet représentant une seule ligne de projection.</span><span class="sxs-lookup"><span data-stu-id="5a951-102">This object isn’t a collection.</span></span> <span data-ttu-id="5a951-103">Il n’existe aucun objet qui représente une étiquette de coche unique ; vous devez renvoyer toutes les étiquettes de coche en tant qu’unité.</span><span class="sxs-lookup"><span data-stu-id="5a951-103">There’s no object that represents a single tick mark label; you must return all the tick mark labels as a unit.</span></span> <span data-ttu-id="5a951-104">Le texte de l’étiquette de la coche de l’axe des catégories provient du nom de la catégorie associée dans le graphique.</span><span class="sxs-lookup"><span data-stu-id="5a951-104">Tick mark label text for the category axis comes from the name of the associated category in the chart.</span></span> <span data-ttu-id="5a951-105">Le texte par défaut de l’étiquette de la coche de l’axe des catégories est le nombre qui indique la position de la catégorie par rapport à l’extrémité gauche de cet axe.</span><span class="sxs-lookup"><span data-stu-id="5a951-105">The default tick mark label text for the category axis is the number that indicates the position of the category relative to the left end of this axis.</span></span> <span data-ttu-id="5a951-106">Pour modifier le nombre de marques de cocher non libellées entre les étiquettes de coche, vous devez modifier la propriété de <see cref="P:Microsoft.Office.Interop.Excel.Axis.TickLabelSpacing" /> l’axe des catégories.</span><span class="sxs-lookup"><span data-stu-id="5a951-106">To change the number of unlabeled tick marks between tick mark labels, you must change the <see cref="P:Microsoft.Office.Interop.Excel.Axis.TickLabelSpacing" /> property for the category axis.</span></span> <span data-ttu-id="5a951-107">Le texte de l’étiquette de la coche de l’axe des valeurs est calculé en fonction de l’axe des valeurs et des propriétés de <see cref="P:Microsoft.Office.Interop.Excel.Axis.MajorUnit" /> <see cref="P:Microsoft.Office.Interop.Excel.Axis.MinimumScale" /> <see cref="P:Microsoft.Office.Interop.Excel.Axis.MaximumScale" /> l’axe des valeurs.</span><span class="sxs-lookup"><span data-stu-id="5a951-107">Tick mark label text for the value axis is calculated based on the <see cref="P:Microsoft.Office.Interop.Excel.Axis.MajorUnit" />, <see cref="P:Microsoft.Office.Interop.Excel.Axis.MinimumScale" />, and <see cref="P:Microsoft.Office.Interop.Excel.Axis.MaximumScale" /> properties of the value axis.</span></span> <span data-ttu-id="5a951-108">Pour modifier le texte de l’étiquette de la coche pour l’axe des valeurs, vous devez modifier les valeurs de ces propriétés.</span><span class="sxs-lookup"><span data-stu-id="5a951-108">To change the tick mark label text for the value axis, you must change the values of these properties.</span></span></para>
      <para><span data-ttu-id="5a951-109">Utilisez la <see cref="P:Microsoft.Office.Interop.Excel.Axis.TickLabels" /> propriété pour renvoyer <b>l’objet TickLabels.</b></span><span class="sxs-lookup"><span data-stu-id="5a951-109">Use the <see cref="P:Microsoft.Office.Interop.Excel.Axis.TickLabels" /> property to return the <b>TickLabels</b> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public int Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Alignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Alignment { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(453)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(453)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(453)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-110">Renvoie ou définit l’alignement de l’étiquette de tick spécifiée.</span><span class="sxs-lookup"><span data-stu-id="5a951-110">Returns or sets the alignment for the specified tick label.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="5a951-111">La <b>propriété Alignment</b> peut être l’une des <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" /> constantes ci-après :</span><span class="sxs-lookup"><span data-stu-id="5a951-111">The <b>Alignment</b> property can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" /> constants:</span></span></para>
          <para><span data-ttu-id="5a951-112">
            <b>XlHAlignCenter</b>
          </span><span class="sxs-lookup"><span data-stu-id="5a951-112">
            <b>XlHAlignCenter</b>
          </span></span></para>
          <para><span data-ttu-id="5a951-113">
            <b>XlHAlignLeft</b>
          </span><span class="sxs-lookup"><span data-stu-id="5a951-113">
            <b>XlHAlignLeft</b>
          </span></span></para>
          <para><span data-ttu-id="5a951-114">
            <b>XlHAlignRight</b>
          </span><span class="sxs-lookup"><span data-stu-id="5a951-114">
            <b>XlHAlignRight</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-115">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objet qui représente l’application Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="5a951-115">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaleFont">
      <MemberSignature Language="C#" Value="public object AutoScaleFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AutoScaleFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.AutoScaleFont" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScaleFont As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AutoScaleFont { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-116">Cette propriété a la valeur <b>True</b> si la taille de la police du texte situé dans l'objet change lorsque l'objet est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="5a951-116"><b>True</b> if the text in the object changes font size when the object size changes.</span></span> <span data-ttu-id="5a951-117">La valeur par défaut est <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="5a951-117">The default value is <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-118">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span><span class="sxs-lookup"><span data-stu-id="5a951-118">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="5a951-119">Si l'objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL, qui équivaut au nombre hexadécimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="5a951-119">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="5a951-120">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, dans lequel chaque application possède un code de créateur à quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="5a951-120">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="5a951-121">Par exemple, Microsoft Excel possède le code de créateur XCEL.</span><span class="sxs-lookup"><span data-stu-id="5a951-121">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.TickLabels.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a951-122">Supprime l'objet.</span><span class="sxs-lookup"><span data-stu-id="5a951-122">Deletes the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1890)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1890)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-123">Renvoie le nombre de niveaux d'étiquettes de graduation de catégorie.</span><span class="sxs-lookup"><span data-stu-id="5a951-123">Returns the number of levels of category tick labels.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-124">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Font" /> objet qui représente la police de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5a951-124">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFormat Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As ChartFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFormat ^ Format { Microsoft::Office::Interop::Excel::ChartFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-125">Renvoie le format de l’élément de graphique.</span><span class="sxs-lookup"><span data-stu-id="5a951-125">Returns the chart element format.</span></span> <span data-ttu-id="5a951-126">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5a951-126">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiLevel">
      <MemberSignature Language="C#" Value="public bool MultiLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.MultiLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiLevel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2653)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2653)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2653)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-127">Définit si un axe est hiérarchique ou non.</span><span class="sxs-lookup"><span data-stu-id="5a951-127">Sets whether an axis is multilevel or not.</span></span>  <span data-ttu-id="5a951-128">En lecture/écriture</span><span class="sxs-lookup"><span data-stu-id="5a951-128">Read/write.</span></span></summary>
        <value><span data-ttu-id="5a951-129"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="5a951-129"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="5a951-130">La valeur par défaut de cette propriété est <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="5a951-130">The default for this property is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-131">Renvoie le nom de l'objet.</span><span class="sxs-lookup"><span data-stu-id="5a951-131">Returns the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public string NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-132">Cette propriété renvoie ou définit le code du format de l'objet.</span><span class="sxs-lookup"><span data-stu-id="5a951-132">Returns or sets the format code for the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="5a951-133">Le code de format est la même chaîne que l'option de Codes de Format dans la boîte de dialogue Format de cellule.</span><span class="sxs-lookup"><span data-stu-id="5a951-133">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLinked">
      <MemberSignature Language="C#" Value="public bool NumberFormatLinked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NumberFormatLinked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.NumberFormatLinked" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLinked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NumberFormatLinked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(194)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-134"><b>True</b> si le format numérique est lié aux cellules (de sorte que le format de nombre est modifié dans les étiquettes lorsqu'il est modifié dans les cellules).</span><span class="sxs-lookup"><span data-stu-id="5a951-134"><b>True</b> if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-135">Cette propriété renvoie ou définit le code du format de l'objet sous forme de chaîne dans la langue de l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="5a951-135">Returns or sets the format code for the object as a string in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-136">Renvoie ou définit la distance entre les niveaux d’étiquettes et la distance entre le premier niveau et la ligne d’axe.</span><span class="sxs-lookup"><span data-stu-id="5a951-136">Returns or sets the distance between the levels of labels and the distance between the first level and the axis line.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="5a951-p106">La distance par défaut est de 100 pour cent, ce qui représente l’espacement par défaut entre les étiquettes de l’axe et la ligne de l’axe. La valeur peut être un nombre entier (pourcentage) compris entre 0 et 1 000, selon la taille de police de l’étiquette de l’axe.</span><span class="sxs-lookup"><span data-stu-id="5a951-p106">The default distance is 100 percent, which represents the default spacing between the axis labels and the axis line. The value can be an integer percentage from 0 through 1000, relative to the axis label’s font size.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTickLabelOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTickLabelOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As XlTickLabelOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTickLabelOrientation Orientation { Microsoft::Office::Interop::Excel::XlTickLabelOrientation get(); void set(Microsoft::Office::Interop::Excel::XlTickLabelOrientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTickLabelOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-139">Orientation du texte.</span><span class="sxs-lookup"><span data-stu-id="5a951-139">The text orientation.</span></span> <span data-ttu-id="5a951-140">Il peut s’agit d’un nombre integer de –90 à 90 degrés ou d’une <see cref="T:Microsoft.Office.Interop.Excel.XlTickLabelOrientation" /> des constantes.</span><span class="sxs-lookup"><span data-stu-id="5a951-140">Can be an integer value from –90 to 90 degrees or one of the <see cref="T:Microsoft.Office.Interop.Excel.XlTickLabelOrientation" /> constants.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-141">Renvoie l’objet parent pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5a951-141">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TickLabels.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a951-142">Renvoie ou définit l’ordre de lecture pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5a951-142">Returns or sets the reading order for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="5a951-143">La <b>propriété ReadingOrder</b> peut être l’une des constantes suivantes : <b>xlRTL</b> (de droite à gauche), <b>xlLTR</b> (de gauche à droite) ou <b>xlContext</b>.</span><span class="sxs-lookup"><span data-stu-id="5a951-143">The <b>ReadingOrder</b> property can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</span></span></para>
          <para><span data-ttu-id="5a951-144">Certaines de ces constantes ne seront peut-être pas disponibles, en fonction de la langue sélectionnée ou installée (par exemple, le français).</span><span class="sxs-lookup"><span data-stu-id="5a951-144">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.TickLabels.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a951-145">Sélectionne l'objet.</span><span class="sxs-lookup"><span data-stu-id="5a951-145">Selects the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>