<Type Name="Shape" FullName="Microsoft.Office.Interop.Excel.Shape">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79407cc874dc91aaa0bdd4a827ab38f1c0fb6b0b" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20585084" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Shape" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Shape" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Shape" />
  <TypeSignature Language="VB.NET" Value="Public Interface Shape" />
  <TypeSignature Language="C++ CLI" Value="public interface class Shape" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024439-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c6be9-101">Représente un objet dans la couche dessin, tel qu’une forme automatique, une forme libre, un objet OLE ou une image.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6be9-101">Represents an object in the drawing layer, such as an AutoShape, freeform, OLE object, or picture.</span>
      </span>
      <span data-ttu-id="c6be9-102">L’objet <b>Shape</b> est un membre de la <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6be9-102">The <b>Shape</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span>
      </span>
      <span data-ttu-id="c6be9-103">La collection <b>Shapes</b> contient toutes les formes sur une diapositive.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6be9-103">The <b>Shapes</b> collection contains all the shapes on a slide.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="c6be9-104">Il existe trois objets qui représentent des formes : la collection <b>Shapes</b> , qui représente toutes les formes d’un document ; le <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection, qui représente un sous-ensemble des formes d’un document spécifique (par exemple, un objet <b>ShapeRange</b> peut représenter les formes un et quatre sur le document ou toutes les formes sélectionnées dans le document) ; et l’objet <b>Shape</b> qui représente une seule forme d’un document.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-104">There are three objects that represent shapes: the <b>Shapes</b> collection, which represents all the shapes on a document; the <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection, which represents a specified subset of the shapes on a document (for example, a <b>ShapeRange</b> object could represent shapes one and four on the document, or it could represent all the selected shapes on the document); and the <b>Shape</b> object, which represents a single shape on a document.</span>
        </span>
        <span data-ttu-id="c6be9-105">Si vous souhaitez travailler avec plusieurs formes en même temps ou avec des formes dans la sélection, utilisez une collection <b>ShapeRange</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-105">If you want to work with several shapes at the same time or with shapes within the selection, use a <b>ShapeRange</b> collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-106">Cette section décrit comment :</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-106">This section describes how to:</span>
        </span>
      </para>
      <list type="bullet">
        <item>
          <description>
            <span data-ttu-id="c6be9-107">renvoyer une forme existante ;</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-107">Return an existing shape.</span>
            </span>
          </description>
        </item>
        <item>
          <description>
            <span data-ttu-id="c6be9-108">renvoyer une forme de la sélection.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-108">Return a shape within the selection.</span>
            </span>
          </description>
        </item>
        <item>
          <description>
            <span data-ttu-id="c6be9-109">renvoyer les formes attachées aux extrémités d’un connecteur ;</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-109">Return the shapes attached to the ends of a connector.</span>
            </span>
          </description>
        </item>
        <item>
          <description>
            <span data-ttu-id="c6be9-110">renvoyer une nouvelle forme libre ;</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-110">Return a newly created freeform.</span>
            </span>
          </description>
        </item>
        <item>
          <description>
            <span data-ttu-id="c6be9-111">Renvoyer une forme individuelle d’un groupe</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-111">Return a single shape from within a group.</span>
            </span>
          </description>
        </item>
        <item>
          <description>
            <span data-ttu-id="c6be9-112">Renvoyer un nouveau groupe de formes</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-112">Return a newly formed group of shapes.</span>
            </span>
          </description>
        </item>
      </list>
      <para>
        <span data-ttu-id="c6be9-113">Renvoi d’une forme existante</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-113">Returning an Existing Shape</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-114">Utiliser les <b>formes</b>(<paramref name="index" />), où <paramref name="index" /> est le nom de la forme ou le numéro d’index, pour renvoyer un objet <b>Shape</b> qui représente une forme.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-114">Use <b>Shapes</b>(<paramref name="index" />), where <paramref name="index" /> is the shape name or the index number, to return a <b>Shape</b> object that represents a shape.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-115">Chaque forme reçoit un nom par défaut lorsque vous l’ajoutez à la collection <b>Shapes</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-115">Each shape is assigned a default name when you add it to the <b>Shapes</b> collection.</span>
        </span>
        <span data-ttu-id="c6be9-116">Pour donner à la forme un nom plus explicite, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.Shape.Name" /> propriété.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-116">To give the shape a more meaningful name, use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Name" /> property.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-117">Renvoi d’une forme au sein de la sélection</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-117">Returning a Shape Within the Selection</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-118">Utilisez <b>Selection.ShapeRange</b>(<paramref name="index" />), où <paramref name="index" /> est le nom de la forme ou le numéro d’index, pour renvoyer un objet <b>Shape</b> qui représente une forme dans la sélection.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-118">Use <b>Selection.ShapeRange</b>(<paramref name="index" />), where <paramref name="index" /> is the shape name or the index number, to return a <b>Shape</b> object that represents a shape within the selection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-119">Renvoi des formes attachées aux extrémités d’un connecteur.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-119">Returning the Shapes Attached to the Ends of a Connector</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-120">Pour renvoyer un objet <b>Shape</b> qui représente une des formes attachées par un connecteur, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape" /> ou <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape" /> propriété.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-120">To return a <b>Shape</b> object that represents one of the shapes attached by a connector, use the <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape" /> or <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape" /> property.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-121">Renvoi d’une nouvelle forme libre</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-121">Returning a newly created freeform</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-122">Utilisez la <see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> et <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> méthodes pour définir la géométrie d’une nouvelle forme libre et utilisez la <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> pour créer la forme libre et renvoyer l’objet <b>Shape</b> qui la représente.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-122">Use the <see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> and <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> methods to define the geometry of a new freeform, and use the <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> method to create the freeform and return the <b>Shape</b> object that represents it.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-123">Renvoi d’une seule forme au sein d’un groupe</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-123">Returning a Single Shape from Within a Group</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-124">Utilisez <b>GroupItems</b>(<paramref name="index" />), où <paramref name="index" /> est le nom de la forme ou le numéro d’index dans le groupe, pour renvoyer un objet <b>Shape</b> qui représente une seule forme d’une forme groupée.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-124">Use <b>GroupItems</b>(<paramref name="index" />), where <paramref name="index" /> is the shape name or the index number within the group, to return a <b>Shape</b> object that represents a single shape in a grouped shape.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-125">Renvoi d’un groupe de formes nouvellement constitué</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-125">Returning a Newly Formed Group of Shapes</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="c6be9-126">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Group" /> ou <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Regroup" /> méthode à une plage de formes de groupe et renvoyer un seul objet <b>Shape</b> qui représente le nouveau groupe.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-126">Use the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Group" /> or <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Regroup" /> method to group a range of shapes and return a single <b>Shape</b> object that represents the newly formed group.</span>
        </span>
        <span data-ttu-id="c6be9-127">Une fois un groupe a été créé, vous pouvez travailler avec le groupe de la même façon que vous travaillez avec n'importe quel autre forme.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6be9-127">After a group has been formed, you can work with the group the same way you work with any other shape.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Adjustments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Adjustments Adjustments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Adjustments Adjustments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Adjustments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adjustments As Adjustments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Adjustments ^ Adjustments { Microsoft::Office::Interop::Excel::Adjustments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Adjustments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-128">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> objet qui contient les valeurs d’ajustement pour tous les ajustements dans la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-128">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> object that contains adjustment values for all the adjustments in the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-129">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-129">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-130">Cette propriété s’applique à n’importe lequel <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> ou <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objet qui représente une forme automatique, un objet WordArt ou un connecteur.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-130">This property applies to any <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> or <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents an AutoShape, WordArt, or a connector.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternativeText">
      <MemberSignature Language="C#" Value="public string AlternativeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternativeText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.AlternativeText" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternativeText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlternativeText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-131">Cette propriété renvoie ou définit la chaîne de texte descriptif (de remplacement) d’un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet lorsque l’objet est enregistré dans une page Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-131">Returns or sets the descriptive (alternative) text string for a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object when the object is saved to a Web page.</span>
          </span>
          <span data-ttu-id="c6be9-132">Valeur <b>String</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-132">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-133">Le texte de remplacement peut être affiché à la place d’image de la forme dans le navigateur Web ou directement sur l’image lorsque le pointeur de la souris se trouve au-dessus de l’image (dans les navigateurs qui prennent en charge ces fonctionnalités).</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-133">The alternative text can be displayed either in place of the shape’s image in the Web browser or directly over the image when the mouse pointer hovers over the image (in browsers that support these features).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-134">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-134">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="c6be9-135">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-135">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1675)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-136">S’applique à la mise en forme de la forme spécifiée qui a été copiée à l’aide de la <see cref="M:Microsoft.Office.Interop.Excel.Shape.PickUp" /> méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-136">Applies to the specified shape formatting that’s been copied by using the <see cref="M:Microsoft.Office.Interop.Excel.Shape.PickUp" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShapeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutoShapeType AutoShapeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutoShapeType AutoShapeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.AutoShapeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShapeType As MsoAutoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutoShapeType AutoShapeType { Microsoft::Office::Core::MsoAutoShapeType get(); void set(Microsoft::Office::Core::MsoAutoShapeType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-137">Cette propriété renvoie ou définit le type de forme spécifié <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object, qui doit représenter une forme automatique autre qu’une ligne, une forme libre ou un connecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-137">Returns or sets the shape type for the specified <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object, which must represent an AutoShape other than a line, freeform drawing, or connector.</span>
          </span>
          <span data-ttu-id="c6be9-138">En lecture/écriture <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-138">Read/write <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-139">Quand vous modifiez le type d'une forme, celle-ci conserve sa taille, sa couleur et autres attributs.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-139">When you change the type of a shape, the shape retains its size, color, and other attributes.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="c6be9-140">Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> objet pour définir ou renvoyer le type de connecteur.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-140">Use the <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object to set or return the connector type.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.BackgroundStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundStyle As MsoBackgroundStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBackgroundStyleIndex BackgroundStyle { Microsoft::Office::Core::MsoBackgroundStyleIndex get(); void set(Microsoft::Office::Core::MsoBackgroundStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBackgroundStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-141">Cette propriété renvoie ou définit le style d’arrière-plan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-141">Returns or sets the background style.</span>
          </span>
          <span data-ttu-id="c6be9-142">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-142">Read/write.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoBackgroundStyleIndex" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackWhiteMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.BlackWhiteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BlackWhiteMode As MsoBlackWhiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBlackWhiteMode BlackWhiteMode { Microsoft::Office::Core::MsoBlackWhiteMode get(); void set(Microsoft::Office::Core::MsoBlackWhiteMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBlackWhiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-143">Cette propriété renvoie ou définit une valeur qui indique comment la forme spécifiée s’affiche lorsque la présentation est en mode noir et blanc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-143">Returns or sets a value that indicates how the specified shape appears when the presentation is viewed in black-and-white mode.</span>
          </span>
          <span data-ttu-id="c6be9-144">En lecture/écriture <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-144">Read/write <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRightCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range BottomRightCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range BottomRightCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.BottomRightCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRightCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ BottomRightCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-145">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente la cellule située sous le coin inférieur droit de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-145">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the lower-right corner of the object.</span>
          </span>
          <span data-ttu-id="c6be9-146">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-146">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalloutFormat Callout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalloutFormat Callout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Callout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callout As CalloutFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalloutFormat ^ Callout { Microsoft::Office::Interop::Excel::CalloutFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalloutFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-147">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> objet qui contient les propriétés de la forme spécifiée la mise en forme de légende.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-147">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> object that contains callout formatting properties for the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-148">S’applique aux <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objets qui représentent des légendes encadrées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-148">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent line callouts.</span>
          </span>
          <span data-ttu-id="c6be9-149">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-149">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropBottom">
      <MemberSignature Language="C#" Value="public void CanvasCropBottom (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropBottom([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropBottom(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropBottom (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropBottom(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary>
          <span data-ttu-id="c6be9-150">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-150">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropLeft">
      <MemberSignature Language="C#" Value="public void CanvasCropLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary>
          <span data-ttu-id="c6be9-151">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-151">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropRight">
      <MemberSignature Language="C#" Value="public void CanvasCropRight (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropRight([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropRight(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropRight (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropRight(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2174)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary>
          <span data-ttu-id="c6be9-152">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-152">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropTop">
      <MemberSignature Language="C#" Value="public void CanvasCropTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary>
          <span data-ttu-id="c6be9-153">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-153">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CanvasShapes CanvasItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CanvasShapes CanvasItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.CanvasItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanvasItems As CanvasShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CanvasShapes ^ CanvasItems { Microsoft::Office::Core::CanvasShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CanvasShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-154">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-154">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Chart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart Chart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Chart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Chart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ Chart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-155">Renvoie un object qui représente le <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> contenus dans le <see cref="T:Microsoft.Office.Interop.Excel.Shape" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-155">Returns an object that represents the <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> contained in the <see cref="T:Microsoft.Office.Interop.Excel.Shape" />.</span>
          </span>
          <span data-ttu-id="c6be9-156">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-156">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel._Chart" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Child { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Child" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Child" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Child As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Child { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-157">Renvoie la <b>valeur msoTrue</b> si la forme spécifiée est une forme enfant ou si toutes les formes dans une plage de formes sont des formes enfants du même parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-157">Returns <b>msoTrue</b> if the specified shape is a child shape or if all shapes in a shape range are child shapes of the same parent.</span>
          </span>
          <span data-ttu-id="c6be9-158">En lecture seule <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-158">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionSiteCount">
      <MemberSignature Language="C#" Value="public int ConnectionSiteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionSiteCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionSiteCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionSiteCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-159">Renvoie le nombre de points de connexion sur la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-159">Returns the number of connection sites on the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-160">Valeur <b>Integer</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-160">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Connector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Connector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Connector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connector As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Connector { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-161">
            <b>True</b> si la forme spécifiée est un connecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-161">
              <b>True</b> if the specified shape is a connector.</span>
          </span>
          <span data-ttu-id="c6be9-162">En lecture seule <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-162">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectorFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectorFormat As ConnectorFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConnectorFormat ^ ConnectorFormat { Microsoft::Office::Interop::Excel::ConnectorFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConnectorFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-163">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> objet qui contient les propriétés de mise en forme du connecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-163">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object that contains connector formatting properties.</span>
          </span>
          <span data-ttu-id="c6be9-164">S’applique aux <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objets qui représentent des connecteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-164">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent connectors.</span>
          </span>
          <span data-ttu-id="c6be9-165">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-165">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ControlFormat ControlFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ControlFormat ControlFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ControlFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlFormat As ControlFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ControlFormat ^ ControlFormat { Microsoft::Office::Interop::Excel::ControlFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1709)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1709)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ControlFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-166">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ControlFormat" /> objet qui contient les propriétés de contrôle Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-166">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ControlFormat" /> object that contains Microsoft Excel control properties.</span>
          </span>
          <span data-ttu-id="c6be9-167">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-167">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-168">Copie l'objet dans le Presse-papiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-168">Copies the object to the Clipboard.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public void CopyPicture (object Appearance, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPicture([in]object Appearance, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CopyPicture(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPicture (Optional Appearance As Object, Optional Format As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Appearance">
          <span data-ttu-id="c6be9-169">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-169">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="c6be9-170">Spécifie la manière dont l’image doit être copiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-170">Specifies how the picture should be copied.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="c6be9-171">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-171">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="c6be9-172">Le format de l’image.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-172">The format of the picture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6be9-173">Copie l'objet sélectionné dans le Presse-papiers, sous forme d'image.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-173">Copies the selected object to the Clipboard as a picture.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-174">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-174">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="c6be9-175">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-175">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="c6be9-176">En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-176">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-177">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-177">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="c6be9-178">Par exemple, Microsoft Excel possède le code créateur XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-178">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-179">Cette méthode coupe l'objet et le place dans le Presse-papiers ou colle l'objet à l'emplacement spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-179">Cuts the object to the Clipboard or pastes it into a specified destination.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-180">La plage coupée doit être constituée de cellules adjacentes.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-180">The cut range must be made up of adjacent cells.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="c6be9-181">Vous ne pouvez couper que des graphiques incorporés.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-181">Only embedded charts can be cut.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-182">Supprime l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-182">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Diagram Diagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Diagram Diagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Diagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Diagram As Diagram" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Diagram ^ Diagram { Microsoft::Office::Interop::Excel::Diagram ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Diagram</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-183">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> objet représentant un diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-183">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> object representing a diagram.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode DiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNode DiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.DiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DiagramNode As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNode ^ DiagramNode { Microsoft::Office::Interop::Excel::DiagramNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-184">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objet qui représente un nœud dans un diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-184">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents a node in a diagram.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObject">
      <MemberSignature Language="C#" Value="public object DrawingObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DrawingObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.DrawingObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DrawingObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DrawingObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1708)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1708)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-185">Réservé à une utilisation interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-185">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Duplicate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public Function Duplicate () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Duplicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-186">Duplique l’objet et renvoie une référence à la nouvelle copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-186">Duplicates the object and returns a reference to the new copy.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As FillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FillFormat ^ Fill { Microsoft::Office::Interop::Excel::FillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-187">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> objet qui contient les propriétés pour le graphique spécifié ou de la forme mise en forme du remplissage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-187">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.</span>
          </span>
          <span data-ttu-id="c6be9-188">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-188">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flip">
      <MemberSignature Language="C#" Value="public void Flip (Microsoft.Office.Core.MsoFlipCmd FlipCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flip([in]valuetype Microsoft.Office.Core.MsoFlipCmd FlipCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flip (FlipCmd As MsoFlipCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flip(Microsoft::Office::Core::MsoFlipCmd FlipCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1676)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FlipCmd" Type="Microsoft.Office.Core.MsoFlipCmd" />
      </Parameters>
      <Docs>
        <param name="FlipCmd">
          <span data-ttu-id="c6be9-189">Requis <see cref="T:Microsoft.Office.Core.MsoFlipCmd" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-189">Required <see cref="T:Microsoft.Office.Core.MsoFlipCmd" />.</span>
          </span>
          <span data-ttu-id="c6be9-190">Indique si la forme doit être retournée horizontalement ou verticalement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-190">Specifies whether the shape is to be flipped horizontally or vertically.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6be9-191">Cette méthode retourne la forme spécifiée horizontalement ou verticalement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-191">Flips the specified shape around its horizontal or vertical axis.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormControlType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFormControl FormControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFormControl FormControlType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.FormControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormControlType As XlFormControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFormControl FormControlType { Microsoft::Office::Interop::Excel::XlFormControl get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1712)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1712)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFormControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-192">Renvoie le type de contrôle Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-192">Returns the Microsoft Excel control type.</span>
          </span>
          <span data-ttu-id="c6be9-193">En lecture seule <see cref="T:Microsoft.Office.Interop.Excel.XlFormControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-193">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFormControl" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-194">Vous ne pouvez pas utiliser cette propriété avec des contrôles ActiveX (la <see cref="P:Microsoft.Office.Interop.Excel.Shape.Type" /> propriété pour la <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet doit renvoyer <b>msoFormControl</b>).</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-194">You cannot use this property with ActiveX controls (the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Type" /> property for the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object must return <b>msoFormControl</b>).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Glow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.GlowFormat Glow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.GlowFormat Glow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Glow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Glow As GlowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::GlowFormat ^ Glow { Microsoft::Office::Core::GlowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.GlowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-195">Renvoie un objet d’une forme spécifiée qui contient les propriétés de cette forme de mise en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-195">Returns an object for a specified shape that contains glow formatting properties for that shape.</span>
          </span>
          <span data-ttu-id="c6be9-196">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-196">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.GlowFormat" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-197">L'effet de lumière ajoute un côté très attrayant aux graphiques.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-197">The glow effect adds a vibrant colored edge to graphics.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.GroupShapes GroupItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.GroupShapes GroupItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.GroupItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupItems As GroupShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::GroupShapes ^ GroupItems { Microsoft::Office::Interop::Excel::GroupShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.GroupShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-198">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> object qui représente les formes individuelles dans le groupe spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-198">Returns a <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> object that represents the individual shapes in the specified group.</span>
          </span>
          <span data-ttu-id="c6be9-199">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> méthode de l’objet <b>GroupShapes</b> pour renvoyer une seule forme du groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-199">Use the <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> method of the <b>GroupShapes</b> object to return a single shape from the group.</span>
          </span>
          <span data-ttu-id="c6be9-200">S’applique aux <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objets qui représentent des formes groupées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-200">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent grouped shapes.</span>
          </span>
          <span data-ttu-id="c6be9-201">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-201">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChart As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasChart { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-202">Renvoie des informations sur if un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> contient un graphique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-202">Returns information on if a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> contains a chart.</span>
          </span>
          <span data-ttu-id="c6be9-203">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-203">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoTriState" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasDiagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagram As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagram { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-204">Indique si une forme ou une plage de formes contient un diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-204">Returns whether a shape or shape range contains a diagram.</span>
          </span>
          <span data-ttu-id="c6be9-205">En lecture seule <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-205">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasDiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagramNode As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagramNode { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-206">Renvoie une valeur qui indique si un nœud de diagramme existe dans une forme donnée ou une plage de formes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-206">Returns a value indicating whether a diagram node exists in a given shape or shape range.</span>
          </span>
          <span data-ttu-id="c6be9-207">En lecture seule <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-207">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSmartArt">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasSmartArt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasSmartArt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasSmartArt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSmartArt As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasSmartArt { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2918)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2918)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-208">Obtient s’il existe un diagramme SmartArt sur la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-208">Gets whether there is a SmartArt diagram present on the specified shape.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6be9-209">A <see cref="T:Microsoft.Office.Core.MsoTriState" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-209">A <see cref="T:Microsoft.Office.Core.MsoTriState" /> object.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-210">En lecture seule.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-210">Read-only.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="c6be9-211">
              <b>msoTrue</b> (-1) s’il existe un diagramme SmartArt sur la forme ; sinon <b>msoFalse</b> (0).</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-211">
                <b>msoTrue</b> (-1) if there is a SmartArt diagram present on the shape; otherwise <b>msoFalse</b> (0).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public float Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Height { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-212">La hauteur de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-212">The height of the object.</span>
          </span>
          <span data-ttu-id="c6be9-213">En lecture/écriture <b>unique</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-213">Read/write <b>Single</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HorizontalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HorizontalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HorizontalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HorizontalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-214">
            <b>True</b> si la forme spécifiée est retournée autour de l’axe horizontal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-214">
              <b>True</b> if the specified shape is flipped around the horizontal axis.</span>
          </span>
          <span data-ttu-id="c6be9-215">En lecture seule <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-215">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlink">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlink Hyperlink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlink Hyperlink" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Hyperlink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlink As Hyperlink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlink ^ Hyperlink { Microsoft::Office::Interop::Excel::Hyperlink ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1706)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1706)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-216">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink" /> object qui représente le lien hypertexte de la forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-216">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink" /> object that represents the hyperlink for the shape.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public int ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-217">Renvoie le type de l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-217">Returns the type for the specified object.</span>
          </span>
          <span data-ttu-id="c6be9-218">Valeur <b>Integer</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-218">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-219">Vous pouvez utiliser une étiquette d'identification en tant que référence de lien hypertexte dans d'autres documents HTML ou sur la même page Web.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-219">You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementLeft">
      <MemberSignature Language="C#" Value="public void IncrementLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.IncrementLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1678)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">
          <span data-ttu-id="c6be9-220">
            <b>Single</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-220">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="c6be9-221">Indique comment la forme déplacement horizontal, en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-221">Specifies how far the shape is to be moved horizontally in points.</span>
          </span>
          <span data-ttu-id="c6be9-222">Spécifiez une valeur positive pour effectuer un déplacement vers la droite, ou inversement, une valeur négative pour procéder à un déplacement vers la gauche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-222">A positive value moves the shape to the right; a negative value moves it to the left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6be9-223">Déplace horizontalement la forme spécifiée selon le nombre de points indiqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-223">Moves the specified shape horizontally by the specified number of points.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementRotation">
      <MemberSignature Language="C#" Value="public void IncrementRotation (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementRotation([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.IncrementRotation(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementRotation (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementRotation(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1680)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">
          <span data-ttu-id="c6be9-224">
            <b>Single</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-224">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="c6be9-225">Indique comment la forme doit pivoter horizontalement en degrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-225">Specifies how far the shape is to be rotated horizontally in degrees.</span>
          </span>
          <span data-ttu-id="c6be9-226">Une valeur positive fait pivoter la forme vers la droite ; une valeur négative fait pivoter dans le sens inverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-226">A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6be9-227">Fait pivoter la forme spécifiée, selon le nombre de degrés spécifié, autour de l'axe z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-227">Changes the rotation of the specified shape around the z-axis by the specified number of degrees.</span>
          </span>
          <span data-ttu-id="c6be9-228">Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> propriété pour définir la rotation absolue de la forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-228">Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> property to set the absolute rotation of the shape.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-229">Pour faire pivoter une forme en trois dimensions autour de l’axe x ou y, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> méthode ou <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-229">To rotate a three-dimensional shape around the x-axis or the y-axis, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> method or the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementTop">
      <MemberSignature Language="C#" Value="public void IncrementTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.IncrementTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1681)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">
          <span data-ttu-id="c6be9-230">
            <b>Single</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-230">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="c6be9-231">Spécifie l’objet shape est surtout d’être déplacée verticalement en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-231">Specifies how far the shape object is to be moved vertically in points.</span>
          </span>
          <span data-ttu-id="c6be9-232">Spécifiez une valeur positive pour décaler la forme vers le bas, ou inversement, une valeur négative pour la décaler vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-232">A positive value moves the shape down; a negative value moves it up.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6be9-233">Décale vers le haut la forme spécifiée selon le nombre de points spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-233">Moves the specified shape vertically by the specified number of points.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public float Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Left { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-234">Distance entre le bord gauche de l’objet et le bord gauche de la colonne A (sur une feuille de calcul) ou le bord gauche de la zone de graphique (sur un graphique).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-234">The distance from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</span>
          </span>
          <span data-ttu-id="c6be9-235">En lecture/écriture <b>unique</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-235">Read/write <b>Single</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LineFormat Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LineFormat Line" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Line" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line As LineFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LineFormat ^ Line { Microsoft::Office::Interop::Excel::LineFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LineFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-236">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> objet qui contient les propriétés de la forme spécifiée la mise en forme du trait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-236">Returns a <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> object that contains line formatting properties for the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-237">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-237">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-238">Pour un trait, l'objet <b>LineFormat</b> représente le trait lui-même ; pour une forme avec une bordure, l'objet <b>LineFormat</b> représente la bordure.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-238">For a line, the <b>LineFormat</b> object represents the line itself; for a shape with a border, the <b>LineFormat</b> object represents the border.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LinkFormat LinkFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LinkFormat LinkFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.LinkFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinkFormat As LinkFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LinkFormat ^ LinkFormat { Microsoft::Office::Interop::Excel::LinkFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1710)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1710)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LinkFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-239">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.LinkFormat" /> objet qui contient les propriétés des objets OLE liés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-239">Returns a <see cref="T:Microsoft.Office.Interop.Excel.LinkFormat" /> object that contains linked OLE object properties.</span>
          </span>
          <span data-ttu-id="c6be9-240">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-240">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockAspectRatio">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState LockAspectRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState LockAspectRatio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.LockAspectRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property LockAspectRatio As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState LockAspectRatio { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-241">
            <b>True</b> si la forme spécifiée conserve ses proportions d’origine lorsque vous la redimensionnez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-241">
              <b>True</b> if the specified shape retains its original proportions when you resize it.</span>
          </span>
          <span data-ttu-id="c6be9-242">
            <b>False</b> si vous pouvez modifier la hauteur et la largeur de la forme indépendamment de l’autre lorsque vous la redimensionnez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-242">
              <b>False</b> if you can change the height and width of the shape independently of one another when you resize it.</span>
          </span>
          <span data-ttu-id="c6be9-243">En lecture/écriture <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-243">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-244">
            <b>True</b> si l’objet est verrouillé, <b>False</b> si l’objet peut être modifié lorsque la feuille est protégée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-244">
              <b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected.</span>
          </span>
          <span data-ttu-id="c6be9-245">Type de données <b>Boolean</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-245">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-p143">Cette propriété renvoie ou définit le nom de l'objet. Type de données <b>String</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-p143">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-248">Le tableau suivant contient des valeurs d’exemple de la propriété <b>Name</b> et des propriétés liées affectées d’une source de données OLAP dotée du nom unique "[Europe].[France].[Paris]" et d’une source de données autre que OLAP dotée du nom "Paris".</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-248">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="c6be9-249">
                  <b>Légende</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-249">
                    <b>Caption</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-250">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-250">Paris</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="c6be9-251">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-251">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c6be9-252">
                  <b>Nom</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-252">
                    <b>Name</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-253">[Europe].[France].[Paris] (en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-253">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="c6be9-254">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-254">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c6be9-255">
                  <b>SourceName</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-255">
                    <b>SourceName</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-256">[Europe].[France].[Paris] (en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-256">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="c6be9-257">(Valeur identique à celle de la propriété SQL ; en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-257">(Same as SQL property value, read-only)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c6be9-258">
                  <b>Valeur</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-258">
                    <b>Value</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-259">[Europe].[France].[Paris] (en lecture seule)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-259">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="c6be9-260">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-260">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="c6be9-261">Lorsque vous spécifiez un index dans la <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, vous pouvez utiliser la syntaxe présentée dans le tableau suivant.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-261">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="c6be9-262">expression. PivotItems (« [Europe]. [ France]. [Paris] »)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-262">expression.PivotItems("[Europe].[France].[Paris]")</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-263">Expression.PivotItems("Paris")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-263">Expression.PivotItems("Paris")</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="c6be9-264">Lorsque vous utilisez la <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> propriété pour référencer un membre spécifique d’une collection, vous pouvez utiliser le nom d’index de texte comme indiqué dans le tableau suivant.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-264">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="c6be9-265">[Europe]. [France]. [Paris]</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-265">[Europe].[France].[Paris]</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-266">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-266">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeNodes Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeNodes Nodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As ShapeNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeNodes ^ Nodes { Microsoft::Office::Interop::Excel::ShapeNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-267">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> collection qui représente la description géométrique de la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-267">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> collection that represents the geometric description of the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-268">S’applique aux <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objets qui représentent des dessins de forme libre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-268">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent freeform drawings.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEFormat OLEFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEFormat OLEFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.OLEFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEFormat As OLEFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEFormat ^ OLEFormat { Microsoft::Office::Interop::Excel::OLEFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1711)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1711)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-269">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.OLEFormat" /> objet qui contient les propriétés de l’objet OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-269">Returns an <see cref="T:Microsoft.Office.Interop.Excel.OLEFormat" /> object that contains OLE object properties.</span>
          </span>
          <span data-ttu-id="c6be9-270">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-270">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAction">
      <MemberSignature Language="C#" Value="public string OnAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.OnAction" />
      <MemberSignature Language="VB.NET" Value="Public Property OnAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-271">Cette propriété renvoie ou définit le nom d’une macro qui s’exécute lorsque l’utilisateur clique sur l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-271">Returns or sets the name of a macro that’s run when the specified object is clicked.</span>
          </span>
          <span data-ttu-id="c6be9-272">Valeur <b>String</b> en lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-272">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-273">Définir cette propriété pour un élément de menu remplace toutes les informations d'aide personnalisées de cet élément par les informations de la macro affectée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-273">Setting this property for a menu item overrides any custom help information set up for the menu item with the information set up for the assigned macro.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-p147">Renvoie l'objet parent de l'objet spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-p147">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape ParentGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape ParentGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ParentGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentGroup As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ ParentGroup { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-276">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object qui représente la forme parente commune d’une forme enfant ou d’une plage de formes enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-276">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the common parent shape of a child shape or a range of child shapes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PickUp">
      <MemberSignature Language="C#" Value="public void PickUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PickUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.PickUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PickUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PickUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1682)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-277">Copie la mise en forme de la forme indiquée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-277">Copies the formatting of the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-278">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.Shape.Apply" /> méthode pour appliquer la mise en forme copiée à une autre forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-278">Use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.Apply" /> method to apply the copied formatting to another shape.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PictureFormat PictureFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PictureFormat PictureFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.PictureFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PictureFormat As PictureFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PictureFormat ^ PictureFormat { Microsoft::Office::Interop::Excel::PictureFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PictureFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-279">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> objet qui contient les propriétés de la forme spécifiée la mise en forme de l’image.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-279">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> object that contains picture formatting properties for the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-280">S’applique aux <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objets qui représentent des images ou les objets OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-280">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent pictures or OLE objects.</span>
          </span>
          <span data-ttu-id="c6be9-281">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-281">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPlacement Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPlacement Placement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As XlPlacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPlacement Placement { Microsoft::Office::Interop::Excel::XlPlacement get(); void set(Microsoft::Office::Interop::Excel::XlPlacement value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-282">Cette propriété renvoie ou définit la manière dont l’objet est attaché aux cellules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-282">Returns or sets the way the object is attached to the cells below it.</span>
          </span>
          <span data-ttu-id="c6be9-283">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlPlacement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-283">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlPlacement" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reflection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ReflectionFormat Reflection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ReflectionFormat Reflection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Reflection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reflection As ReflectionFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ReflectionFormat ^ Reflection { Microsoft::Office::Core::ReflectionFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ReflectionFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-284">Renvoie un objet qui contient les propriétés de la forme mise en forme de réflexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-284">Returns an object that contains reflection formatting properties for the shape.</span>
          </span>
          <span data-ttu-id="c6be9-285">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-285">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.ReflectionFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RerouteConnections">
      <MemberSignature Language="C#" Value="public void RerouteConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RerouteConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub RerouteConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RerouteConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1683)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-286">Redirige les connecteurs afin qu'ils prennent le chemin le plus court possible entre les formes qu'ils se connectent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-286">Reroutes connectors so that they take the shortest possible path between the shapes they connect.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-287">Pour utiliser le chemin d’accès plus court, la méthode <b>RerouteConnections</b> peut détacher les extrémités d’un connecteur et les rattacher à différents points de connexion sur les formes connectées.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-287">To use the shortest path, the <b>RerouteConnections</b> method may detach the ends of a connector and reattach them to different connecting sites on the connected shapes.</span>
            </span>
            <span data-ttu-id="c6be9-288">Cette méthode redirige tous les connecteurs rattachés à la forme spécifiée ; si la forme spécifiée est un connecteur, elle est redirigée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-288">This method reroutes all connectors attached to the specified shape; if the specified shape is a connector, it’s rerouted.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="c6be9-p153">Si cette méthode est appliquée à un connecteur, seul ce connecteur sera redirigé. Si cette méthode est appliquée à une forme connectée, tous les connecteurs de cette forme seront redirigés.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-p153">If this method is applied to a connector, only that connector will be rerouted. If this method is applied to a connected shape, all connectors to that shape will be rerouted.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public float Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Rotation { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-291">Cette propriété renvoie ou définit la rotation de la forme en degrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-291">Returns or sets the rotation of the shape in degrees.</span>
          </span>
          <span data-ttu-id="c6be9-292">En lecture/écriture <b>unique</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-292">Read/write <b>Single</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleHeight">
      <MemberSignature Language="C#" Value="public void ScaleHeight (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleHeight([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleHeight (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1684)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor">
          <span data-ttu-id="c6be9-293">
            <b>Single</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-293">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="c6be9-294">Indique le rapport entre la hauteur de la forme après son redimensionnement et sa hauteur initiale ou actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-294">Specifies the ratio between the height of the shape after you resize it and the current or original height.</span>
          </span>
          <span data-ttu-id="c6be9-295">À titre d'exemple, pour agrandir un rectangle de 50 %, indiquez 1,5 comme argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-295">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span>
          </span>
        </param>
        <param name="RelativeToOriginalSize">
          <span data-ttu-id="c6be9-296">Requis <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-296">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
          <span data-ttu-id="c6be9-297">
            <b>la valeur msoTrue</b> à l’échelle par rapport à sa taille initiale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-297">
              <b>msoTrue</b> to scale the shape relative to its original size.</span>
          </span>
          <span data-ttu-id="c6be9-298">
            <b>msoFalse</b> pour mettre à l’échelle par rapport à sa taille actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-298">
              <b>msoFalse</b> to scale it relative to its current size.</span>
          </span>
          <span data-ttu-id="c6be9-299">Vous pouvez spécifier <b>msoTrue</b> pour cet argument que si la forme spécifiée est une image ou un objet OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-299">You can specify <b>msoTrue</b> for this argument only if the specified shape is a picture or an OLE object.</span>
          </span>
        </param>
        <param name="Scale">
          <span data-ttu-id="c6be9-300">Facultatif <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-300">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span>
          </span>
          <span data-ttu-id="c6be9-301">Spécifie la partie de la forme qui conserve sa position lorsque le forme est mise à l'échelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-301">Specifies which part of the shape retains its position when the shape is scaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6be9-302">Redimensionne la hauteur de la forme en fonction d'un facteur défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-302">Scales the height of the shape by a specified factor.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-303">Pour les images et objets OLE, vous pouvez indiquer si vous souhaitez mettre à l’échelle de la forme par rapport à l’original ou la taille actuelle.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-303">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span>
            </span>
            <span data-ttu-id="c6be9-304">Les autres formes sont toujours mises à l'échelle par rapport à leur taille actuelle.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-304">Shapes other than pictures and OLE objects are always scaled relative to their current height.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleWidth">
      <MemberSignature Language="C#" Value="public void ScaleWidth (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleWidth([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleWidth (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1688)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor">
          <span data-ttu-id="c6be9-305">
            <b>Single</b>obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-305">Required <b>Single</b>.</span>
          </span>
          <span data-ttu-id="c6be9-306">Indique le rapport entre la largeur de la forme après son redimensionnement et sa largeur initiale ou actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-306">Specifies the ratio between the width of the shape after you resize it and the current or original width.</span>
          </span>
          <span data-ttu-id="c6be9-307">À titre d'exemple, pour agrandir un rectangle de 50 %, indiquez 1,5 comme argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-307">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span>
          </span>
        </param>
        <param name="RelativeToOriginalSize">
          <span data-ttu-id="c6be9-308">Requis <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-308">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
          <span data-ttu-id="c6be9-309">False pour mettre à l'échelle par rapport à sa taille actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-309">False to scale it relative to its current size.</span>
          </span>
          <span data-ttu-id="c6be9-310">Vous pouvez spécifier la valeur True à cet argument que si la forme spécifiée est une image ou un objet OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-310">You can specify True for this argument only if the specified shape is a picture or an OLE object.</span>
          </span>
        </param>
        <param name="Scale">
          <span data-ttu-id="c6be9-311">Facultatif <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-311">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span>
          </span>
          <span data-ttu-id="c6be9-312">Spécifie la partie de la forme qui conserve sa position lorsque le forme est mise à l'échelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-312">Specifies which part of the shape retains its position when the shape is scaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6be9-313">Redimensionne la largeur de la forme en fonction d'un facteur défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-313">Scales the width of the shape by a specified factor.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-314">Pour les images et objets OLE, vous pouvez indiquer si vous souhaitez mettre à l’échelle de la forme par rapport à l’original ou la taille actuelle.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-314">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span>
            </span>
            <span data-ttu-id="c6be9-315">Les autres formes sont toujours mises à l'échelle par rapport à leur largeur actuelle.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-315">Shapes other than pictures and OLE objects are always scaled relative to their current width.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Script Script { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Script Script" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Script" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Script As Script" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Script ^ Script { Microsoft::Office::Core::Script ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1892)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1892)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Script</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-p163">Cette propriété renvoie l'objet <b>Script</b> qui représente un bloc de script ou de code dans la page Web spécifiée. Si aucun script n'est associé à la page, aucun objet n'est renvoyé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-p163">Returns the <b>Script</b> object, which represents a block of script or code on the specified Web page. If the page contains no script, nothing is returned.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="c6be9-318">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-318">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="c6be9-319">Objet à remplacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-319">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6be9-320">Sélectionne l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-320">Selects the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-321">Pour sélectionner une cellule ou une plage de cellules, utilisez la méthode <b>Select</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-321">To select a cell or a range of cells, use the <b>Select</b> method.</span>
            </span>
            <span data-ttu-id="c6be9-322">Pour activer une cellule de la cellule active, utilisez la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-322">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShapesDefaultProperties">
      <MemberSignature Language="C#" Value="public void SetShapesDefaultProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShapesDefaultProperties() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.SetShapesDefaultProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetShapesDefaultProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetShapesDefaultProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1689)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-323">Cette méthode fait de la mise en forme de la forme spécifiée la mise en forme par défaut de la forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-323">Makes the formatting of the specified shape the default formatting for the shape.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShadowFormat Shadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShadowFormat Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shadow As ShadowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShadowFormat ^ Shadow { Microsoft::Office::Interop::Excel::ShadowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShadowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-324">
            <b>True</b> si l’objet est ombré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-324">
              <b>True</b> if the object has a shadow.</span>
          </span>
          <span data-ttu-id="c6be9-325">Type de données <b>Boolean</b> en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-325">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ShapeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeStyle As MsoShapeStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeStyleIndex ShapeStyle { Microsoft::Office::Core::MsoShapeStyleIndex get(); void set(Microsoft::Office::Core::MsoShapeStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-326">Cette propriété renvoie ou définit une <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> qui représente le style de forme de la forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-326">Returns or sets a <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> that represents the shape style of the shape.</span>
          </span>
          <span data-ttu-id="c6be9-327">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-327">Read/write.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArt">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArt SmartArt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArt SmartArt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.SmartArt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArt As SmartArt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArt ^ SmartArt { Microsoft::Office::Core::SmartArt ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2919)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2919)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArt</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-328">Obtient un objet qui représente le graphique SmartArt associé à la forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-328">Gets an object that represents the SmartArt associated with the shape.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6be9-329">Objet qui représente le graphique SmartArt associé à la forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-329">An object that represents the SmartArt associated with the shape.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-330">En lecture seule.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-330">Read-only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoftEdge">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SoftEdgeFormat SoftEdge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SoftEdgeFormat SoftEdge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.SoftEdge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoftEdge As SoftEdgeFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SoftEdgeFormat ^ SoftEdge { Microsoft::Office::Core::SoftEdgeFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SoftEdgeFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-331">Renvoie un <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /> objet pour une forme spécifiée qui contient des propriétés de la forme mise en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-331">Returns a <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /> object for a specified shape that contains soft edge formatting properties for the shape.</span>
          </span>
          <span data-ttu-id="c6be9-332">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-332">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TextEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextEffect As TextEffectFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextEffectFormat ^ TextEffect { Microsoft::Office::Interop::Excel::TextEffectFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextEffectFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-333">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> objet qui contient les propriétés de mise en forme du texte de la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-333">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object that contains text-effect formatting properties for the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-334">S’applique aux objets <b>T:Microsoft.Office.Interop.Excel.Shape</b> représentant des objets WordArt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-334">Applies to <b>T:Microsoft.Office.Interop.Excel.Shape</b> objects that represent WordArt.</span>
          </span>
          <span data-ttu-id="c6be9-335">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-335">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame TextFrame { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame TextFrame" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TextFrame" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame As TextFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame ^ TextFrame { Microsoft::Office::Interop::Excel::TextFrame ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-336">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> objet qui contient l’alignement et l’ancrage des propriétés de la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-336">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object that contains the alignment and anchoring properties for the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-337">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-337">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TextFrame2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame2 As TextFrame2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame2 ^ TextFrame2 { Microsoft::Office::Interop::Excel::TextFrame2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-338">Renvoie un objet qui contient le texte de la mise en forme de la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-338">Returns an object that contains text formatting for the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-339">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-339">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.TextFrame2" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ThreeD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreeD As ThreeDFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ThreeDFormat ^ ThreeD { Microsoft::Office::Interop::Excel::ThreeDFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ThreeDFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-340">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> objet qui contient les propriétés de la forme spécifiée la mise en forme des effets 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-340">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object that contains 3-D – effect formatting properties for the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-341">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-341">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-342">Obtient ou définit le titre du texte de remplacement associé à la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-342">Gets or sets the title of the alternative text associated with the specified shape.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6be9-343">Titre du texte de remplacement associé à la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-343">The title of the alternative text associated with the specified shape.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-344">Lecture/écriture.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-344">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="c6be9-345">Pour définir la chaîne de texte descriptive du texte de remplacement pour une forme, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.Shape.AlternativeText" /> propriété.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-345">To set the descriptive text string of the alternative text for a shape, use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.AlternativeText" /> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public float Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Top { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-346">La distance entre le bord supérieur de la forme la plus haute dans la plage de formes et le bord supérieur de la feuille de calcul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-346">The distance from the top edge of the topmost shape in the shape range to the top edge of the worksheet.</span>
          </span>
          <span data-ttu-id="c6be9-347">En lecture/écriture <b>unique</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-347">Read/write <b>Single</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLeftCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range TopLeftCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range TopLeftCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TopLeftCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeftCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ TopLeftCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(620)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(620)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-348">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objet qui représente la cellule située sous le coin supérieur gauche de l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-348">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the upper-left corner of the specified object.</span>
          </span>
          <span data-ttu-id="c6be9-349">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-349">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As MsoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeType Type { Microsoft::Office::Core::MsoShapeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-350">Cette propriété renvoie ou définit le type de forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-350">Returns or sets the shape type.</span>
          </span>
          <span data-ttu-id="c6be9-351">En lecture seule <see cref="T:Microsoft.Office.Core.MsoShapeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-351">Read-only <see cref="T:Microsoft.Office.Core.MsoShapeType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ShapeRange Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::ShapeRange ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-352">Dissocie les formes groupées dans la forme spécifiée ou la plage de formes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-352">Ungroups any grouped shapes in the specified shape or range of shapes.</span>
          </span>
          <span data-ttu-id="c6be9-353">Dissocie les images et objets OLE dans la forme spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-353">Disassembles pictures and OLE objects within the specified shape.</span>
          </span>
          <span data-ttu-id="c6be9-354">Renvoie les formes dissociées en tant qu’un seul <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-354">Returns the ungrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-355">Comme un groupe de formes est traité comme un objet unique, grouper et dissocier des formes modifie le nombre d'éléments dans la collection <b>Shapes</b> et change les numéros d'index des éléments qui suivent les éléments concernés dans la collection.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-355">Because a group of shapes is treated as a single object, grouping and ungrouping shapes changes the number of items in the <b>Shapes</b> collection and changes the index numbers of items that come after the affected items in the collection.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState VerticalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState VerticalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.VerticalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState VerticalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-356">
            <b>True</b> si la forme spécifiée est retournée autour de l’axe vertical.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-356">
              <b>True</b> if the specified shape is flipped around the vertical axis.</span>
          </span>
          <span data-ttu-id="c6be9-357">En lecture seule <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-357">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertices">
      <MemberSignature Language="C#" Value="public object Vertices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Vertices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Vertices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Vertices As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Vertices { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-358">Renvoie les coordonnées des sommets de la forme libre spécifiée (et les points de contrôle pour les courbes Bézier) sous forme d’une série de paires de coordonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-358">Returns the coordinates of the specified freeform drawing's vertices (and control points for Bézier curves) as a series of coordinate pairs.</span>
          </span>
          <span data-ttu-id="c6be9-359">En lecture seule <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-359">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-360">Vous pouvez utiliser le tableau renvoyé par cette propriété comme argument pour la <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" /> méthode ou <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" /> méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-360">You can use the array returned by this property as an argument to the <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" /> method or <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" /> method.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="c6be9-361">Le tableau suivant montre comment la propriété <b>Vertices</b> associe les valeurs du tableau vertArray() avec les coordonnées des sommets d’un triangle.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-361">The following table shows how the <b>Vertices</b> property associates the values in the array vertArray() with the coordinates of a triangle's vertices.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="c6be9-362">vertArray (1, 1)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-362">vertArray(1, 1)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-363">La distance horizontale entre le premier sommet et le côté gauche du document</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-363">The horizontal distance from the first vertex to the left side of the document</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c6be9-364">vertArray (1, 2)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-364">vertArray(1, 2)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-365">La distance verticale entre le premier sommet et la partie supérieure du document</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-365">The vertical distance from the first vertex to the top of the document</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c6be9-366">vertArray (2, 1)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-366">vertArray(2, 1)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-367">La distance horizontale entre le deuxième sommet et le côté gauche du document</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-367">The horizontal distance from the second vertex to the left side of the document</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c6be9-368">vertArray (2, 2)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-368">vertArray(2, 2)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-369">La distance verticale entre le deuxième sommet et la partie supérieure du document</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-369">The vertical distance from the second vertex to the top of the document</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c6be9-370">vertArray (3, 1)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-370">vertArray(3, 1)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-371">La distance horizontale entre le troisième sommet et le côté gauche du document</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-371">The horizontal distance from the third vertex to the left side of the document</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c6be9-372">vertArray (3, 2)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-372">vertArray(3, 2)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c6be9-373">La distance verticale entre le troisième sommet et la partie supérieure du document</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c6be9-373">The vertical distance from the third vertex to the top of the document</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Visible { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-374">Détermine si l’objet est visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-374">Determines whether the object is visible.</span>
          </span>
          <span data-ttu-id="c6be9-375">En lecture/écriture <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-375">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public float Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Width { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-376">La largeur de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-376">The width of the object.</span>
          </span>
          <span data-ttu-id="c6be9-377">En lecture/écriture <b>unique</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-377">Read/write <b>Single</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public void ZOrder (Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ZOrder([in]valuetype Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ZOrder (ZOrderCmd As MsoZOrderCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ZOrder(Microsoft::Office::Core::MsoZOrderCmd ZOrderCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(622)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ZOrderCmd" Type="Microsoft.Office.Core.MsoZOrderCmd" />
      </Parameters>
      <Docs>
        <param name="ZOrderCmd">
          <span data-ttu-id="c6be9-378">Requis <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-378">Required <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" />.</span>
          </span>
          <span data-ttu-id="c6be9-379">Indique à quel endroit déplacer la forme spécifiée par rapport aux autres formes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-379">Specifies where to move the specified shape relative to the other shapes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6be9-380">Déplace la forme spécifiée devant ou derrière les autres formes de la collection (autrement dit, change la position de la forme dans l'ordre décroissant).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-380">Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's position in the z-order).</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-381">Utiliser le <see cref="P:Microsoft.Office.Interop.Excel.Shape.ZOrderPosition" /> propriété pour déterminer la position actuelle d’une forme dans l’ordre de plan.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-381">Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ZOrderPosition" /> property to determine a shape's current position in the z-order.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrderPosition">
      <MemberSignature Language="C#" Value="public int ZOrderPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZOrderPosition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ZOrderPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZOrderPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZOrderPosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6be9-382">Renvoie la position de la forme spécifiée dans l’ordre de plan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-382">Returns the position of the specified shape in the z-order.</span>
          </span>
          <span data-ttu-id="c6be9-383">Valeur <b>Integer</b> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6be9-383">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="c6be9-384">Pour définir la position de la forme dans l’ordre de superposition, utilisez la <see cref="M:Microsoft.Office.Interop.Excel.Shape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" /> méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-384">To set the shape's position in the z-order, use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" /> method.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="c6be9-385">Position d’une forme dans l’ordre z correspond au numéro d’index de la forme dans le <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-385">A shape's position in the z-order corresponds to the shape's index number in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span>
            </span>
            <span data-ttu-id="c6be9-386">Par exemple, Shapes (1) renvoie la forme à l’axe z, et Shapes (4) renvoie la forme au début de l’ordre de plan.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-386">For example, Shapes(1) returns the shape at the back of the z-order, and Shapes(4) returns the shape at the front of the z-order.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="c6be9-387">Si vous ajoutez une nouvelle forme à une collection, elle s'ajoute par défaut en première position dans l'ordre de superposition.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6be9-387">Whenever you add a new shape to a collection, it’s added to the front of the z-order by default.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>