<Type Name="TextConnection" FullName="Microsoft.Office.Interop.Excel.TextConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f77811f07d3d609f3d2151bb5c5834538ae40d10" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20585119" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface TextConnection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract TextConnection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.TextConnection" />
  <TypeSignature Language="VB.NET" Value="Public Interface TextConnection" />
  <TypeSignature Language="C++ CLI" Value="public interface class TextConnection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000244D3-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fe7ad-101">Contient les paramètres de contrat de Service qui permettent à Excel de se connecter à une source de données du flux de données.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe7ad-101">Contains Service Contract settings that enable Excel to connect to a Data Feed data source.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-102">Renvoie une Application <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-102">Returns an Application <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Excel application.</span>
          </span>
          <span data-ttu-id="fe7ad-103">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-103">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public object Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Connection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Connection { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-104">Cette propriété renvoie ou définit une chaîne qui contient les noms de fichiers texte qui permettent à Excel de se connecter aux sources de données de texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-104">Returns or sets a string that contains text file names that enable Excel to connect to text data sources.</span>
          </span>
          <span data-ttu-id="fe7ad-105">
            <b>Objet</b> (<b>objet</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-105">
              <b>Object</b> (<b>object</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-106">Renvoie un entier 32 bits qui indique l'application dans laquelle l'objet spécifié a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-106">Returns a 32-bit integer that indicates the application in which the specified object was created.</span>
          </span>
          <span data-ttu-id="fe7ad-107">En lecture seule <b>entier</b> (<b>int</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-107">Read-only <b>Integer</b> (<b>int</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fe7ad-108">
            <para>, Car l’objet a été créé dans Excel, cette propriété renvoie la valeur hexadécimale, 5843454C, qui représente la chaîne « XCEL ».</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-108">
              <para>Because the object was created in Excel, this property returns the hexadecimal value, 5843454C, which represents the string "XCEL".</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-109">Renvoie un <b>objet</b> (<b>objet</b> dans c#) qui représente l’objet parent de l’objet <b>TextConnection</b> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-109">Returns an <b>Object</b> (<b>object</b> in C#) that represents the parent object of the specified <b>TextConnection</b> object.</span>
          </span>
          <span data-ttu-id="fe7ad-110">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-110">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileColumnDataTypes">
      <MemberSignature Language="C#" Value="public object TextFileColumnDataTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TextFileColumnDataTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileColumnDataTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileColumnDataTypes As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TextFileColumnDataTypes { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1865)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1865)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1865)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-111">Cette propriété renvoie ou définit un tableau classé de constantes qui spécifient les types de données appliqués aux colonnes correspondantes dans le fichier texte que vous importez dans une table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-111">Returns or sets an ordered array of constants that specify the data types applied to the corresponding columns in the text file that you’re importing into a query table.</span>
          </span>
          <span data-ttu-id="fe7ad-112">La constante par défaut pour chaque colonne est <b>xlGeneral</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-112">The default constant for each column is <b>xlGeneral</b>.</span>
          </span>
          <span data-ttu-id="fe7ad-113">
            <b>Objet</b> (<b>objet</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-113">
              <b>Object</b> (<b>object</b> in C#).</span>
          </span>
          <span data-ttu-id="fe7ad-114">En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-114">Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileCommaDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileCommaDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileCommaDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileCommaDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileCommaDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileCommaDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1862)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-115">
            <b>True</b> si la virgule constitue le caractère séparateur lorsque vous importez un fichier texte dans une table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-115">
              <b>True</b> if the comma is the delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="fe7ad-116">
            <b>False</b> si vous souhaitez utiliser un autre caractère comme séparateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-116">
              <b>False</b> if you want to use some other character as the delimiter.</span>
          </span>
          <span data-ttu-id="fe7ad-117">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-117">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="fe7ad-118">En lecture/écriture <b>booléen</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-118">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileConsecutiveDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileConsecutiveDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileConsecutiveDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileConsecutiveDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileConsecutiveDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileConsecutiveDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1859)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-119">
            <b>La valeur true</b> si les séparateurs consécutifs sont traités comme un séparateur unique lorsque vous importez un fichier texte dans une table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-119">
              <b>True</b> if consecutive delimiters are treated as a single delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="fe7ad-120">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-120">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="fe7ad-121">
            <b>Boolean</b> (<b>bool</b> en c#) En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-121">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileDecimalSeparator">
      <MemberSignature Language="C#" Value="public string TextFileDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextFileDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextFileDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1870)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-122">Cette propriété renvoie ou définit le caractère séparateur décimal par Excel lorsque vous importez un fichier texte dans une table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-122">Returns or sets the decimal separator character that Excel uses when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="fe7ad-123">La valeur par défaut est le caractère séparateur décimal système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-123">The default is the system decimal separator character.</span>
          </span>
          <span data-ttu-id="fe7ad-124">En lecture/écriture de <b>chaîne</b> (<b>chaîne</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-124">Read/Write <b>String</b> (<b>string</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileFixedColumnWidths">
      <MemberSignature Language="C#" Value="public object TextFileFixedColumnWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TextFileFixedColumnWidths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileFixedColumnWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileFixedColumnWidths As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TextFileFixedColumnWidths { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-125">Cette propriété renvoie ou définit un tableau d’entiers qui correspondent à la largeur des colonnes (en caractères) dans le fichier texte que vous importez dans une table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-125">Returns or sets an array of integers that correspond to the widths of the columns (in characters) in the text file that you’re importing into a query table.</span>
          </span>
          <span data-ttu-id="fe7ad-126">Les largeurs valides sont compris entre 1 et 32 767 caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-126">Valid widths are from 1 through 32767 characters.</span>
          </span>
          <span data-ttu-id="fe7ad-127">En lecture/écriture <b>objet</b> (<b>objet</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-127">Read/Write <b>Object</b> (<b>object</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileHeaderRow">
      <MemberSignature Language="C#" Value="public bool TextFileHeaderRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileHeaderRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileHeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileHeaderRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileHeaderRow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-128">Cette propriété renvoie ou définit la valeur qui spécifie si la première ligne (à partir de la ligne de départ) doit être traitée comme une ligne d’en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-128">Returns or sets value that specifies whether or not the first row (from the starting row) should be treated as a header row.</span>
          </span>
          <span data-ttu-id="fe7ad-129">
            <b>Boolean</b> (<b>bool</b> en c#) En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-129">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileOtherDelimiter">
      <MemberSignature Language="C#" Value="public string TextFileOtherDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextFileOtherDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileOtherDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileOtherDelimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextFileOtherDelimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-130">Cette propriété renvoie ou définit le caractère utilisé comme séparateur lorsque vous importez un fichier texte dans une table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-130">Returns or sets the character used as the delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="fe7ad-131">La valeur par défaut est <b>Nothing</b> (une référence null (Nothing dans Visual Basic) en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-131">The default value is <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#).</span>
          </span>
          <span data-ttu-id="fe7ad-132">En lecture/écriture de <b>chaîne</b> (<b>chaîne</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-132">Read/Write <b>String</b> (<b>string</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileParseType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTextParsingType TextFileParseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTextParsingType TextFileParseType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileParseType" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileParseType As XlTextParsingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTextParsingType TextFileParseType { Microsoft::Office::Interop::Excel::XlTextParsingType get(); void set(Microsoft::Office::Interop::Excel::XlTextParsingType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTextParsingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-133">Cette propriété renvoie ou définit le format de colonne pour les données dans le fichier texte que vous importez dans une table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-133">Returns or sets the column format for the data in the text file that you’re importing into a query table.</span>
          </span>
          <span data-ttu-id="fe7ad-134">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-134">Read/Write <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFilePlatform">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPlatform TextFilePlatform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPlatform TextFilePlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFilePlatform" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFilePlatform As XlPlatform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPlatform TextFilePlatform { Microsoft::Office::Interop::Excel::XlPlatform get(); void set(Microsoft::Office::Interop::Excel::XlPlatform value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1855)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1855)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPlatform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-135">Cette propriété renvoie ou définit l’origine du fichier texte que vous importez dans la table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-135">Returns or sets the origin of the text file you’re importing into the query table.</span>
          </span>
          <span data-ttu-id="fe7ad-136">Cette propriété détermine la page de codes est utilisée lors de l’importation de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-136">This property determines which code page is used during the data import.</span>
          </span>
          <span data-ttu-id="fe7ad-137">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-137">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFilePromptOnRefresh">
      <MemberSignature Language="C#" Value="public bool TextFilePromptOnRefresh { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFilePromptOnRefresh" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFilePromptOnRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFilePromptOnRefresh As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFilePromptOnRefresh { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1869)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-138">
            <b>True</b> si vous souhaitez spécifier le nom du fichier texte importé à chaque actualisation de la table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-138">
              <b>True</b> if you want to specify the name of the imported text file each time the query table is refreshed.</span>
          </span>
          <span data-ttu-id="fe7ad-139">La boîte de dialogue Importer un fichier texte vous permet de spécifier le chemin d’accès et le nom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-139">The Import Text File dialog box allows you to specify the path and file name.</span>
          </span>
          <span data-ttu-id="fe7ad-140">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-140">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="fe7ad-141">En lecture/écriture <b>booléen</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-141">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileSemicolonDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileSemicolonDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileSemicolonDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileSemicolonDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileSemicolonDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileSemicolonDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1861)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-142">
            <b>La valeur true</b> si le point-virgule est le caractère séparateur lorsque vous importez un fichier texte dans une table de requête et si la valeur de la <see cref="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileParseType" /> propriété a la <b>valeur xlDelimited</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-142">
              <b>True</b> if the semicolon is the delimiter when you import a text file into a query table, and if the value of the <see cref="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileParseType" /> property is <b>xlDelimited</b>.</span>
          </span>
          <span data-ttu-id="fe7ad-143">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-143">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="fe7ad-144">En lecture/écriture <b>booléen</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-144">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileSpaceDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileSpaceDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileSpaceDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileSpaceDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileSpaceDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileSpaceDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1863)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-145">
            <b>La valeur true</b> si le caractère d’espacement est le caractère séparateur lorsque vous importez un fichier texte dans une table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-145">
              <b>True</b> if the space character is the delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="fe7ad-146">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-146">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="fe7ad-147">En lecture/écriture <b>booléen</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-147">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileStartRow">
      <MemberSignature Language="C#" Value="public int TextFileStartRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextFileStartRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileStartRow" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileStartRow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextFileStartRow { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1856)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1856)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-148">Cette propriété renvoie ou définit le numéro de la ligne le texte qui commence la redistribution lorsque vous importez un fichier texte dans une table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-148">Returns or sets the row number at which text parsing will begin when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="fe7ad-149">Les valeurs valides sont des nombres entiers compris entre 1 et 32 767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-149">Valid values are integers from 1 through 32767.</span>
          </span>
          <span data-ttu-id="fe7ad-150">La valeur par défaut est 1 (un).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-150">The default value is 1.</span>
          </span>
          <span data-ttu-id="fe7ad-151">En lecture/écriture <b>entier</b> (<b>int</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-151">Read/Write <b>Integer</b> (<b>int</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileTabDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileTabDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileTabDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileTabDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileTabDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileTabDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1860)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-152">
            <b>La valeur true</b> si le caractère de tabulation est le caractère séparateur lorsque vous importez un fichier texte dans une table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-152">
              <b>True</b> if the tab character is the delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="fe7ad-153">
            <b>False</b> est la valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-153">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="fe7ad-154">En lecture/écriture <b>booléen</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-154">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileTextQualifier">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTextQualifier TextFileTextQualifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextFileTextQualifier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileTextQualifier" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileTextQualifier As XlTextQualifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTextQualifier TextFileTextQualifier { Microsoft::Office::Interop::Excel::XlTextQualifier get(); void set(Microsoft::Office::Interop::Excel::XlTextQualifier value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1858)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTextQualifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-155">Cette propriété renvoie ou définit l’identificateur de texte lorsque vous importez un fichier texte dans une table de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-155">Returns or sets the text qualifier when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="fe7ad-156">Le qualificateur de texte spécifie que les données jointes sont au format texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-156">The text qualifier specifies that the enclosed data is in text format.</span>
          </span>
          <span data-ttu-id="fe7ad-157">En lecture/écriture <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-157">Read/Write <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileThousandsSeparator">
      <MemberSignature Language="C#" Value="public string TextFileThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextFileThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextFileThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-158">
            <b>True</b> pour qu’Excel traite les nombres importés en tant que texte qui commencent par un «- » symbole en tant que valeurs négatives.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-158">
              <b>True</b> for Excel to treat numbers imported as text that begin with a "-" symbol as a negative symbol.</span>
          </span>
          <span data-ttu-id="fe7ad-159">
            <b>False</b> pour qu’Excel traite les nombres importés en tant que texte qui commencent par un «- » symbole en tant que texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-159">
              <b>False</b> for Excel to treat numbers imported as text that begin with a "-" symbol as text.</span>
          </span>
          <span data-ttu-id="fe7ad-160">En lecture/écriture <b>booléen</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-160">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileTrailingMinusNumbers">
      <MemberSignature Language="C#" Value="public bool TextFileTrailingMinusNumbers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileTrailingMinusNumbers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileTrailingMinusNumbers" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileTrailingMinusNumbers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileTrailingMinusNumbers { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2164)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-161">
            <b>True</b> pour qu’Excel traite les nombres importés en tant que texte qui commencent par un «- » symbole en tant que valeurs négatives.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-161">
              <b>True</b> for Excel to treat numbers imported as text that begin with a "-" symbol as a negative symbol.</span>
          </span>
          <span data-ttu-id="fe7ad-162">
            <b>False</b> pour qu’Excel traite les nombres importés en tant que texte qui commencent par un «- » symbole en tant que texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-162">
              <b>False</b> for Excel to treat numbers imported as text that begin with a "-" symbol as text.</span>
          </span>
          <span data-ttu-id="fe7ad-163">En lecture/écriture <b>booléen</b> (<b>bool</b> en c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-163">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileVisualLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTextVisualLayoutType TextFileVisualLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTextVisualLayoutType TextFileVisualLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileVisualLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileVisualLayout As XlTextVisualLayoutType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTextVisualLayoutType TextFileVisualLayout { Microsoft::Office::Interop::Excel::XlTextVisualLayoutType get(); void set(Microsoft::Office::Interop::Excel::XlTextVisualLayoutType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2245)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2245)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2245)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTextVisualLayoutType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe7ad-164">Cette propriété renvoie ou définit une <see cref="T:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType" /> énumération qui indique si la disposition visuelle du texte importé est de gauche à droite ou de droite à gauche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-164">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType" /> enumeration that indicates whether the visual layout of the text being imported is left-to-right or right-to-left.</span>
          </span>
          <span data-ttu-id="fe7ad-165">En lecture-écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe7ad-165">Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>