<Type Name="TextEffectFormat" FullName="Microsoft.Office.Interop.Excel.TextEffectFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fbb84779b82f0d04327c445fb2dede8ff19b5468" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20581010" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface TextEffectFormat : Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract TextEffectFormat implements class Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.TextEffectFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface TextEffectFormat&#xA;Implements _IMsoDispObj" />
  <TypeSignature Language="C++ CLI" Value="public interface class TextEffectFormat : Microsoft::Office::Core::_IMsoDispObj" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C031F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1f266-101">Contient les propriétés et méthodes applicables aux objets WordArt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f266-101">Contains properties and methods that apply to WordArt objects.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTextEffectAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTextEffectAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As MsoTextEffectAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTextEffectAlignment Alignment { Microsoft::Office::Core::MsoTextEffectAlignment get(); void set(Microsoft::Office::Core::MsoTextEffectAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTextEffectAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-102">Cette propriété renvoie ou définit l’alignement pour WordArt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-102">Returns or sets the alignment for WordArt.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-103">Renvoie un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object qui représente l’application Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-103">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-104">Renvoie un nombre entier de 32 bits qui indique l’application dans laquelle cet objet a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-104">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1f266-105">Si l’objet a été créé dans Microsoft Excel, cette propriété renvoie la chaîne XCEL qui équivaut au nombre hexadécimal 5843454C.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-105">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1f266-106">La propriété <b>Creator</b> est conçue pour être utilisée dans Microsoft Excel pour Macintosh, où chaque application possède un code de créateur de quatre caractères.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-106">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="1f266-107">Par exemple, Microsoft Excel possède le code créateur XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-107">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontBold">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState FontBold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState FontBold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontBold" />
      <MemberSignature Language="VB.NET" Value="Public Property FontBold As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState FontBold { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-108">
            <b>True</b> si la police dans l’objet WordArt spécifié est en gras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-108">
              <b>True</b> if the font in the specified WordArt is bold.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontItalic">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState FontItalic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState FontItalic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontItalic" />
      <MemberSignature Language="VB.NET" Value="Public Property FontItalic As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState FontItalic { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-109">Renvoie la <b>valeur msoTrue</b> si la police dans l’objet WordArt spécifié est en italique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-109">Returns <b>msoTrue</b> if the font in the specified WordArt is italic.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontName">
      <MemberSignature Language="C#" Value="public string FontName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FontName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontName" />
      <MemberSignature Language="VB.NET" Value="Public Property FontName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FontName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-110">Cette propriété renvoie ou définit le nom de la police dans l’objet WordArt spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-110">Returns or sets the name of the font in the specified WordArt.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSize">
      <MemberSignature Language="C#" Value="public float FontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 FontSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontSize As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float FontSize { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-111">Cette propriété renvoie ou définit la taille de police pour l’objet WordArt spécifié en points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-111">Returns or sets the font size for the specified WordArt in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KernedPairs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState KernedPairs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState KernedPairs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.KernedPairs" />
      <MemberSignature Language="VB.NET" Value="Public Property KernedPairs As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState KernedPairs { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-112">
            <b>La valeur true</b> si les caractères dans l’objet WordArt spécifié sont espacés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-112">
              <b>True</b> if character pairs in the specified WordArt are kerned.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizedHeight">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState NormalizedHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState NormalizedHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.NormalizedHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property NormalizedHeight As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState NormalizedHeight { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-113">
            <b>True</b> si tous les caractères (majuscules et minuscules contenus) dans l’objet WordArt spécifié ont la même hauteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-113">
              <b>True</b> if all characters (both uppercase and lowercase) in the specified WordArt are the same height.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-114">Renvoie l'objet parent de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-114">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoPresetTextEffectShape PresetShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoPresetTextEffectShape PresetShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.PresetShape" />
      <MemberSignature Language="VB.NET" Value="Public Property PresetShape As MsoPresetTextEffectShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoPresetTextEffectShape PresetShape { Microsoft::Office::Core::MsoPresetTextEffectShape get(); void set(Microsoft::Office::Core::MsoPresetTextEffectShape value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoPresetTextEffectShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-115">Cette propriété renvoie ou définit la forme de l'objet WordArt spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-115">Returns or sets the shape of the specified WordArt.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1f266-116">Définition de la <see cref="P:Microsoft.Office.Interop.Excel.TextEffectFormat.PresetTextEffect" /> propriété définit automatiquement la propriété <b>PresetShape</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-116">Setting the <see cref="P:Microsoft.Office.Interop.Excel.TextEffectFormat.PresetTextEffect" /> property automatically sets the <b>PresetShape</b> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetTextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.PresetTextEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property PresetTextEffect As MsoPresetTextEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoPresetTextEffect PresetTextEffect { Microsoft::Office::Core::MsoPresetTextEffect get(); void set(Microsoft::Office::Core::MsoPresetTextEffect value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoPresetTextEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-117">Cette propriété renvoie ou définit le style de l'objet WordArt spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-117">Returns or sets the style of the specified WordArt.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1f266-118">Les valeurs de cette propriété correspondent aux formats contenus dans la boîte de dialogue Galerie WordArt (numérotés de gauche à droite et de haut en bas).</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-118">The values for this property correspond to the formats in the WordArt Gallery dialog box (numbered from left to right, top to bottom).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1f266-119">Configuration automatique de la propriété <b>PresetTextEffect</b> définit les nombreuses autres propriétés de mise en forme de la forme spécifiée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-119">Setting the <b>PresetTextEffect</b> property automatically sets many other formatting properties of the specified shape.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatedChars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState RotatedChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState RotatedChars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.RotatedChars" />
      <MemberSignature Language="VB.NET" Value="Public Property RotatedChars As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState RotatedChars { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-120">
            <b>La valeur true</b> si les caractères contenus dans l’objet WordArt spécifié sont pivotés de 90 degrés par rapport à la forme de délimitation de l’objet WordArt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-120">
              <b>True</b> if characters in the specified WordArt are rotated 90 degrees relative to the WordArt's bounding shape.</span>
          </span>
          <span data-ttu-id="1f266-121">
            <b>False</b> si les caractères contenus dans l’objet WordArt spécifié conservent leur orientation d’origine par rapport à la forme de délimitation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-121">
              <b>False</b> if characters in the specified WordArt retain their original orientation relative to the bounding shape.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1f266-122">Si l’objet WordArt comporte du texte horizontal, la définition de la propriété <b>RotatedChars</b> sur <b>msoTrue</b> fait pivoter les caractères de 90 degrés vers la gauche.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-122">If the WordArt has horizontal text, setting the <b>RotatedChars</b> property to <b>msoTrue</b> rotates the characters 90 degrees counterclockwise.</span>
            </span>
            <span data-ttu-id="1f266-123">Si l’objet WordArt comporte du texte vertical, la définition de la propriété <b>RotatedChars</b> sur <b>msoFalse</b> fait pivoter les caractères de 90 degrés vers la droite.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-123">If the WordArt has vertical text, setting the <b>RotatedChars</b> property to <b>msoFalse</b> rotates the characters 90 degrees clockwise.</span>
            </span>
            <span data-ttu-id="1f266-124">Utiliser le <see cref="M:Microsoft.Office.Interop.Excel.TextEffectFormat.ToggleVerticalText" /> méthode pour basculer entre le texte horizontal et vertical.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-124">Use the <see cref="M:Microsoft.Office.Interop.Excel.TextEffectFormat.ToggleVerticalText" /> method to switch between horizontal and vertical text flow.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1f266-125">Le <see cref="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)" /> méthode et <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet et la propriété <b>RotatedChars</b> et <see cref="M:Microsoft.Office.Interop.Excel.TextEffectFormat.ToggleVerticalText" /> méthode de la <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> objet affectent l’orientation des caractères et le sens du texte dans un objet <b>Shape</b> qui représente Objet WordArt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-125">The <see cref="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)" /> method and <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object and the <b>RotatedChars</b> property and <see cref="M:Microsoft.Office.Interop.Excel.TextEffectFormat.ToggleVerticalText" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object all affect the character orientation and direction of text flow in a <b>Shape</b> object that represents WordArt.</span>
            </span>
            <span data-ttu-id="1f266-126">Vous devrez peut-être plusieurs essais pour savoir comment combiner les effets de ces propriétés et méthodes pour obtenir le résultat souhaité.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-126">You may have to experiment to find out how to combine the effects of these properties and methods to get the result you want.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-127">Cette propriété renvoie ou définit le texte de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-127">Returns or sets the text for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleVerticalText">
      <MemberSignature Language="C#" Value="public void ToggleVerticalText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleVerticalText() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.TextEffectFormat.ToggleVerticalText" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleVerticalText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleVerticalText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f266-128">Cette méthode passe, dans l'objet WordArt spécifié, de l'orientation horizontale de l'enchaînement de texte à l'orientation verticale et vice-versa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-128">Switches the text flow in the specified WordArt from horizontal to vertical, or vice versa.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="1f266-129">La méthode <b>ToggleVerticalText</b> intervertit les valeurs de la <see cref="P:Microsoft.Office.Interop.Excel.Shape.Width" /> et <see cref="P:Microsoft.Office.Interop.Excel.Shape.Height" /> propriétés de l’objet <b>Shape</b> qui représente l’objet WordArt et conserve la <see cref="P:Microsoft.Office.Interop.Excel.Shape.Left" /> et <see cref="P:Microsoft.Office.Interop.Excel.Shape.Top" /> propriétés.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-129">Using the <b>ToggleVerticalText</b> method swaps the values of the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Width" /> and <see cref="P:Microsoft.Office.Interop.Excel.Shape.Height" /> properties of the <b>Shape</b> object that represents the WordArt and leaves the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Left" /> and <see cref="P:Microsoft.Office.Interop.Excel.Shape.Top" /> properties unchanged.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1f266-130">Le <see cref="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)" /> méthode et <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> propriété de la <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objet et le <see cref="P:Microsoft.Office.Interop.Excel.TextEffectFormat.RotatedChars" /> propriété et la méthode <b>ToggleVerticalText</b> de la <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> objet affectent l’orientation des caractères et le sens du texte dans une <b>forme</b> de l' objet représente l’objet WordArt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-130">The <see cref="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)" /> method and <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object and the <see cref="P:Microsoft.Office.Interop.Excel.TextEffectFormat.RotatedChars" /> property and <b>ToggleVerticalText</b> method of the <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object all affect the character orientation and the direction of text flow in a <b>Shape</b> object that represents WordArt.</span>
            </span>
            <span data-ttu-id="1f266-131">Vous devrez peut-être plusieurs essais pour savoir comment combiner les effets de ces propriétés et méthodes pour obtenir le résultat souhaité.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-131">You may have to experiment to find out how to combine the effects of these properties and methods to get the result you want.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tracking">
      <MemberSignature Language="C#" Value="public float Tracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Tracking" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Tracking" />
      <MemberSignature Language="VB.NET" Value="Public Property Tracking As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Tracking { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f266-132">Cette propriété renvoie ou définit le rapport entre l’espace horizontal alloué à chaque caractère dans l’objet WordArt spécifié à la largeur du caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-132">Returns or sets the ratio of the horizontal space allotted to each character in the specified WordArt to the width of the character.</span>
          </span>
          <span data-ttu-id="1f266-133">Peut être une valeur comprise entre 0 (zéro) et 5.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f266-133">Can be a value from 0 (zero) through 5.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1f266-134">Les valeurs élevées pour cette propriété spécifient un espace entre les caractères ; les valeurs inférieures à 1 peuvent entraîner un chevauchement des caractères.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-134">Large values for this property specify ample space between characters; values less than 1 can produce character overlap.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="1f266-135">Le tableau suivant reprend les valeurs de la propriété <b>Tracking</b> correspondant aux paramètres disponibles à travers l'interface utilisateur.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1f266-135">The following table gives the values of the <b>Tracking</b> property that correspond to the settings available in the user interface.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="1f266-136">Très rapproché</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1f266-136">Very Tight</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1f266-137">0,8</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1f266-137">0.8</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1f266-138">Rapproché</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1f266-138">Tight</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1f266-139">0,9</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1f266-139">0.9</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1f266-140">Normal</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1f266-140">Normal</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1f266-141">1.0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1f266-141">1.0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1f266-142">Espacé</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1f266-142">Loose</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1f266-143">1.2</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1f266-143">1.2</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="1f266-144">Très espacé</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1f266-144">Very Loose</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="1f266-145">1,5</span>
                <span class="sxs-lookup">
                  <span data-stu-id="1f266-145">1.5</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>